*--------------------------------------------------------------------------------------------------------------------------------------------------------
* (ES) AUTOGENERADO - ¡¡ATENCIÓN!! - ¡¡NO PENSADO PARA EJECUTAR!! USAR SOLAMENTE PARA INTEGRAR CAMBIOS Y ALMACENAR CON HERRAMIENTAS SCM!!
* (EN) AUTOGENERATED - ATTENTION!! - NOT INTENDED FOR EXECUTION!! USE ONLY FOR MERGING CHANGES AND STORING WITH SCM TOOLS!!
*--------------------------------------------------------------------------------------------------------------------------------------------------------
*< FOXBIN2PRG: Version="1.19" SourceFile="elpaysettings.scx" /> (Solo para binarios VFP 9 / Only for VFP 9 binaries)
*
*
DEFINE CLASS dataenvironment AS dataenvironment 
 	*< CLASSDATA: Baseclass="dataenvironment" Timestamp="" Scale="" Uniqueid="" ClassIcon="1" />

	DataSource = .NULL.
	Height = 0
	Left = 0
	Name = "Dataenvironment"
	Top = 0
	Width = 0

ENDDEFINE

DEFINE CLASS frmelpaysettings AS form 
 	*< CLASSDATA: Baseclass="form" Timestamp="" Scale="" Uniqueid="" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="cmdKS" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdDiagnose" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdExit" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblStatus" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdPayManual" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdPayCardReader" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdPayPinPad" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="imgprogressbar" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lstPrints" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdPrintAgain" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="edtPrint" UniqueID="" Timestamp="" />

	*<DefinedPropArrayMethod>
		*m: dofunc
		*m: dopay
		*m: doprintagain
		*m: onclose
		*m: yesno
		*p: capp
		*p: celpaydir
		*p: oterminal		&& Ref to terminal table record, used in wellness
	*</DefinedPropArrayMethod>

	AlwaysOnTop = .T.
	AutoCenter = .T.
	BackColor = 255,255,255
	BorderStyle = 2
	capp = 
	Caption = "elPay Einstellungen"
	celpaydir = 
	DoCreate = .T.
	Height = 350
	Icon = ..\picts\icons\elpay.ico
	KeyPreview = .T.
	MaxButton = .F.
	MinButton = .F.
	Name = "frmelpaysettings"
	oterminal = .NULL.		&& Ref to terminal table record, used in wellness
	ShowWindow = 1
	Width = 590

	ADD OBJECT 'cmdDiagnose' AS commandbutton WITH ;
		BackColor = 128,255,128, ;
		Caption = "Diagnose", ;
		Height = 61, ;
		Left = 11, ;
		Name = "cmdDiagnose", ;
		TabIndex = 2, ;
		Top = 192, ;
		Width = 121
		*< END OBJECT: BaseClass="commandbutton" />

	ADD OBJECT 'cmdExit' AS commandbutton WITH ;
		Cancel = .T., ;
		Caption = "Schließen", ;
		Height = 61, ;
		Left = 216, ;
		Name = "cmdExit", ;
		TabIndex = 6, ;
		Top = 276, ;
		Width = 121
		*< END OBJECT: BaseClass="commandbutton" />

	ADD OBJECT 'cmdKS' AS commandbutton WITH ;
		BackColor = 255,0,0, ;
		Caption = "Kassenschnitt", ;
		Height = 61, ;
		Left = 12, ;
		Name = "cmdKS", ;
		TabIndex = 1, ;
		Top = 48, ;
		Width = 121
		*< END OBJECT: BaseClass="commandbutton" />

	ADD OBJECT 'cmdPayCardReader' AS commandbutton WITH ;
		BackColor = 255,168,125, ;
		Caption = ("Bezahlen/Storno"+CHR(10)+"Kartenleser"), ;
		Height = 61, ;
		Left = 216, ;
		Name = "cmdPayCardReader", ;
		TabIndex = 3, ;
		Top = 48, ;
		Width = 121, ;
		WordWrap = .T.
		*< END OBJECT: BaseClass="commandbutton" />

	ADD OBJECT 'cmdPayManual' AS commandbutton WITH ;
		BackColor = 255,255,0, ;
		Caption = ("Bezahlen/Storno"+CHR(10)+"manuell"), ;
		Height = 61, ;
		Left = 216, ;
		Name = "cmdPayManual", ;
		TabIndex = 4, ;
		Top = 120, ;
		Width = 121, ;
		WordWrap = .T.
		*< END OBJECT: BaseClass="commandbutton" />

	ADD OBJECT 'cmdPayPinPad' AS commandbutton WITH ;
		BackColor = 128,255,255, ;
		Caption = ("Bezahlen/Storno"+CHR(10)+"PinPad"), ;
		Height = 61, ;
		Left = 216, ;
		Name = "cmdPayPinPad", ;
		TabIndex = 5, ;
		Top = 192, ;
		Width = 121, ;
		WordWrap = .T.
		*< END OBJECT: BaseClass="commandbutton" />

	ADD OBJECT 'cmdPrintAgain' AS commandbutton WITH ;
		Caption = "Wieder drucken", ;
		Height = 61, ;
		Left = 456, ;
		Name = "cmdPrintAgain", ;
		TabIndex = 6, ;
		Top = 287, ;
		Width = 121
		*< END OBJECT: BaseClass="commandbutton" />

	ADD OBJECT 'edtPrint' AS editbox WITH ;
		Height = 108, ;
		Left = 372, ;
		Name = "edtPrint", ;
		ReadOnly = .T., ;
		Top = 168, ;
		Width = 216
		*< END OBJECT: BaseClass="editbox" />

	ADD OBJECT 'imgprogressbar' AS image WITH ;
		Height = 89, ;
		Left = 11, ;
		Name = "imgprogressbar", ;
		Picture = ..\picts\progressbar.gif, ;
		Stretch = 1, ;
		Top = 257, ;
		Visible = .F., ;
		Width = 107
		*< END OBJECT: BaseClass="image" />

	ADD OBJECT 'lblStatus' AS label WITH ;
		AutoSize = .T., ;
		BackStyle = 0, ;
		Caption = "Status", ;
		FontBold = .T., ;
		FontSize = 16, ;
		Height = 27, ;
		Left = 12, ;
		Name = "lblStatus", ;
		TabIndex = 7, ;
		Top = 12, ;
		Width = 67
		*< END OBJECT: BaseClass="label" />

	ADD OBJECT 'lstPrints' AS listbox WITH ;
		FontName = "Courier New", ;
		Height = 154, ;
		Left = 372, ;
		Name = "lstPrints", ;
		RowSourceType = 6, ;
		Top = 2, ;
		Width = 216
		*< END OBJECT: BaseClass="listbox" />
	
	PROCEDURE dofunc
		LPARAMETERS lp_cFunc As String, lp_lJustAktive As Boolean
		LOCAL l_lSuccess, l_cMacro
		
		this.imgprogressbar.Visible = .T.
		
		DO CASE
			CASE EMPTY(lp_cFunc) AND NOT lp_lJustAktive
		
			CASE thisform.capp = "DESK"
				IF lp_lJustAktive
					l_cMacro = [pbelpaycallfunc(,.T.,"]+this.celpaydir+[")]
					l_lSuccess = &l_cMacro
				ELSE
					l_cMacro = [pbelpaycallfunc(lp_cFunc,,"]+this.celpaydir+[")]
					l_lSuccess = &l_cMacro
				ENDIF
		
			CASE thisform.capp = "TERMINAL"
				IF lp_lJustAktive
					l_cMacro = [DO payelpaycallfunc IN pay WITH "",.T.,l_lSuccess,"]+this.celpaydir+["]
					&l_cMacro
				ELSE
					l_cMacro = [DO payelpaycallfunc IN pay WITH lp_cFunc,.F.,l_lSuccess,"]+this.celpaydir+["]
					&l_cMacro
				ENDIF
			CASE thisform.capp = "WELLNESS"
				IF lp_lJustAktive
					l_cMacro = [DO finelpaycallfunc IN finelpay WITH "",.T.,l_lSuccess,"]+this.celpaydir+["]
					&l_cMacro
				ELSE
					l_cMacro = [DO finelpaycallfunc IN finelpay WITH lp_cFunc,.F.,l_lSuccess,"]+this.celpaydir+["]
					&l_cMacro
				ENDIF
		
		ENDCASE
		
		this.imgprogressbar.Visible = .F.
		
		RETURN l_lSuccess
	ENDPROC

	PROCEDURE dopay
		LPARAMETERS lp_nCmd
		DO CASE
			CASE thisform.capp = "DESK"
				DO CASE
					CASE lp_nCmd = 2
						l_cMacro = [pbpayelpay(,,,.T.,.F.,.F.)] && Cardreader
					CASE lp_nCmd = 3
						l_cMacro = [pbpayelpay(,,,.T.,.T.,.F.)] && PinPad
					OTHERWISE && 1
						l_cMacro = [pbpayelpay(,,,.T.,.F.,.T.)] && manual
				ENDCASE
		
				l_lSuccess = &l_cMacro
			CASE thisform.capp = "TERMINAL"
				DO CASE
					CASE lp_nCmd = 2
						l_cMacro = [DO payelpay IN pay WITH 0.00,,,,,.T.,.F.,.F.]
					CASE lp_nCmd = 3
						l_cMacro = [DO payelpay IN pay WITH 0.00,,,,,.T.,.T.,.F.]
					OTHERWISE
						l_cMacro = [DO payelpay IN pay WITH 0.00,,,,,.T.,.F.,.T.]
				ENDCASE
				&l_cMacro
			CASE thisform.capp = "WELLNESS"
				DO CASE
					CASE lp_nCmd = 2
						l_cMacro = [finelpay(,,,.T.,.F.,.F.)] && Cardreader
					CASE lp_nCmd = 3
						l_cMacro = [finelpay(,,,.T.,.T.,.F.)] && PinPad
					OTHERWISE && 1
						l_cMacro = [finelpay(,,,.T.,.F.,.T.)] && manual
				ENDCASE
		
				l_lSuccess = &l_cMacro
		ENDCASE
	ENDPROC

	PROCEDURE doprintagain
		LOCAL l_cMacro, l_lSuccess
		
		DO CASE
			CASE thisform.capp = "DESK"
				l_cMacro = [pbprintelpay(cureplayd776.el_print)]
				l_lSuccess = &l_cMacro
			CASE thisform.capp = "TERMINAL"
				l_cMacro = [DO payprintelpay IN pay WITH cureplayd776.el_print]
				&l_cMacro
			CASE thisform.capp = "WELLNESS"
				l_cMacro = [DO finprintelpay IN finelpay WITH cureplayd776.el_print]
				&l_cMacro
		ENDCASE
		
		RETURN .T.
	ENDPROC

	PROCEDURE Init
		LOCAL l_lStatus, l_cMacro
		DO CASE
			CASE TYPE("gcApplication")="C" AND UPPER(gcApplication) = "CITADEL DESK"
				this.cApp = "DESK"
				this.celpaydir = ALLTRIM(_screen.oGlobal.oterminal.tm_elpdir)
			CASE TYPE("glAutomationMode")="L" AND TYPE("gnManagerMode")="N"
				this.cApp = "TERMINAL"
				this.celpaydir = ALLTRIM(EVALUATE('goPrintForms.elpdir'))
			CASE TYPE("g_cApplication")="C" AND LOWER(g_cApplication) = "thermaris wellness zentrum"
				this.cApp = "WELLNESS"
				l_cMacro = "g_oScreen.GetWorkStation()"
				this.oTerminal = &l_cMacro
				this.celpaydir = ALLTRIM(this.oTerminal.tm_elpdir)
		ENDCASE
		
		l_lStatus = this.DoFunc(,.T.)
		
		this.lblStatus.Caption = IIF(l_lStatus,"elPay ONLINE","elPay OFFLINE")
		
		RETURN .T.
	ENDPROC

	PROCEDURE onclose
		IF USED("cureplayd776")
			USE IN cureplayd776
		ENDIF
		this.Release()
	ENDPROC

	PROCEDURE QueryUnload
		NODEFAULT
		this.OnClose()
	ENDPROC

	PROCEDURE yesno
		LPARAMETERS lp_cText
		LOCAL l_lYes, l_cMacro
		DO CASE
			CASE thisform.capp = "DESK"
				l_cMacro = "yesno(["+lp_cText+"])"
				l_lYes = &l_cMacro
			CASE thisform.capp = "TERMINAL"
				l_cMacro = "msgquestion(["+lp_cText+"],0260)"
				l_lYes = &l_cMacro = 6
			CASE thisform.capp = "WELLNESS"
				l_cMacro = "yesno(["+lp_cText+"])"
				l_lYes = &l_cMacro
		ENDCASE
		
		RETURN l_lYes
	ENDPROC

	PROCEDURE cmdDiagnose.Click
		thisform.DoFunc("97")
	ENDPROC

	PROCEDURE cmdExit.Click
		thisform.OnClose()
	ENDPROC

	PROCEDURE cmdKS.Click
		IF thisform.yesno("Kassenschnitt durchführen? (ACHTUNG! Kein Abbruch möglich!)")
			thisform.DoFunc("99")
		ENDIF
	ENDPROC

	PROCEDURE cmdPayCardReader.Click
		thisform.DoPay(2)
	ENDPROC

	PROCEDURE cmdPayManual.Click
		thisform.DoPay(1)
	ENDPROC

	PROCEDURE cmdPayPinPad.Click
		thisform.DoPay(3)
	ENDPROC

	PROCEDURE cmdPrintAgain.Click
		IF USED("cureplayd776")
			thisform.doprintagain()
		ENDIF
	ENDPROC

	PROCEDURE lstPrints.Init
		this.AddProperty("lDataLoaded",.F.) && When .F., get data from eplay table into listbox in click event
		
		RETURN .T.
	ENDPROC

	PROCEDURE lstPrints.MouseDown
		LPARAMETERS nButton, nShift, nXCoord, nYCoord
		
		LOCAL l_cSql, l_cTime, l_cDate, l_cAmount, l_nLines, l_cLine, l_cSetting, l_cValue, l_lElpayUsed
		
		IF this.lDataLoaded
			RETURN .T.
		ENDIF
		
		this.lDataLoaded = .T.
		
		l_lElpayUsed = USED("elpay")
		
		TEXT TO l_cSql TEXTMERGE NOSHOW PRETEXT 15
		SELECT *, CAST('' AS Char(8)) AS c_time, CAST('' AS Char(10)) AS c_date, CAST('' AS Char(20)) AS c_amount 
			FROM <<IIF(thisform.cApp = "WELLNESS",ADDBS(_Screen.oDM.GetDefaultConnectionDataPath()),"")>>elpay 
			ORDER BY el_elid DESC
		ENDTEXT
		
		sqlcursor(l_cSql, "cureplayd776",,,,,,.T.)
		
		IF thisform.cApp = "WELLNESS"
			IF NOT l_lElpayUsed
				IF USED("elpay")
					USE IN elpay
				ENDIF
			ENDIF
		ENDIF
		
		SCAN ALL
			l_cTime = ""
			l_cDate = ""
			l_cAmount = ""
			l_nLines = ALINES(l_aLines,el_reciv)
			FOR i = 1 TO l_nLines
				l_cLine = l_aLines(i)
				l_cSetting = LOWER(GETWORDNUM(l_cLine,1,":"))
				l_cValue = ALLTRIM(GETWORDNUM(l_cLine,2,":"))
				DO CASE
					CASE l_cSetting = "uhrzeit"
						l_cTime = LEFT(l_cValue,2)+":"+SUBSTR(l_cValue,3,2)
					CASE l_cSetting = "datum"
						l_cDate = LEFT(l_cValue,2) + "." + SUBSTR(l_cValue,3,2) + "." + RIGHT(l_cValue,4)
					CASE l_cSetting = "betrag"
						DO CASE
							CASE LEN(l_cValue)=1
								l_cAmount = "0.0"+l_cValue
							CASE LEN(l_cValue)=2
								l_cAmount = "0."+l_cValue
							OTHERWISE
								l_cAmount = SUBSTR(l_cValue,1,LEN(l_cValue)-2) + "." + RIGHT(l_cValue,2)
						ENDCASE
						l_cAmount = PADL(l_cAmount,8)
				ENDCASE
				IF NOT EMPTY(l_cTime) AND NOT EMPTY(l_cDate) AND NOT EMPTY(l_cAmount)
					EXIT
				ENDIF
			ENDFOR
			REPLACE c_time WITH l_cTime, ;
					c_date WITH l_cDate, ;
					c_amount WITH l_cAmount
		ENDSCAN
		GO TOP
		this.RowSource = [cureplayd776.c_date + ' ' + cureplayd776.c_time + cureplayd776.c_amount]
		this.Parent.edtPrint.ControlSource = [cureplayd776.el_print]
		this.SetFocus()
		this.Selected(1)=.T.
		this.Refresh()
		
		this.Parent.edtPrint.Refresh()
		
		RETURN .T.
	ENDPROC

	PROCEDURE lstPrints.When
		this.Parent.edtPrint.Refresh()
	ENDPROC

ENDDEFINE
