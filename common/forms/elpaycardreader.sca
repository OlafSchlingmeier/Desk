*--------------------------------------------------------------------------------------------------------------------------------------------------------
* (ES) AUTOGENERADO - ¡¡ATENCIÓN!! - ¡¡NO PENSADO PARA EJECUTAR!! USAR SOLAMENTE PARA INTEGRAR CAMBIOS Y ALMACENAR CON HERRAMIENTAS SCM!!
* (EN) AUTOGENERATED - ATTENTION!! - NOT INTENDED FOR EXECUTION!! USE ONLY FOR MERGING CHANGES AND STORING WITH SCM TOOLS!!
*--------------------------------------------------------------------------------------------------------------------------------------------------------
*< FOXBIN2PRG: Version="1.19" SourceFile="elpaycardreader.scx" /> (Solo para binarios VFP 9 / Only for VFP 9 binaries)
*
*
DEFINE CLASS dataenvironment AS dataenvironment 
 	*< CLASSDATA: Baseclass="dataenvironment" Timestamp="" Scale="" Uniqueid="" ClassIcon="1" />

	DataSource = .NULL.
	Height = 0
	Left = 0
	Name = "Dataenvironment"
	Top = 0
	Width = 0

ENDDEFINE

DEFINE CLASS frmelpay AS form 
 	*< CLASSDATA: Baseclass="form" Timestamp="" Scale="" Uniqueid="" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="imgCard" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="otmrrelease" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="ocomold" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmd1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmd2" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmd3" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmd4" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmd5" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmd6" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmd7" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmd8" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmd9" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmd0" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdOK" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtDisplay" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdBS" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdComma" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblBelegNr" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chkStorno" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtBelegNr" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdExpand" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdCancel" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="edtInfo" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdConfirm" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblpan" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtpan" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblmmjj" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtmmjj" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblMOPS" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtmops" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblmanualentry" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="ln1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblmmjjexplained" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblStornoType" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cbostornotype" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtAmount" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdreadcard" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="optpinpadpaywish" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdpinpadok" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="ocom" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="optzahlart" UniqueID="" Timestamp="" />

	*<DefinedPropArrayMethod>
		*m: checkapi
		*m: getterminalsettings
		*m: msgrawdatareceive
		*m: msgreceived
		*m: oncardread
		*m: oncardreadconvert
		*m: onkeyboardreadcard
		*m: onshowprogress
		*m: readini
		*m: timerenable
		*p: capp		&& Application name where started
		*p: cbelegnr
		*p: cbuffer		&& Card data
		*p: cinifile
		*p: cjjmm		&& JahrMonat bis Karte gültig ist
		*p: cmops
		*p: cpan
		*p: cpaywish
		*p: creadertype
		*p: csettings
		*p: cstornotype		&& 1 - Stornieren Kreditkarte manuell , 2 - Gutschrift Kreditkarte manuell
		*p: ctrack1
		*p: ctrack1end
		*p: ctrack1start
		*p: ctrack2
		*p: ctrack2end
		*p: ctrack2start
		*p: ctrack3
		*p: ctrack3end
		*p: ctrack3start
		*p: czahlart
		*p: lallowkeyboardread		&& Must set to .T., to read form keyboard reader
		*p: lamountchangeenabled
		*p: lcancel
		*p: lexpanded		&& When .T., form already expanded
		*p: lfirstactivate
		*p: lhandshaking
		*p: llzahlart
		*p: lmanual
		*p: lonlyshow		&& When .T., don't wait here for card data, only show progress
		*p: lpinpad		&& When .T., called when pinpad storno
		*p: lstorno
		*p: lsuccess
		*p: lwaitercomportclosed		&& .T. when we must turn off waiter com port, while this should be now used for elpay cardreader.
		*p: namount
		*p: ncommport
		*p: ncountcr
		*p: ntypeahead
		*p: nwaitfordata		&& How long to wait for complete card data, before closing form
		*p: olastctrl
		*p: oterminal		&& Ref. to record from terminal table, used in Wellness
	*</DefinedPropArrayMethod>

	AlwaysOnTop = .T.
	BorderStyle = 2
	capp = 		&& Application name where started
	Caption = "Karte einstecken"
	cbelegnr = 
	cbuffer = 		&& Card data
	cinifile = kkelpay.ini
	cjjmm = 		&& JahrMonat bis Karte gültig ist
	cmops = 
	cpan = 
	cpaywish = 
	creadertype = 
	csettings = 9600,n,8,1
	cstornotype = 		&& 1 - Stornieren Kreditkarte manuell , 2 - Gutschrift Kreditkarte manuell
	ctrack1 = 
	ctrack1end = 
	ctrack1start = 
	ctrack2 = 
	ctrack2end = 
	ctrack2start = 
	ctrack3 = 
	ctrack3end = 
	ctrack3start = 
	czahlart = 
	DoCreate = .T.
	Height = 193
	Icon = ..\picts\icons\search.ico
	KeyPreview = .T.
	lamountchangeenabled = .F.
	lcancel = .F.
	Left = 0
	lexpanded = .F.		&& When .T., form already expanded
	lfirstactivate = .F.
	lhandshaking = .F.
	llzahlart = .F.
	lmanual = .F.
	lonlyshow = .F.		&& When .T., don't wait here for card data, only show progress
	lpinpad = .F.		&& When .T., called when pinpad storno
	lstorno = .F.
	lsuccess = .F.
	lwaitercomportclosed = .F.		&& .T. when we must turn off waiter com port, while this should be now used for elpay cardreader.
	MaxButton = .F.
	MinButton = .F.
	Name = "frmelpay"
	namount = 0.00
	ncommport = 1
	ncountcr = 0
	ntypeahead = 0
	nwaitfordata = 1000		&& How long to wait for complete card data, before closing form
	olastctrl = .NULL.
	oterminal = .NULL.		&& Ref. to record from terminal table, used in Wellness
	ShowWindow = 1
	Top = 0
	Visible = .F.
	Width = 306
	WindowType = 1

	ADD OBJECT 'cbostornotype' AS combobox WITH ;
		FontSize = 12, ;
		Height = 28, ;
		Left = 411, ;
		Name = "cbostornotype", ;
		RowSource = "Stornieren Kreditkarte manuell,Gutschrift Kreditkarte manuell", ;
		RowSourceType = 1, ;
		Style = 2, ;
		TabIndex = 7, ;
		Top = 29, ;
		Value = Stornieren Kreditkarte manuell, ;
		Visible = .F., ;
		Width = 177
		*< END OBJECT: BaseClass="combobox" />

	ADD OBJECT 'chkStorno' AS checkbox WITH ;
		Alignment = 0, ;
		AutoSize = .T., ;
		Caption = "Storno", ;
		FontSize = 12, ;
		Height = 21, ;
		Left = 331, ;
		Name = "chkStorno", ;
		TabIndex = 6, ;
		Top = 8, ;
		Value = .F., ;
		Width = 65
		*< END OBJECT: BaseClass="checkbox" />

	ADD OBJECT 'cmd0' AS commandbutton WITH ;
		Caption = "0", ;
		Height = 60, ;
		HelpContextID = 0, ;
		Left = 12, ;
		Name = "cmd0", ;
		TabIndex = 24, ;
		TabStop = .F., ;
		Top = 422, ;
		Width = 60
		*< END OBJECT: BaseClass="commandbutton" />

	ADD OBJECT 'cmd1' AS commandbutton WITH ;
		Caption = "1", ;
		Height = 60, ;
		HelpContextID = 0, ;
		Left = 12, ;
		Name = "cmd1", ;
		TabIndex = 15, ;
		TabStop = .F., ;
		Top = 230, ;
		Width = 60
		*< END OBJECT: BaseClass="commandbutton" />

	ADD OBJECT 'cmd2' AS commandbutton WITH ;
		Caption = "2", ;
		Height = 60, ;
		HelpContextID = 0, ;
		Left = 77, ;
		Name = "cmd2", ;
		TabIndex = 16, ;
		TabStop = .F., ;
		Top = 230, ;
		Width = 60
		*< END OBJECT: BaseClass="commandbutton" />

	ADD OBJECT 'cmd3' AS commandbutton WITH ;
		Caption = "3", ;
		Height = 60, ;
		HelpContextID = 0, ;
		Left = 141, ;
		Name = "cmd3", ;
		TabIndex = 17, ;
		TabStop = .F., ;
		Top = 230, ;
		Width = 60
		*< END OBJECT: BaseClass="commandbutton" />

	ADD OBJECT 'cmd4' AS commandbutton WITH ;
		Caption = "4", ;
		Height = 60, ;
		HelpContextID = 0, ;
		Left = 12, ;
		Name = "cmd4", ;
		TabIndex = 18, ;
		TabStop = .F., ;
		Top = 294, ;
		Width = 60
		*< END OBJECT: BaseClass="commandbutton" />

	ADD OBJECT 'cmd5' AS commandbutton WITH ;
		Caption = "5", ;
		Height = 60, ;
		HelpContextID = 0, ;
		Left = 77, ;
		Name = "cmd5", ;
		TabIndex = 19, ;
		TabStop = .F., ;
		Top = 294, ;
		Width = 60
		*< END OBJECT: BaseClass="commandbutton" />

	ADD OBJECT 'cmd6' AS commandbutton WITH ;
		Caption = "6", ;
		Height = 60, ;
		HelpContextID = 0, ;
		Left = 141, ;
		Name = "cmd6", ;
		TabIndex = 20, ;
		TabStop = .F., ;
		Top = 294, ;
		Width = 60
		*< END OBJECT: BaseClass="commandbutton" />

	ADD OBJECT 'cmd7' AS commandbutton WITH ;
		Caption = "7", ;
		Height = 60, ;
		HelpContextID = 0, ;
		Left = 12, ;
		Name = "cmd7", ;
		TabIndex = 21, ;
		TabStop = .F., ;
		Top = 358, ;
		Width = 60
		*< END OBJECT: BaseClass="commandbutton" />

	ADD OBJECT 'cmd8' AS commandbutton WITH ;
		Caption = "8", ;
		Height = 60, ;
		HelpContextID = 0, ;
		Left = 77, ;
		Name = "cmd8", ;
		TabIndex = 22, ;
		TabStop = .F., ;
		Top = 358, ;
		Width = 60
		*< END OBJECT: BaseClass="commandbutton" />

	ADD OBJECT 'cmd9' AS commandbutton WITH ;
		Caption = "9", ;
		Height = 60, ;
		HelpContextID = 0, ;
		Left = 141, ;
		Name = "cmd9", ;
		TabIndex = 23, ;
		TabStop = .F., ;
		Top = 358, ;
		Width = 60
		*< END OBJECT: BaseClass="commandbutton" />

	ADD OBJECT 'cmdBS' AS commandbutton WITH ;
		Caption = "< --", ;
		Height = 60, ;
		HelpContextID = 0, ;
		Left = 228, ;
		Name = "cmdBS", ;
		TabIndex = 26, ;
		TabStop = .F., ;
		Top = 294, ;
		Width = 60
		*< END OBJECT: BaseClass="commandbutton" />

	ADD OBJECT 'cmdCancel' AS commandbutton WITH ;
		Alignment = 2, ;
		BackColor = 255,0,0, ;
		Caption = "Abbrechen", ;
		Height = 60, ;
		Left = 514, ;
		Name = "cmdCancel", ;
		TabIndex = 13, ;
		Top = 422, ;
		Width = 75, ;
		WordWrap = .T.
		*< END OBJECT: BaseClass="commandbutton" />

	ADD OBJECT 'cmdComma' AS commandbutton WITH ;
		Caption = ",", ;
		Height = 60, ;
		HelpContextID = 0, ;
		Left = 77, ;
		Name = "cmdComma", ;
		TabIndex = 25, ;
		TabStop = .F., ;
		Top = 422, ;
		Width = 60
		*< END OBJECT: BaseClass="commandbutton" />

	ADD OBJECT 'cmdConfirm' AS commandbutton WITH ;
		Alignment = 2, ;
		BackColor = 0,255,0, ;
		Caption = "Bestätigen", ;
		Height = 60, ;
		Left = 409, ;
		Name = "cmdConfirm", ;
		TabIndex = 12, ;
		Top = 422, ;
		Visible = .F., ;
		Width = 75, ;
		WordWrap = .T.
		*< END OBJECT: BaseClass="commandbutton" />

	ADD OBJECT 'cmdExpand' AS commandbutton WITH ;
		Alignment = 2, ;
		Caption = "        >>>          Hier klicken für mehr Funktionen", ;
		Height = 96, ;
		Left = 230, ;
		Name = "cmdExpand", ;
		TabIndex = 35, ;
		Top = 96, ;
		Width = 75, ;
		WordWrap = .T.
		*< END OBJECT: BaseClass="commandbutton" />

	ADD OBJECT 'cmdOK' AS commandbutton WITH ;
		Caption = "OK", ;
		Height = 60, ;
		HelpContextID = 0, ;
		Left = 228, ;
		Name = "cmdOK", ;
		TabIndex = 27, ;
		TabStop = .F., ;
		Top = 422, ;
		Width = 60
		*< END OBJECT: BaseClass="commandbutton" />

	ADD OBJECT 'cmdpinpadok' AS commandbutton WITH ;
		BackColor = 128,255,128, ;
		Caption = "OK", ;
		FontBold = .T., ;
		FontSize = 20, ;
		Height = 45, ;
		Left = 216, ;
		Name = "cmdpinpadok", ;
		TabIndex = 4, ;
		TabStop = .F., ;
		Top = 50, ;
		Visible = .F., ;
		Width = 84
		*< END OBJECT: BaseClass="commandbutton" />

	ADD OBJECT 'cmdreadcard' AS commandbutton WITH ;
		Alignment = 2, ;
		BackColor = 0,255,0, ;
		Caption = "KARTE JETZT LESEN", ;
		Height = 48, ;
		Left = 60, ;
		Name = "cmdreadcard", ;
		TabIndex = 5, ;
		Top = 49, ;
		Visible = .F., ;
		Width = 180, ;
		WordWrap = .T.
		*< END OBJECT: BaseClass="commandbutton" />

	ADD OBJECT 'edtInfo' AS editbox WITH ;
		FontBold = .T., ;
		FontSize = 11, ;
		Height = 44, ;
		Left = 0, ;
		Name = "edtInfo", ;
		ReadOnly = .T., ;
		TabIndex = 36, ;
		Top = 51, ;
		Visible = .F., ;
		Width = 304
		*< END OBJECT: BaseClass="editbox" />

	ADD OBJECT 'imgCard' AS image WITH ;
		Height = 108, ;
		Left = -14, ;
		Name = "imgCard", ;
		Picture = ..\picts\visa-amex-mc.gif, ;
		Stretch = 2, ;
		Top = 84, ;
		Width = 180
		*< END OBJECT: BaseClass="image" />

	ADD OBJECT 'lblBelegNr' AS label WITH ;
		AutoSize = .T., ;
		Caption = "Beleg Nr.:", ;
		FontSize = 12, ;
		Height = 21, ;
		Left = 331, ;
		Name = "lblBelegNr", ;
		TabIndex = 28, ;
		Top = 67, ;
		Width = 71
		*< END OBJECT: BaseClass="label" />

	ADD OBJECT 'lblmanualentry' AS label WITH ;
		AutoSize = .T., ;
		Caption = "Kreditkarte Daten manuell eingeben:", ;
		FontSize = 12, ;
		Height = 21, ;
		Left = 331, ;
		Name = "lblmanualentry", ;
		TabIndex = 33, ;
		Top = 114, ;
		Visible = .F., ;
		Width = 255
		*< END OBJECT: BaseClass="label" />

	ADD OBJECT 'lblmmjj' AS label WITH ;
		AutoSize = .T., ;
		Caption = "Gültig bis", ;
		FontSize = 12, ;
		Height = 21, ;
		Left = 331, ;
		Name = "lblmmjj", ;
		TabIndex = 31, ;
		Top = 177, ;
		Visible = .F., ;
		Width = 67
		*< END OBJECT: BaseClass="label" />

	ADD OBJECT 'lblmmjjexplained' AS label WITH ;
		AutoSize = .T., ;
		Caption = "(als MMJJ)", ;
		FontSize = 12, ;
		Height = 21, ;
		Left = 492, ;
		Name = "lblmmjjexplained", ;
		TabIndex = 32, ;
		Top = 177, ;
		Visible = .F., ;
		Width = 78
		*< END OBJECT: BaseClass="label" />

	ADD OBJECT 'lblMOPS' AS label WITH ;
		AutoSize = .T., ;
		Caption = "Kartenprüfnummer", ;
		FontSize = 12, ;
		Height = 21, ;
		Left = 331, ;
		Name = "lblMOPS", ;
		TabIndex = 34, ;
		Top = 210, ;
		Visible = .F., ;
		Width = 130
		*< END OBJECT: BaseClass="label" />

	ADD OBJECT 'lblpan' AS label WITH ;
		AutoSize = .T., ;
		Caption = "KartenNr.", ;
		FontSize = 12, ;
		Height = 21, ;
		Left = 331, ;
		Name = "lblpan", ;
		TabIndex = 29, ;
		Top = 142, ;
		Visible = .F., ;
		Width = 68
		*< END OBJECT: BaseClass="label" />

	ADD OBJECT 'lblStornoType' AS label WITH ;
		AutoSize = .T., ;
		Caption = "Stornotyp", ;
		FontSize = 12, ;
		Height = 21, ;
		Left = 331, ;
		Name = "lblStornoType", ;
		TabIndex = 30, ;
		Top = 33, ;
		Visible = .F., ;
		Width = 68
		*< END OBJECT: BaseClass="label" />

	ADD OBJECT 'ln1' AS line WITH ;
		Height = 0, ;
		Left = 324, ;
		Name = "ln1", ;
		Top = 102, ;
		Width = 264
		*< END OBJECT: BaseClass="line" />

	ADD OBJECT 'ocom' AS olecontrol WITH ;
		Height = 100, ;
		Left = 276, ;
		Name = "ocom", ;
		Top = 12, ;
		Width = 100
		*< END OBJECT: BaseClass="olecontrol" OLEObject="c:\windows\syswow64\scomm32.ocx" Value="0M8R4KGxGuEAAAAAAAAAAAAAAAAAAAAAPgADAP7/CQAGAAAAAAAAAAAAAAABAAAAAQAAAAAAAAAAEAAAAgvbwBvAHQAIABFAG4AdAByAHkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWAAUA//////////8BAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALDIvq9wgc8BAwAAAEABAAAAAAAAAwBPAGwAZQBPAGIAagBlAGMAdABEAGEAdABhAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4AAgEDAAAAAgAAAP////8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAtAAAAAAAAAADAEEAYwBjAGUAcwBzAE8AYgBqAFMAaQB0AGUARABhAHQAYQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJgACAP///////////////wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAA4AAAAAAAAAAMAQwBoAGEAbgBnAGUAZABQAHIAbwBwAHMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAcAAIA////////////////AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAAAAQAAAAAAAAAAwix56FRSKpMOGEkPa+Vk7IAAKQAAAADAAgAC/JXRyAAAABfAGUAeAB0AGUAbgB0AHgAuQMAAAMACAAK8ldHOAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAAAAXwBlAHgAdABlAG4AdAB5ANMDAAAIAAgAGZRVJzQAAABzAGUAdAB0AGkAbgBnAHMACgAAADkANgAwADAALABOACwAOAAsADEACwAMAO45Ks6M////dAByAGkAYQBsAHYAZQByAHMAaQBvAG4A//8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==" />

	ADD OBJECT 'ocomold' AS olecontrol WITH ;
		Height = 100, ;
		Left = 0, ;
		Name = "ocomold", ;
		Top = 156, ;
		Width = 100
		*< END OBJECT: BaseClass="olecontrol" OLEObject="c:\windows\syswow64\mscomm32.ocx" Value="0M8R4KGxGuEAAAAAAAAAAAAAAAAAAAAAPgADAP7/CQAGAAAAAAAAAAAAAAABAAAAAQAAAAAAAAAAEAAAAgvbwBvAHQAIABFAG4AdAByAHkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWAAUA//////////8BAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGAFvq9wgc8BAwAAAEABAAAAAAAAAwBPAGwAZQBPAGIAagBlAGMAdABEAGEAdABhAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4AAgEDAAAAAgAAAP////8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAATAAAAAAAAAADAEEAYwBjAGUAcwBzAE8AYgBqAFMAaQB0AGUARABhAHQAYQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJgACAP///////////////wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAABLAAAAAAAAAAMAQwBoAGEAbgBnAGUAZABQAHIAbwBwAHMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAcAAIA////////////////AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAABsAAAAAAAAABAAAAAIAAAD+/////v////7///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////8AVopkbiwbEIK2AAAAAAAUIUM0EggAAADtAwAA7QMAAAFWimQAAAYAAAABAAAEAAAAAgAAgCUAAAAACAAAAAAASwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAABMAAAA4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAABDb3B5cmlnaHQgKGMpIDE5OTQgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAACACgAAAFJUU0VuYWJsZQAFAAAATAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD8AAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==" />

	ADD OBJECT 'optpinpadpaywish' AS optiongroup WITH ;
		ButtonCount = 3, ;
		Height = 35, ;
		Left = 1, ;
		Name = "optpinpadpaywish", ;
		TabIndex = 3, ;
		Top = 55, ;
		Value = 1, ;
		Visible = .F., ;
		Width = 203, ;
		Option1.AutoSize = .T., ;
		Option1.Caption = "Auto", ;
		Option1.FontBold = .T., ;
		Option1.FontSize = 15, ;
		Option1.Height = 27, ;
		Option1.Left = 5, ;
		Option1.Name = "Option1", ;
		Option1.Top = 5, ;
		Option1.Value = 1, ;
		Option1.Width = 65, ;
		Option2.AutoSize = .T., ;
		Option2.Caption = "ELV", ;
		Option2.FontBold = .T., ;
		Option2.FontSize = 15, ;
		Option2.Height = 27, ;
		Option2.Left = 74, ;
		Option2.Name = "Option2", ;
		Option2.Top = 5, ;
		Option2.Width = 59, ;
		Option3.AutoSize = .T., ;
		Option3.Caption = "ECC", ;
		Option3.FontBold = .T., ;
		Option3.FontSize = 15, ;
		Option3.Height = 27, ;
		Option3.Left = 136, ;
		Option3.Name = "Option3", ;
		Option3.Top = 5, ;
		Option3.Width = 62
		*< END OBJECT: BaseClass="optiongroup" />

	ADD OBJECT 'optzahlart' AS optiongroup WITH ;
		ButtonCount = 3, ;
		Height = 96, ;
		Left = 152, ;
		Name = "optzahlart", ;
		TabIndex = 3, ;
		Top = 96, ;
		Value = 1, ;
		Visible = .F., ;
		Width = 72, ;
		Option1.AutoSize = .T., ;
		Option1.Caption = "Girocard", ;
		Option1.FontBold = .T., ;
		Option1.FontSize = 10, ;
		Option1.Height = 18, ;
		Option1.Left = 1, ;
		Option1.Name = "Option1", ;
		Option1.Top = 5, ;
		Option1.Value = 1, ;
		Option1.Width = 74, ;
		Option2.AutoSize = .T., ;
		Option2.Caption = "Kreditk.", ;
		Option2.FontBold = .T., ;
		Option2.FontSize = 10, ;
		Option2.Height = 18, ;
		Option2.Left = 1, ;
		Option2.Name = "Option2", ;
		Option2.Top = 36, ;
		Option2.Width = 68, ;
		Option3.AutoSize = .T., ;
		Option3.Caption = "Smartp.", ;
		Option3.FontBold = .T., ;
		Option3.FontSize = 10, ;
		Option3.Height = 18, ;
		Option3.Left = 1, ;
		Option3.Name = "Option3", ;
		Option3.Top = 67, ;
		Option3.Width = 69
		*< END OBJECT: BaseClass="optiongroup" />

	ADD OBJECT 'otmrrelease' AS timer WITH ;
		Enabled = .F., ;
		Height = 23, ;
		Interval = 1000, ;
		Left = 48, ;
		Name = "otmrrelease", ;
		Top = 168, ;
		Width = 23
		*< END OBJECT: BaseClass="timer" />

	ADD OBJECT 'txtAmount' AS textbox WITH ;
		Alignment = 3, ;
		DisabledForeColor = 0,0,0, ;
		Enabled = .F., ;
		FontSize = 28, ;
		Format = "KR", ;
		Height = 48, ;
		InputMask = "99999999.99", ;
		Left = 27, ;
		Name = "txtAmount", ;
		TabIndex = 2, ;
		Top = 1, ;
		Value = 0.00, ;
		Width = 252
		*< END OBJECT: BaseClass="textbox" />

	ADD OBJECT 'txtBelegNr' AS textbox WITH ;
		Enabled = .F., ;
		FontSize = 12, ;
		Height = 28, ;
		Left = 411, ;
		Name = "txtBelegNr", ;
		TabIndex = 8, ;
		TabStop = .F., ;
		Top = 63, ;
		Width = 177
		*< END OBJECT: BaseClass="textbox" />

	ADD OBJECT 'txtDisplay' AS textbox WITH ;
		FontSize = 12, ;
		Height = 28, ;
		Left = 12, ;
		Name = "txtDisplay", ;
		TabIndex = 14, ;
		TabStop = .F., ;
		Top = 195, ;
		Width = 288
		*< END OBJECT: BaseClass="textbox" />

	ADD OBJECT 'txtmmjj' AS textbox WITH ;
		Enabled = .T., ;
		FontSize = 12, ;
		Format = "KR", ;
		Height = 28, ;
		InputMask = "9999", ;
		Left = 411, ;
		Name = "txtmmjj", ;
		TabIndex = 10, ;
		TabStop = .F., ;
		Top = 173, ;
		Visible = .F., ;
		Width = 69
		*< END OBJECT: BaseClass="textbox" />

	ADD OBJECT 'txtmops' AS textbox WITH ;
		Comment = "Not (yet) used", ;
		Enabled = .T., ;
		FontSize = 12, ;
		Format = "KR", ;
		Height = 28, ;
		InputMask = "999", ;
		Left = 481, ;
		Name = "txtmops", ;
		TabIndex = 11, ;
		TabStop = .F., ;
		Top = 206, ;
		Visible = .F., ;
		Width = 57
		*< END OBJECT: BaseClass="textbox" />

	ADD OBJECT 'txtpan' AS textbox WITH ;
		Enabled = .T., ;
		FontSize = 12, ;
		Format = "KR", ;
		Height = 28, ;
		InputMask = "9999999999999999", ;
		Left = 411, ;
		Name = "txtpan", ;
		TabIndex = 9, ;
		TabStop = .F., ;
		Top = 138, ;
		Visible = .F., ;
		Width = 177
		*< END OBJECT: BaseClass="textbox" />
	
	PROCEDURE Activate
		* Here show or hide some controls on form. Called only once.
		
		IF NOT this.lfirstactivate
			this.lfirstactivate = .T.
		
			IF this.lonlyshow && Form in in progrss show mode
				this.Closable = .F.
				this.Caption = "Karte wurde bearbeitet..."
				this.edtInfo.Visible = .T.
				this.cmdExpand.Visible = .F.
				thisform.AutoCenter = .T.
				thisform.Refresh()
				RETURN .T.
			ENDIF
		
			DO CASE
		
				CASE this.lmanual && Manual credit card input
					this.Caption = "Bitte Kreditkartendaten eingeben"
					this.cmdexpand.Click()
					STORE .T. TO this.lblpan.Visible, this.txtpan.Visible, this.lblmmjj.Visible, this.txtmmjj.Visible, ;
							this.ln1.Visible, this.lblmanualentry.Visible, ;
							this.lblmmjjexplained.Visible
					STORE .T. TO this.txtpan.TabStop, this.txtmmjj.TabStop
					this.cmdconfirm.Visible = .T.
		
				CASE this.lpinpad && PinPad
					this.optpinpadpaywish.Visible = .T.
					this.cmdpinpadok.Visible = .T.
					thisform.AutoCenter = .T.
					thisform.Refresh()
					
				OTHERWISE && Cardreader
					IF this.creadertype = "1"
						* When keyboard keyreader, user muss press button, to start reading card,
						* becouse he can enter for example amount or belegnr with keyboard, and
						* trigger card data reading.
						this.cmdreadcard.Visible = .T.
					ENDIF
					thisform.AutoCenter = .T.
					thisform.Refresh()
			ENDCASE
		
			IF this.namount < 0 && For storno enable storno fields
				this.cmdexpand.Click()
				this.chkStorno.Value = .T.
				this.txtBelegNr.Enabled = .T.
				this.txtBelegNr.SetFocus()
				this.cbostornotype.Visible = .T.
				this.lblStornoType.Visible = .T.
				this.cbostornotype.Value = "Stornieren Kreditkarte manuell"
		
				IF this.lpinpad
					this.cmdconfirm.Visible = .T.
				ENDIF
			ENDIF
		
			IF this.lamountchangeenabled
				this.cmdexpand.Click()
				IF this.lpinpad
					this.cmdconfirm.Visible = .T.
				ENDIF
				this.txtAmount.Enabled = .T.
				this.txtAmount.SetFocus()
			ENDIF
		
			IF this.llzahlart
				this.optzahlart.Visible = .T.
			ENDIF
		
		ENDIF
	ENDPROC

	PROCEDURE checkapi
		LOCAL l_lFoundgetprivateprofilestring, l_lFoundsleep, i
		LOCAL ARRAY l_aDlls(1)
		
		* Declare DLLS, when needed
		
		IF ADLLS(l_aDlls)>0
		     FOR i = 1 TO ALEN(l_aDlls,1)
		          IF LOWER(ALLTRIM(l_aDlls(i,1))) == "getprivateprofilestring"
		               l_lFoundgetprivateprofilestring = .T.
		          ENDIF
		          IF LOWER(ALLTRIM(l_aDlls(i,1))) == "sleep"
		               l_lFoundsleep = .T.
		          ENDIF
		          IF l_lFoundgetprivateprofilestring AND l_lFoundsleep
		               EXIT
		          ENDIF
		     ENDFOR
		ENDIF
		IF NOT l_lFoundgetprivateprofilestring
		     declare integer GetPrivateProfileString in Win32API string cSection, ;
		          string cEntry, string cDefault, string @ cBuffer, integer nBufferSize, ;
		          string cINIFile
		ENDIF
		IF NOT l_lFoundsleep
		     DECLARE Sleep IN Win32API INTEGER nMilliseconds
		ENDIF
		
		RETURN .T.
	ENDPROC

	PROCEDURE Destroy
		LOCAL l_cmmjj
		
		this.lstorno = this.chkStorno.Value
		this.cbelegnr = ALLTRIM(this.txtBelegNr.Value)
		this.cpan = ALLTRIM(this.txtpan.Value)
		l_cmmjj = PADL(ALLTRIM(this.txtmmjj.Value),4,"0")
		this.cjjmm = SUBSTR(l_cmmjj,3,2) + SUBSTR(l_cmmjj,1,2)
		this.cmops = ALLTRIM(this.txtmops.Value)
		this.cstornotype = IIF(LOWER(this.cbostornotype.Value)="gutschrift kreditkarte manuell","2","1")
		this.cpaywish = TRANSFORM(this.optpinpadpaywish.Value)
		this.czahlart = ICASE(NOT this.optzahlart.visible,"",this.optzahlart.Value=2,"kk",this.optzahlart.Value=3,"sm","gc")
		IF this.cApp = "TERMINAL" AND this.lwaitercomportclosed
			* Close elpay COM port, and open waiter key COM port again
			this.oCOM.portOpen = .F.
			goComWaiterKey.OLECommPort.PortOpen = .T.
		ENDIF
		
		RETURN .T.
	ENDPROC

	PROCEDURE getterminalsettings
		* Check in whih application is form started
		LOCAL l_cMacro
		
		DO CASE
			CASE TYPE("gcApplication")="C" AND UPPER(gcApplication) = "CITADEL DESK"
				this.cApp = "DESK"
			CASE TYPE("glAutomationMode")="L" AND TYPE("gnManagerMode")="N"
				this.cApp = "TERMINAL"
			CASE TYPE("g_cApplication")="C" AND LOWER(g_cApplication) = "thermaris wellness zentrum"
				this.cApp = "WELLNESS"
				l_cMacro = "g_oScreen.GetWorkStation()"
				this.oTerminal = &l_cMacro
		ENDCASE
		
		* Get settings
		
		DO CASE
			CASE this.cApp = "DESK"
				this.creadertype = IIF(EMPTY(_screen.oGlobal.oterminal.tm_elpcrt),"0",ALLTRIM(_screen.oGlobal.oterminal.tm_elpcrt))
				this.ctrack1start = ALLTRIM(_screen.oGlobal.oterminal.tm_elts1)
				this.ctrack2start = ALLTRIM(_screen.oGlobal.oterminal.tm_elts2)
				this.ctrack3start = ALLTRIM(_screen.oGlobal.oterminal.tm_elts3)
				this.ctrack1end = ALLTRIM(_screen.oGlobal.oterminal.tm_elte1)
				this.ctrack2end = ALLTRIM(_screen.oGlobal.oterminal.tm_elte2)
				this.ctrack3end = ALLTRIM(_screen.oGlobal.oterminal.tm_elte3)
				this.nwaitfordata = IIF(EMPTY(_screen.oGlobal.oterminal.tm_elpcrw),this.nwaitfordata,_screen.oGlobal.oterminal.tm_elpcrw)
				this.ncommport = INT(VAL(SUBSTR(ALLTRIM(_screen.oGlobal.oterminal.tm_elpcpn),4)))
				this.csettings = ALLTRIM(_screen.oGlobal.oterminal.tm_elpcps)
				this.lhandshaking = IIF(_screen.oGlobal.oterminal.tm_elpcph="1",.T.,.F.)
			CASE this.cApp = "TERMINAL"
				this.creadertype = IIF(EMPTY(EVALUATE('goPrintForms.elpcrt')),"0",ALLTRIM(EVALUATE('goPrintForms.elpcrt')))
				this.ctrack1start = ALLTRIM(EVALUATE('goPrintForms.elts1'))
				this.ctrack2start = ALLTRIM(EVALUATE('goPrintForms.elts2'))
				this.ctrack3start = ALLTRIM(EVALUATE('goPrintForms.elts3'))
				this.ctrack1end = ALLTRIM(EVALUATE('goPrintForms.elte1'))
				this.ctrack2end = ALLTRIM(EVALUATE('goPrintForms.elte2'))
				this.ctrack3end = ALLTRIM(EVALUATE('goPrintForms.elte3'))
				this.nwaitfordata = IIF(EMPTY(EVALUATE('goPrintForms.elpcrw')),this.nwaitfordata,EVALUATE('goPrintForms.elpcrw'))
				this.ncommport = INT(VAL(SUBSTR(ALLTRIM(EVALUATE('goPrintForms.elpcpn')),4)))
				this.csettings = ALLTRIM(EVALUATE('goPrintForms.elpcps'))
				this.lhandshaking = IIF(EVALUATE('goPrintForms.elpcph')="1",.T.,.F.)
			CASE this.cApp = "WELLNESS"
				this.creadertype = IIF(EMPTY(this.oTerminal.tm_elpcrt),"0",ALLTRIM(this.oTerminal.tm_elpcrt))
				this.ctrack1start = ALLTRIM(this.oTerminal.tm_elts1)
				this.ctrack2start = ALLTRIM(this.oTerminal.tm_elts2)
				this.ctrack3start = ALLTRIM(this.oTerminal.tm_elts3)
				this.ctrack1end = ALLTRIM(this.oTerminal.tm_elte1)
				this.ctrack2end = ALLTRIM(this.oTerminal.tm_elte2)
				this.ctrack3end = ALLTRIM(this.oTerminal.tm_elte3)
				this.nwaitfordata = IIF(EMPTY(this.oTerminal.tm_elpcrw),this.nwaitfordata,this.oTerminal.tm_elpcrw)
				this.ncommport = INT(VAL(SUBSTR(ALLTRIM(this.oTerminal.tm_elpcpn),4)))
				this.csettings = ALLTRIM(this.oTerminal.tm_elpcps)
				this.lhandshaking = IIF(this.oTerminal.tm_elpcph="1",.T.,.F.)
		ENDCASE
		
		RETURN .T.
	ENDPROC

	PROCEDURE Init
		LPARAMETERS lp_nAmount, lp_lOnlyShow, lp_lPinPad, lp_lManual, lp_lAmountChangeEnabled, lp_lcustomzahlartallowed
		* In kkelpay.ini can be defined, which card reader is used.
		* 1 - Keyboard, 2 - COM Port
		* On first data input, timer is activated. Timer will then in 1 secound activate oncardread method,
		* in which is readed data from cbuffer property, and stored in ctrack1, ctrack2, ctrack3.
		* In unload event is ctrack data returned to caller, as one string, delimited with |.
		* When not success, empty string is returned from form.
		*
		* When lp_lAmountChangeEnabled = .T., user can here enter amount.
		this.lamountchangeenabled = lp_lAmountChangeEnabled
		
		IF this.lamountchangeenabled
			this.namount = 0.00
		ELSE
			this.namount = lp_nAmount
		ENDIF
		
		this.txtAmount.ControlSource = [thisform.namount]
		
		this.lonlyshow = lp_lOnlyShow
		this.lpinpad = lp_lPinPad
		this.lmanual = lp_lManual
		this.llzahlart = lp_lcustomzahlartallowed
		
		this.GetTerminalSettings()
		
		DO CASE
			CASE this.lonlyshow OR this.lpinpad OR this.lmanual
			CASE this.creadertype = "1"
				* Keyboard
				this.ntypeahead = SET("Typeahead")
				SET TYPEAHEAD TO 500
			CASE this.creadertype = "2"
				* COM Port
				IF this.cApp = "TERMINAL"
					* Turn off waiterkey, when used
					IF TYPE("goComWaiterKey.OLECommPort.PortOpen")="L" AND goComWaiterKey.OLECommPort.PortOpen AND ;
							goComWaiterKey.OLECommPort.CommPort = this.ncommport
						goComWaiterKey.OLECommPort.PortOpen = .F.
						this.lwaitercomportclosed = .T.
					ENDIF
				ENDIF
				this.ocom.commport = this.ncommport
				this.ocom.settings = this.csettings
				this.ocom.DTREnable = .T.
				this.ocom.RThreshold = 1
				this.ocom.RTSEnable = .T.
				this.ocom.SThreshold = 1
				this.ocom.InputLen = 0
				this.ocom.PortOpen = .T.
				IF this.lhandshaking
					this.ocom.handshaking = 2
				ENDIF
		ENDCASE
		
		IF NOT this.lonlyshow AND NOT this.lpinpad AND NOT this.lmanual
			this.otmrrelease.Interval = this.nwaitfordata
		ENDIF
	ENDPROC

	PROCEDURE KeyPress
		LPARAMETERS nKeyCode, nShiftAltCtrl
		
		IF this.creadertype <> "1" OR this.lonlyshow OR this.lpinpad OR this.lmanual OR NOT this.lallowkeyboardread
			RETURN .T.
		ENDIF
		
		IF nShiftAltCtrl <> 2 AND BETWEEN(nKeyCode, 0, 255)
			this.TimerEnable()
			this.cbuffer = this.cbuffer + STRCONV(CHR(nKeyCode),15)
			NODEFAULT && Don't let keystroke to other buttons
		ENDIF
	ENDPROC

	PROCEDURE msgrawdatareceive
		LPARAMETERS tcRawData
		
		IF LEN(tcRawData) > 0
			*this.LogData(tcRawData, ">")
			this.MsgReceived(tcRawData)
		ENDIF
	ENDPROC

	PROCEDURE msgreceived
		LPARAMETERS tcMsg
		this.cbuffer = this.cbuffer + tcMsg
		this.TimerEnable()
		
		RETURN .T.
	ENDPROC

	PROCEDURE oncardread
		LOCAL l_cString
		IF NOT EMPTY(this.cbuffer)
			l_cString = this.oncardreadconvert(this.cbuffer)
			this.ctrack1 = STREXTRACT(l_cString, this.ctrack1start, this.ctrack1end)
			this.ctrack2 = STREXTRACT(l_cString, this.ctrack2start, this.ctrack2end)
			this.ctrack3 = STREXTRACT(l_cString, this.ctrack3start, this.ctrack3end)
		ENDIF
		IF NOT EMPTY(this.ctrack1) OR NOT EMPTY(this.ctrack2) OR NOT EMPTY(this.ctrack3)
			thisform.lSuccess = .T.
		ELSE
			thisform.lSuccess = .F.
		ENDIF
		thisform.Release()
		
		RETURN .T.
	ENDPROC

	PROCEDURE oncardreadconvert
		LPARAMETERS lp_cHexTrack
		LOCAL l_cOneTrack, i, l_cMacro, l_nAsc
		l_cOneTrack = ""
		FOR i = 1 TO LEN(lp_cHexTrack) STEP 2
			l_cMacro = "0x" + SUBSTR(lp_cHexTrack,i,2)
			l_nAsc = &l_cMacro
			l_cOneTrack = l_cOneTrack + CHR(l_nAsc)
		ENDFOR
		RETURN l_cOneTrack
	ENDPROC

	PROCEDURE onkeyboardreadcard
		LOCAL l_oCtrl
		FOR EACH l_oCtrl IN this.Controls
			IF TYPE("l_oCtrl.Enabled")="L" AND l_oCtrl.Enabled
				l_oCtrl.Enabled = .F.
			ENDIF
		ENDFOR
		this.lallowkeyboardread = .T.
	ENDPROC

	PROCEDURE onshowprogress
		LPARAMETERS lp_cText
		IF NOT EMPTY(lp_cText)
			this.edtInfo.Value = lp_cText
			this.edtInfo.Refresh()
		ENDIF
	ENDPROC

	PROCEDURE readini
		#DEFINE c_cmnnBUFFER_SIZE            256
		#DEFINE c_cmncNULL                   CHR(0)
		#DEFINE c_cmncCR                     CHR(13)
		
		lparameters ;
		     tcSection, ;
		     tuEntry, ;
		     tcDefault, ;
		     taEntries, ;
		     tcINIFile
		local lcBuffer, ;
		     lcDefault, ;
		     lnSize, ;
		     luReturn, ;
		     l_lFoundDll, ;
		     i
		LOCAL ARRAY l_aDlls(1)
		
		IF EMPTY(tcINIFile)
		     tcINIFile = this.cinifile
		ENDIF
		tcINIFile = FULLPATH(tcINIFile)
		
		IF ADLLS(l_aDlls)>0
		     FOR i = 1 TO ALEN(l_aDlls,1)
		          IF LOWER(ALLTRIM(l_aDlls(i,1))) == "getprivateprofilestring"
		               l_lFoundDll = .T.
		          ENDIF
		          EXIT
		     ENDFOR
		ENDIF
		IF NOT l_lFoundDll
		     declare integer GetPrivateProfileString in Win32API string cSection, ;
		          string cEntry, string cDefault, string @ cBuffer, integer nBufferSize, ;
		          string cINIFile
		ENDIF
		
		lcBuffer  = replicate(c_cmncNULL, c_cmnnBUFFER_SIZE)
		lcDefault = iif(vartype(tcDefault) <> 'C', '', tcDefault)
		lnSize    = GetPrivateProfileString(tcSection, tuEntry, lcDefault, @lcBuffer, ;
		     c_cmnnBUFFER_SIZE, tcINIFile)
		lcBuffer  = left(lcBuffer, lnSize)
		luReturn  = lcBuffer
		do case
		     case vartype(tuEntry) = 'C'
		     case lnSize = 0
		          luReturn = 0
		     otherwise
		          luReturn = alines(taEntries, lcBuffer, .T., c_cmncNULL, c_cmncCR)
		endcase
		return luReturn
	ENDPROC

	PROCEDURE timerenable
		IF NOT this.otmrrelease.Enabled
			this.otmrrelease.Enabled = .T.
		ENDIF
	ENDPROC

	PROCEDURE Unload
		LOCAL l_cRetVal
		
		IF this.creadertype = "1"
			SET TYPEAHEAD TO this.ntypeahead
		ENDIF
		
		IF this.lcancel
			this.lsuccess = .F.
		ENDIF
		
		IF this.lsuccess
			l_cRetVal = ""
			l_cRetVal = l_cRetVal + IIF(EMPTY(this.cTrack1)," ", this.cTrack1) + "|"
			l_cRetVal = l_cRetVal + IIF(EMPTY(this.cTrack2)," ", this.cTrack2) + "|"
			l_cRetVal = l_cRetVal + IIF(EMPTY(this.cTrack3)," ", this.cTrack3) + "|"
			l_cRetVal = l_cRetVal + TRANSFORM(this.lstorno) +"|"
			l_cRetVal = l_cRetVal + IIF(EMPTY(this.cbelegnr)," ", this.cbelegnr) + "|"
			l_cRetVal = l_cRetVal + IIF(EMPTY(this.cpan)," ", this.cpan) + "|"
			l_cRetVal = l_cRetVal + IIF(EMPTY(this.cjjmm)," ", this.cjjmm) + "|"
			l_cRetVal = l_cRetVal + IIF(EMPTY(this.cmops)," ", this.cmops) + "|"
			l_cRetVal = l_cRetVal + IIF(EMPTY(this.cstornotype)," ", this.cstornotype) + "|"
			l_cRetVal = l_cRetVal + ALLTRIM(STRTRAN(STRTRAN(STR(this.namount,12,2),".",""),",","")) + "|"
			l_cRetVal = l_cRetVal + ICASE(this.cpaywish="2","ELV",this.cpaywish="3","ECC"," ") + "|"
			l_cRetVal = l_cRetVal + IIF(EMPTY(this.czahlart)," ", this.czahlart) + "|"
		ELSE
			l_cRetVal = ""
		ENDIF
		
		RETURN l_cRetVal
	ENDPROC

	PROCEDURE cbostornotype.LostFocus
		IF this.Value = "Stornieren Kreditkarte manuell"
			thisform.txtBelegNr.Enabled = .T.
		ELSE
			thisform.txtBelegNr.Enabled = .F.
			thisform.txtBelegNr.Value = ""
		ENDIF
		thisform.txtBelegNr.Refresh()
	ENDPROC

	PROCEDURE chkStorno.Click
		this.Refresh()
	ENDPROC

	PROCEDURE chkStorno.InteractiveChange
		IF this.Value
			this.Parent.txtBelegNr.Enabled = .T.
			this.Parent.cbostornotype.Visible = .T.
			this.Parent.lblstornoType.Visible = .T.
		ELSE
			this.Parent.txtBelegNr.Enabled = .F.
			this.Parent.cbostornotype.Visible = .F.
			this.Parent.lblstornoType.Visible = .F.
		ENDIF
		
		this.Parent.txtBelegNr.Refresh()
	ENDPROC

	PROCEDURE cmd0.Click
		this.Parent.txtDisplay.Value = this.Parent.txtDisplay.Value + this.Caption
		this.Parent.txtDisplay.Refresh()
	ENDPROC

	PROCEDURE cmd1.Click
		this.Parent.txtDisplay.Value = this.Parent.txtDisplay.Value + this.Caption
		this.Parent.txtDisplay.Refresh()
	ENDPROC

	PROCEDURE cmd2.Click
		this.Parent.txtDisplay.Value = this.Parent.txtDisplay.Value + this.Caption
		this.Parent.txtDisplay.Refresh()
	ENDPROC

	PROCEDURE cmd3.Click
		this.Parent.txtDisplay.Value = this.Parent.txtDisplay.Value + this.Caption
		this.Parent.txtDisplay.Refresh()
	ENDPROC

	PROCEDURE cmd4.Click
		this.Parent.txtDisplay.Value = this.Parent.txtDisplay.Value + this.Caption
		this.Parent.txtDisplay.Refresh()
	ENDPROC

	PROCEDURE cmd5.Click
		this.Parent.txtDisplay.Value = this.Parent.txtDisplay.Value + this.Caption
		this.Parent.txtDisplay.Refresh()
	ENDPROC

	PROCEDURE cmd6.Click
		this.Parent.txtDisplay.Value = this.Parent.txtDisplay.Value + this.Caption
		this.Parent.txtDisplay.Refresh()
	ENDPROC

	PROCEDURE cmd7.Click
		this.Parent.txtDisplay.Value = this.Parent.txtDisplay.Value + this.Caption
		this.Parent.txtDisplay.Refresh()
	ENDPROC

	PROCEDURE cmd8.Click
		this.Parent.txtDisplay.Value = this.Parent.txtDisplay.Value + this.Caption
		this.Parent.txtDisplay.Refresh()
	ENDPROC

	PROCEDURE cmd9.Click
		this.Parent.txtDisplay.Value = this.Parent.txtDisplay.Value + this.Caption
		this.Parent.txtDisplay.Refresh()
	ENDPROC

	PROCEDURE cmdBS.Click
		IF NOT EMPTY(this.Parent.txtDisplay.Value)
			this.Parent.txtDisplay.Value = LEFT(this.Parent.txtDisplay.Value,LEN(this.Parent.txtDisplay.Value)-1)
		ENDIF
		this.Parent.txtDisplay.Refresh()
	ENDPROC

	PROCEDURE cmdCancel.Click
		thisform.lCancel = .T.
		thisform.Release()
	ENDPROC

	PROCEDURE cmdComma.Click
		this.Parent.txtDisplay.Value = this.Parent.txtDisplay.Value + SET("Point")
		this.Parent.txtDisplay.Refresh()
	ENDPROC

	PROCEDURE cmdConfirm.Click
		IF thisform.namount = 0.00
			thisform.txtAmount.BackColor = RGB(255,0,0)
			thisform.txtAmount.SetFocus()
			WAIT WINDOW NOWAIT "Betrag ist 0.00!"
			RETURN .F.
		ENDIF
		thisform.lsuccess = .T.
		thisform.Release()
	ENDPROC

	PROCEDURE cmdExpand.Click
		LOCAL l_oCtrl
		IF NOT thisform.lexpanded
			thisform.lexpanded = .T.
			IF thisform.Width <> 600
				thisform.Width = 600
				thisform.Height = 492
				FOR EACH l_oCtrl IN thisform.Controls
					IF INLIST(LOWER(l_oCtrl.BaseClass),"textbox","commandbutton")
						l_oCtrl.TabStop = .T.
					ENDIF
				ENDFOR
				thisform.AutoCenter = .F.
				thisform.Refresh()
				thisform.AutoCenter = .T.
				thisform.Refresh()
			ENDIF
			this.Enabled = .F.
		ENDIF
	ENDPROC

	PROCEDURE cmdOK.Click
		LOCAL l_oCtrl, i
		IF VARTYPE(thisform.oLastCtrl)="O"
			IF LOWER(thisform.oLastCtrl.Name) = "txtamount"
				thisform.namount = VAL(thisform.txtDisplay.Value)
			ELSE
				thisform.oLastCtrl.Value = thisform.txtDisplay.Value
			ENDIF
			thisform.txtDisplay.Value = ""
			thisform.oLastCtrl.Refresh()
			thisform.txtDisplay.Refresh()
			l_lFound = .F.
			i = 0
			DO WHILE NOT l_lFound AND i < 20
				i = i + 1
				FOR EACH l_oCtrl IN thisform.Controls
					IF LOWER(l_oCtrl.BaseClass) = "textbox" AND l_oCtrl.TabIndex = thisform.oLastCtrl.TabIndex + i ;
							AND NOT LOWER(l_oCtrl.Name) = "txtdisplay"
						l_oCtrl.SetFocus()
						l_lFound = .T.
						EXIT
					ENDIF
				ENDFOR
			ENDDO
		ENDIF
	ENDPROC

	PROCEDURE cmdpinpadok.Click
		thisform.lSuccess = .T.
		thisform.Release()
	ENDPROC

	PROCEDURE cmdreadcard.Click
		thisform.OnKeyboardReadCard()
	ENDPROC

	PROCEDURE ocom.OnComm
		*** ActiveX Control Event ***
		LOCAL lcRawData, lcBuffer
		
		lcRawData = ""
		DO WHILE .T.
			lcBuffer = STRCONV(this.Input,15)
			IF LEN(lcBuffer) = 0
				EXIT
			ENDIF
			lcRawData = lcRawData + lcBuffer
			Sleep(50)
			DOEVENTS
		ENDDO
		IF LEN(lcRawData) > 0
			this.Parent.MsgRawDataReceive(lcRawData)
		ENDIF
	ENDPROC

	PROCEDURE ocomold.OnComm
		*** ActiveX Control Event ***
		LOCAL lcRawData, lcBuffer
		
		lcRawData = ""
		DO WHILE .T.
			lcBuffer = STRCONV(this.Input,15)
			IF LEN(lcBuffer) = 0
				EXIT
			ENDIF
			lcRawData = lcRawData + lcBuffer
			Sleep(50)
			DOEVENTS
		ENDDO
		IF LEN(lcRawData) > 0
			this.Parent.MsgRawDataReceive(lcRawData)
		ENDIF
	ENDPROC

	PROCEDURE otmrrelease.Timer
		this.Enabled = .F.
		this.Parent.OnCardRead()
	ENDPROC

	PROCEDURE txtAmount.LostFocus
		IF NOT this.ReadOnly
			thisform.oLastCtrl = .NULL.
			thisform.oLastCtrl = this
		ENDIF
	ENDPROC

	PROCEDURE txtBelegNr.LostFocus
		thisform.oLastCtrl = .NULL.
		thisform.oLastCtrl = this
	ENDPROC

	PROCEDURE txtmmjj.LostFocus
		thisform.oLastCtrl = .NULL.
		thisform.oLastCtrl = this
	ENDPROC

	PROCEDURE txtmops.LostFocus
		thisform.oLastCtrl = .NULL.
		thisform.oLastCtrl = this
	ENDPROC

	PROCEDURE txtpan.LostFocus
		thisform.oLastCtrl = .NULL.
		thisform.oLastCtrl = this
	ENDPROC

ENDDEFINE
