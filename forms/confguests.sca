*--------------------------------------------------------------------------------------------------------------------------------------------------------
* (ES) AUTOGENERADO - ¡¡ATENCIÓN!! - ¡¡NO PENSADO PARA EJECUTAR!! USAR SOLAMENTE PARA INTEGRAR CAMBIOS Y ALMACENAR CON HERRAMIENTAS SCM!!
* (EN) AUTOGENERATED - ATTENTION!! - NOT INTENDED FOR EXECUTION!! USE ONLY FOR MERGING CHANGES AND STORING WITH SCM TOOLS!!
*--------------------------------------------------------------------------------------------------------------------------------------------------------
*< FOXBIN2PRG: Version="1.19" SourceFile="confguests.scx" /> (Solo para binarios VFP 9 / Only for VFP 9 binaries)
*
*
#INCLUDE "..\include\constdefines.h"

DEFINE CLASS dataenvironment AS dataenvironment 
 	*< CLASSDATA: Baseclass="dataenvironment" Timestamp="" Scale="" Uniqueid="" ClassIcon="2" />

	DataSource = .NULL.
	Height = 204
	Left = 0
	Name = "Dataenvironment"
	Top = 0
	Width = 542

ENDDEFINE

DEFINE CLASS frmconferenceguests AS tform OF "..\libs\main.vcx" 
 	*< CLASSDATA: Baseclass="form" Timestamp="" Scale="" Uniqueid="" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="edtDetails" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblMaxPersons" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtMaxPersons" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblOccPersons" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtOccPersons" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grdConfGuests" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grdConfGuests.grcGuestNo.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grdConfGuests.grcGuestNo.Tbgrid1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grdConfGuests.grcFname.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grdConfGuests.grcFname.Tbgrid1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grdConfGuests.grcLname.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grdConfGuests.grcLname.Tbgrid1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grdConfGuests.grcRoom.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grdConfGuests.grcRoom.cboRoom" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grdConfGuests.grcGroup.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grdConfGuests.grcGroup.Tbgrid1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grdConfGuests.grcTitle.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grdConfGuests.grcTitle.Tbgrid1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grdConfGuests.grcAddrid.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grdConfGuests.grcAddrid.Tcommandbutton1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grdConfGuests.grcReser.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grdConfGuests.grcReser.Tbgrid1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdOK" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdCancel" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdReservat" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdPrint" UniqueID="" Timestamp="" />

	*<DefinedPropArrayMethod>
		*m: movedown
		*m: moveup
		*m: setaddress
		*m: setcaption
		*m: setcontrolsource
		*p: ocarescfgue
		*p: oreserdata
	*</DefinedPropArrayMethod>

	AlwaysOnTop = .F.
	Caption = "frmConferenceGuests"
	ControlBox = .T.
	DataSession = 2
	DoCreate = .T.
	doini = .T.
	doiniopencommontables = .T.
	formname = ConferenceGuests
	Height = 508
	Icon = ..\bitmap\icons\clock06.ico
	KeyPreview = .T.
	Name = "frmConferenceGuests"
	ocallingobj = .NULL.
	ocarescfgue = .NULL.
	oreserdata = .NULL.
	resizeheaderfont = .F.
	saveformsize = .T.
	savegridwidths = .T.
	ShowTips = .T.
	Width = 708

	ADD OBJECT 'cmdCancel' AS tcommandbutton WITH ;
		Cancel = .T., ;
		Caption = "cmdCancel", ;
		Left = 264, ;
		Name = "cmdCancel", ;
		Top = 468, ;
		ZOrderSet = 7
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'cmdOK' AS tcommandbutton WITH ;
		Caption = "cmdOK", ;
		Default = .T., ;
		Left = 168, ;
		Name = "cmdOK", ;
		Top = 468, ;
		ZOrderSet = 6
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'cmdPrint' AS tcommandbutton WITH ;
		Caption = "cmdPrint", ;
		Left = 456, ;
		Name = "cmdPrint", ;
		Top = 468, ;
		ZOrderSet = 9
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'cmdReservat' AS tcommandbutton WITH ;
		Caption = "cmdReservat", ;
		Left = 360, ;
		Name = "cmdReservat", ;
		Top = 468, ;
		ZOrderSet = 8
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'edtDetails' AS teditbox WITH ;
		BackStyle = 0, ;
		BorderStyle = 0, ;
		DisabledForeColor = 0,0,0, ;
		Enabled = .F., ;
		FontBold = .T., ;
		Height = 48, ;
		Left = 12, ;
		Name = "edtDetails", ;
		ScrollBars = 0, ;
		Top = 12, ;
		Width = 456, ;
		ZOrderSet = 0
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="editbox" />

	ADD OBJECT 'grdConfGuests' AS tgrid WITH ;
		ColumnCount = 8, ;
		DeleteMark = .F., ;
		GridLineColor = 192,192,192, ;
		GridLines = 2, ;
		Height = 384, ;
		Left = 0, ;
		Name = "grdConfGuests", ;
		Panel = 1, ;
		RecordMark = .F., ;
		resizefontsize = .F., ;
		ScrollBars = 2, ;
		Top = 72, ;
		Width = 708, ;
		ZOrderSet = 5, ;
		Column1.CurrentControl = "Tbgrid1", ;
		Column1.Name = "grcGuestNo", ;
		Column1.ReadOnly = .T., ;
		Column1.Width = 40, ;
		Column2.ColumnOrder = 4, ;
		Column2.CurrentControl = "Tbgrid1", ;
		Column2.Name = "grcFname", ;
		Column2.Width = 120, ;
		Column3.ColumnOrder = 3, ;
		Column3.CurrentControl = "Tbgrid1", ;
		Column3.Name = "grcLname", ;
		Column3.Width = 150, ;
		Column4.Alignment = 4, ;
		Column4.ColumnOrder = 6, ;
		Column4.Name = "grcRoom", ;
		Column4.Sparse = .F., ;
		Column4.Width = 80, ;
		Column5.ColumnOrder = 8, ;
		Column5.Name = "grcGroup", ;
		Column5.ReadOnly = .T., ;
		Column5.Width = 110, ;
		Column6.ColumnOrder = 2, ;
		Column6.Name = "grcTitle", ;
		Column6.Width = 80, ;
		Column7.ColumnOrder = 5, ;
		Column7.Name = "grcAddrid", ;
		Column7.Sparse = .F., ;
		Column7.Width = 25, ;
		Column8.ColumnOrder = 7, ;
		Column8.Name = "grcReser", ;
		Column8.Width = 80
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="grid" />

	ADD OBJECT 'grdConfGuests.grcAddrid.Header1' AS header WITH ;
		Alignment = 2, ;
		Caption = "", ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'grdConfGuests.grcAddrid.Tcommandbutton1' AS tcommandbutton WITH ;
		Caption = "...", ;
		Left = 15, ;
		Name = "Tcommandbutton1", ;
		Top = 23
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'grdConfGuests.grcFname.Header1' AS header WITH ;
		Alignment = 2, ;
		Caption = "grcFname", ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'grdConfGuests.grcFname.Tbgrid1' AS tbgrid WITH ;
		BackColor = 255,255,255, ;
		ForeColor = 0,0,0, ;
		Left = 43, ;
		Name = "Tbgrid1", ;
		ReadOnly = .F., ;
		Top = 23
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />

	ADD OBJECT 'grdConfGuests.grcGroup.Header1' AS header WITH ;
		Alignment = 2, ;
		Caption = "grcGroup", ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'grdConfGuests.grcGroup.Tbgrid1' AS tbgrid WITH ;
		BackColor = 255,255,255, ;
		ForeColor = 0,0,0, ;
		Left = 19, ;
		Name = "Tbgrid1", ;
		Top = 23
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />

	ADD OBJECT 'grdConfGuests.grcGuestNo.Header1' AS header WITH ;
		Alignment = 2, ;
		Caption = "grcGuestNo", ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'grdConfGuests.grcGuestNo.Tbgrid1' AS tbgrid WITH ;
		BackColor = 255,255,255, ;
		ForeColor = 0,0,0, ;
		Left = 23, ;
		Name = "Tbgrid1", ;
		ReadOnly = .T., ;
		Top = 23
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />

	ADD OBJECT 'grdConfGuests.grcLname.Header1' AS header WITH ;
		Alignment = 2, ;
		Caption = "grcLname", ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'grdConfGuests.grcLname.Tbgrid1' AS tbgrid WITH ;
		BackColor = 255,255,255, ;
		ForeColor = 0,0,0, ;
		Left = 33, ;
		Name = "Tbgrid1", ;
		ReadOnly = .F., ;
		Top = 35
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />

	ADD OBJECT 'grdConfGuests.grcReser.Header1' AS header WITH ;
		Alignment = 2, ;
		Caption = "grcReser", ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'grdConfGuests.grcReser.Tbgrid1' AS tbgrid WITH ;
		Left = 14, ;
		Name = "Tbgrid1", ;
		Top = 23
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />

	ADD OBJECT 'grdConfGuests.grcRoom.cboRoom' AS tcombobox WITH ;
		BorderStyle = 0, ;
		BoundColumn = 6, ;
		BoundTo = .T., ;
		ColumnCount = 6, ;
		ColumnLines = .F., ;
		ColumnWidths = "50,150,100,50,60,0", ;
		Format = "K", ;
		InputMask = (REPLICATE("!",10)), ;
		Left = 22, ;
		Name = "cboRoom", ;
		RowSourceType = 3, ;
		Top = 23
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="combobox" />

	ADD OBJECT 'grdConfGuests.grcRoom.Header1' AS header WITH ;
		Alignment = 2, ;
		Caption = "grcRoom", ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'grdConfGuests.grcTitle.Header1' AS header WITH ;
		Alignment = 2, ;
		Caption = "grcTitle", ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'grdConfGuests.grcTitle.Tbgrid1' AS tbgrid WITH ;
		Left = 21, ;
		Name = "Tbgrid1", ;
		Top = 23
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />

	ADD OBJECT 'lblMaxPersons' AS tlabel WITH ;
		AutoSize = .T., ;
		Caption = "lblMaxPersons", ;
		Height = 17, ;
		Left = 480, ;
		Name = "lblMaxPersons", ;
		Top = 15, ;
		Width = 83, ;
		ZOrderSet = 1
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'lblOccPersons' AS tlabel WITH ;
		AutoSize = .T., ;
		Caption = "lblOccPersons", ;
		Height = 17, ;
		Left = 480, ;
		Name = "lblOccPersons", ;
		Top = 39, ;
		Width = 83, ;
		ZOrderSet = 3
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'txtMaxPersons' AS ttext WITH ;
		DisabledForeColor = 0,0,255, ;
		Enabled = .F., ;
		FontBold = .T., ;
		Height = 23, ;
		Left = 576, ;
		Name = "txtMaxPersons", ;
		Top = 12, ;
		Width = 48, ;
		ZOrderSet = 2
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtOccPersons' AS ttext WITH ;
		DisabledForeColor = 0,0,255, ;
		Enabled = .F., ;
		FontBold = .T., ;
		Height = 23, ;
		Left = 576, ;
		Name = "txtOccPersons", ;
		Top = 36, ;
		Width = 48, ;
		ZOrderSet = 4
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />
	
	PROCEDURE Init
		LPARAMETERS lp_oCallingObj, lp_oReserData
		LOCAL lnConfGroupId
		
		this.oCallingObj = lp_oCallingObj
		this.oReserData = lp_oReserData
		lnConfGroupId = DLookUp("rescfgue", "rj_crsid = " + SqlCnv(this.oReserData.rs_rsid,.T.), "rj_cgid")
		IF EMPTY(lnConfGroupId)
			Alert(GetLangText("VIEW","TA_NODATA"))
			RETURN .F.
		ENDIF
		
		this.ocaResCfGue = CREATEOBJECT("caResCfGue")
		this.ocaResCfGue.Alias = "curResCfGue"
		this.ocaResCfGue.cFilterClause = "rj_cgid = " + SqlCnv(lnConfGroupId, .T.)
		this.ocaResCfGue.cOrderBy = "rj_crsid, rj_priorit"
		this.ocaResCfGue.CursorFill()
		
		DODEFAULT()
		
		this.SetCaption()
		this.SetControlSource()
	ENDPROC

	PROCEDURE KeyPress
		LPARAMETERS nKeyCode, nShiftAltCtrl
		
		DO CASE
			CASE nKeyCode = 27
				* Close
				this.OnClose()
				NODEFAULT
		ENDCASE
	ENDPROC

	PROCEDURE Load
		DODEFAULT()
		
		OpenFile(,"reservat")
		OpenFile(,"address")
		OpenFile(,"lists")
		OpenFile(,"rescfgue",,,5)
	ENDPROC

	PROCEDURE movedown
		RETURN .T.
	ENDPROC

	PROCEDURE moveup
		RETURN .T.
	ENDPROC

	PROCEDURE onclose
		this.Release()
	ENDPROC

	PROCEDURE onprint
		LOCAL lcReport, loSession, lnRetVal, llAutoYield, loXFF, loExtensionHandler, loPreview
		PRIVATE Title, Prompt1, Prompt2, Prompt3, Prompt4, Min1, Min2, Min3, Min4, Max1, Max2, Max3, Max4
		STORE "" TO Title, Prompt1, Prompt2, Prompt3, Prompt4, Min1, Min2, Min3, Min4, Max1, Max2, Max3, Max4
		
		Title = GetLangText("CONFPLAN","TXT_GUEST_LIST") + " - (_rj00100)"
		Prompt1 = GetLangText("MGRRESER", "TXT_RMNAME")
		Min1 = get_rm_rmname(this.oReserData.rs_roomnum)
		Prompt2 = GetLangText("CONFPLAN", "T_DATE")
		Min2 = this.oReserData.rs_arrdate
		Prompt4 = GetLangText("MGRFINAN", "TXT_TIME_PERIOD")
		Min4 = this.oReserData.rs_arrtime + " - " + this.oReserData.rs_deptime
		
		g_Rptlng = g_Language
		g_Rptlngnr = g_Langnum
		OpenFileDirect(, "_rj00100", "RepText", gcReportdir)
		lcReport = ADDBS(gcReportdir)+"_rj00100.frx"
		
		SELECT * FROM curResCfGue WITH (Buffering = .T.) WHERE NOT rj_deleted INTO CURSOR Query
		
		IF g_lUseNewRepPreview
		      loSession = EVALUATE([xfrx("XFRX#LISTENER")])
		      lnRetVal = loSession.SetParams("",,,,,,"XFF") && no name = just in memory
		      IF lnRetVal = 0
		           llAutoYield = _vfp.AutoYield
		           _vfp.AutoYield = .T.
		           REPORT FORM (lcReport) OBJECT loSession
		           loXFF = loSession.oxfDocument 
		           _vfp.AutoYield = llAutoYield
		           loExtensionHandler = CREATEOBJECT("MyExtensionHandler")
		           loExtensionHandler.lNoListsTable = .T.
		           loPreview = CREATEOBJECT("frmMpPreviewerDesk")
		           loPreview.SetExtensionHandler(loExtensionHandler)
		           loPreview.PreviewXFF(loXFF)
		           loPreview.Show(1)
		           loExtensionHandler = .NULL.
		      ENDIF
		ELSE
		      REPORT FORM (lcReport) PREVIEW
		ENDIF
		
		DClose("Query")
		DClose("RepText")
	ENDPROC

	PROCEDURE onsave
		SELECT curResCfGue
		SCAN FOR NOT EMPTY(rj_addrid) AND DLookUp("address", "ad_addrid = " + SqlCnv(curResCfGue.rj_addrid,.T.), "ad_lname <> " + SqlCnv(rj_lname,.T.) + " OR ad_fname <> " + SqlCnv(rj_fname,.T.))
			BLANK FIELDS rj_addrid
		ENDSCAN
		this.ocaResCfGue.DoTableUpdate(.T.)
		this.OnClose()
	ENDPROC

	PROCEDURE QueryUnload
		this.OnClose()
		NODEFAULT
	ENDPROC

	PROCEDURE setaddress
		LPARAMETERS lp_nAddrid, lp_cLname, lp_cFname, lp_cTitle
		
		IF EMPTY(lp_cLname)
			lp_cLname = ""
		ENDIF
		IF EMPTY(lp_cFname)
			lp_cFname = ""
		ENDIF
		IF EMPTY(lp_cTitle)
			lp_cTitle = ""
		ENDIF
		IF EMPTY(lp_cLname) AND NOT EMPTY(lp_nAddrid) AND DLocate("address", "ad_addrid = " + SqlCnv(lp_nAddrid,.T.))
			lp_cLname = address.ad_lname
			lp_cFname = address.ad_fname
			lp_cTitle = address.ad_title
		ENDIF
		
		REPLACE rj_addrid WITH lp_nAddrid, ;
				rj_title WITH lp_cTitle, ;
				rj_lname WITH lp_cLname, ;
				rj_fname WITH lp_cFname IN curResCfGue
		
		this.Refresh()
	ENDPROC

	PROCEDURE setcaption
		this.Caption = GetLangText("CONFPLAN","TXT_GUEST_LIST")
		this.lblMaxPersons.Caption = GetLangText("CONFPLAN", "TXT_MAX_PERSONS")
		this.lblOccPersons.Caption = GetLangText("CONFPLAN", "TXT_OCC_PERSONS")
		this.grdConfGuests.grcGuestNo.Header1.Caption = GetLangText("CONFPLAN", "TH_GUESTNO")
		this.grdConfGuests.grcTitle.Header1.Caption = GetLangText("CONFPLAN", "TH_TITLE")
		this.grdConfGuests.grcLname.Header1.Caption = GetLangText("CONFPLAN", "TH_LNAME")
		this.grdConfGuests.grcFname.Header1.Caption = GetLangText("CONFPLAN", "TH_FNAME")
		this.grdConfGuests.grcRoom.Header1.Caption = GetLangText("CONFPLAN", "TH_ROOM")
		this.grdConfGuests.grcReser.Header1.Caption = GetLangText("GROUPBIL","TXT_RESERID")
		this.grdConfGuests.grcGroup.Header1.Caption = GetLangText("CONFPLAN", "TH_GROUP")
		this.cmdOK.Caption = GetLangText("COMMON", "TXT_OK")
		this.cmdCancel.Caption = GetLangText("COMMON", "TXT_CANCEL")
		this.cmdReservat.Caption = GetLangText("COMMON", "TXT_RESERVAT")
		this.cmdPrint.Caption = GetLangText("COMMON", "TXT_PRINT")
	ENDPROC

	PROCEDURE setcontrolsource
		this.edtDetails.Value = Str2Msg(GetLangText("CONFPLAN", "TXT_TIME"), "%s", get_rm_rmname(this.oReserData.rs_roomnum), ;
			TRANSFORM(this.oReserData.rs_arrdate), this.oReserData.rs_arrtime, this.oReserData.rs_deptime)
		this.txtMaxPersons.Value = DLookUp("room", "rm_roomnum = " + SqlCnv(this.oReserData.rs_roomnum,.T.), "rm_maxpers")
		CALCULATE COUNT() FOR NOT rj_deleted TO this.txtOccPersons.Value IN curResCfGue
		GO TOP IN curResCfGue
		this.grdConfGuests.RecordSource = [curResCfGue]
		this.grdConfGuests.grcGuestNo.ControlSource = [RECNO('curResCfGue')]
		this.grdConfGuests.grcTitle.ControlSource = [curResCfGue.rj_title]
		this.grdConfGuests.grcFname.ControlSource = [curResCfGue.rj_fname]
		this.grdConfGuests.grcLname.ControlSource = [curResCfGue.rj_lname]
		this.grdConfGuests.grcRoom.cboRoom.RowSource = [SELECT rm_rmname, PROPER(rs_lname) AS rs_lname, rs_fname, rs_title, rs_group, rs_rsid, rs_addrid FROM reservat] + ;
			[ LEFT JOIN room ON rs_roomnum = rm_roomnum LEFT JOIN roomtype ON rm_roomtyp = rt_roomtyp] + ;
			[ WHERE DTOS(rs_arrdate)+rs_lname >= ] + SqlCnv(DTOS(this.oReserData.rs_arrdate),.T.) + ;
			[ AND DTOS(rs_arrdate)+rs_lname < ] + SqlCnv(DTOS(this.oReserData.rs_arrdate+1),.T.) + ;
			[ AND NOT INLIST(rs_status,'NS','CXL','OUT') AND rt_group = 1 ORDER BY 1 INTO CURSOR curRoom]
		this.grdConfGuests.grcRoom.ControlSource = [curResCfGue.rj_rsid]
		this.grdConfGuests.grcReser.ControlSource = [DLookUp('reservat', 'rs_rsid = ' + SqlCnv(curResCfGue.rj_crsid,.T.), 'rs_reserid')]
		this.grdConfGuests.grcGroup.ControlSource = [DLookUp('reservat', 'rs_rsid = ' + SqlCnv(curResCfGue.rj_crsid,.T.), 'rs_group')]
		this.grdConfGuests.SetAll("DynamicForeColor", "IIF(curResCfGue.rj_deleted, RGB(255,0,0), RGB(0,0,0))", "Column")
	ENDPROC

	PROCEDURE cmdCancel.Click
		thisform.OnClose()
	ENDPROC

	PROCEDURE cmdOK.Click
		thisform.OnSave()
	ENDPROC

	PROCEDURE cmdPrint.Click
		thisform.OnPrint()
	ENDPROC

	PROCEDURE cmdReservat.Click
		LOCAL ARRAY l_aParam(16)
		
		l_aParam(1) = DLookUp("reservat", "rs_rsid = " + SqlCnv(curResCfGue.rj_crsid,.T.), "rs_reserid")
		l_aParam(2) = "EDIT"
		l_aParam(16) = thisform
		Doform("reservat","forms\reservat","",.T.,@l_aParam)
	ENDPROC

	PROCEDURE grdConfGuests.grcAddrid.Tcommandbutton1.Click
		LOCAL l_nArea, l_cOrder, l_cNear, l_lFound, l_lNew, l_cSearch, l_nMember, l_cLastName, l_cFirstName, l_cCity
		LOCAL ARRAY l_aParam(12)
		
		l_nArea = SELECT()
		
		l_aParam(1) = "BRWL"
		l_aParam(3) = 2									&& Tag2  UPPER(ad_lname)+UPPER(ad_fname)+UPPER(ad_city)
		IF EMPTY(curResCfGue.rj_lname)
			l_lNear = SET("Near")
			= SEEK("A",'address','tag2')
			SET NEAR &l_lNear
			l_aParam(2) = ALLTRIM(address.ad_lname)
		ELSE
			l_cSearch = UPPER(ALLTRIM(curResCfGue.rj_lname))
			IF NOT EMPTY(curResCfGue.rj_addrid) AND SEEK(curResCfGue.rj_addrid,'address','tag1') AND l_cSearch == UPPER(ALLTRIM(address.ad_lname))
				l_aParam(2) = ALLTRIM(address.ad_lname)
			ELSE
				l_nMember = INT(VAL(l_cSearch))
				IF l_nMember > 0
					l_aParam(2) = l_nMember
					l_aParam(3) = 6						&& Tag6  ad_member
					l_lFound = SEEK(l_nMember,'address','tag6')
				ELSE
					l_cSearch = UPPER(STRTRAN(l_cSearch, "@", "", 2, OCCURS(l_cSearch,"@")-1))
					l_cCity = ALLTRIM(STREXTRACT(l_cSearch, "@", "%", 1, 2))
					l_cLastName = ALLTRIM(STREXTRACT(STRTRAN(l_cSearch,"@"+l_cCity), "", "%", 1, 2))
					l_cFirstName = ALLTRIM(curResCfGue.rj_fname)
					DO CASE		
						CASE NOT EMPTY(l_cLastName) AND EMPTY(l_cFirstName) AND NOT EMPTY(l_cCity)
							l_aParam(2) = l_cLastName
							l_aParam(3) = 20			&& Tag20 UPPER(ad_lname)+UPPER(ad_city)
						CASE EMPTY(l_cLastName) AND NOT EMPTY(l_cFirstName)
							l_aParam(2) = l_cFirstName
							l_aParam(3) = 21			&& Tag21 UPPER(ad_fname)
						CASE EMPTY(l_cLastName) AND NOT EMPTY(l_cCity)
							l_aParam(2) = l_cCity
							l_aParam(3) = 7				&& Tag7  UPPER(ad_city)+UPPER(ad_lname)+UPPER(ad_fname)
						OTHERWISE
							IF EMPTY(l_cLastName)
								l_cLastName = "A"		&& if empty start with 'A'
							ENDIF
							l_aParam(2) = l_cLastName
					ENDCASE
					SELECT address
					l_cOrder = ORDER()
					SET ORDER TO l_aParam(3)
					LOCATE FOR UPPER(ad_lname)+UPPER(ad_fname)+UPPER(ad_city) = l_cLastName AND ;
						UPPER(ad_fname) = l_cFirstName AND UPPER(ad_city)+UPPER(ad_lname)+UPPER(ad_fname) = l_cCity
					l_lFound = FOUND()
					SET ORDER TO l_cOrder
				ENDIF
				IF NOT l_lFound
					IF YesNo(GetLangText('RESERVAT','TA_NAMENOTFOUND'))
						l_aParam(1) = "EDITL"
						l_aParam(2) = PROPER(l_cLastName)
						l_aParam(3) = 1					&& Tag1  ad_addrid
						l_lNew = .T.
					ELSE
						l_cNear = SET("Near")
						SET NEAR ON
						= SEEK(l_cLastName,'address','tag2')
						SET NEAR &l_cNear
					ENDIF
				ENDIF
			ENDIF
		ENDIF	
		l_aParam(4) = 'xx'
		l_aParam(5) = IIF(l_lNew, 1, RECNO('address'))
		l_aParam(6) = 1
		l_aParam(7) = 26
		l_aParam(9) = thisform
		l_aParam(12) = .T.
		DoForm("addressmask","forms\addressmask",,,@l_aParam)
		
		SELECT(l_nArea)
	ENDPROC

	PROCEDURE grdConfGuests.grcRoom.cboRoom.InteractiveChange
		DO CASE
			CASE NOT EMPTY(curResCfGue.rj_lname)
			CASE EMPTY(curRoom.rs_addrid)
				thisform.SetAddress(curRoom.rs_addrid, curRoom.rs_lname, curRoom.rs_fname, curRoom.rs_title)
			OTHERWISE
				thisform.SetAddress(curRoom.rs_addrid)
		ENDCASE
	ENDPROC

ENDDEFINE
