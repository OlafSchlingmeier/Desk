*--------------------------------------------------------------------------------------------------------------------------------------------------------
* (ES) AUTOGENERADO - ¡¡ATENCIÓN!! - ¡¡NO PENSADO PARA EJECUTAR!! USAR SOLAMENTE PARA INTEGRAR CAMBIOS Y ALMACENAR CON HERRAMIENTAS SCM!!
* (EN) AUTOGENERATED - ATTENTION!! - NOT INTENDED FOR EXECUTION!! USE ONLY FOR MERGING CHANGES AND STORING WITH SCM TOOLS!!
*--------------------------------------------------------------------------------------------------------------------------------------------------------
*< FOXBIN2PRG: Version="1.19" SourceFile="roompicturesviewerform.scx" /> (Solo para binarios VFP 9 / Only for VFP 9 binaries)
*
*
#INCLUDE "..\include\constdefines.h"

DEFINE CLASS dataenvironment AS dataenvironment 
 	*< CLASSDATA: Baseclass="dataenvironment" Timestamp="" Scale="" Uniqueid="" ClassIcon="2" />

	DataSource = .NULL.
	Height = 524
	Left = 9
	Name = "Dataenvironment"
	Top = 10
	Width = 781

ENDDEFINE

DEFINE CLASS frmroompicturesviewer AS tform OF "..\libs\main.vcx" 
 	*< CLASSDATA: Baseclass="form" Timestamp="" Scale="" Uniqueid="" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="Sh2" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Sh1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblPictureName" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="imgPicture" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grdAllPictures" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grdAllPictures.Column1.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grdAllPictures.Column1.Tbgrid1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grdAllPictures.Column2.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grdAllPictures.Column2.Tbgrid1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grdAllPictures.Column3.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grdAllPictures.Column3.Tbgrid1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grdAllPictures.Column4.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grdAllPictures.Column4.Tbgrid1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grdSelectedPictures" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grdSelectedPictures.Column1.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grdSelectedPictures.Column1.Tbgrid1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grdSelectedPictures.Column2.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grdSelectedPictures.Column2.Tbgrid1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grdSelectedPictures.Column3.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grdSelectedPictures.Column3.Tbgrid1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grdSelectedPictures.Column4.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grdSelectedPictures.Column4.Tbgrid1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdRemoveFromSelection" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdAddToSelection" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtfilter" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblFilter" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="edtRoomInfo" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblAllPictures" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblRoomNumber" UniqueID="" Timestamp="" />

	*<DefinedPropArrayMethod>
		*m: checkifoverbooked
		*m: getroomdescription
		*m: markpictureschangedforwebserver
		*m: m_addrecordtoselection
		*m: m_refreshpicture
		*m: m_removerecordfromselection
		*m: rearrangecontrollsformodethree
		*p: cbuilding
		*p: cfilter		&& Used in txtfilter
		*p: cfilterold		&& Used in txtfilter
		*p: crecordid
		*p: lchanged
	*</DefinedPropArrayMethod>

	Caption = "roompicturesviewerform"
	cbuilding = 
	cfilter = 		&& Used in txtfilter
	cfilterold = 		&& Used in txtfilter
	ControlBox = .T.
	ctbrclass = ctbrRoompictures
	DataSession = 2
	DoCreate = .T.
	doini = .T.
	doiniopencommontables = .T.
	Height = 539
	Icon = ..\bitmap\icons\misc42.ico
	KeyPreview = .T.
	Name = "frmRoomPicturesViewer"
	saveformsize = .T.
	ShowTips = .T.
	Width = 631

	ADD OBJECT 'cmdAddToSelection' AS tcommandbutton WITH ;
		AutoSize = .F., ;
		Caption = "", ;
		Left = 302, ;
		Name = "cmdAddToSelection", ;
		Picture = ..\bitmap\toolbar\prev.png, ;
		TabIndex = 3, ;
		Top = 85, ;
		Width = 27, ;
		ZOrderSet = 8
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'cmdRemoveFromSelection' AS tcommandbutton WITH ;
		AutoSize = .F., ;
		Caption = "", ;
		Left = 302, ;
		Name = "cmdRemoveFromSelection", ;
		Picture = ..\bitmap\toolbar\next.png, ;
		TabIndex = 2, ;
		Top = 49, ;
		Width = 27, ;
		ZOrderSet = 7
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'edtRoomInfo' AS teditbox WITH ;
		Left = -200, ;
		Name = "edtRoomInfo", ;
		ReadOnly = .T., ;
		resizefontsize = .F., ;
		Top = 144, ;
		Visible = .F.
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="editbox" />

	ADD OBJECT 'grdAllPictures' AS grdbase WITH ;
		ColumnCount = 4, ;
		DeleteMark = .F., ;
		GridLineColor = 128,128,128, ;
		GridLines = 2, ;
		Height = 124, ;
		Left = 338, ;
		Name = "grdAllPictures", ;
		RecordMark = .F., ;
		ScrollBars = 2, ;
		TabIndex = 5, ;
		Top = 44, ;
		Width = 286, ;
		ZOrderSet = 5, ;
		Column1.Name = "Column1", ;
		Column1.ReadOnly = .T., ;
		Column2.Name = "Column2", ;
		Column2.ReadOnly = .T., ;
		Column2.Width = 125, ;
		Column3.Name = "Column3", ;
		Column3.Width = 33, ;
		Column4.Name = "Column4", ;
		Column4.Width = 30
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="grid" />

	ADD OBJECT 'grdAllPictures.Column1.Header1' AS header WITH ;
		Caption = "Header1", ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'grdAllPictures.Column1.Tbgrid1' AS tbgrid WITH ;
		Left = 42, ;
		Name = "Tbgrid1", ;
		Top = 36
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />

	ADD OBJECT 'grdAllPictures.Column2.Header1' AS header WITH ;
		Caption = "Header1", ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'grdAllPictures.Column2.Tbgrid1' AS tbgrid WITH ;
		Alignment = 3, ;
		Left = 77, ;
		Name = "Tbgrid1", ;
		ReadOnly = .T., ;
		Top = 58
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />

	ADD OBJECT 'grdAllPictures.Column3.Header1' AS header WITH ;
		Caption = "Header1", ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'grdAllPictures.Column3.Tbgrid1' AS tbgrid WITH ;
		Left = 17, ;
		Name = "Tbgrid1", ;
		Top = 22
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />

	ADD OBJECT 'grdAllPictures.Column4.Header1' AS header WITH ;
		Caption = "Header1", ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'grdAllPictures.Column4.Tbgrid1' AS tbgrid WITH ;
		Left = 13, ;
		Name = "Tbgrid1", ;
		Top = 34
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />

	ADD OBJECT 'grdSelectedPictures' AS grdbase WITH ;
		ColumnCount = 4, ;
		DeleteMark = .F., ;
		GridLineColor = 128,128,128, ;
		GridLines = 2, ;
		Height = 124, ;
		Left = 7, ;
		Name = "grdSelectedPictures", ;
		RecordMark = .F., ;
		ScrollBars = 2, ;
		SplitBar = .F., ;
		TabIndex = 1, ;
		Top = 44, ;
		Width = 286, ;
		ZOrderSet = 6, ;
		Column1.Name = "Column1", ;
		Column1.ReadOnly = .T., ;
		Column2.Name = "Column2", ;
		Column2.ReadOnly = .T., ;
		Column2.Width = 125, ;
		Column3.Name = "Column3", ;
		Column3.Width = 33, ;
		Column4.Name = "Column4", ;
		Column4.Width = 30
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="grid" />

	ADD OBJECT 'grdSelectedPictures.Column1.Header1' AS header WITH ;
		Caption = "Header1", ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'grdSelectedPictures.Column1.Tbgrid1' AS tbgrid WITH ;
		Left = 35, ;
		Name = "Tbgrid1", ;
		ReadOnly = .T., ;
		Top = 35
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />

	ADD OBJECT 'grdSelectedPictures.Column2.Header1' AS header WITH ;
		Caption = "Header1", ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'grdSelectedPictures.Column2.Tbgrid1' AS tbgrid WITH ;
		Left = 120, ;
		Name = "Tbgrid1", ;
		ReadOnly = .T., ;
		Top = 34
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />

	ADD OBJECT 'grdSelectedPictures.Column3.Header1' AS header WITH ;
		Caption = "Header1", ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'grdSelectedPictures.Column3.Tbgrid1' AS tbgrid WITH ;
		Left = 24, ;
		Name = "Tbgrid1", ;
		Top = 34
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />

	ADD OBJECT 'grdSelectedPictures.Column4.Header1' AS header WITH ;
		Caption = "Header1", ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'grdSelectedPictures.Column4.Tbgrid1' AS tbgrid WITH ;
		Left = 8, ;
		Name = "Tbgrid1", ;
		Top = 22
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />

	ADD OBJECT 'imgPicture' AS timage WITH ;
		Height = 366, ;
		Left = 0, ;
		Name = "imgPicture", ;
		Stretch = 1, ;
		Top = 173, ;
		Width = 631, ;
		ZOrderSet = 14
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="image" />

	ADD OBJECT 'lblAllPictures' AS tlabel WITH ;
		Caption = "lblAllPictures", ;
		Height = 17, ;
		Left = 338, ;
		Name = "lblAllPictures", ;
		resizefontsize = .F., ;
		TabIndex = 7, ;
		Top = 28, ;
		Width = 286, ;
		ZOrderSet = 12
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'lblFilter' AS tlabel WITH ;
		Caption = "Filter", ;
		Height = 17, ;
		Left = 398, ;
		Name = "lblFilter", ;
		TabIndex = 9, ;
		Top = 7, ;
		Width = 48
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'lblPictureName' AS tlabel WITH ;
		AutoSize = .T., ;
		BackStyle = 1, ;
		Caption = "lblPictureName", ;
		Height = 17, ;
		Left = 7, ;
		Name = "lblPictureName", ;
		resizefontsize = .F., ;
		TabIndex = 8, ;
		Top = 5, ;
		Width = 87, ;
		ZOrderSet = 13
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'lblRoomNumber' AS tlabel WITH ;
		Caption = "lblRoomNumber", ;
		Height = 17, ;
		Left = 7, ;
		Name = "lblRoomNumber", ;
		resizefontsize = .F., ;
		TabIndex = 6, ;
		Top = 28, ;
		Width = 286, ;
		ZOrderSet = 12
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'Sh1' AS sh WITH ;
		BackStyle = 1, ;
		Height = 172, ;
		Left = 331, ;
		Name = "Sh1", ;
		Top = 1, ;
		Width = 300, ;
		ZOrderSet = 2
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="shape" />

	ADD OBJECT 'Sh2' AS sh WITH ;
		BackStyle = 1, ;
		Height = 147, ;
		Left = 1, ;
		Name = "Sh2", ;
		Top = 26, ;
		Width = 300, ;
		ZOrderSet = 1
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="shape" />

	ADD OBJECT 'txtfilter' AS ttext WITH ;
		ControlSource = "", ;
		Height = 23, ;
		InputMask = "!!!!!!!!!!!!!!!!!!!!!!!!", ;
		Left = 447, ;
		Name = "txtfilter", ;
		TabIndex = 4, ;
		Top = 3, ;
		Width = 177
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />
	
	PROCEDURE checkifoverbooked
		LPARAMETERS plValue
		LOCAL l_nAdults, lnReturnValue
		
		l_nAdults = curreservat.rs_adults+curreservat.rs_childs+curreservat.rs_childs2+curreservat.rs_childs3
		IF plValue AND l_nAdults > CurSelectedPictures.pc_persons
			IF NOT yesno(GetLangText("PICVIEWE", "TXT_OVERBOOK_PERSONS"))
				plValue = .F.
			ENDIF
		ENDIF
		
		RETURN plValue
	ENDPROC

	PROCEDURE Destroy
		IF NOT ISNULL(this.oCallingObj)
			this.oCallingObj.Enabled = .T.
			DO CASE
				CASE INLIST(this.nMode, 1, 5)
					this.oCallingObj.MngGrid.CursorRequery()
				CASE this.nMode = 4
					this.oCallingObj.DisplayContent()
				OTHERWISE
			ENDCASE
		ENDIF
		DODEFAULT()
	ENDPROC

	PROCEDURE getroomdescription
		LOCAL l_cRoomNum, l_cResult, l_cCurRoom, l_nSelect, l_oForm, l_cFeatures, l_cSql, l_cCurFeat, l_cBuilding, l_cCurAddress
		
		l_nSelect = SELECT()
		
		l_oForm = this.ocallingobj
		
		l_cRoomNum = this.cRecordId
		
		TEXT TO l_cSql TEXTMERGE NOSHOW PRETEXT 2 + 8
		SELECT rf_feature, CAST(NVL(pl_lang<<g_Langnum>>,'') AS Char(25)) AS pl_lang 
			FROM roomfeat
			INNER JOIN picklist ON pl_label = 'FEATURE   ' AND pl_charcod = rf_feature
			WHERE rf_roomnum = '<<l_cRoomNum>>'
			ORDER BY 1 ASC
		ENDTEXT
		l_cCurFeat = sqlcursor(l_cSql)
		l_cFeatures = ""
		SCAN FOR NOT EMPTY(rf_feature)
			l_cFeatures = l_cFeatures + ALLTRIM(rf_feature) + " - " + ALLTRIM(pl_lang) + CRLF
		ENDSCAN
		IF NOT EMPTY(l_cFeatures)
			l_cFeatures = LEFT(l_cFeatures, LEN(l_cFeatures)-2)
		ENDIF
		
		l_cCurRoom = sqlcursor("SELECT rm_addrid, rm_roomtyp, rm_floor, rm_beds, rm_maxpers, rm_phone, rm_note, rm_lang" + g_langnum + " AS rm_lang, rm_comment FROM room WHERE rm_roomnum = '" + l_cRoomNum + "'")
		
		this.Caption = GetLangText("ADDRESS","TXT_ROOMNUM") + ": " + get_rm_rmname(this.cRecordId) + " - " + ALLTRIM(rm_lang)
		
		l_cBuilding = Get_rt_roomtyp(rm_roomtyp, "bu_lang")
		l_cResult = ""
		IF NOT EMPTY(rm_addrid)
			l_cCurAddress = sqlcursor("SELECT ad_title, ad_lname, ad_fname, ad_street, ad_zip, ad_city, ad_phone, ad_fax, ad_email, ad_country, ad_state FROM address WHERE ad_addrid = " + TRANSFORM(rm_addrid))
			l_cResult = l_cResult + UPPER(GetLangText("KEYCARD1","TXT_OWNER")) + ": " + CRLF
			l_cResult = l_cResult + ALLTRIM(ALLTRIM(ad_title) + " " + ALLTRIM(ad_fname)) + " " + Flip(ALLTRIM(ad_lname)) + CRLF
			l_cResult = l_cResult + ALLTRIM(ad_street) + ", " + ALLTRIM(ad_country) + "-" + ALLTRIM(ad_zip) + " " + ALLTRIM(ad_city) + IIF(NOT EMPTY(ad_state),", " + ALLTRIM(ad_state),"") + CRLF
			l_cResult = l_cResult + "Tel/Fax: " + ALLTRIM(ad_phone) + IIF(EMPTY(ad_fax),""," / "+ALLTRIM(ad_fax)) + ", E-Mail: " + ALLTRIM(ad_email) + CRLF
			dclose(l_cCurAddress)
		ENDIF
		
		IF NOT EMPTY(l_cBuilding)
			l_cResult = l_cResult + UPPER(l_oForm.BuildingText) + ": " + l_cBuilding + CRLF
		ENDIF
		
		SELECT (l_cCurRoom)
		
		TEXT TO l_cResult ADDITIVE TEXTMERGE NOSHOW
		<<UPPER(l_oForm.FloorText)>>: <<rm_floor>>, <<UPPER(l_oForm.BedsText)>>: <<rm_beds>>, <<UPPER(l_oForm.MaxPersText)>>: <<rm_maxpers>>
		<<UPPER(l_oForm.PhoneText)>>: <<rm_phone>>
		ENDTEXT
		
		l_cResult = l_cResult + CRLF
		
		IF NOT EMPTY(rm_comment)
			l_cResult = l_cResult + UPPER(l_oForm.CommentText) + ": " + rm_comment + CRLF
		ENDIF
		
		IF NOT EMPTY(l_cFeatures)
			l_cResult = l_cResult + UPPER(l_oForm.FeaturesText) + ": " + CRLF + l_cFeatures + CRLF
		ENDIF
		
		IF NOT EMPTY(rm_note)
			l_cResult = l_cResult + UPPER(l_oForm.NoteText) + ": " + CRLF + rm_note + CRLF
		ENDIF
		
		this.edtRoomInfo.Value = l_cResult
		
		dclose(l_cCurFeat)
		dclose(l_cCurRoom)
		
		SELECT (l_nSelect)
		
		RETURN .T.
	ENDPROC

	PROCEDURE Init
		LPARAMETERS toCallingObj, tnMode, tcRecordId, tnReserId, tnMaxPers
		* Modes:
		* 1 - Link Pictures to Room Numbers, and Insert, Edit or Delete Pictures
		* 2 - Insert, Edit or Delete all Pictures
		* 3 - Just view Pictures for selected room number
		* 4 - Called for one Reservation
		* 5 - Link Pictures to Room Types, and Insert, Edit or Delete Pictures
		* 6 - Link Pictures to buildings, and Insert, Edit or Delete Pictures
		
		IF VARTYPE(toCallingObj) = "O"
			this.oCallingObj = toCallingObj
		ENDIF
		this.nMode = tnMode
		this.cRecordId = EVL(tcRecordId,"")
		this.Caption = GetLangText("PICVIEWE","TXT_SELECT_PICTURES")
		
		this.cmdAddToSelection.ToolTipText = GetLangText("PICVIEWE","TT_ADD_TO_SELECTION")
		this.cmdRemoveFromSelection.ToolTipText = GetLangText("PICVIEWE","TT_REMOVE_FROM_SELECTION")
		this.lblPictureName.Caption = ""
		this.lblAllPictures.Caption = GetLangText("PICVIEWE","TXT_ALL_UNSELECTED")
		
		this.grdAllPictures.column1.header1.Caption = STRTRAN(GetLangText("CONFWEEK","TXT_PICTURE"),"\<","")
		this.grdAllPictures.column2.header1.Caption = GetLangText("MYLISTS","TXT_DESCRIP")
		this.grdAllPictures.column3.header1.Caption = GetLangText("PICVIEWE","TXT_MAX_PERSONS")
		this.grdAllPictures.column4.header1.Caption = STRTRAN(GetLangText("MENU","MGR_BESTUHLUNG"), "\<","")
		this.grdSelectedPictures.column1.header1.Caption = STRTRAN(GetLangText("CONFWEEK","TXT_PICTURE"),"\<","")
		this.grdSelectedPictures.column2.header1.Caption = GetLangText("MYLISTS","TXT_DESCRIP")
		this.grdSelectedPictures.column3.header1.Caption = GetLangText("PICVIEWE","TXT_MAX_PERSONS")
		this.grdSelectedPictures.column4.header1.Caption = STRTRAN(GetLangText("MENU","MGR_BESTUHLUNG"), "\<","")
		
		this.grdAllPictures.SetAll("movable",.F.,"column")
		this.grdSelectedPictures.SetAll("movable",.F.,"column")
		
		DO CASE
			CASE this.nMode = 1
				this.lblRoomNumber.Caption = GetLangText("PICVIEWE","TXT_SELECTED_FOR_ROOM") + " " + get_rm_rmname(this.cRecordId)
				this.ocapictures.cFilterClause = "1=1"
				this.ocapictures.CursorFill()
				this.ocaroompict.cFilterClause = "ro_roomnum = " + sqlcnv(this.cRecordId,.T.)
				this.ocaroompict.CursorFill()
		
				SELECT pc_id, pc_picture, pc_lang1, pc_lang2, pc_lang3, pc_lang4, pc_lang5, pc_lang6, ;
						pc_lang7, pc_lang8, pc_lang9, pc_persons, pc_bestuhl, pc_hash, pc_flength;
						FROM curroompict, curpictures ;
						WHERE ro_roomnum = this.cRecordId AND pc_id = ro_picid ;
					   	INTO CURSOR CurSelectedPictures READWRITE
				INDEX ON pc_picture TAG TAG1
				SELECT pc_id, pc_picture, pc_lang1, pc_lang2, pc_lang3, pc_lang4, pc_lang5, pc_lang6, ;
						pc_lang7, pc_lang8, pc_lang9, pc_persons, pc_bestuhl, pc_hash, pc_flength ;
						FROM curpictures ;
						WHERE NOT pc_id IN(SELECT pc_id FROM CurSelectedPictures) ;
						INTO CURSOR curAllPictures READWRITE
				INDEX ON pc_picture TAG TAG1
				this.grdSelectedPictures.RecordSource = [CurSelectedPictures]
				this.grdSelectedPictures.column1.ControlSource = [CurSelectedPictures.pc_picture]
				this.grdSelectedPictures.column2.ControlSource = [CurSelectedPictures.pc_lang]+g_langnum
				this.grdSelectedPictures.column3.ControlSource = [CurSelectedPictures.pc_persons]
				this.grdSelectedPictures.column4.ControlSource = [CurSelectedPictures.pc_bestuhl]
				this.grdAllPictures.RecordSource = [curAllPictures]
				this.grdAllPictures.column1.ControlSource = [curAllPictures.pc_picture]
				this.grdAllPictures.column2.ControlSource = [curAllPictures.pc_lang]+g_langnum
				this.grdAllPictures.column3.ControlSource = [curAllPictures.pc_persons]
				this.grdAllPictures.column4.ControlSource = [curAllPictures.pc_bestuhl]
			CASE this.nMode = 2
				this.grdSelectedPictures.RecordSource = ""
				this.grdSelectedPictures.Visible = .F.
				this.sh2.Visible = .F.
				this.cmdAddToSelection.Visible = .F.
				this.cmdRemoveFromSelection.Visible = .F.
				this.lblRoomNumber.Caption = GetLangText("PICVIEWE","TXT_INSERT_EDIT_OR_DELETE_PICT")
				THIS.LBLRoomNumber.FontBold = .T.
		
				this.ocapictures.cFilterClause = "1=1"
				this.ocapictures.CursorFill()
		
				SELECT pc_id, pc_picture, pc_lang1, pc_lang2, pc_lang3, pc_lang4, pc_lang5, pc_lang6, ;
						pc_lang7, pc_lang8, pc_lang9, pc_persons, pc_bestuhl, pc_hash, pc_flength ;
						FROM curpictures ;
						WHERE .T. ;
						INTO CURSOR curAllPictures READWRITE
				INDEX ON pc_picture TAG TAG1
				this.grdAllPictures.RecordSource = [curAllPictures]
				this.grdAllPictures.column1.ControlSource = [curAllPictures.pc_picture]
				this.grdAllPictures.column2.ControlSource = [curAllPictures.pc_lang]+g_langnum
				this.grdAllPictures.column3.ControlSource = [curAllPictures.pc_persons]
				this.grdAllPictures.column4.ControlSource = [curAllPictures.pc_bestuhl]
				this.sh1.Left = this.sh2.Left
				this.sh1.l = this.sh1.Left
				this.sh1.Width = this.Width - 3
				this.sh1.w = this.sh1.Width
				this.grdAllPictures.Left = this.grdSelectedPictures.Left
				this.grdAllPictures.l = this.grdAllPictures.Left
				this.grdAllPictures.Width = this.sh1.Width - 5
				this.grdAllPictures.w = this.grdAllPictures.Width
				this.grdAllPictures.column1.Width = 170
				this.grdAllPictures.column2.Width = 390
				this.grdAllPictures.Init()
				this.lblAllPictures.Visible = .F.
			CASE this.nMode = 3
				this.ocapictures.cInnerClause = "roompict ON pc_id = ro_picid"
				this.ocapictures.cFilterClause = "ro_roomnum = " + sqlcnv(this.cRecordId,.T.)
				this.ocapictures.CursorFill()
				this.ocaroompict.cFilterClause = "ro_roomnum = " + sqlcnv(this.cRecordId,.T.)
				this.ocaroompict.CursorFill()
		
				SELECT pc_id, pc_picture, pc_lang1, pc_lang2, pc_lang3, pc_lang4, pc_lang5, pc_lang6, ;
						pc_lang7, pc_lang8, pc_lang9, pc_persons, pc_bestuhl, pc_hash, pc_flength ;
						FROM curroompict, curpictures ;
						WHERE ro_roomnum = this.cRecordId AND pc_id = ro_picid ;
					   	INTO CURSOR CurSelectedPictures READWRITE
				INDEX ON pc_picture TAG TAG1
				IF NOT EMPTY(tnMaxPers)
					DELETE FOR pc_persons < tnMaxPers IN CurSelectedPictures
					GOTO TOP IN CurSelectedPictures
				ENDIF
				this.grdSelectedPictures.RecordSource = [CurSelectedPictures]
				this.grdSelectedPictures.column1.ControlSource = [CurSelectedPictures.pc_picture]
				this.grdSelectedPictures.column2.ControlSource = [CurSelectedPictures.pc_lang]+g_langnum
				this.grdSelectedPictures.column3.ControlSource = [CurSelectedPictures.pc_persons]
				this.grdSelectedPictures.column4.ControlSource = [CurSelectedPictures.pc_bestuhl]
				this.grdAllPictures.RecordSource = []
				this.grdAllPictures.Visible = .F.
				this.cmdAddToSelection.Visible = .F.
				this.cmdRemoveFromSelection.Visible = .F.
				this.sh1.Visible = .F.
				this.lblAllPictures.Visible = .F.
				this.lblPictureName.Visible = .F.
				this.lblRoomNumber.Visible = .F.
				this.RearrangeControllsForModeThree()
				this.GetRoomDescription()
			CASE this.nMode = 4
				this.ocareservat.cFilterClause = "rs_reserid = " + sqlcnv(tnReserId,.T.)
				this.ocareservat.CursorFill()
		
				this.ocaaddress.cFilterClause = "ad_addrid = " + sqlcnv(curreservat.rs_addrid,.T.)
				this.ocaaddress.CursorFill()
		
				this.ocaaddresscompany.cFilterClause = "ad_addrid = " + sqlcnv(curreservat.rs_compid,.T.)
				this.ocaaddresscompany.CursorFill()
		
				this.ocaapartner.cFilterClause = "ap_apid = " + sqlcnv(curreservat.rs_apid,.T.)
				this.ocaapartner.CursorFill()
		
				this.ocaapartner.cFilterClause = "ap_apid = " + sqlcnv(curreservat.rs_apid,.T.)
				this.ocaapartner.CursorFill()
		
				= SEEK(tnReserId, "curreservat", "tag1")
				this.lblRoomNumber.FontBold = .T.
				IF NOT EMPTY(curreservat.rs_compid)
					this.lblRoomNumber.Caption = CompanyName("curcompany") + " - " + GetLangText("ADDRESS","TXT_ROOMNUM") + ": " + get_rm_rmname(this.cRecordId)
				ELSE
					this.lblRoomNumber.Caption = GetReservatName("curreservat","curaddress","curapartner") + " - " + GetLangText("ADDRESS","TXT_ROOMNUM") + ": " + get_rm_rmname(this.cRecordId)
				ENDIF
				this.ocapictures.cFilterClause = "1=1"
				this.ocapictures.CursorFill()
				this.ocaroompict.cFilterClause = "ro_roomnum = " + sqlcnv(this.cRecordId,.T.)
				this.ocaroompict.CursorFill()
		
				SELECT pc_id, pc_picture, pc_lang1, pc_lang2, pc_lang3, pc_lang4, pc_lang5, pc_lang6, ;
						pc_lang7, pc_lang8, pc_lang9, pc_persons, pc_bestuhl, .F. AS pc_selctd ;
						FROM curroompict, curpictures ;
						WHERE ro_roomnum = this.cRecordId AND pc_id = ro_picid ;
					   	INTO CURSOR CurSelectedPictures READWRITE
		
				this.ocarespict.cFilterClause = "rr_reserid = "+ sqlcnv(tnReserId,.T.)
				this.ocarespict.CursorFill()
		
				SELECT CurSelectedPictures
				SCAN
					IF SEEK(STR(curreservat.rs_reserid,12,3)+STR(pc_id,8), "currespict", "tag1")
						REPLACE pc_selctd WITH .T.
					ENDIF
				ENDSCAN
				INDEX ON pc_picture TAG TAG1
				this.grdSelectedPictures.p_basecolumncontrol = "tchkgrid"
				this.grdSelectedPictures.ColumnCount = 5
				this.grdSelectedPictures.column5.Sparse = .f.
				this.grdSelectedPictures.column5.txtGrid.Caption = ""
				this.grdSelectedPictures.column5.Readonly = .F.
				this.grdSelectedPictures.column5.header1.Caption = GetLangText("PICVIEWE","TXT_SELECT")
				this.grdSelectedPictures.RecordSource = [CurSelectedPictures]
				this.grdSelectedPictures.column1.ControlSource = [CurSelectedPictures.pc_picture]
				this.grdSelectedPictures.column2.ControlSource = [CurSelectedPictures.pc_lang]+g_langnum
				this.grdSelectedPictures.column3.ControlSource = [CurSelectedPictures.pc_persons]
				this.grdSelectedPictures.column4.ControlSource = [CurSelectedPictures.pc_bestuhl]
				this.grdSelectedPictures.column5.ControlSource = [CurSelectedPictures.pc_selctd]
				this.grdAllPictures.RecordSource = []
				this.grdAllPictures.Visible = .F.
				this.cmdAddToSelection.Visible = .F.
				this.cmdRemoveFromSelection.Visible = .F.
				this.sh1.Visible = .F.
				this.sh2.Width = this.Width - 3
				this.sh2.w = this.sh2.Width
				this.grdSelectedPictures.Width = this.sh2.Width - 5
				this.grdSelectedPictures.w = this.grdSelectedPictures.Width
				this.grdSelectedPictures.column1.Width = 170
				this.grdSelectedPictures.column2.Width = 300
				this.grdSelectedPictures.column3.Width = 50
				this.grdSelectedPictures.column4.Width = 50
				this.grdSelectedPictures.column5.Width = 35
				this.grdSelectedPictures.Init()
				this.lblAllPictures.Visible = .F.
			CASE this.nMode = 5
				this.lblRoomNumber.Caption = GetLangText("PICVIEWE","TXT_SELECTED_FOR_ROOMTYPE") + " " + get_rt_roomtyp(this.cRecordId)
				this.ocapictures.cFilterClause = "1=1"
				this.ocapictures.CursorFill()
				this.ocaroomtpic.cFilterClause = "ro_roomtyp = " + sqlcnv(this.cRecordId,.T.)
				this.ocaroomtpic.CursorFill()
		
				SELECT pc_id, pc_picture, pc_lang1, pc_lang2, pc_lang3, pc_lang4, pc_lang5, pc_lang6, ;
						pc_lang7, pc_lang8, pc_lang9, pc_persons, pc_bestuhl, pc_hash, pc_flength ;
						FROM curroomtpic, curpictures ;
						WHERE ro_roomtyp = this.cRecordId AND pc_id = ro_picid ;
					   	INTO CURSOR CurSelectedPictures READWRITE
				INDEX ON pc_picture TAG TAG1
				SELECT pc_id, pc_picture, pc_lang1, pc_lang2, pc_lang3, pc_lang4, pc_lang5, pc_lang6, ;
						pc_lang7, pc_lang8, pc_lang9, pc_persons, pc_bestuhl, pc_hash, pc_flength ;
						FROM curpictures ;
						WHERE NOT pc_id IN(SELECT pc_id FROM CurSelectedPictures) ;
						INTO CURSOR curAllPictures READWRITE
				INDEX ON pc_picture TAG TAG1
				this.grdSelectedPictures.RecordSource = [CurSelectedPictures]
				this.grdSelectedPictures.column1.ControlSource = [CurSelectedPictures.pc_picture]
				this.grdSelectedPictures.column2.ControlSource = [CurSelectedPictures.pc_lang]+g_langnum
				this.grdSelectedPictures.column3.ControlSource = [CurSelectedPictures.pc_persons]
				this.grdSelectedPictures.column4.ControlSource = [CurSelectedPictures.pc_bestuhl]
				this.grdAllPictures.RecordSource = [curAllPictures]
				this.grdAllPictures.column1.ControlSource = [curAllPictures.pc_picture]
				this.grdAllPictures.column2.ControlSource = [curAllPictures.pc_lang]+g_langnum
				this.grdAllPictures.column3.ControlSource = [curAllPictures.pc_persons]
				this.grdAllPictures.column4.ControlSource = [curAllPictures.pc_bestuhl]
			CASE this.nMode = 6
				this.cBuilding = DLookUp("Building", "bu_buid = " + SqlCnv(this.cRecordId,.T.), "bu_buildng")
				this.lblRoomNumber.Caption = GetLangText("HOTSTAT","T_BUILDING") + " " + this.cBuilding
				this.ocapictures.cFilterClause = "1=1"
				this.ocapictures.CursorFill()
				this.ocabuildpic.cFilterClause = "bt_buid = " + sqlcnv(this.cRecordId,.T.)
				this.ocabuildpic.CursorFill()
		
				SELECT pc_id, pc_picture, pc_lang1, pc_lang2, pc_lang3, pc_lang4, pc_lang5, pc_lang6, ;
						pc_lang7, pc_lang8, pc_lang9, pc_persons, pc_bestuhl, pc_hash, pc_flength ;
						FROM curbuildpic, curpictures ;
						WHERE bt_buid = this.cRecordId AND pc_id = bt_picid ;
					   	INTO CURSOR CurSelectedPictures READWRITE
				INDEX ON pc_picture TAG TAG1
				SELECT pc_id, pc_picture, pc_lang1, pc_lang2, pc_lang3, pc_lang4, pc_lang5, pc_lang6, ;
						pc_lang7, pc_lang8, pc_lang9, pc_persons, pc_bestuhl, pc_hash, pc_flength ;
						FROM curpictures ;
						WHERE NOT pc_id IN(SELECT pc_id FROM CurSelectedPictures) ;
						INTO CURSOR curAllPictures READWRITE
				INDEX ON pc_picture TAG TAG1
				this.grdSelectedPictures.RecordSource = [CurSelectedPictures]
				this.grdSelectedPictures.column1.ControlSource = [CurSelectedPictures.pc_picture]
				this.grdSelectedPictures.column2.ControlSource = [CurSelectedPictures.pc_lang]+g_langnum
				this.grdSelectedPictures.column3.ControlSource = [CurSelectedPictures.pc_persons]
				this.grdSelectedPictures.column4.ControlSource = [CurSelectedPictures.pc_bestuhl]
				this.grdAllPictures.RecordSource = [curAllPictures]
				this.grdAllPictures.column1.ControlSource = [curAllPictures.pc_picture]
				this.grdAllPictures.column2.ControlSource = [curAllPictures.pc_lang]+g_langnum
				this.grdAllPictures.column3.ControlSource = [curAllPictures.pc_persons]
				this.grdAllPictures.column4.ControlSource = [curAllPictures.pc_bestuhl]
			OTHERWISE
				RETURN .F.
		ENDCASE
		
		DODEFAULT()
		
		RETURN .T.
	ENDPROC

	PROCEDURE KeyPress
		LPARAMETERS nKeyCode, nShiftAltCtrl
		
		DO CASE
			CASE nkeycode = 7 AND nShiftAltCtrl = 2 AND this.cmdAddToSelection.Visible		&&CTRL + G, Add to selection
				NODEFAULT
				this.m_addrecordtoselection()
			CASE nkeycode = 10 AND nShiftAltCtrl = 2 AND this.cmdRemoveFromSelection.Visible&&CTRL + J, Remove from selection
				NODEFAULT
				this.m_removerecordfromselection()
			OTHERWISE
				DODEFAULT(nKeyCode, nShiftAltCtrl)
		ENDCASE
	ENDPROC

	PROCEDURE Load
		DODEFAULT()
		
		this.AddProperty("ocalists",.NULL.)
		this.AddProperty("ocapictures",.NULL.)
		this.AddProperty("ocaroompict",.NULL.)
		this.AddProperty("ocaroomtpic",.NULL.)
		this.AddProperty("ocabuildpic",.NULL.)
		this.AddProperty("ocaaddress",.NULL.)
		this.AddProperty("ocaaddresscompany",.NULL.)
		this.AddProperty("ocaapartner",.NULL.)
		this.AddProperty("ocabqbesthl",.NULL.)
		this.AddProperty("ocareservat",.NULL.)
		this.AddProperty("ocarespict",.NULL.)
		
		this.ocalists = CREATEOBJECT("calists")
		this.ocalists.Alias = "curlists"
		this.ocalists.cFilterClause = "0=1"
		this.ocalists.CursorFill()
		
		this.ocapictures = CREATEOBJECT("capictures")
		this.ocapictures.Alias = "curpictures"
		this.ocapictures.cFilterClause = "0=1"
		this.ocapictures.lcreateindexes = .T.
		this.ocapictures.CursorFill()
		SET ORDER TO TAG1 IN curpictures
		
		this.ocaroompict = CREATEOBJECT("caroompict")
		this.ocaroompict.Alias = "curroompict"
		this.ocaroompict.cFilterClause = "0=1"
		this.ocaroompict.lcreateindexes = .T.
		this.ocaroompict.CursorFill()
		SET ORDER TO TAG1 IN curroompict
		
		this.ocaroomtpic = CREATEOBJECT("caroomtpic")
		this.ocaroomtpic.Alias = "curroomtpic"
		this.ocaroomtpic.cFilterClause = "0=1"
		this.ocaroomtpic.lcreateindexes = .T.
		this.ocaroomtpic.CursorFill()
		SET ORDER TO TAG1 IN curroomtpic
		
		this.ocabuildpic = CREATEOBJECT("cabuildpic")
		this.ocabuildpic.Alias = "curbuildpic"
		this.ocabuildpic.cFilterClause = "0=1"
		this.ocabuildpic.lcreateindexes = .T.
		this.ocabuildpic.CursorFill()
		SET ORDER TO TAG1 IN curbuildpic
		
		this.ocaaddress = CREATEOBJECT("caaddress")
		this.ocaaddress.Alias = "curaddress"
		this.ocaaddress.cFilterClause = "0=1"
		this.ocaaddress.lcreateindexes = .T.
		this.ocaaddress.cIndexList = "TAG1|"
		this.ocaaddress.CursorFill()
		SET ORDER TO TAG1 IN curaddress
		
		this.ocaaddresscompany = CREATEOBJECT("caaddress")
		this.ocaaddresscompany.Alias = "curcompany"
		this.ocaaddresscompany.cFilterClause = "0=1"
		this.ocaaddresscompany.lcreateindexes = .T.
		this.ocaaddresscompany.cIndexList = "TAG1|"
		this.ocaaddresscompany.CursorFill()
		SET ORDER TO TAG1 IN curaddress
		
		this.ocaapartner = CREATEOBJECT("caapartner")
		this.ocaapartner.Alias = "curapartner"
		this.ocaapartner.cFilterClause = "0=1"
		this.ocaapartner.lcreateindexes = .T.
		this.ocaapartner.cIndexList = "TAG3|"
		this.ocaapartner.CursorFill()
		SET ORDER TO TAG3 IN curapartner
		
		this.ocabqbesthl = CREATEOBJECT("cabqbesthl")
		this.ocabqbesthl.Alias = "curbqbesthl"
		this.ocabqbesthl.cFilterClause = "1=1"
		this.ocabqbesthl.CursorFill()
		
		this.ocareservat = CREATEOBJECT("careservat")
		this.ocareservat.Alias = "curreservat"
		this.ocareservat.cFilterClause = "0=1"
		this.ocareservat.lcreateindexes = .T.
		this.ocaapartner.cIndexList = "TAG1|"
		this.ocareservat.CursorFill()
		
		SELECT curreservat
		SET RELATION TO rs_addrid INTO curaddress IN curreservat ADDITIVE
		SET RELATION TO rs_compid INTO curcompany IN curreservat ADDITIVE
		SET RELATION TO rs_apid INTO curapartner IN curreservat ADDITIVE
		
		this.ocarespict = CREATEOBJECT("carespict")
		this.ocarespict.Alias = "currespict"
		this.ocarespict.cFilterClause = "0=1"
		this.ocarespict.lcreateindexes = .T.
		this.ocarespict.CursorFill()
		
		SELECT 0
		
		RETURN .T.
	ENDPROC

	PROCEDURE markpictureschangedforwebserver
		openfile(.F.,"emprop")
		sqlupdate("emprop", "(1=1)" , "ep_wbshpch = (1=1)")
		
		RETURN .T.
	ENDPROC

	PROCEDURE m_addrecordtoselection
		IF EMPTY(curAllPictures.pc_id)
			RETURN
		ENDIF
		LOCAL locurAllPictures, lcNear
		
		this.lChanged = .T.
		
		SELECT curAllPictures
		SCATTER NAME locurAllPictures
		SELECT CurSelectedPictures
		APPEND BLANK
		GATHER NAME locurAllPictures
		
		DELETE FOR curAllPictures.pc_id = locurAllPictures.pc_id IN curAllPictures
		
		lcNear = SET("Near")
		SET NEAR ON
		= SEEK(locurAllPictures.pc_picture,"curAllPictures")
		SET NEAR &lcNear
		
		this.grdSelectedPictures.DoScroll(2)
		this.grdSelectedPictures.Refresh()
		this.grdAllPictures.DoScroll(2)
		this.grdAllPictures.SetFocus()
	ENDPROC

	PROCEDURE m_refreshpicture
		LPARAMETERS plcSelectedCursor
		LOCAL lcFilePath, lcFileName, lcDescript, lLeftGrid, lRightGrid
		
		IF NOT (TYPE("this.imgPicture") = "O" AND TYPE("this.lblPictureName") = "O")		&& Not exists on destroy
			RETURN .T.
		ENDIF
		
		IF NOT this.nMode = 3
		
			IF plcSelectedCursor = "CurSelectedPictures"
				lLeftGrid = .T.
			ELSE
				lRightGrid = .T.
			ENDIF
		
			DO CASE
				CASE lLeftGrid
					this.sh2.BackColor = RGB(184,254,171)
					this.sh1.BackColor = RGB(240,240,240)
					this.lblPictureName.BackColor = RGB(184,254,171)
				CASE lRightGrid
					this.sh2.BackColor = RGB(240,240,240)
					this.sh1.BackColor = RGB(206,157,157)
					this.lblPictureName.BackColor = RGB(206,157,157)
			ENDCASE
		
		ENDIF
		
		lcFilePath = ""
		lcFileName = ALLTRIM(EVALUATE(plcSelectedCursor + ".pc_picture"))
		lcFilePath = _screen.oGlobal.choteldir+"Pictures\"+lcFileName
		IF FILE(lcFilePath)
			this.imgPicture.Picture = lcFilePath
			lcDescript = ALLTRIM(EVALUATE("ALLTRIM(" + plcSelectedCursor + ".pc_lang"+g_langnum+")"))
			this.lblPictureName.Caption = ALLTRIM(EVALUATE("ALLTRIM(" + plcSelectedCursor + ".pc_picture)")) + IIF(EMPTY(lcDescript),"", " - " + lcDescript)
		ELSE
			this.imgPicture.Picture = ""
			this.lblPictureName.Caption = ""
		ENDIF
		
		RETURN .T.
	ENDPROC

	PROCEDURE m_removerecordfromselection
		IF EMPTY(CurSelectedPictures.pc_id)
			RETURN
		ENDIF
		LOCAL loCurSelectedPictures, lcNear
		
		this.lChanged = .T.
		
		SELECT CurSelectedPictures
		SCATTER NAME loCurSelectedPictures
		SELECT curAllPictures
		APPEND BLANK
		GATHER NAME loCurSelectedPictures
		
		DELETE FOR CurSelectedPictures.pc_id = loCurSelectedPictures.pc_id IN CurSelectedPictures
		
		lcNear = SET("Near")
		SET NEAR ON
		= SEEK(loCurSelectedPictures.pc_picture,"CurSelectedPictures")
		SET NEAR &lcNear
		
		this.grdAllPictures.DoScroll(2)
		this.grdAllPictures.Refresh()
		this.grdSelectedPictures.DoScroll(2)
		this.grdSelectedPictures.SetFocus()
	ENDPROC

	PROCEDURE onclose
		IF NOT this.lChanged OR YesNo(GetLangText("RESERVAT","TA_LOSECHANGES")+"?")
			this.Release()
		ENDIF
	ENDPROC

	PROCEDURE ondelete
		IF yesno(GetLangText("MGRPLIST", "TXT_DELIT")+CHR(10)+ALLTRIM(curAllPictures.pc_picture)+"?")
			this.lChanged = .T.
			DELETE ALL FOR rr_picid = curAllPictures.pc_id IN currespict
			DELETE ALL FOR ro_picid = curAllPictures.pc_id IN curroompict
			DELETE ALL FOR ro_picid = curAllPictures.pc_id IN curroomtpic
			DELETE ALL FOR pc_id = curAllPictures.pc_id IN curpictures
			DELETE IN curAllPictures
			this.grdAllPictures.SetFocus()
		ENDIF
	ENDPROC

	PROCEDURE onedit
		LOCAL llChanged
		
		DO FORM forms\roompictureseditform WITH EDIT_MODE TO llChanged
		this.lChanged = this.lChanged OR llChanged
		this.grdAllPictures.SetFocus()
		
		RETURN .T.
	ENDPROC

	PROCEDURE onfirststart
		IF NOT this.lOnFirstActivate
			this.lOnFirstActivate = .T.
			IF NOT this.grdAllPictures.Visible
				this.lblFilter.Visible = .F.
				this.txtfilter.Visible = .F.
			ENDIF
			IF this.nMode = 2
				this.grdAllPictures.SetFocus()
			ELSE
				IF this.nMode = 3
					this.edtRoomInfo.Visible = .T.
				ENDIF
				this.grdSelectedPictures.SetFocus()
			ENDIF
		ENDIF
	ENDPROC

	PROCEDURE onnew
		LOCAL llChanged
		
		DO FORM forms\roompictureseditform WITH NEW_MODE TO llChanged
		this.lChanged = this.lChanged OR llChanged
		this.grdAllPictures.SetFocus()
		
		RETURN .T.
	ENDPROC

	PROCEDURE onprint
		IF NOT INLIST(UPPER(ALIAS()), "CURSELECTEDPICTURES", "CURALLPICTURES")
			RETURN .F.
		ENDIF
		
		PRIVATE p_cTitle, p_cPictureFile, p_cRoomNumber, p_cPictureDescription, p_cRoomText, ;
			p_cPictureDescriptionText, p_MaxPersons
		LOCAL lnRecno, lcMacro, llChangedgrdAllPicturesVisible, llChangedgrdSelectedPicturesVisible, lnSelected
		p_cPictureFile = _screen.oGlobal.choteldir+"Pictures\"+ALLTRIM(pc_picture)
		
		IF NOT FILE(p_cPictureFile)
			= alert(p_cPictureFile+" "+GetLangText("PRNTBILL","TXT_FILENOTFOUND"))
			RETURN .F.
		ENDIF
		
		lnRecno = RECNO()
		DO CASE
			CASE this.nMode = 5
				p_cRoomText = GetLangText("ADDRESS","TXT_ROOMTYPE")
				p_cRoomNumber = get_rt_roomtyp(this.cRecordId)
			CASE this.nMode = 6
				p_cRoomText = GetLangText("HOTSTAT","T_BUILDING")
				p_cRoomNumber = this.cBuilding
			OTHERWISE
				p_cRoomText = GetLangText("ADDRESS","TXT_ROOMNUM")
				p_cRoomNumber = get_rm_rmname(this.cRecordId)
		ENDCASE
		lcMacro = "pc_lang"+g_langnum
		p_cPictureDescriptionText = GetLangText("MYLISTS","TXT_DESCRIP")
		p_cPictureDescription = &lcMacro
		p_MaxPersons = pc_persons
		
		lnSelected = SELECT()
		STORE .F. TO llChangedgrdAllPicturesVisible, llChangedgrdSelectedPicturesVisible
		
		IF this.grdAllPictures.Visible
			this.grdAllPictures.Visible = .F.
			llChangedgrdAllPicturesVisible = .T.
		ENDIF
		IF this.grdSelectedPictures.Visible
			this.grdSelectedPictures.Visible = .F.
			llChangedgrdSelectedPicturesVisible = .T.
		ENDIF
		
		this.ocalists.cFilterClause = "li_frx = '_PICT100.FRX'"
		this.ocalists.CursorFill()
		
		SELECT curlists
		LOCATE FOR li_frx = "_PICT100.FRX"
		IF FOUND()
			p_cTitle = TRIM(EVALUATE("curLists.li_lang"+g_Langnum)) + " (" + TRIM(curlists.li_listid) + ")"
		ELSE
			p_cTitle = GetLangText("PICVIEWE","TXT_PICTURE_VIEW")
		ENDIF
		
		IF FILE(gcReportdir+"_PICT100.dbf")
			USE SHARED NOUPDATE (gcReportdir+"_PICT100.dbf") ALIAS reptext IN 0
		ENDIF
		
		l_cFrx = gcReportdir+"_PICT100.frx"
		g_Rptlngnr = g_Langnum
		g_Rptlng = g_Language
		
		REPORT FORM (l_cFrx) TO PRINTER PROMPT NOCONSOLE
		
		DClose('RepText')
		
		IF llChangedgrdAllPicturesVisible
			this.grdAllPictures.Visible = .T.
		ENDIF
		IF llChangedgrdSelectedPicturesVisible
			this.grdSelectedPictures.Visible = .T.
		ENDIF
		
		SELECT (lnSelected)
		GO lnRecno
		RETURN .T.
	ENDPROC

	PROCEDURE onsave
		LOCAL loData
		IF USED("curSelectedPictures")	&& When called from Banquet|Picures menu (this.nMode = 2) then cursor curSelectedPictures is not created
			SELECT curSelectedPictures
			IF NOT EMPTY(FILTER())
				SET FILTER TO
			ENDIF
		ENDIF
		
		DO CASE
			CASE this.nMode = 1
				SELECT curSelectedPictures
				SCAN
					SCATTER NAME loData
					SELECT curpictures
					IF NOT SEEK(curSelectedPictures.pc_id, "curpictures")
						APPEND BLANK
					ENDIF
					GATHER NAME loData
					IF NOT SEEK(this.cRecordId+STR(curSelectedPictures.pc_id,8),"curroompict")
						INSERT INTO curroompict (ro_roomnum, ro_picid) VALUES (this.cRecordId, curSelectedPictures.pc_id)
					ENDIF
					SELECT curSelectedPictures
				ENDSCAN
				SELECT curAllPictures
				SCAN
					SCATTER NAME loData
					SELECT curpictures
					IF NOT SEEK(curAllPictures.pc_id, "curpictures")
						APPEND BLANK
					ENDIF
					GATHER NAME loData
					IF SEEK(this.cRecordId+STR(curAllPictures.pc_id,8),"curroompict")
						DELETE IN curroompict
					ENDIF
					SELECT curAllPictures
				ENDSCAN
				this.ocapictures.DoTableUpdate(.T.)
				this.ocaroompict.DoTableUpdate(.T.)
				this.MarkPicturesChangedForWebServer()
			CASE this.nMode = 2
				SELECT curAllPictures
				SCAN
					SCATTER NAME loData
					SELECT curpictures
					IF NOT SEEK(curAllPictures.pc_id, "curpictures")
						APPEND BLANK
					ENDIF
					GATHER NAME loData
					SELECT curAllPictures
				ENDSCAN
				this.ocapictures.DoTableUpdate(.T.)
			CASE this.nMode = 4
				SELECT curSelectedPictures
				SCAN FOR pc_selctd <> SEEK(STR(curreservat.rs_reserid,12,3)+STR(curSelectedPictures.pc_id,8), "currespict", "tag1")
					IF pc_selctd
						INSERT INTO currespict (rr_picid, rr_reserid) VALUES (curSelectedPictures.pc_id, curreservat.rs_reserid)
					ELSE
						DELETE IN currespict
					ENDIF
				ENDSCAN
				this.ocarespict.DoTableUpdate(.T.)
			CASE this.nMode = 5
				SELECT curSelectedPictures
				SCAN
					SCATTER NAME loData
					SELECT curpictures
					IF NOT SEEK(curSelectedPictures.pc_id, "curpictures")
						APPEND BLANK
					ENDIF
					GATHER NAME loData
					IF NOT SEEK(this.cRecordId+STR(curSelectedPictures.pc_id,8),"curroomtpic")
						INSERT INTO curroomtpic (ro_roomtyp, ro_picid) ;
							VALUES (this.cRecordId, curSelectedPictures.pc_id)
					ENDIF
					SELECT curSelectedPictures
				ENDSCAN
				SELECT curAllPictures
				SCAN
					SCATTER NAME loData
					SELECT curpictures
					IF NOT SEEK(curAllPictures.pc_id, "curpictures")
						APPEND BLANK
					ENDIF
					GATHER NAME loData
					IF SEEK(this.cRecordId+STR(curAllPictures.pc_id,8),"curroomtpic")
						DELETE IN curroomtpic
					ENDIF
					SELECT curAllPictures
				ENDSCAN
				this.ocapictures.DoTableUpdate(.T.)
				this.ocaroomtpic.DoTableUpdate(.T.)
				this.MarkPicturesChangedForWebServer()
			CASE this.nMode = 6
				SELECT curSelectedPictures
				SCAN
					SCATTER NAME loData
					SELECT curpictures
					IF NOT SEEK(curSelectedPictures.pc_id, "curpictures")
						APPEND BLANK
					ENDIF
					GATHER NAME loData
					IF NOT dlocate("curbuildpic", "bt_buid = " + TRANSFORM(this.cRecordId) + " AND bt_picid = " + TRANSFORM(curSelectedPictures.pc_id))
						INSERT INTO curbuildpic(bt_buid, bt_picid) ;
							VALUES (this.cRecordId, curSelectedPictures.pc_id)
					ENDIF
				ENDSCAN
				SELECT curAllPictures
				SCAN
					SCATTER NAME loData
					SELECT curpictures
					IF NOT SEEK(curAllPictures.pc_id, "curpictures")
						APPEND BLANK
					ENDIF
					GATHER NAME loData
					IF dlocate("curbuildpic", "bt_buid = " + TRANSFORM(this.cRecordId) + " AND bt_picid = " + TRANSFORM(curAllPictures.pc_id))
						DELETE IN curbuildpic
					ENDIF
				ENDSCAN
				this.ocapictures.DoTableUpdate(.T.)
				this.ocabuildpic.DoTableUpdate(.T.)
			OTHERWISE
		ENDCASE
		
		this.lChanged = .F.
		this.Release()
	ENDPROC

	PROCEDURE QueryUnload
		NODEFAULT
		this.OnClose()
	ENDPROC

	PROCEDURE rearrangecontrollsformodethree
		LOCAL l_nHeightCorrection
		
		l_nHeightCorrection = FLOOR(this.imgPicture.Height/3)
		this.imgPicture.Height = this.imgPicture.Height - l_nHeightCorrection
		this.imgPicture.h = this.imgPicture.h - l_nHeightCorrection
		this.imgPicture.Top = this.imgPicture.Top + l_nHeightCorrection
		this.imgPicture.t = this.imgPicture.t + l_nHeightCorrection
		this.imgPicture.Init()
		
		this.grdSelectedPictures.Top = this.grdSelectedPictures.Top + l_nHeightCorrection
		this.grdSelectedPictures.t = this.grdSelectedPictures.t + l_nHeightCorrection
		this.grdSelectedPictures.Init()
		
		this.sh2.Width = this.Width - 3
		this.sh2.w = this.sh2.Width
		this.sh2.Top = this.sh2.Top + l_nHeightCorrection
		this.sh2.t = this.sh2.t + l_nHeightCorrection
		this.sh2.Init()
		
		this.grdSelectedPictures.Top = this.sh2.Top + 3
		this.grdSelectedPictures.t = this.grdSelectedPictures.Top
		this.grdSelectedPictures.Height = this.sh2.Height - 6
		this.grdSelectedPictures.h = this.grdSelectedPictures.Height
		this.grdSelectedPictures.Left = this.sh2.Left + 3
		this.grdSelectedPictures.l = this.grdSelectedPictures.Left
		this.grdSelectedPictures.Width = this.sh2.Width - 6
		this.grdSelectedPictures.w = this.grdSelectedPictures.Width
		this.grdSelectedPictures.column1.Width = 170
		this.grdSelectedPictures.column2.Width = 330
		this.grdSelectedPictures.column3.Width = 50
		this.grdSelectedPictures.column4.Width = 50
		this.grdSelectedPictures.Init()
		
		this.edtRoomInfo.Top = 3
		this.edtRoomInfo.t = this.edtRoomInfo.Top
		this.edtRoomInfo.Height = this.sh2.Top - 6
		this.edtRoomInfo.h = this.edtRoomInfo.Height
		this.edtRoomInfo.Width = this.sh2.Width
		this.edtRoomInfo.w = this.edtRoomInfo.Width
		this.edtRoomInfo.Left = this.sh2.Left
		this.edtRoomInfo.l = this.edtRoomInfo.Left
		this.edtRoomInfo.Init()
		
		RETURN .T.
	ENDPROC

	PROCEDURE cmdAddToSelection.Click
		thisform.m_AddRecordToSelection()
	ENDPROC

	PROCEDURE cmdRemoveFromSelection.Click
		thisform.m_RemoveRecordFromSelection()
	ENDPROC

	PROCEDURE grdAllPictures.AfterRowColChange
		LPARAMETERS nColIndex
		
		thisform.m_refreshpicture(this.RecordSource)
		IF this.lGotFocus
			thisform.ActivateToolbar()
			this.lGotFocus = .F.
		ENDIF
	ENDPROC

	PROCEDURE grdAllPictures.Init
		this.AddProperty("lGotFocus")
		DODEFAULT()
	ENDPROC

	PROCEDURE grdAllPictures.When
		this.lGotFocus = .T.
	ENDPROC

	PROCEDURE grdSelectedPictures.AfterRowColChange
		LPARAMETERS nColIndex
		
		thisform.m_refreshpicture(this.RecordSource)
		IF this.lGotFocus
			thisform.ActivateToolbar()
			this.lGotFocus = .F.
		ENDIF
	ENDPROC

	PROCEDURE grdSelectedPictures.DblClick
		*
	ENDPROC

	PROCEDURE grdSelectedPictures.Init
		this.AddProperty("lGotFocus")
		DODEFAULT()
	ENDPROC

	PROCEDURE grdSelectedPictures.When
		this.lGotFocus = .T.
	ENDPROC

	PROCEDURE txtfilter.InteractiveChange
		LOCAL l_cFilter
		thisform.cfilter = STRTRAN(STRTRAN(UPPER(ALLTRIM(this.Value)),"[",""),"]","")
		
		IF NOT (thisform.cfilterold == thisform.cfilter)
			thisform.cfilterold = thisform.cfilter
			IF EMPTY(thisform.cfilter)
				l_cFilter = "SET FILTER TO  IN curAllPictures"
			ELSE
				l_cFilter = "SET FILTER TO [" + thisform.cfilter + "] $ UPPER(pc_picture) IN curAllPictures"
			ENDIF
			&l_cFilter
			IF USED("curSelectedPictures")	&& When called from Banquet|Picures menu (this.nMode = 2) then cursor curSelectedPictures is not created
				GO TOP IN curSelectedPictures
			ENDIF
			thisform.grdAllPictures.Refresh()
		ENDIF
		
		DODEFAULT()
	ENDPROC

ENDDEFINE
