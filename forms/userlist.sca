*--------------------------------------------------------------------------------------------------------------------------------------------------------
* (ES) AUTOGENERADO - ¡¡ATENCIÓN!! - ¡¡NO PENSADO PARA EJECUTAR!! USAR SOLAMENTE PARA INTEGRAR CAMBIOS Y ALMACENAR CON HERRAMIENTAS SCM!!
* (EN) AUTOGENERATED - ATTENTION!! - NOT INTENDED FOR EXECUTION!! USE ONLY FOR MERGING CHANGES AND STORING WITH SCM TOOLS!!
*--------------------------------------------------------------------------------------------------------------------------------------------------------
*< FOXBIN2PRG: Version="1.19" SourceFile="userlist.scx" /> (Solo para binarios VFP 9 / Only for VFP 9 binaries)
*
*
#INCLUDE "..\include\constdefines.h"

DEFINE CLASS dataenvironment AS dataenvironment 
 	*< CLASSDATA: Baseclass="dataenvironment" Timestamp="" Scale="" Uniqueid="" ClassIcon="2" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="Cursor6" UniqueID="" Timestamp="" />

	AutoOpenTables = .F.
	DataSource = .NULL.
	Height = 488
	Left = 1
	Name = "Dataenvironment"
	Top = 220
	Width = 806

	ADD OBJECT 'Cursor6' AS cursor WITH ;
		Alias = "messages", ;
		CursorSource = ..\data\messages.dbf, ;
		Height = 90, ;
		Left = 291, ;
		Name = "Cursor6", ;
		Top = 140, ;
		Width = 91
		*< END OBJECT: BaseClass="cursor" />

ENDDEFINE

DEFINE CLASS fsuserlist AS fs OF "..\libs\main.vcx" 
 	*< CLASSDATA: Baseclass="formset" Timestamp="" Scale="" Uniqueid="" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="UserListForm" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="UserListForm.UserGrid" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="UserListForm.UserGrid.Column1.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="UserListForm.UserGrid.Column1.Tbgrid1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="UserListForm.UserGrid.Column2.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="UserListForm.UserGrid.Column2.Tbgrid1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="UserListForm.UserGrid.Column3.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="UserListForm.UserGrid.Column3.Tbgrid1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="UserListForm.UserGrid.Column4.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="UserListForm.UserGrid.Column4.Tbgrid1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="UserListForm.RefreshGridTimer" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="SendMsgForm" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="SendMsgForm.EBText" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="SendMsgForm.OKCmd" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="SendMsgForm.CancelCmd" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="SendMsgForm.TlEnter" UniqueID="" Timestamp="" />

	*<DefinedPropArrayMethod>
		*m: checkifstationisactive		&& Checks if station, which should be loget out, is active
		*m: onclose		&& Close and exit from form
		*m: onlogout		&& Log out selected user
		*m: onlogoutall		&& Logout all users
		*m: onsendmessage		&& Send messages to selected user
		*m: onsendmessageall		&& Send messagte to all users
		*m: onshowmessages
		*p: psendall		&& .T. wenn sending to all users
	*</DefinedPropArrayMethod>

	AutoRelease = .T.
	DataSession = 2
	Name = "fsUserList"
	Tform12.DoCreate = .T.
	Tform12.Height = 0
	Tform12.Name = "Tform12"
	Tform12.Width = 131

	ADD OBJECT 'SendMsgForm' AS tform WITH ;
		Caption = "SendMsgForm", ;
		ControlBox = .T., ;
		DoCreate = .T., ;
		Height = 146, ;
		MaxButton = .F., ;
		MinButton = .F., ;
		Name = "SendMsgForm", ;
		Visible = .F., ;
		Width = 300
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="form" />

	ADD OBJECT 'SendMsgForm.CancelCmd' AS tcommandbutton WITH ;
		Caption = "Cancel", ;
		Left = 163, ;
		Name = "CancelCmd", ;
		TabIndex = 4, ;
		Top = 116
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'SendMsgForm.EBText' AS teditbox WITH ;
		Format = "KR", ;
		Height = 84, ;
		Left = 7, ;
		MaxLength = 254, ;
		Name = "EBText", ;
		TabIndex = 2, ;
		Top = 22, ;
		Width = 288
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="editbox" />

	ADD OBJECT 'SendMsgForm.OKCmd' AS tcommandbutton WITH ;
		Caption = "OK", ;
		Left = 55, ;
		Name = "OKCmd", ;
		TabIndex = 3, ;
		Top = 116
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'SendMsgForm.TlEnter' AS tlabel WITH ;
		Caption = "Enter Your message", ;
		Height = 17, ;
		Left = 7, ;
		Name = "TlEnter", ;
		Top = 4, ;
		Width = 196
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'UserListForm' AS tform WITH ;
		Caption = "UserListForm", ;
		ControlBox = .T., ;
		ctbrclass = ctbrUserList, ;
		DoCreate = .T., ;
		Height = 228, ;
		Icon = ..\bitmap\icons\misc28.ico, ;
		KeyPreview = .T., ;
		Name = "UserListForm", ;
		Visible = .F., ;
		Width = 355, ;
		WindowState = 0
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="form" />

	ADD OBJECT 'UserListForm.RefreshGridTimer' AS timer WITH ;
		Enabled = .F., ;
		Height = 23, ;
		Interval = 2000, ;
		Left = 12, ;
		Name = "RefreshGridTimer", ;
		Top = 240, ;
		Width = 23
		*< END OBJECT: BaseClass="timer" />

	ADD OBJECT 'UserListForm.UserGrid' AS tgrid WITH ;
		ColumnCount = 4, ;
		DeleteMark = .F., ;
		GridLines = 2, ;
		Height = 223, ;
		Left = 3, ;
		Name = "UserGrid", ;
		RecordMark = .F., ;
		ScrollBars = 2, ;
		setcolumns = .T., ;
		Top = 5, ;
		Width = 350, ;
		Column1.Name = "Column1", ;
		Column1.ReadOnly = .T., ;
		Column1.Width = 70, ;
		Column2.Name = "Column2", ;
		Column2.ReadOnly = .T., ;
		Column2.Width = 98, ;
		Column3.Name = "Column3", ;
		Column3.ReadOnly = .T., ;
		Column3.Width = 80, ;
		Column4.Name = "Column4", ;
		Column4.ReadOnly = .T., ;
		Column4.Width = 80
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="grid" />

	ADD OBJECT 'UserListForm.UserGrid.Column1.Header1' AS header WITH ;
		Caption = "Header1", ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'UserListForm.UserGrid.Column1.Tbgrid1' AS tbgrid WITH ;
		Left = 38, ;
		Name = "Tbgrid1", ;
		ReadOnly = .T., ;
		Top = 30
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />

	ADD OBJECT 'UserListForm.UserGrid.Column2.Header1' AS header WITH ;
		Caption = "Header1", ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'UserListForm.UserGrid.Column2.Tbgrid1' AS tbgrid WITH ;
		Left = 58, ;
		Name = "Tbgrid1", ;
		ReadOnly = .T., ;
		Top = 30
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />

	ADD OBJECT 'UserListForm.UserGrid.Column3.Header1' AS header WITH ;
		Caption = "Header1", ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'UserListForm.UserGrid.Column3.Tbgrid1' AS tbgrid WITH ;
		Left = 30, ;
		Name = "Tbgrid1", ;
		ReadOnly = .T., ;
		Top = 54
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />

	ADD OBJECT 'UserListForm.UserGrid.Column4.Header1' AS header WITH ;
		Caption = "Header1", ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'UserListForm.UserGrid.Column4.Tbgrid1' AS tbgrid WITH ;
		Left = 26, ;
		Name = "Tbgrid1", ;
		ReadOnly = .T., ;
		Top = 42
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />
	
	PROCEDURE checkifstationisactive		&& Checks if station, which should be loget out, is active
		* Required enviroment settings:
		* license.dbf must be opened, and record which should be checked must be selected
		LOCAL llReturn, lnReprocess
		LOCAL ARRAY laStation(1)
		= ANETRESOURCES(laStation,"\\"+ALLTRIM(license.lc_station),0)
		IF DLock('license',2,.T.)
			SELECT license
			SCATTER MEMVAR BLANK
			GATHER MEMVAR
			dunlock()
			llReturn = .F.
		ELSE
			llReturn = .T.
		ENDIF
		
		RETURN llReturn
	ENDPROC

	PROCEDURE Init
		DODEFAULT()
		this.userListForm.AddProperty("formname","userListForm")
		SELECT license
		
		this.userListForm.caption = GetLangText("USERLIST","TXT_USERLIST")
		
		this.sendMsgForm.Caption = GetLangText("USERLIST","TXT_SENDMESSAGE")
		this.sendMsgForm.oKCmd.Caption = GetLangText("COMMON","TXT_OK")
		this.sendMsgForm.cancelCmd.Caption = GetLangText("COMMON","TXT_CANCEL")
		this.sendMsgForm.TlEnter.Caption = GetLangText("USERLIST","TXT_ENTERMESSAGE")
		
		this.userListForm.userGrid.column1.header1.Caption = GetLangText("USERLIST","TXT_USERID")
		this.userListForm.userGrid.column2.header1.Caption = GetLangText("USERLIST","TXT_STATIONID")
		this.userListForm.userGrid.column3.header1.Caption = GetLangText("USERLIST","TXT_DATE")
		this.userListForm.userGrid.column4.header1.Caption = GetLangText("USERLIST","TXT_TIME")
		
		this.userListForm.userGrid.RecordSource = [license]
		this.userListForm.userGrid.column1.ControlSource = [Lc_User]
		this.userListForm.userGrid.column2.ControlSource = [Lc_Station]
		this.userListForm.userGrid.column3.ControlSource = [Lc_Date]
		this.userListForm.userGrid.column4.ControlSource = [Lc_Time]
		
		GOTO TOP
		
		this.userListForm.Refresh
		this.userListForm.userGrid.setfocus
		
		this.userListForm.Visible = .T.
		this.userListForm.zorder()
	ENDPROC

	PROCEDURE Load
		ini(.T.,.T.,this.DataEnvironment,,,.T.)
		
		IF odbc()
			OpenFileDirect(,"license")
		ENDIF
		SET FILTER TO NOT EMPTY(lc_user) IN license
	ENDPROC

	PROCEDURE onclose		&& Close and exit from form
		LOCAL i
		
		FOR i = this.FormCount TO 1 STEP -1
		     this.Forms(i).Release()
		NEXT
		*this.Release()		&& C0005 error on ESC pressed
	ENDPROC

	PROCEDURE onlogout		&& Log out selected user
		LOCAL LDateTime
		LDateTime = DATETIME()
		IF !EMPTY(license.lc_user) AND this.CheckIfStationIsActive()
			INSERT INTO messages (ms_id, ms_time, ms_code, ms_text, ms_userid, ms_2userid, ms_station) ;
					VALUES (m.nextid("MESSAGES"), LDateTime , LOG_OFF_MSG, GetLangText("USERLIST","TXT_LOGOUTINSEC"), ;
					g_Userid, license.lc_user, license.lc_station)
			MESSAGEBOX(GetLangText("USERLIST","TXT_LOGOUT_SEND")+" "+ALLTRIM(license.lc_user), 64, ;
					GetLangText("RECURRES","TXT_INFORMATION"))
		ENDIF
		
		RETURN .T.
	ENDPROC

	PROCEDURE onlogoutall		&& Logout all users
		LOCAL LDateTime, l_cStation
		WAIT WINDOW GetLangText("COMMON", "T_PLEASEWAIT") NOWAIT
		LDateTime = DATETIME()
		l_cStation = winpc()
		this.UserListForm.RefreshGridTimer.Enabled = .F.
		SELECT license
		SCAN FOR lc_station <> l_cStation
			IF this.CheckIfStationIsActive()
				INSERT INTO messages (ms_id, ms_time, ms_code, ms_text, ms_userid, ms_2userid, ms_station) ;
						VALUES (nextid("MESSAGES") , LDateTime , LOG_OFF_MSG, GetLangText("USERLIST","TXT_LOGOUTINSEC"), ;
								g_Userid, license.lc_user, license.lc_station)
			ENDIF
		ENDSCAN
		GO TOP IN license
		WAIT CLEAR
		MESSAGEBOX(GetLangText("USERLIST","TXT_LOGOUT_SEND_TO_ALL"),64,GetLangText("RECURRES","TXT_INFORMATION"))
		this.UserListForm.RefreshGridTimer.Enabled = .T.
		RETURN .T.
	ENDPROC

	PROCEDURE onsendmessage		&& Send messages to selected user
		IF !EMPTY(license.lc_user)
			thisformset.sendMsgForm.eBText.Value = ""
			thisformset.sendMsgForm.Visible = .T.
			thisformset.sendMsgForm.zorder()
		ENDIF
		
	ENDPROC

	PROCEDURE onsendmessageall		&& Send messagte to all users
		this.psendall = .t.
		thisformset.sendMsgForm.eBText.Value = ""
		thisformset.sendMsgForm.Visible = .T.
		thisformset.sendMsgForm.zorder()
		
	ENDPROC

	PROCEDURE onshowmessages
		g_oMsgHandler.oActiveForm = this.UserListForm
		DO ShowMessages IN procmessages
		
		RETURN .T.
	ENDPROC

	PROCEDURE SendMsgForm.CancelCmd.Click
		thisform.OnClose()
	ENDPROC

	PROCEDURE SendMsgForm.OKCmd.Click
		Local LMyRecno, LDateTime, l_cStation
		LDateTime = DATETIME()
		IF thisformset.psendall
			thisformset.psendall = .f.
			l_cStation = winpc()
			SELECT license
			LMyRecno = RECNO()
			SCAN FOR !EMPTY(license.lc_user) AND license.lc_station<>l_cStation
				INSERT INTO messages (ms_id, ms_time, ms_code, ms_text, ms_userid, ms_2userid, ms_station) ;
						VALUES (nextid("MESSAGES"), LDateTime, TEXT_MSG, thisform.EBText.Value, g_Userid, ;
						license.lc_user, license.lc_station)
			ENDSCAN
			GOTO LMyRecno
			MESSAGEBOX(GetLangText("USERLIST","TXT_MESSAGE_SEND_TO_ALL"),64,GetLangText("RECURRES","TXT_INFORMATION"))
		ELSE
			INSERT INTO messages (ms_id, ms_time, ms_code, ms_text, ms_userid, ms_2userid, ms_station) ;
					VALUES (nextid("MESSAGES"), LDateTime , TEXT_MSG, thisform.EBText.Value, ;
					g_Userid, license.lc_user, license.lc_station)
			MESSAGEBOX(GetLangText("USERLIST","TXT_MESSAGE_SEND")+" "+ALLTRIM(license.lc_user),64, ;
					GetLangText("RECURRES","TXT_INFORMATION"))
		ENDIF
		thisform.visible = .f.
	ENDPROC

	PROCEDURE SendMsgForm.onclose
		IF thisformset.psendall
			thisformset.psendall = .f.
		ENDIF
		thisform.visible = .F.
	ENDPROC

	PROCEDURE SendMsgForm.QueryUnload
		thisform.OnClose()
		NODEFAULT
	ENDPROC

	PROCEDURE UserListForm.Activate
		DODEFAULT()
		this.refreshGridTimer.Enabled = .t.
	ENDPROC

	PROCEDURE UserListForm.onclose
		thisformset.OnClose()
	ENDPROC

	PROCEDURE UserListForm.QueryUnload
		this.OnClose()
		NODEFAULT
	ENDPROC

	PROCEDURE UserListForm.RefreshGridTimer.Timer
		this.Enabled = .F.
		LOCAL l_nRecNo
		l_nRecNo = RECNO("license")
		GO TOP IN license
		GO l_nRecNo IN license
		this.Parent.UserGrid.Refresh()
		this.Enabled = .T.
		
		RETURN .T.
		
		
	ENDPROC

ENDDEFINE
