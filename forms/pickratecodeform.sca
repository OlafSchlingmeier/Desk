*--------------------------------------------------------------------------------------------------------------------------------------------------------
* (ES) AUTOGENERADO - ¡¡ATENCIÓN!! - ¡¡NO PENSADO PARA EJECUTAR!! USAR SOLAMENTE PARA INTEGRAR CAMBIOS Y ALMACENAR CON HERRAMIENTAS SCM!!
* (EN) AUTOGENERATED - ATTENTION!! - NOT INTENDED FOR EXECUTION!! USE ONLY FOR MERGING CHANGES AND STORING WITH SCM TOOLS!!
*--------------------------------------------------------------------------------------------------------------------------------------------------------
*< FOXBIN2PRG: Version="1.19" SourceFile="pickratecodeform.scx" /> (Solo para binarios VFP 9 / Only for VFP 9 binaries)
*
*
DEFINE CLASS dataenvironment AS dataenvironment 
 	*< CLASSDATA: Baseclass="dataenvironment" Timestamp="" Scale="" Uniqueid="" ClassIcon="1" />

	DataSource = .NULL.
	Height = 0
	Left = 0
	Name = "Dataenvironment"
	Top = 0
	Width = 0

ENDDEFINE

DEFINE CLASS pickratecodeform AS tform OF "..\libs\main.vcx" 
 	*< CLASSDATA: Baseclass="form" Timestamp="" Scale="" Uniqueid="" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="cboRateCode" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdOK" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdCancel" UniqueID="" Timestamp="" />

	*<DefinedPropArrayMethod>
		*m: takerate
		*m: takeratecode
		*m: takeroomtype
		*p: cratecode
		*p: retval
	*</DefinedPropArrayMethod>

	BorderStyle = 2
	Caption = "pickratecodeform"
	ControlBox = .T.
	cratecode = 
	DoCreate = .T.
	Height = 84
	KeyPreview = .T.
	MaxButton = .F.
	MinButton = .F.
	Name = "PICKRATECODEFORM"
	ShowWindow = 1
	Width = 204
	WindowType = 1

	ADD OBJECT 'cboRateCode' AS tcombobox WITH ;
		ColumnCount = 3, ;
		ColumnLines = .F., ;
		ColumnWidths = "75,75,100", ;
		Height = 24, ;
		Left = 12, ;
		Name = "cboRateCode", ;
		Style = 2, ;
		Top = 8, ;
		Width = 180
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="combobox" />

	ADD OBJECT 'cmdCancel' AS tcommandbutton WITH ;
		Caption = "cmdCancel", ;
		Left = 108, ;
		Name = "cmdCancel", ;
		Top = 44
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'cmdOK' AS tcommandbutton WITH ;
		Caption = "cmdOK", ;
		Left = 12, ;
		Name = "cmdOK", ;
		Top = 44
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="commandbutton" />
	
	PROCEDURE Init
		LPARAMETERS lp_XPos, lp_YPos, lp_cResAlias
		LOCAL l_cRateCode, l_cRoomType, l_cRate, l_cRoomTypeToDisplay, l_dCurrentResDate, l_cSeason
		
		IF PCOUNT() < 3
			lp_cResAlias = "reservat"
		ENDIF
		SELECT &lp_cResAlias
		SCATTER FIELDS rs_ratecod, rs_rate NAME this.RetVal
		IF NOT EMPTY(lp_XPos) OR NOT EMPTY(lp_YPos)
			this.Top  = lp_YPos
			this.Left = lp_XPos
		ENDIF
		this.Caption = GetLangText("ROOMPLAN","T_PICKRATECODE")
		this.cmdOK.Caption = GetLangText("COMMON","TXT_OK")
		this.cmdCancel.Caption = GetLangText("COMMON","TXT_CANCEL")
		
		CREATE CURSOR curPickRate (pr_ratecod C(11), pr_roomtyp C(4), pr_droomtyp c(4), pr_rate B(2))
		INDEX ON pr_ratecod + pr_roomtyp TAG Tag1
		
		l_dCurrentResDate = MIN(&lp_cResAlias..rs_depdate, MAX(&lp_cResAlias..rs_arrdate, SysDate()))
		l_cSeason = DLookUp("season", "se_date = " + SqlCnv(l_dCurrentResDate), "se_season")
		
		SELECT ratecode
		SCAN FOR INLIST(rc_roomtyp, "*", &lp_cResAlias..rs_roomtyp) AND BETWEEN(l_dCurrentResDate, rc_fromdat, rc_todat - 1) AND ;
				l_cSeason = ALLTRIM(rc_season) AND rc_minstay <= &lp_cResAlias..rs_depdate - &lp_cResAlias..rs_arrdate AND ;
				(rc_maxstay = 0 OR rc_maxstay >= &lp_cResAlias..rs_depdate - &lp_cResAlias..rs_arrdate) AND NOT rc_inactiv
			l_cRateCode = this.TakeRateCode(lp_cResAlias)
			l_cRoomType = this.TakeRoomType(lp_cResAlias)
			l_cRate = this.TakeRate(lp_cResAlias, l_cRateCode, l_cRoomType)
			l_cRoomTypeToDisplay = IIF(l_cRoomType="*",l_cRoomType,get_rt_roomtyp(l_cRoomType))
			IF NOT SEEK(PADR(l_cRateCode,11) + l_cRoomType,"curPickRate","Tag1")
				INSERT INTO curPickRate (pr_ratecod, pr_roomtyp, pr_droomtyp, pr_rate) VALUES ;
						(l_cRateCode, l_cRoomType, l_cRoomTypeToDisplay, l_cRate)
			ENDIF
		ENDSCAN
		GO TOP IN curPickRate
		thisform.cratecode = curPickRate.pr_ratecod
		this.cboRateCode.RowSourceType = 6
		this.cboRateCode.RowSource = "curPickRate.pr_ratecod,pr_droomtyp,pr_rate"
		this.cboRateCode.ControlSource = "thisform.cratecode"
		
		RETURN .T.
	ENDPROC

	PROCEDURE KeyPress
		LPARAMETERS nKeyCode, nShiftAltCtrl
		
		DO CASE
			CASE nKeyCode = 27									&& ESC
				this.cmdCancel.SetFocus()
				this.cmdCancel.Click()
			CASE nKeyCode = 13									&& Enter
				this.cmdOK.SetFocus()
				this.cmdOK.Click()
			CASE (nKeyCode = 12) AND (nShiftAltCtrl = 2)		&& Ctrl + L
				KEYBOARD '{ALT+DNARROW}'
				NODEFAULT
		ENDCASE
	ENDPROC

	PROCEDURE QueryUnload
		NODEFAULT
		this.cmdCancel.Click()
	ENDPROC

	PROCEDURE takerate
		LPARAMETERS lp_cResAlias, lp_cRateCode, lp_cRoomType
		LOCAL l_cRate
		
		l_cRate = RateCalculate(,lp_cRateCode, lp_cRoomType, ;
			&lp_cResAlias..rs_altid, 0, &lp_cResAlias..rs_adults, &lp_cResAlias..rs_childs, ;
			&lp_cResAlias..rs_childs2, &lp_cResAlias..rs_childs3, &lp_cResAlias..rs_arrdate, &lp_cResAlias..rs_depdate)
		
		RETURN l_cRate
	ENDPROC

	PROCEDURE takeratecode
		LPARAMETERS lp_cResAlias
		LOCAL l_cRateCode
		l_cRateCode = ratecode.rc_ratecod
		IF NOT EMPTY(&lp_cResAlias..rs_altid) AND SEEK(&lp_cResAlias..rs_altid,"althead","tag1") AND ;
				(SEEK(PADR(althead.al_altid,8)+DTOS(&lp_cResAlias..rs_arrdate)+"*   "+l_cRateCode,"altsplit","tag2") OR ;
				SEEK(PADR(althead.al_altid,8)+DTOS(&lp_cResAlias..rs_arrdate)+PADR(&lp_cResAlias..rs_roomtyp,4)+l_cRateCode,"altsplit","tag2"))
			l_cRateCode = "!"+l_cRateCode
		ENDIF
		RETURN l_cRateCode
	ENDPROC

	PROCEDURE takeroomtype
		LPARAMETERS lp_cResAlias
		LOCAL l_cRoomType
		l_cRoomType = ratecode.rc_roomtyp
		IF NOT EMPTY(&lp_cResAlias..rs_altid) AND SEEK(&lp_cResAlias..rs_altid,"althead","tag1") AND ;
				(SEEK(PADR(althead.al_altid,8)+DTOS(&lp_cResAlias..rs_arrdate)+PADR(l_cRoomType,4)+ratecode.rc_ratecod,"altsplit","tag2") OR ;
				SEEK(PADR(althead.al_altid,8)+DTOS(&lp_cResAlias..rs_arrdate)+"*   "+ratecode.rc_ratecod,"altsplit","tag2"))
			l_cRoomType = altsplit.as_roomtyp
		ENDIF
		RETURN l_cRoomType
	ENDPROC

	PROCEDURE Unload
		USE IN curPickRate
		RETURN this.RetVal
	ENDPROC

	PROCEDURE cboRateCode.RightClick
		LOCAL l_cPopCmd
		
		DEFINE POPUP PopupMenu SHORTCUT RELATIVE FROM 2, 5
		DEFINE BAR 1 OF PopupMenu PROMPT GetLangText("COMMON","TXT_OK")&& Skip For !NewEnabled
		DEFINE BAR 2 OF PopupMenu PROMPT GetLangText("COMMON","TXT_CANCEL")&& Skip For !CopyEnabled
		
		ON SELECTION BAR 1 OF PopupMenu l_cPopCmd = "OK"
		ON SELECTION BAR 2 OF PopupMenu l_cPopCmd = "Cancel"
		
		l_cPopCmd = ""
		ACTIVATE POPUP PopupMenu
		DO CASE
			CASE l_cPopCmd = "OK"
				thisform.cmdOK.SetFocus()
				thisform.cmdOK.Click()
			CASE l_cPopCmd = "Cancel"
				thisform.cmdCancel.SetFocus()
				thisform.cmdCancel.Click()
		ENDCASE
	ENDPROC

	PROCEDURE cmdCancel.Click
		thisform.RetVal.rs_ratecod = ""
		thisform.RetVal.rs_rate = 0
		thisform.Release()
	ENDPROC

	PROCEDURE cmdOK.Click
		thisform.RetVal.rs_ratecod = ALLTRIM(curPickRate.pr_ratecod)
		thisform.RetVal.rs_rate = curPickRate.pr_rate
		thisform.Release()
	ENDPROC

ENDDEFINE
