*--------------------------------------------------------------------------------------------------------------------------------------------------------
* (ES) AUTOGENERADO - ¡¡ATENCIÓN!! - ¡¡NO PENSADO PARA EJECUTAR!! USAR SOLAMENTE PARA INTEGRAR CAMBIOS Y ALMACENAR CON HERRAMIENTAS SCM!!
* (EN) AUTOGENERATED - ATTENTION!! - NOT INTENDED FOR EXECUTION!! USE ONLY FOR MERGING CHANGES AND STORING WITH SCM TOOLS!!
*--------------------------------------------------------------------------------------------------------------------------------------------------------
*< FOXBIN2PRG: Version="1.19" SourceFile="mngcwvrrt.scx" /> (Solo para binarios VFP 9 / Only for VFP 9 binaries)
*
*
#INCLUDE "..\include\constdefines.h"

DEFINE CLASS dataenvironment AS dataenvironment 
 	*< CLASSDATA: Baseclass="dataenvironment" Timestamp="" Scale="" Uniqueid="" ClassIcon="2" />

	DataSource = .NULL.
	Height = 200
	Left = 1
	Name = "Dataenvironment"
	Top = 220
	Width = 520

ENDDEFINE

DEFINE CLASS frmmngcwvrrt AS tformcommon OF "..\libs\main.vcx" 
 	*< CLASSDATA: Baseclass="form" Timestamp="" Scale="" Uniqueid="" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="Ln1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Ln2" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grdCwRates" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lbleq_vroom" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="eq_vroom" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chkYieldManagerActive" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chkInactiv" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblRateId" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Tlabel1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblChannel" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lbleq_ratecod" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="eq_ratecod" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lbleq_adults" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="eq_adults" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblPriceFor" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="spnPriceForPersons" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblPersons" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="optpricetype" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblPrice" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtPrice" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblfrom" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="dtxtFrom" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblto" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblPriceCorrRate" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="eq_citcwcp" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="eq_citcwcr" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblPriceCorrPercent" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="dtxtTo" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdgetprices" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="eq_adusta" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdDelete" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblOC" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblfromOC" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="dtxtfromOC" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lbltoOC" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="dtxttoOC" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdApplyOC" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="eq_rateid" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cboOC" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblminmaxstaydescript" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblminmaxstay" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtMinStay" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtMaxStay" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chkDeleteMinMaxStay" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblfrommms" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="dtxtFromStay" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lbltomms" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="dtxtToStay" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdApplyMinMaxStay" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblMealPlan" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cboMealPlan" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblmpfrom" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="dtxtFromMP" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblmpto" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="dtxtToMP" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdApplyMP" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdOK" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdCancel" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Ln3" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblDescrip" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="eq_descrip" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="eq_citucwr" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdShowPrices" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="eq_channel" UniqueID="" Timestamp="" />

	*<DefinedPropArrayMethod>
		*m: compareprices
		*m: createchannelscursor		&& Creates cchannells cursor, and insert data for source of eq_channel combo box.
		*m: createchannelscursor_getfriendlyname
		*m: enablepricecorrectioncontrols
		*m: npersons_assign
		*m: onapplymealplan
		*m: onapplyminmaxstay
		*m: onapplyopenclosed
		*m: oncustomprice
		*m: ongetprices
		*m: onnewrateid
		*m: onpersonschange
		*m: setmaxadults
		*p: cmode
		*p: cresult
		*p: lnocitwebconnection		&& When .T., no Citweb connection is established, don't allow data to be saved.
		*p: npersons
	*</DefinedPropArrayMethod>

	Caption = "frmmngcwvrrt"
	cmode = 
	cresult = 
	DoCreate = .T.
	Height = 556
	lnocitwebconnection = .F.		&& When .T., no Citweb connection is established, don't allow data to be saved.
	Name = "frmmngcwvrrt"
	npersons = 0
	ShowTips = .T.
	Width = 976
	WindowType = 1

	ADD OBJECT 'cboMealPlan' AS tcombobox WITH ;
		BoundColumn = 2, ;
		BoundTo = .T., ;
		ColumnCount = 2, ;
		ColumnLines = .F., ;
		ColumnWidths = "100,20", ;
		Height = 23, ;
		Left = 705, ;
		Name = "cboMealPlan", ;
		RowSource = " ,  ,Room only,RO,Breakfast,BB,Half Board,HB,Full Board,FB,All inclusive,AI", ;
		RowSourceType = 1, ;
		Style = 2, ;
		TabIndex = 54, ;
		Top = 420, ;
		ZOrderSet = 33
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="combobox" />

	ADD OBJECT 'cboOC' AS tcombobox WITH ;
		BoundColumn = 2, ;
		BoundTo = .T., ;
		ColumnCount = 2, ;
		ColumnLines = .F., ;
		ColumnWidths = "100,20", ;
		Height = 23, ;
		Left = 873, ;
		Name = "cboOC", ;
		RowSource = "Open,1,Closed,2", ;
		RowSourceType = 1, ;
		Style = 2, ;
		TabIndex = 37, ;
		Top = 156, ;
		ZOrderSet = 33
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="combobox" />

	ADD OBJECT 'chkDeleteMinMaxStay' AS tcheckbox WITH ;
		Alignment = 0, ;
		AutoSize = .T., ;
		Caption = "chkDeleteMinMaxStay", ;
		ForeColor = 255,0,0, ;
		Left = 621, ;
		Name = "chkDeleteMinMaxStay", ;
		TabIndex = 47, ;
		Top = 315, ;
		Value = .F., ;
		ZOrderSet = 26
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="checkbox" />

	ADD OBJECT 'chkInactiv' AS tcheckbox WITH ;
		Alignment = 0, ;
		AutoSize = .T., ;
		Caption = "chkInactiv", ;
		Left = 204, ;
		Name = "chkInactiv", ;
		TabIndex = 4, ;
		Top = 15, ;
		ZOrderSet = 5
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="checkbox" />

	ADD OBJECT 'chkYieldManagerActive' AS tcheckbox WITH ;
		Alignment = 0, ;
		AutoSize = .T., ;
		Caption = "chkYieldManagerActive", ;
		Left = 427, ;
		Name = "chkYieldManagerActive", ;
		TabIndex = 11, ;
		Top = 39, ;
		ZOrderSet = 5
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="checkbox" />

	ADD OBJECT 'cmdApplyMinMaxStay' AS tcommandbutton WITH ;
		Caption = "cmdApplyMinMaxStay", ;
		Left = 669, ;
		Name = "cmdApplyMinMaxStay", ;
		TabIndex = 52, ;
		Top = 384, ;
		ZOrderSet = 31
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'cmdApplyMP' AS tcommandbutton WITH ;
		Caption = "cmdApplyMP", ;
		Left = 669, ;
		Name = "cmdApplyMP", ;
		TabIndex = 59, ;
		Top = 492, ;
		ZOrderSet = 38
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'cmdApplyOC' AS tcommandbutton WITH ;
		Caption = "cmdApplyOC", ;
		Left = 849, ;
		Name = "cmdApplyOC", ;
		TabIndex = 42, ;
		Top = 228, ;
		ZOrderSet = 31
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'cmdCancel' AS tcommandbutton WITH ;
		Caption = "cmdCancel", ;
		Left = 805, ;
		Name = "cmdCancel", ;
		TabIndex = 61, ;
		Top = 527, ;
		ZOrderSet = 40
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'cmdDelete' AS tcommandbutton WITH ;
		Caption = "cmdDelete", ;
		ForeColor = 255,0,0, ;
		Left = 717, ;
		Name = "cmdDelete", ;
		TabIndex = 35, ;
		Top = 228, ;
		ZOrderSet = 21
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'cmdgetprices' AS tcommandbutton WITH ;
		Caption = "cmdGetPrices", ;
		Left = 621, ;
		Name = "cmdgetprices", ;
		TabIndex = 34, ;
		Top = 228, ;
		ZOrderSet = 20
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'cmdOK' AS tcommandbutton WITH ;
		Caption = "cmdOK", ;
		Left = 709, ;
		Name = "cmdOK", ;
		TabIndex = 60, ;
		Top = 527, ;
		ZOrderSet = 39
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'cmdShowPrices' AS tcommandbutton WITH ;
		Caption = "...", ;
		Enabled = .F., ;
		Height = 23, ;
		Left = 950, ;
		Name = "cmdShowPrices", ;
		TabIndex = 26, ;
		ToolTipText = "Preisen vergleichen", ;
		Top = 60, ;
		Width = 23, ;
		ZOrderSet = 31
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'dtxtFrom' AS tdatectrl WITH ;
		Left = 705, ;
		Name = "dtxtFrom", ;
		TabIndex = 31, ;
		Top = 180, ;
		ZOrderSet = 17
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />

	ADD OBJECT 'dtxtFromMP' AS tdatectrl WITH ;
		Left = 705, ;
		Name = "dtxtFromMP", ;
		TabIndex = 56, ;
		Top = 444, ;
		ZOrderSet = 35
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />

	ADD OBJECT 'dtxtfromOC' AS tdatectrl WITH ;
		Left = 873, ;
		Name = "dtxtfromOC", ;
		TabIndex = 39, ;
		Top = 180, ;
		ZOrderSet = 28
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />

	ADD OBJECT 'dtxtFromStay' AS tdatectrl WITH ;
		Left = 705, ;
		Name = "dtxtFromStay", ;
		TabIndex = 49, ;
		Top = 336, ;
		ZOrderSet = 28
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />

	ADD OBJECT 'dtxtTo' AS tdatectrl WITH ;
		Left = 705, ;
		Name = "dtxtTo", ;
		TabIndex = 33, ;
		Top = 204, ;
		ZOrderSet = 19
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />

	ADD OBJECT 'dtxtToMP' AS tdatectrl WITH ;
		Left = 705, ;
		Name = "dtxtToMP", ;
		TabIndex = 58, ;
		Top = 468, ;
		ZOrderSet = 37
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />

	ADD OBJECT 'dtxttoOC' AS tdatectrl WITH ;
		Left = 873, ;
		Name = "dtxttoOC", ;
		TabIndex = 41, ;
		Top = 204, ;
		ZOrderSet = 30
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />

	ADD OBJECT 'dtxtToStay' AS tdatectrl WITH ;
		Left = 705, ;
		Name = "dtxtToStay", ;
		TabIndex = 51, ;
		Top = 360, ;
		ZOrderSet = 30
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />

	ADD OBJECT 'eq_adults' AS tcombobox WITH ;
		InputMask = ("9"), ;
		Left = 660, ;
		Name = "eq_adults", ;
		RowSource = "1,2,3,4,5", ;
		RowSourceType = 1, ;
		Style = 2, ;
		TabIndex = 15, ;
		Top = 36, ;
		Width = 48, ;
		ZOrderSet = 9
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="combobox" />

	ADD OBJECT 'eq_adusta' AS ttext WITH ;
		Alignment = 0, ;
		Format = "KR", ;
		Height = 23, ;
		InputMask = "9", ;
		Left = 733, ;
		Name = "eq_adusta", ;
		TabIndex = 17, ;
		Top = 36, ;
		Value = 0, ;
		Width = 27, ;
		ZOrderSet = 24
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />

	ADD OBJECT 'eq_channel' AS jcombobox WITH ;
		ColumnLines = .F., ;
		Height = 23, ;
		jboundcolumn = 2, ;
		jcolumnwidths = 240,0, ;
		jsql = SELECT code, id FROM cchannells ORDER BY 1 ASC, ;
		Left = 345, ;
		lsqlcursorfromalias = .T., ;
		Name = "eq_channel", ;
		Style = 2, ;
		TabIndex = 6, ;
		Top = 12, ;
		Visible = .F., ;
		Width = 72
		*< END OBJECT: ClassLib="..\libs\jbase.vcx" BaseClass="combobox" />

	ADD OBJECT 'eq_citcwcp' AS ttext WITH ;
		Alignment = 0, ;
		Enabled = .F., ;
		Format = "KR", ;
		Left = 877, ;
		Name = "eq_citcwcp", ;
		TabIndex = 25, ;
		Top = 60, ;
		Value = 0, ;
		Width = 70, ;
		ZOrderSet = 24
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />

	ADD OBJECT 'eq_citcwcr' AS ttext WITH ;
		Alignment = 0, ;
		Enabled = .F., ;
		Format = "KR", ;
		Height = 23, ;
		Left = 877, ;
		Name = "eq_citcwcr", ;
		TabIndex = 23, ;
		Top = 36, ;
		Value = 0, ;
		Width = 70, ;
		ZOrderSet = 24
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />

	ADD OBJECT 'eq_citucwr' AS tcheckbox WITH ;
		Alignment = 0, ;
		AutoSize = .T., ;
		Caption = "Preis Korrigieren", ;
		Left = 836, ;
		Name = "eq_citucwr", ;
		TabIndex = 21, ;
		Top = 15, ;
		ZOrderSet = 5
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="checkbox" />

	ADD OBJECT 'eq_descrip' AS ttext WITH ;
		Alignment = 0, ;
		Format = "KR", ;
		Height = 23, ;
		InputMask = (REPLICATE('X',40)), ;
		Left = 96, ;
		Name = "eq_descrip", ;
		TabIndex = 10, ;
		Top = 36, ;
		Value = 0, ;
		Width = 324, ;
		ZOrderSet = 24
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />

	ADD OBJECT 'eq_ratecod' AS jcbomain WITH ;
		corder = rc_ratecod, ;
		csqlselect = SELECT DISTINCT rc_ratecod FROM ratecode, ;
		csqlunion = , ;
		cwhere = , ;
		Format = "K", ;
		InputMask = (REPLICATE("!",10)), ;
		jcolumnwidths = , ;
		lappendblank = .F., ;
		Left = 660, ;
		lsqlcursorfromalias = .T., ;
		Name = "eq_ratecod", ;
		RowSourceType = 6, ;
		Style = 2, ;
		TabIndex = 13, ;
		Top = 12, ;
		ZOrderSet = 7
		*< END OBJECT: ClassLib="..\libs\jbase.vcx" BaseClass="combobox" />

	ADD OBJECT 'eq_rateid' AS ttext WITH ;
		Alignment = 0, ;
		Format = "KR", ;
		Height = 23, ;
		InputMask = (REPLICATE("X",16)), ;
		Left = 465, ;
		Name = "eq_rateid", ;
		TabIndex = 8, ;
		Top = 12, ;
		Value = 0, ;
		Visible = .F., ;
		Width = 99, ;
		ZOrderSet = 24
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />

	ADD OBJECT 'eq_vroom' AS tcombobox WITH ;
		BoundColumn = 4, ;
		BoundTo = .T., ;
		ColumnCount = 2, ;
		ColumnLines = .F., ;
		ColumnWidths = "50,150", ;
		Left = 96, ;
		Name = "eq_vroom", ;
		RowSourceType = 6, ;
		Style = 2, ;
		TabIndex = 3, ;
		Top = 12, ;
		ZOrderSet = 4
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="combobox" />

	ADD OBJECT 'grdCwRates' AS grdbasecommon WITH ;
		ColumnCount = 26, ;
		Height = 492, ;
		HighlightStyle = 0, ;
		Left = 12, ;
		lsetcursorsource = .F., ;
		Name = "grdCwRates", ;
		TabIndex = 1, ;
		Top = 60, ;
		Width = 605, ;
		ZOrderSet = 2, ;
		Grdbasesortcolumn1.HEADER1.Alignment = 2, ;
		Grdbasesortcolumn1.HEADER1.Caption = "", ;
		Grdbasesortcolumn1.HEADER1.Name = "HEADER1", ;
		Grdbasesortcolumn1.Name = "Grdbasesortcolumn1", ;
		Grdbasesortcolumn1.Tbgrid1.Name = "Tbgrid1", ;
		Grdbasesortcolumn1.Tbgrid1.ReadOnly = .T., ;
		Grdbasesortcolumn1.Width = 70, ;
		Grdbasesortcolumn10.ForeColor = 0,128,128, ;
		Grdbasesortcolumn10.Header1.Alignment = 2, ;
		Grdbasesortcolumn10.Header1.Caption = "Header1", ;
		Grdbasesortcolumn10.Header1.Name = "Header1", ;
		Grdbasesortcolumn10.Name = "Grdbasesortcolumn10", ;
		Grdbasesortcolumn10.ReadOnly = .F., ;
		Grdbasesortcolumn10.TBGRID1.ForeColor = 0,128,128, ;
		Grdbasesortcolumn10.TBGRID1.Name = "TBGRID1", ;
		Grdbasesortcolumn10.TBGRID1.ReadOnly = .F., ;
		Grdbasesortcolumn10.Width = 60, ;
		Grdbasesortcolumn11.HEADER1.Alignment = 2, ;
		Grdbasesortcolumn11.HEADER1.Caption = "Header1", ;
		Grdbasesortcolumn11.HEADER1.Name = "HEADER1", ;
		Grdbasesortcolumn11.Name = "Grdbasesortcolumn11", ;
		Grdbasesortcolumn11.TBGRID1.Name = "TBGRID1", ;
		Grdbasesortcolumn11.TBGRID1.ReadOnly = .T., ;
		Grdbasesortcolumn11.Width = 60, ;
		Grdbasesortcolumn12.ForeColor = 0,128,128, ;
		Grdbasesortcolumn12.HEADER1.Alignment = 2, ;
		Grdbasesortcolumn12.HEADER1.Caption = "Header1", ;
		Grdbasesortcolumn12.HEADER1.Name = "HEADER1", ;
		Grdbasesortcolumn12.Name = "Grdbasesortcolumn12", ;
		Grdbasesortcolumn12.ReadOnly = .F., ;
		Grdbasesortcolumn12.TBGRID1.ForeColor = 0,128,128, ;
		Grdbasesortcolumn12.TBGRID1.Name = "TBGRID1", ;
		Grdbasesortcolumn12.TBGRID1.ReadOnly = .F., ;
		Grdbasesortcolumn12.Width = 60, ;
		Grdbasesortcolumn13.ColumnOrder = 13, ;
		Grdbasesortcolumn13.HEADER1.Alignment = 2, ;
		Grdbasesortcolumn13.HEADER1.Caption = "Header1", ;
		Grdbasesortcolumn13.HEADER1.Name = "HEADER1", ;
		Grdbasesortcolumn13.Name = "Grdbasesortcolumn13", ;
		Grdbasesortcolumn13.TBGRID1.Name = "TBGRID1", ;
		Grdbasesortcolumn13.TBGRID1.ReadOnly = .T., ;
		Grdbasesortcolumn13.Width = 60, ;
		Grdbasesortcolumn14.ColumnOrder = 14, ;
		Grdbasesortcolumn14.ForeColor = 0,128,128, ;
		Grdbasesortcolumn14.HEADER1.Alignment = 2, ;
		Grdbasesortcolumn14.HEADER1.Caption = "Header1", ;
		Grdbasesortcolumn14.HEADER1.Name = "HEADER1", ;
		Grdbasesortcolumn14.Name = "Grdbasesortcolumn14", ;
		Grdbasesortcolumn14.ReadOnly = .F., ;
		Grdbasesortcolumn14.TBGRID1.ForeColor = 0,128,128, ;
		Grdbasesortcolumn14.TBGRID1.Name = "TBGRID1", ;
		Grdbasesortcolumn14.TBGRID1.ReadOnly = .F., ;
		Grdbasesortcolumn14.Width = 60, ;
		Grdbasesortcolumn15.ColumnOrder = 15, ;
		Grdbasesortcolumn15.HEADER1.Alignment = 2, ;
		Grdbasesortcolumn15.HEADER1.Caption = "Header1", ;
		Grdbasesortcolumn15.HEADER1.Name = "HEADER1", ;
		Grdbasesortcolumn15.Name = "Grdbasesortcolumn15", ;
		Grdbasesortcolumn15.TBGRID1.ForeColor = 0,0,0, ;
		Grdbasesortcolumn15.TBGRID1.Name = "TBGRID1", ;
		Grdbasesortcolumn15.TBGRID1.ReadOnly = .T., ;
		Grdbasesortcolumn15.Width = 60, ;
		Grdbasesortcolumn16.ColumnOrder = 16, ;
		Grdbasesortcolumn16.ForeColor = 0,128,128, ;
		Grdbasesortcolumn16.HEADER1.Alignment = 2, ;
		Grdbasesortcolumn16.HEADER1.Caption = "Header1", ;
		Grdbasesortcolumn16.HEADER1.Name = "HEADER1", ;
		Grdbasesortcolumn16.Name = "Grdbasesortcolumn16", ;
		Grdbasesortcolumn16.ReadOnly = .F., ;
		Grdbasesortcolumn16.TBGRID1.ForeColor = 0,128,128, ;
		Grdbasesortcolumn16.TBGRID1.Name = "TBGRID1", ;
		Grdbasesortcolumn16.TBGRID1.ReadOnly = .F., ;
		Grdbasesortcolumn16.Width = 60, ;
		Grdbasesortcolumn17.ColumnOrder = 17, ;
		Grdbasesortcolumn17.HEADER1.Alignment = 2, ;
		Grdbasesortcolumn17.HEADER1.Caption = "Header1", ;
		Grdbasesortcolumn17.HEADER1.Name = "HEADER1", ;
		Grdbasesortcolumn17.Name = "Grdbasesortcolumn17", ;
		Grdbasesortcolumn17.TBGRID1.Name = "TBGRID1", ;
		Grdbasesortcolumn17.TBGRID1.ReadOnly = .T., ;
		Grdbasesortcolumn17.Width = 60, ;
		Grdbasesortcolumn18.ColumnOrder = 18, ;
		Grdbasesortcolumn18.ForeColor = 0,128,128, ;
		Grdbasesortcolumn18.HEADER1.Alignment = 2, ;
		Grdbasesortcolumn18.HEADER1.Caption = "Header1", ;
		Grdbasesortcolumn18.HEADER1.Name = "HEADER1", ;
		Grdbasesortcolumn18.Name = "Grdbasesortcolumn18", ;
		Grdbasesortcolumn18.ReadOnly = .F., ;
		Grdbasesortcolumn18.TBGRID1.ForeColor = 0,128,128, ;
		Grdbasesortcolumn18.TBGRID1.Name = "TBGRID1", ;
		Grdbasesortcolumn18.TBGRID1.ReadOnly = .F., ;
		Grdbasesortcolumn18.Width = 60, ;
		Grdbasesortcolumn19.ColumnOrder = 19, ;
		Grdbasesortcolumn19.HEADER1.Alignment = 2, ;
		Grdbasesortcolumn19.HEADER1.Caption = "Header1", ;
		Grdbasesortcolumn19.HEADER1.Name = "HEADER1", ;
		Grdbasesortcolumn19.Name = "Grdbasesortcolumn19", ;
		Grdbasesortcolumn19.TBGRID1.Name = "TBGRID1", ;
		Grdbasesortcolumn19.Width = 40, ;
		Grdbasesortcolumn2.HEADER1.Alignment = 2, ;
		Grdbasesortcolumn2.HEADER1.Caption = "", ;
		Grdbasesortcolumn2.HEADER1.Name = "HEADER1", ;
		Grdbasesortcolumn2.Name = "Grdbasesortcolumn2", ;
		Grdbasesortcolumn2.Tbgrid1.Name = "Tbgrid1", ;
		Grdbasesortcolumn2.Tbgrid1.ReadOnly = .T., ;
		Grdbasesortcolumn2.Width = 20, ;
		Grdbasesortcolumn20.ColumnOrder = 20, ;
		Grdbasesortcolumn20.HEADER1.Alignment = 2, ;
		Grdbasesortcolumn20.HEADER1.Caption = "Header1", ;
		Grdbasesortcolumn20.HEADER1.Name = "HEADER1", ;
		Grdbasesortcolumn20.Name = "Grdbasesortcolumn20", ;
		Grdbasesortcolumn20.TBGRID1.ForeColor = 0,0,0, ;
		Grdbasesortcolumn20.TBGRID1.Name = "TBGRID1", ;
		Grdbasesortcolumn20.TBGRID1.ReadOnly = .T., ;
		Grdbasesortcolumn20.Width = 40, ;
		Grdbasesortcolumn21.ColumnOrder = 21, ;
		Grdbasesortcolumn21.ForeColor = 0,128,128, ;
		Grdbasesortcolumn21.HEADER1.Alignment = 2, ;
		Grdbasesortcolumn21.HEADER1.Caption = "Header1", ;
		Grdbasesortcolumn21.HEADER1.Name = "HEADER1", ;
		Grdbasesortcolumn21.Name = "Grdbasesortcolumn21", ;
		Grdbasesortcolumn21.ReadOnly = .F., ;
		Grdbasesortcolumn21.TBGRID1.ForeColor = 0,128,128, ;
		Grdbasesortcolumn21.TBGRID1.Name = "TBGRID1", ;
		Grdbasesortcolumn21.TBGRID1.ReadOnly = .F., ;
		Grdbasesortcolumn21.Width = 40, ;
		Grdbasesortcolumn22.ColumnOrder = 22, ;
		Grdbasesortcolumn22.ForeColor = 0,128,128, ;
		Grdbasesortcolumn22.HEADER1.Alignment = 2, ;
		Grdbasesortcolumn22.HEADER1.Caption = "Header1", ;
		Grdbasesortcolumn22.HEADER1.Name = "HEADER1", ;
		Grdbasesortcolumn22.Name = "Grdbasesortcolumn22", ;
		Grdbasesortcolumn22.ReadOnly = .F., ;
		Grdbasesortcolumn22.TBGRID1.ForeColor = 0,128,128, ;
		Grdbasesortcolumn22.TBGRID1.Name = "TBGRID1", ;
		Grdbasesortcolumn22.TBGRID1.ReadOnly = .F., ;
		Grdbasesortcolumn22.Width = 40, ;
		Grdbasesortcolumn23.ColumnOrder = 23, ;
		Grdbasesortcolumn23.HEADER1.Alignment = 2, ;
		Grdbasesortcolumn23.HEADER1.Caption = "Header1", ;
		Grdbasesortcolumn23.HEADER1.Name = "HEADER1", ;
		Grdbasesortcolumn23.Name = "Grdbasesortcolumn23", ;
		Grdbasesortcolumn23.TBGRID1.ForeColor = 0,0,0, ;
		Grdbasesortcolumn23.TBGRID1.Name = "TBGRID1", ;
		Grdbasesortcolumn23.TBGRID1.ReadOnly = .T., ;
		Grdbasesortcolumn23.Width = 50, ;
		Grdbasesortcolumn24.ColumnOrder = 24, ;
		Grdbasesortcolumn24.ForeColor = 0,128,128, ;
		Grdbasesortcolumn24.HEADER1.Alignment = 2, ;
		Grdbasesortcolumn24.HEADER1.Caption = "Header1", ;
		Grdbasesortcolumn24.HEADER1.Name = "HEADER1", ;
		Grdbasesortcolumn24.Name = "Grdbasesortcolumn24", ;
		Grdbasesortcolumn24.ReadOnly = .F., ;
		Grdbasesortcolumn24.TBGRID1.ForeColor = 0,128,128, ;
		Grdbasesortcolumn24.TBGRID1.Name = "TBGRID1", ;
		Grdbasesortcolumn24.TBGRID1.ReadOnly = .F., ;
		Grdbasesortcolumn24.Width = 50, ;
		Grdbasesortcolumn25.ColumnOrder = 25, ;
		Grdbasesortcolumn25.HEADER1.Alignment = 2, ;
		Grdbasesortcolumn25.HEADER1.Caption = "Header1", ;
		Grdbasesortcolumn25.HEADER1.Name = "HEADER1", ;
		Grdbasesortcolumn25.Name = "Grdbasesortcolumn25", ;
		Grdbasesortcolumn25.TBGRID1.Name = "TBGRID1", ;
		Grdbasesortcolumn25.Width = 50, ;
		Grdbasesortcolumn26.ColumnOrder = 26, ;
		Grdbasesortcolumn26.ForeColor = 0,128,128, ;
		Grdbasesortcolumn26.HEADER1.Alignment = 2, ;
		Grdbasesortcolumn26.HEADER1.Caption = "Header1", ;
		Grdbasesortcolumn26.HEADER1.Name = "HEADER1", ;
		Grdbasesortcolumn26.Name = "Grdbasesortcolumn26", ;
		Grdbasesortcolumn26.ReadOnly = .F., ;
		Grdbasesortcolumn26.TBGRID1.ForeColor = 0,128,128, ;
		Grdbasesortcolumn26.TBGRID1.Name = "TBGRID1", ;
		Grdbasesortcolumn26.TBGRID1.ReadOnly = .F., ;
		Grdbasesortcolumn26.Width = 50, ;
		Grdbasesortcolumn3.HEADER1.Alignment = 2, ;
		Grdbasesortcolumn3.HEADER1.Caption = "Header1", ;
		Grdbasesortcolumn3.HEADER1.Name = "HEADER1", ;
		Grdbasesortcolumn3.Name = "Grdbasesortcolumn3", ;
		Grdbasesortcolumn3.Tbgrid1.Name = "Tbgrid1", ;
		Grdbasesortcolumn3.Tbgrid1.ReadOnly = .T., ;
		Grdbasesortcolumn3.Width = 60, ;
		Grdbasesortcolumn4.ForeColor = 0,128,128, ;
		Grdbasesortcolumn4.HEADER1.Alignment = 2, ;
		Grdbasesortcolumn4.HEADER1.Caption = "Header1", ;
		Grdbasesortcolumn4.HEADER1.ForeColor = 0,128,0, ;
		Grdbasesortcolumn4.HEADER1.Name = "HEADER1", ;
		Grdbasesortcolumn4.Name = "Grdbasesortcolumn4", ;
		Grdbasesortcolumn4.ReadOnly = .F., ;
		Grdbasesortcolumn4.TBGRID1.ForeColor = 0,128,128, ;
		Grdbasesortcolumn4.TBGRID1.Name = "TBGRID1", ;
		Grdbasesortcolumn4.TBGRID1.ReadOnly = .F., ;
		Grdbasesortcolumn4.Width = 60, ;
		Grdbasesortcolumn5.Header1.Alignment = 2, ;
		Grdbasesortcolumn5.Header1.Caption = "Header1", ;
		Grdbasesortcolumn5.Header1.Name = "Header1", ;
		Grdbasesortcolumn5.Name = "Grdbasesortcolumn5", ;
		Grdbasesortcolumn5.Tbgrid1.Name = "Tbgrid1", ;
		Grdbasesortcolumn5.Tbgrid1.ReadOnly = .T., ;
		Grdbasesortcolumn5.Width = 60, ;
		Grdbasesortcolumn6.ForeColor = 0,128,128, ;
		Grdbasesortcolumn6.Header1.Alignment = 2, ;
		Grdbasesortcolumn6.Header1.Caption = "Header1", ;
		Grdbasesortcolumn6.Header1.Name = "Header1", ;
		Grdbasesortcolumn6.Name = "Grdbasesortcolumn6", ;
		Grdbasesortcolumn6.ReadOnly = .F., ;
		Grdbasesortcolumn6.Tbgrid1.ForeColor = 0,128,128, ;
		Grdbasesortcolumn6.Tbgrid1.Name = "Tbgrid1", ;
		Grdbasesortcolumn6.Tbgrid1.ReadOnly = .F., ;
		Grdbasesortcolumn6.Width = 60, ;
		Grdbasesortcolumn7.HEADER1.Alignment = 2, ;
		Grdbasesortcolumn7.HEADER1.Caption = "Header1", ;
		Grdbasesortcolumn7.HEADER1.Name = "HEADER1", ;
		Grdbasesortcolumn7.Name = "Grdbasesortcolumn7", ;
		Grdbasesortcolumn7.TBGRID1.Name = "TBGRID1", ;
		Grdbasesortcolumn7.TBGRID1.ReadOnly = .T., ;
		Grdbasesortcolumn7.Width = 60, ;
		Grdbasesortcolumn8.ForeColor = 0,128,128, ;
		Grdbasesortcolumn8.HEADER1.Alignment = 2, ;
		Grdbasesortcolumn8.HEADER1.Caption = "Header1", ;
		Grdbasesortcolumn8.HEADER1.Name = "HEADER1", ;
		Grdbasesortcolumn8.Name = "Grdbasesortcolumn8", ;
		Grdbasesortcolumn8.ReadOnly = .F., ;
		Grdbasesortcolumn8.TBGRID1.ForeColor = 0,128,128, ;
		Grdbasesortcolumn8.TBGRID1.Name = "TBGRID1", ;
		Grdbasesortcolumn8.TBGRID1.ReadOnly = .F., ;
		Grdbasesortcolumn8.Width = 60, ;
		Grdbasesortcolumn9.Header1.Alignment = 2, ;
		Grdbasesortcolumn9.Header1.Caption = "Header1", ;
		Grdbasesortcolumn9.Header1.Name = "Header1", ;
		Grdbasesortcolumn9.Name = "Grdbasesortcolumn9", ;
		Grdbasesortcolumn9.TBGRID1.Name = "TBGRID1", ;
		Grdbasesortcolumn9.TBGRID1.ReadOnly = .T., ;
		Grdbasesortcolumn9.Width = 60
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="grid" />

	ADD OBJECT 'lblChannel' AS tlabel WITH ;
		AutoSize = .T., ;
		Caption = "Channel", ;
		Left = 287, ;
		Name = "lblChannel", ;
		TabIndex = 5, ;
		Top = 16, ;
		Visible = .F., ;
		Width = 49, ;
		ZOrderSet = 6
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'lblDescrip' AS tlabel WITH ;
		AutoSize = .T., ;
		Caption = "lblDescrip", ;
		Left = 12, ;
		Name = "lblDescrip", ;
		TabIndex = 9, ;
		Top = 40, ;
		Width = 58, ;
		ZOrderSet = 6
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'lbleq_adults' AS tlabel WITH ;
		AutoSize = .T., ;
		Caption = "lbleq_adults", ;
		Left = 576, ;
		Name = "lbleq_adults", ;
		TabIndex = 14, ;
		Top = 39, ;
		Width = 70, ;
		ZOrderSet = 8
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'lbleq_ratecod' AS tlabel WITH ;
		AutoSize = .T., ;
		Caption = "lbleq_ratecod", ;
		Left = 576, ;
		Name = "lbleq_ratecod", ;
		TabIndex = 12, ;
		Top = 15, ;
		Width = 77, ;
		ZOrderSet = 6
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'lbleq_vroom' AS tlabel WITH ;
		AutoSize = .T., ;
		Caption = "lbleq_vroom", ;
		Left = 12, ;
		Name = "lbleq_vroom", ;
		TabIndex = 2, ;
		Top = 15, ;
		Width = 70, ;
		ZOrderSet = 3
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'lblfrom' AS tlabel WITH ;
		AutoSize = .T., ;
		Caption = "lblfrom", ;
		Left = 621, ;
		Name = "lblfrom", ;
		TabIndex = 30, ;
		Top = 183, ;
		Width = 40, ;
		ZOrderSet = 16
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'lblfrommms' AS tlabel WITH ;
		AutoSize = .T., ;
		Caption = "lblfrommms", ;
		Left = 621, ;
		Name = "lblfrommms", ;
		TabIndex = 48, ;
		Top = 339, ;
		Width = 69, ;
		ZOrderSet = 27
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'lblfromOC' AS tlabel WITH ;
		AutoSize = .T., ;
		Caption = "lblfromOC", ;
		Height = 17, ;
		Left = 813, ;
		Name = "lblfromOC", ;
		TabIndex = 38, ;
		Top = 183, ;
		Width = 58, ;
		ZOrderSet = 27
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'lblMealPlan' AS tlabel WITH ;
		AutoSize = .T., ;
		Caption = "lblMealPlan", ;
		Left = 621, ;
		Name = "lblMealPlan", ;
		TabIndex = 53, ;
		Top = 423, ;
		Width = 66, ;
		ZOrderSet = 32
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'lblminmaxstay' AS tlabel WITH ;
		AutoSize = .T., ;
		Caption = "lblminmaxstay", ;
		Left = 621, ;
		Name = "lblminmaxstay", ;
		TabIndex = 44, ;
		Top = 291, ;
		Width = 81, ;
		ZOrderSet = 23
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'lblminmaxstaydescript' AS tlabel WITH ;
		AutoSize = .T., ;
		Caption = "lblminmaxstaydescript", ;
		Left = 621, ;
		Name = "lblminmaxstaydescript", ;
		TabIndex = 43, ;
		Top = 267, ;
		Width = 125, ;
		ZOrderSet = 22
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'lblmpfrom' AS tlabel WITH ;
		AutoSize = .T., ;
		Caption = "lblmpfrom", ;
		Left = 621, ;
		Name = "lblmpfrom", ;
		TabIndex = 55, ;
		Top = 447, ;
		Width = 58, ;
		ZOrderSet = 34
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'lblmpto' AS tlabel WITH ;
		AutoSize = .T., ;
		Caption = "lblmpto", ;
		Left = 621, ;
		Name = "lblmpto", ;
		TabIndex = 57, ;
		Top = 471, ;
		Width = 43, ;
		ZOrderSet = 36
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'lblOC' AS tlabel WITH ;
		AutoSize = .T., ;
		Caption = "lblOC", ;
		Height = 17, ;
		Left = 813, ;
		Name = "lblOC", ;
		TabIndex = 36, ;
		Top = 160, ;
		Width = 33, ;
		ZOrderSet = 27
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'lblPersons' AS tlabel WITH ;
		AutoSize = .T., ;
		Caption = "lblPersons", ;
		Height = 17, ;
		Left = 756, ;
		Name = "lblPersons", ;
		TabIndex = 20, ;
		Top = 63, ;
		Width = 62, ;
		ZOrderSet = 12
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'lblPrice' AS tlabel WITH ;
		AutoSize = .T., ;
		Caption = "lblPrice", ;
		Left = 621, ;
		Name = "lblPrice", ;
		TabIndex = 28, ;
		Top = 159, ;
		Width = 43, ;
		ZOrderSet = 14
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'lblPriceCorrPercent' AS tlabel WITH ;
		AutoSize = .T., ;
		Caption = "Kor %", ;
		Height = 17, ;
		Left = 836, ;
		Name = "lblPriceCorrPercent", ;
		TabIndex = 24, ;
		Top = 63, ;
		Width = 35, ;
		ZOrderSet = 23
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'lblPriceCorrRate' AS tlabel WITH ;
		AutoSize = .T., ;
		Caption = "Kor ", ;
		Height = 17, ;
		Left = 836, ;
		Name = "lblPriceCorrRate", ;
		TabIndex = 22, ;
		Top = 39, ;
		Width = 31, ;
		ZOrderSet = 23
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'lblPriceFor' AS tlabel WITH ;
		AutoSize = .T., ;
		Caption = "lblPriceFor", ;
		Left = 621, ;
		Name = "lblPriceFor", ;
		TabIndex = 18, ;
		Top = 63, ;
		Width = 61, ;
		ZOrderSet = 10
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'lblRateId' AS tlabel WITH ;
		AutoSize = .T., ;
		Caption = "Rate ID", ;
		Left = 420, ;
		Name = "lblRateId", ;
		TabIndex = 7, ;
		Top = 16, ;
		Visible = .F., ;
		Width = 43, ;
		ZOrderSet = 6
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'lblto' AS tlabel WITH ;
		AutoSize = .T., ;
		Caption = "lblto", ;
		Left = 621, ;
		Name = "lblto", ;
		TabIndex = 32, ;
		Top = 207, ;
		Width = 25, ;
		ZOrderSet = 18
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'lbltomms' AS tlabel WITH ;
		AutoSize = .T., ;
		Caption = "lbltomms", ;
		Left = 621, ;
		Name = "lbltomms", ;
		TabIndex = 50, ;
		Top = 363, ;
		Width = 54, ;
		ZOrderSet = 29
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'lbltoOC' AS tlabel WITH ;
		AutoSize = .T., ;
		Caption = "lbltoOC", ;
		Left = 814, ;
		Name = "lbltoOC", ;
		TabIndex = 40, ;
		Top = 207, ;
		Width = 43, ;
		ZOrderSet = 29
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'Ln1' AS ln WITH ;
		BorderColor = 192,192,192, ;
		Height = 0, ;
		Left = 621, ;
		Name = "Ln1", ;
		Top = 258, ;
		Width = 352, ;
		ZOrderSet = 0
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="line" />

	ADD OBJECT 'Ln2' AS ln WITH ;
		BorderColor = 192,192,192, ;
		Height = 0, ;
		Left = 621, ;
		Name = "Ln2", ;
		Top = 413, ;
		Width = 184, ;
		ZOrderSet = 1
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="line" />

	ADD OBJECT 'Ln3' AS ln WITH ;
		BorderColor = 192,192,192, ;
		Height = 0, ;
		Left = 621, ;
		Name = "Ln3", ;
		Top = 523, ;
		Width = 184, ;
		ZOrderSet = 1
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="line" />

	ADD OBJECT 'optpricetype' AS toptiongroup WITH ;
		BackStyle = 0, ;
		ButtonCount = 3, ;
		Height = 67, ;
		Left = 621, ;
		Name = "optpricetype", ;
		TabIndex = 27, ;
		Top = 84, ;
		Value = 1, ;
		Width = 180, ;
		ZOrderSet = 13, ;
		Option1.AutoSize = .T., ;
		Option1.Caption = "optmin", ;
		Option1.ControlSource = "", ;
		Option1.Height = 17, ;
		Option1.Left = 5, ;
		Option1.Name = "optmin", ;
		Option1.Top = 5, ;
		Option1.Value = 1, ;
		Option1.Width = 56, ;
		Option2.AutoSize = .T., ;
		Option2.Caption = "optmax", ;
		Option2.ControlSource = "", ;
		Option2.Height = 17, ;
		Option2.Left = 5, ;
		Option2.Name = "optmax", ;
		Option2.Top = 24, ;
		Option2.Width = 58, ;
		Option3.AutoSize = .T., ;
		Option3.Caption = "optcustom", ;
		Option3.Height = 17, ;
		Option3.Left = 5, ;
		Option3.Name = "optcustom", ;
		Option3.Top = 43, ;
		Option3.Width = 76
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="optiongroup" />

	ADD OBJECT 'spnPriceForPersons' AS tspinner WITH ;
		KeyboardHighValue = 5, ;
		KeyboardLowValue = -3, ;
		Left = 705, ;
		Name = "spnPriceForPersons", ;
		SpinnerHighValue = 5.00, ;
		SpinnerLowValue = -3.00, ;
		TabIndex = 19, ;
		Top = 60, ;
		Value = 1, ;
		Width = 48, ;
		ZOrderSet = 11
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="spinner" />

	ADD OBJECT 'Tlabel1' AS tlabel WITH ;
		Caption = "St.B.", ;
		Height = 17, ;
		Left = 709, ;
		Name = "Tlabel1", ;
		TabIndex = 16, ;
		Top = 40, ;
		Width = 23, ;
		ZOrderSet = 8
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'txtMaxStay' AS ttext WITH ;
		Alignment = 0, ;
		Format = "KR", ;
		InputMask = "999", ;
		Left = 753, ;
		Name = "txtMaxStay", ;
		TabIndex = 46, ;
		Top = 288, ;
		Value = 0, ;
		Width = 40, ;
		ZOrderSet = 25
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtMinStay' AS ttext WITH ;
		Alignment = 0, ;
		Format = "KR", ;
		InputMask = "999", ;
		Left = 705, ;
		Name = "txtMinStay", ;
		TabIndex = 45, ;
		Top = 288, ;
		Value = 0, ;
		Width = 40, ;
		ZOrderSet = 24
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtPrice' AS ttext WITH ;
		Alignment = 3, ;
		Enabled = .F., ;
		Format = "KR", ;
		InputMask = "999999.99", ;
		Left = 705, ;
		Name = "txtPrice", ;
		TabIndex = 29, ;
		Top = 156, ;
		Value = 0.00, ;
		ZOrderSet = 15
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />
	
	PROCEDURE activatebeforefirsttime
		LOCAL l_lVisible
		IF this.nmode = NEW_MODE
			IF this.cmode = "ADD_RATES_MODE"
				l_lVisible = .T.
				this.OnNewRateId()
			ENDIF
		ELSE
			IF NOT EMPTY(thisform.oCitwebRates.oCwvrrt.eq_chvroom)
				l_lVisible = .T.
			ENDIF
		ENDIF
		IF l_lVisible
			STORE .T. TO ;
					this.lblChannel.Visible, this.eq_channel.Visible, this.lblRateId.Visible, this.eq_rateid.Visible
		ENDIF
		
		this.cboOC.Value = "2"
		
		this.enablepricecorrectioncontrols(.T.)
		
		IF this.lNoCitwebConnection
			this.cmdOK.Enabled = .F.
		ENDIF
		
		RETURN .T.
	ENDPROC

	PROCEDURE assigncaption
		this.Caption = GetLangText("MNGCWR","TXT_CITWEB_RATES")
		this.grdCwRates.grdBaseSortColumn3.Header1.Caption = LEFT(GetLangText("MNGCWR","TXT_ACTIVE_RATE"),7) + " 1"
		this.grdCwRates.grdBaseSortColumn4.Header1.Caption = GetLangText("MNGCWR","TXT_NEW_RATE")
		this.grdCwRates.grdBaseSortColumn5.Header1.Caption = LEFT(GetLangText("MNGCWR","TXT_ACTIVE_RATE"),7) + " 2"
		this.grdCwRates.grdBaseSortColumn6.Header1.Caption = GetLangText("MNGCWR","TXT_NEW_RATE")
		this.grdCwRates.grdBaseSortColumn7.Header1.Caption = LEFT(GetLangText("MNGCWR","TXT_ACTIVE_RATE"),7) + " 3"
		this.grdCwRates.grdBaseSortColumn8.Header1.Caption = GetLangText("MNGCWR","TXT_NEW_RATE")
		this.grdCwRates.grdBaseSortColumn9.Header1.Caption = LEFT(GetLangText("MNGCWR","TXT_ACTIVE_RATE"),7) + " 4"
		this.grdCwRates.grdBaseSortColumn10.Header1.Caption = GetLangText("MNGCWR","TXT_NEW_RATE")
		this.grdCwRates.grdBaseSortColumn11.Header1.Caption = LEFT(GetLangText("MNGCWR","TXT_ACTIVE_RATE"),7) + " 5"
		this.grdCwRates.grdBaseSortColumn12.Header1.Caption = GetLangText("MNGCWR","TXT_NEW_RATE")
		this.grdCwRates.grdBaseSortColumn13.Header1.Caption = "Kind Pr" + " 1"
		this.grdCwRates.grdBaseSortColumn14.Header1.Caption = GetLangText("MNGCWR","TXT_NEW_RATE")
		this.grdCwRates.grdBaseSortColumn15.Header1.Caption = "Kind Pr" + " 2"
		this.grdCwRates.grdBaseSortColumn16.Header1.Caption = GetLangText("MNGCWR","TXT_NEW_RATE")
		this.grdCwRates.grdBaseSortColumn17.Header1.Caption = "Kind Pr" + " 3"
		this.grdCwRates.grdBaseSortColumn18.Header1.Caption = GetLangText("MNGCWR","TXT_NEW_RATE")
		this.grdCwRates.grdBaseSortColumn19.Header1.Caption = GetLangText("MNGCWR","TXT_MIN_STAY")
		this.grdCwRates.grdBaseSortColumn20.Header1.Caption = GetLangText("MNGCWR","TXT_MAX_STAY")
		this.grdCwRates.grdBaseSortColumn21.Header1.Caption = GetLangText("MNGCWR","TXT_NEW_MIN_STAY")
		this.grdCwRates.grdBaseSortColumn22.Header1.Caption = GetLangText("MNGCWR","TXT_NEW_MAX_STAY")
		this.grdCwRates.grdBaseSortColumn23.Header1.Caption = GetLangText("MNGCWR","TXT_MEAL")
		this.grdCwRates.grdBaseSortColumn24.Header1.Caption = GetLangText("MNGCWR","TXT_MEAL_NEW")
		this.grdCwRates.grdBaseSortColumn25.Header1.Caption = GetLangText("MNGCWR","TXT_OPEN_CLOSED")
		this.grdCwRates.grdBaseSortColumn26.Header1.Caption = GetLangText("MNGCWR","TXT_OPEN_CLOSED_NEW")
		this.lbleq_vroom.Caption = GetLangText("MNGCWR","TXT_CW_ROOMTYPE")
		this.chkInactiv.Caption = GetLangText("AR", "T_INACTIVE")
		this.chkYieldManagerActive.Caption = GetLangText("MENU", "MGR_YIELD_MANAGMENT")
		this.lbldescrip.Caption = GetLangText("AR", "T_DESCRIPTION")
		this.lbleq_adults.Caption = GetLangText("MGRRESER", "TXT_RMMAX")
		this.lblPriceFor.Caption = GetLangText("MNGCWR", "TXT_PRICE_FOR_PERSONS")
		this.lblPersons.Caption = GetLangText("CONFPLAN", "TH_PERSONS")
		this.lbleq_ratecod.Caption = GetLangText("RATES", "TXT_RATECODE")
		this.optpricetype.optmin.Caption = GetLangText("MNGCWR","TXT_MIN_RATE")
		this.optpricetype.optmax.Caption = GetLangText("MNGCWR","TXT_MAX_RATE")
		this.optpricetype.optcustom.Caption = GetLangText("MNGCWR","TXT_NEW_RATE")
		this.lblPrice.Caption = GetLangText("MNGCWR","TXT_NEW_RATE")
		this.txtPrice.ToolTipText = GetLangText("MNGCWR","TXT_SET_PRICE_TO_ZERO")
		this.lblfrom.Caption = GetLangText("RESERVAT","T_FROM")
		this.lblto.Caption = GetLangText("RESERVAT","T_TO")
		this.lblOC.Caption = GetLangText("MNGCWR","TXT_OPEN_CLOSED_NEW")
		this.lblfromOC.Caption = GetLangText("RESERVAT","T_FROM")
		this.lbltoOC.Caption = GetLangText("RESERVAT","T_TO")
		this.cmdApplyOC.Caption = GetLangText("BILL","T_APPLY")
		this.cmdgetprices.Caption = GetLangText("MNGCWR","TXT_GET_RATES")
		this.cmdDelete.Caption = GetLangText("COMMON","TXT_DELETE")
		this.lblminmaxstaydescript.Caption = GetLangText("MNGCWR","TXT_MIN_MAX_STAY_DESCRIPT")
		this.lblminmaxstay.Caption = GetLangText("MNGCWR","TXT_MIN_MAX_STAY")
		this.lblfrommms.Caption = GetLangText("RESERVAT","T_FROM")
		this.lbltomms.Caption = GetLangText("RESERVAT","T_TO")
		this.chkDeleteMinMaxStay.Caption = GetLangText("COMMON","TXT_DELETE",,.T.)
		this.cmdApplyMinMaxStay.Caption = GetLangText("BILL","T_APPLY")
		this.lblMealPlan.Caption = GetLangText("MNGCWR","TXT_MEAL_PLAN")
		this.lblmpfrom.Caption = GetLangText("RESERVAT","T_FROM")
		this.lblmpto.Caption = GetLangText("RESERVAT","T_TO")
		this.cmdApplyMP.Caption = GetLangText("BILL","T_APPLY")
		this.cmdOK.Caption = GetLangText("COMMON","TXT_OK")
		this.cmdCancel.Caption = GetLangText("COMMON","TXT_CANCEL")
	ENDPROC

	PROCEDURE compareprices
		LOCAL l_nCorrPercent, l_nCorrRate
		LOCAL ARRAY l_aDefs(1,7)
		
		l_nCorrRate = thisform.oCitwebRates.oCwvrrt.eq_citcwcr
		
		IF thisform.oCitwebRates.oCwvrrt.eq_citcwcp <> 0
			l_nCorrPercent = thisform.oCitwebRates.oCwvrrt.eq_citcwcp/100
		ELSE
			l_nCorrPercent = 0
		ENDIF
		
		SELECT ew_date, ;
			CAST('' AS Char(8)) AS c_date, ;
			ew_rate, ew_rate AS c_price, ;
			ew_rate2, ew_rate2 AS c_price2, ;
			ew_rate3, ew_rate3 AS c_price3, ;
			ew_rate4, ew_rate4 AS c_price4, ;
			ew_rate5, ew_rate5 AS c_price5, ;
			ew_crate1, ew_crate1 AS c_cprice1, ;
			ew_crate2, ew_crate2 AS c_cprice2, ;
			ew_crate3, ew_crate3 AS c_cprice3 ;
			FROM curNewPrices ;
			WHERE ew_date >= g_sysdate ;
			INTO CURSOR ccprices ORDER BY 1 READWRITE
		SCAN ALL
			REPLACE c_date WITH MakeShorDateString(ew_date)
			DO CASE
				CASE l_nCorrRate <> 0
					IF ew_rate <> 0
						REPLACE c_price WITH MAX(ew_rate + l_nCorrRate,0)
					ENDIF
					IF ew_rate2 <> 0
						REPLACE c_price2 WITH MAX(ew_rate2 + l_nCorrRate,0)
					ENDIF
					IF ew_rate3 <> 0
						REPLACE c_price3 WITH MAX(ew_rate3 + l_nCorrRate,0)
					ENDIF
					IF ew_rate4 <> 0
						REPLACE c_price4 WITH MAX(ew_rate4 + l_nCorrRate,0)
					ENDIF
					IF ew_rate5 <> 0
						REPLACE c_price5 WITH MAX(ew_rate5 + l_nCorrRate,0)
					ENDIF
					IF ew_crate1 <> 0
						REPLACE c_cprice1 WITH MAX(ew_crate1 + l_nCorrRate,0)
					ENDIF
					IF ew_crate2 <> 0
						REPLACE c_cprice2 WITH MAX(ew_crate2 + l_nCorrRate,0)
					ENDIF
					IF ew_crate3 <> 0
						REPLACE c_cprice3 WITH MAX(ew_crate3 + l_nCorrRate,0)
					ENDIF
				CASE l_nCorrPercent <> 0
					IF ew_rate <> 0
						REPLACE c_price WITH MAX(ew_rate + (ew_rate * l_nCorrPercent),0)
					ENDIF
					IF ew_rate2 <> 0
						REPLACE c_price2 WITH MAX(ew_rate2 + (ew_rate2 * l_nCorrPercent),0)
					ENDIF
					IF ew_rate3 <> 0
						REPLACE c_price3 WITH MAX(ew_rate3 + (ew_rate3 * l_nCorrPercent),0)
					ENDIF
					IF ew_rate4 <> 0
						REPLACE c_price4 WITH MAX(ew_rate4 + (ew_rate4 * l_nCorrPercent),0)
					ENDIF
					IF ew_rate5 <> 0
						REPLACE c_price5 WITH MAX(ew_rate5 + (ew_rate5 * l_nCorrPercent),0)
					ENDIF
					IF ew_crate1 <> 0
						REPLACE c_cprice1 WITH MAX(ew_crate1 + (ew_crate1 * l_nCorrPercent),0)
					ENDIF
					IF ew_crate2 <> 0
						REPLACE c_cprice2 WITH MAX(ew_crate2 + (ew_crate2 * l_nCorrPercent),0)
					ENDIF
					IF ew_crate3 <> 0
						REPLACE c_cprice3 WITH MAX(ew_crate3 + (ew_crate3 * l_nCorrPercent),0)
					ENDIF
			ENDCASE
		ENDSCAN
		
		l_nRow = 1
		l_aDefs(l_nRow,1) = "c_date"
		l_aDefs(l_nRow,2) = 50
		l_aDefs(l_nRow,3) = "Datum"
		l_aDefs(l_nRow,4) = "TXT"
		l_aDefs(l_nRow,6) = .T.
		
		l_nRow = Aadd(@l_aDefs)
		l_aDefs(l_nRow,1) = "ew_rate"
		l_aDefs(l_nRow,2) = 50
		l_aDefs(l_nRow,3) = "Erw. 1"
		l_aDefs(l_nRow,4) = "TXT"
		l_aDefs(l_nRow,6) = .T.
		
		l_nRow = Aadd(@l_aDefs)
		l_aDefs(l_nRow,1) = "c_price"
		l_aDefs(l_nRow,2) = 50
		l_aDefs(l_nRow,3) = "Erw.K. 1"
		l_aDefs(l_nRow,4) = "TXT"
		l_aDefs(l_nRow,6) = .T.
		
		l_nRow = Aadd(@l_aDefs)
		l_aDefs(l_nRow,1) = "ew_rate2"
		l_aDefs(l_nRow,2) = 50
		l_aDefs(l_nRow,3) = "Erw. 2"
		l_aDefs(l_nRow,4) = "TXT"
		l_aDefs(l_nRow,6) = .T.
		
		l_nRow = Aadd(@l_aDefs)
		l_aDefs(l_nRow,1) = "c_price2"
		l_aDefs(l_nRow,2) = 50
		l_aDefs(l_nRow,3) = "Erw.K. 2"
		l_aDefs(l_nRow,4) = "TXT"
		l_aDefs(l_nRow,6) = .T.
		
		l_nRow = Aadd(@l_aDefs)
		l_aDefs(l_nRow,1) = "ew_rate3"
		l_aDefs(l_nRow,2) = 50
		l_aDefs(l_nRow,3) = "Erw. 3"
		l_aDefs(l_nRow,4) = "TXT"
		l_aDefs(l_nRow,6) = .T.
		
		l_nRow = Aadd(@l_aDefs)
		l_aDefs(l_nRow,1) = "c_price3"
		l_aDefs(l_nRow,2) = 50
		l_aDefs(l_nRow,3) = "Erw.K. 3"
		l_aDefs(l_nRow,4) = "TXT"
		l_aDefs(l_nRow,6) = .T.
		
		l_nRow = Aadd(@l_aDefs)
		l_aDefs(l_nRow,1) = "ew_rate4"
		l_aDefs(l_nRow,2) = 50
		l_aDefs(l_nRow,3) = "Erw. 4"
		l_aDefs(l_nRow,4) = "TXT"
		l_aDefs(l_nRow,6) = .T.
		
		l_nRow = Aadd(@l_aDefs)
		l_aDefs(l_nRow,1) = "c_price4"
		l_aDefs(l_nRow,2) = 50
		l_aDefs(l_nRow,3) = "Erw.K. 4"
		l_aDefs(l_nRow,4) = "TXT"
		l_aDefs(l_nRow,6) = .T.
		
		l_nRow = Aadd(@l_aDefs)
		l_aDefs(l_nRow,1) = "ew_rate5"
		l_aDefs(l_nRow,2) = 50
		l_aDefs(l_nRow,3) = "Erw. 5"
		l_aDefs(l_nRow,4) = "TXT"
		l_aDefs(l_nRow,6) = .T.
		
		l_nRow = Aadd(@l_aDefs)
		l_aDefs(l_nRow,1) = "c_price5"
		l_aDefs(l_nRow,2) = 50
		l_aDefs(l_nRow,3) = "Erw.K. 5"
		l_aDefs(l_nRow,4) = "TXT"
		l_aDefs(l_nRow,6) = .T.
		
		l_nRow = Aadd(@l_aDefs)
		l_aDefs(l_nRow,1) = "ew_crate1"
		l_aDefs(l_nRow,2) = 50
		l_aDefs(l_nRow,3) = "Ki. 1"
		l_aDefs(l_nRow,4) = "TXT"
		l_aDefs(l_nRow,6) = .T.
		
		l_nRow = Aadd(@l_aDefs)
		l_aDefs(l_nRow,1) = "c_cprice1"
		l_aDefs(l_nRow,2) = 50
		l_aDefs(l_nRow,3) = "Ki.K. 1"
		l_aDefs(l_nRow,4) = "TXT"
		l_aDefs(l_nRow,6) = .T.
		
		l_nRow = Aadd(@l_aDefs)
		l_aDefs(l_nRow,1) = "ew_crate2"
		l_aDefs(l_nRow,2) = 50
		l_aDefs(l_nRow,3) = "Ki. 2"
		l_aDefs(l_nRow,4) = "TXT"
		l_aDefs(l_nRow,6) = .T.
		
		l_nRow = Aadd(@l_aDefs)
		l_aDefs(l_nRow,1) = "c_cprice2"
		l_aDefs(l_nRow,2) = 50
		l_aDefs(l_nRow,3) = "Ki.K. 2"
		l_aDefs(l_nRow,4) = "TXT"
		l_aDefs(l_nRow,6) = .T.
		
		l_nRow = Aadd(@l_aDefs)
		l_aDefs(l_nRow,1) = "ew_crate3"
		l_aDefs(l_nRow,2) = 50
		l_aDefs(l_nRow,3) = "Ki. 3"
		l_aDefs(l_nRow,4) = "TXT"
		l_aDefs(l_nRow,6) = .T.
		
		l_nRow = Aadd(@l_aDefs)
		l_aDefs(l_nRow,1) = "c_cprice3"
		l_aDefs(l_nRow,2) = 50
		l_aDefs(l_nRow,3) = "Ki.K. 3"
		l_aDefs(l_nRow,4) = "TXT"
		l_aDefs(l_nRow,6) = .T.
		
		SELECT ccprices
		GO TOP
		
		l_nResult = FNDoBrwMulSel("ccprices", @l_aDefs, "Preisen vergleichen",,,, .T.,,,.T.)
		
		RETURN .T.
	ENDPROC

	PROCEDURE createchannelscursor		&& Creates cchannells cursor, and insert data for source of eq_channel combo box.
		LOCAL i, l_cCode
		
		CREATE CURSOR cchannells (id i, code c(40))
		FOR i = 1 TO ALEN(_screen.oGlobal.aExtServer)
			l_cCode = ALLTRIM(_screen.oGlobal.aExtServer(i)) + " (" + this.CreateChannelsCursor_GetFriendlyName(_screen.oGlobal.aExtServer(i)) + ")"
			INSERT INTO cchannells (id, code) VALUES (i, l_cCode)
		ENDFOR
	ENDPROC

	PROCEDURE createchannelscursor_getfriendlyname
		LPARAMETERS lp_cCode
		LOCAL l_cFriendlyName
		
		l_cFriendlyName = ""
		
		DO CASE
			CASE EMPTY(lp_cCode)
			CASE lp_cCode == "DIRS"
				l_cFriendlyName = "Dirs 21"
			CASE lp_cCode == "CLTZ"
				l_cFriendlyName = "Cultuzz"
			CASE lp_cCode == "HOSC"
				l_cFriendlyName = "HoSeco"
			CASE lp_cCode == "CLST"
				l_cFriendlyName = "Clearing Station"
			CASE lp_cCode == "WEBS"
				l_cFriendlyName = "Web Service"
			CASE lp_cCode == "CHMN"
				l_cFriendlyName = "Channelmanager / Webmedia"
			CASE lp_cCode == "CITD"
				l_cFriendlyName = "Citadel Booking Old"
			CASE lp_cCode == "RHNC"
				l_cFriendlyName = "RhnChannelPro"
			CASE lp_cCode == "CITB"
				l_cFriendlyName = "Citadel Booking New"
			CASE lp_cCode == "PART"
				l_cFriendlyName = "Parityrate"
			CASE lp_cCode == "HSOL"
				l_cFriendlyName = "HotelNetSolutions"
			CASE lp_cCode == "HSPI"
				l_cFriendlyName = "Hotel Spider"
			CASE lp_cCode == "SIMI"
				l_cFriendlyName = "SiteMinder"
			CASE lp_cCode == "PROF"
				l_cFriendlyName = "ProfitRoom"
			CASE lp_cCode == "WRES"
				l_cFriendlyName = "WebRes"
			CASE lp_cCode == "APRO"
				l_cFriendlyName = "AvailPro"
			CASE lp_cCode == "DIR3"
				l_cFriendlyName = "Dirs21 V3"
			CASE lp_cCode == "SABR"
				l_cFriendlyName = "Sabre"
			CASE lp_cCode == "HOPA"
				l_cFriendlyName = "Hotel Partner YM"
			CASE lp_cCode == "IHRS"
				l_cFriendlyName = "HRS ImWeb"
		ENDCASE
		
		RETURN l_cFriendlyName
	ENDPROC

	PROCEDURE enablepricecorrectioncontrols
		LPARAMETERS lp_lFirstTime
		LOCAL l_lEnable
		l_lEnable = thisform.oCitwebRates.oCwvrrt.eq_citucwr
		
		* Default is disabled
		IF lp_lFirstTime AND NOT l_lEnable
			RETURN .T.
		ENDIF
		
		STORE l_lEnable TO this.eq_citcwcr.Enabled, this.eq_citcwcp.Enabled, this.cmdShowPrices.Enabled
	ENDPROC

	PROCEDURE Init
		LPARAMETERS tnMode, tcVirtRoomtype, tcAdditionalMode
		LOCAL lcRoomTypes, lcRTypeNames, lcMessage
		
		this.nmode = tnMode
		IF VARTYPE(tcAdditionalMode)='C'
			this.cmode = tcAdditionalMode
		ENDIF
		this.NewObject("oCitwebRates","CitwebRates","proc_yield.vcx")
		this.oCitwebRates.dSysDate = SysDate()
		this.oCitwebRates.cLangnum = g_Langnum
		this.oCitwebRates.cPathDesk = gcDatadir
		this.oCitwebRates.cPathCitweb = _screen.oGlobal.oParam2.pa_ciwebdr
		this.oCitwebRates.OpenAliases()
		this.oCitwebRates.OnInit(this.nmode, tcVirtRoomtype)
		
		IF USED(this.oCitwebRates.cvirtrooms)
			SELECT *, CAST('' AS C(254)) AS c_fortypes, CAST('' AS C(254)) AS c_fortname ;
				FROM (this.oCitwebRates.cvirtrooms) ORDER BY vr_rtname INTO CURSOR curVirtRooms READWRITE
		ELSE
			this.lNoCitwebConnection = .T.
			CREATE CURSOR curVirtRooms (vr_vroom C(3), vr_rtname C(10), c_fortypes C(254), c_fortname C(254))	&& Fake data
		ENDIF
		
		IF NOT EMPTY(tcVirtRoomtype) AND NOT DLocate("curVirtRooms", "vr_vroom = " + SqlCnv(tcVirtRoomtype))
			INSERT INTO curVirtRooms (vr_vroom) VALUES (tcVirtRoomtype)
		ENDIF
		
		IF USED(this.oCitwebRates.cvirtrconn)
			SELECT curVirtRooms
			SCAN
				STORE "" TO lcRoomTypes, lcRTypeNames
				SELECT (this.oCitwebRates.cvirtrconn)
				SCAN FOR vc_vroom = curVirtRooms.vr_vroom
					lcRoomTypes = lcRoomTypes + IIF(EMPTY(lcRoomTypes), "", ",") + vc_room
					lcRTypeNames = lcRTypeNames + IIF(EMPTY(lcRTypeNames), "", ",") + Get_rt_roomtyp(vc_room)
				ENDSCAN
				SELECT curVirtRooms
				REPLACE c_fortypes WITH lcRoomTypes, c_fortname WITH lcRTypeNames
			ENDSCAN
		ENDIF
		
		lcMessage = ""
		IF NOT USED(this.oCitwebRates.cvirtrooms)
			lcMessage = "virtrooms " + GetLangText("OPENFILE","TXT_CANTBEOPENEDSHARED")
		ENDIF
		IF NOT USED(this.oCitwebRates.cvirtrconn)
			lcMessage = lcMessage + CRLF + "virtrconn " + GetLangText("OPENFILE","TXT_CANTBEOPENEDSHARED")
		ENDIF
		IF NOT EMPTY(lcMessage)
			Alert(lcMessage)
		ENDIF
		
		this.eq_ratecod.Init(.T.)
		DODEFAULT()
		
		this.eq_vroom.Enabled = (this.nmode <> EDIT_MODE)
		this.nPersons = this.oCitwebRates.oCwvrrt.eq_adults
		
		this.grdCwRates.grdBaseSortColumn4.SetFocus()
		
		RETURN .T.
	ENDPROC

	PROCEDURE Load
		DODEFAULT()
		
		this.CreateChannelsCursor()
		
		RETURN .T.
	ENDPROC

	PROCEDURE npersons_assign
		LPARAMETERS tnNewVal
		
		IF this.nPersons <> tnNewVal
			IF tnNewVal = 0
				IF this.spnPriceForPersons.Tag = "UP"
					tnNewVal = 1
				ELSE
					tnNewVal = -1
				ENDIF
			ENDIF
			this.nPersons = tnNewVal
			*IF tnNewVal <> 0
				this.OnPersonsChange()
			*ENDIF
		ENDIF
	ENDPROC

	PROCEDURE onapplymealplan
		LOCAL lnRecNo, ldFrom, ldTo, lcMealPlan
		
		ldFrom = this.dtxtFromMP.Value
		ldTo = this.dtxtToMP.Value
		
		IF NOT EMPTY(ldFrom) AND NOT EMPTY(ldTo)
			lcMealPlan = this.cboMealPlan.Value
		
			lnRecNo = RECNO("curNewPrices")
			REPLACE c_mealcod WITH lcMealPlan FOR BETWEEN(ew_date, ldFrom, ldTo) IN curNewPrices
			GO lnRecNo IN curNewPrices
		
			this.grdCwRates.Refresh()
		ENDIF
	ENDPROC

	PROCEDURE onapplyminmaxstay
		LOCAL lnRecNo, ldFrom, ldTo, lnMinStay, lnMaxStay
		
		ldFrom = this.dtxtFromStay.Value
		ldTo = this.dtxtToStay.Value
		
		IF NOT EMPTY(ldFrom) AND NOT EMPTY(ldTo)
			IF this.chkDeleteMinMaxStay.Value
				STORE -1 TO lnMinStay, lnMaxStay
			ELSE
				lnMinStay = this.txtMinStay.Value
				lnMaxStay = this.txtMaxStay.Value
			ENDIF
		
			lnRecNo = RECNO("curNewPrices")
			REPLACE c_minstay WITH lnMinStay, c_maxstay WITH lnMaxStay FOR BETWEEN(ew_date, ldFrom, ldTo) IN curNewPrices
			GO lnRecNo IN curNewPrices
		
			this.grdCwRates.Refresh()
		ENDIF
	ENDPROC

	PROCEDURE onapplyopenclosed
		LOCAL lnRecNo, ldFrom, ldTo, lnOpenClosed
		
		ldFrom = this.dtxtfromOC.Value
		ldTo = this.dtxttoOC.Value
		
		IF NOT EMPTY(ldFrom) AND NOT EMPTY(ldTo)
			lnOpenClosed = INT(VAL(this.cboOC.Value))
		
			lnRecNo = RECNO("curNewPrices")
			REPLACE c_closed WITH lnOpenClosed FOR BETWEEN(ew_date, ldFrom, ldTo) IN curNewPrices
			GO lnRecNo IN curNewPrices
		
			this.grdCwRates.Refresh()
		ENDIF
		
		RETURN .T.
	ENDPROC

	PROCEDURE onclose
		this.cResult = this.oCitwebRates.oCwvrrt.eq_vroom
		DODEFAULT()
		
		RETURN .T.
	ENDPROC

	PROCEDURE oncustomprice
		LOCAL lnRecNo, ldFrom, ldTo, lnPrice, lcField
		
		IF RECCOUNT("curNewPrices") = 0
			* Empty cursor. First fill cursor with dates.
			this.OnGetPrices()
		ENDIF
		
		ldFrom = this.dtxtFrom.Value
		ldTo = this.dtxtTo.Value
		lnPrice = this.txtPrice.Value
		
		IF NOT EMPTY(ldFrom) AND NOT EMPTY(ldTo) AND (lnPrice >= 0.00 OR lnPrice = -1)
			IF this.nPersons < 0
				lcField = "c_crate" + TRANSFORM(ABS(this.nPersons))
			ELSE
				lcField = "c_rate" + IIF(this.nPersons = 1 ,"", TRANSFORM(this.nPersons))
			ENDIF
		
			lnRecNo = RECNO("curNewPrices")
			REPLACE &lcField WITH lnPrice FOR BETWEEN(ew_date, ldFrom, ldTo) IN curNewPrices
			GO lnRecNo IN curNewPrices
		
			this.grdCwRates.Refresh()
		ENDIF
		
		RETURN .T.
	ENDPROC

	PROCEDURE ondelete
		LOCAL lcNear, ldDate
		
		IF YesNo(GetLangText("MNGCWR","TXT_DELETE_DAYS") + " " + DTOC(this.oCitwebRates.dFrom) + "-" + DTOC(this.oCitwebRates.dTo) + "?")
			ldDate = curNewPrices.ew_date
			this.oCitwebRates.OnDelete()
			IF EMPTY(ldDate)
				GO TOP IN curNewPrices
			ELSE
				lcNear = SET("Near")
				SET NEAR ON
				=SEEK(ldDate, "curNewPrices", "ew_date")
				SET NEAR &lcNear
			ENDIF	
			this.grdCwRates.Refresh()
		ENDIF
		
		RETURN .T.
	ENDPROC

	PROCEDURE ongetprices
		LOCAL lcNear, ldDate, lcRoomTypes
		
		WAIT WINDOW GetLangText("COMMON","T_PLEASEWAIT") NOWAIT
		
		ldDate = curNewPrices.ew_date
		lcRoomTypes = ALLTRIM(curVirtRooms.c_fortypes)
		
		this.oCitwebRates.OnGetPrices(lcRoomTypes, this.nPersons, this.optPriceType.Value)
		
		IF EMPTY(ldDate)
			GO TOP IN curNewPrices
		ELSE
			lcNear = SET("Near")
			SET NEAR ON
			=SEEK(ldDate, "curNewPrices", "ew_date")
			SET NEAR &lcNear
		ENDIF	
		
		this.grdCwRates.Refresh()
		
		WAIT CLEAR
		
		RETURN .T.
	ENDPROC

	PROCEDURE onnewrateid
		this.eq_vroom.ControlSource = "thisform.oCitwebRates.oCwvrrt.eq_chvroom"
		this.oCitwebRates.oCwvrrt.eq_vroom = STRTRAN(nextid("CWRTLINK"),"@","")
		
		RETURN .T.
	ENDPROC

	PROCEDURE onpersonschange
		LOCAL i, lnRecNo, lcField, lnWidthEwRate, lnWidthCRate, lcEwRateColumn, lcCRateColumn, llVisible, lnPersons, l_nChild, l_cCaption
		
		lnWidthEwRate = this.grdCwRates.grdBaseSortColumn3.Width
		lnWidthCRate = this.grdCwRates.grdBaseSortColumn4.Width
		FOR i = 1 TO 8
			lcEwRateColumn = "grdBaseSortColumn" + TRANSFORM(2*i+1)
			lcCRateColumn = "grdBaseSortColumn" + TRANSFORM(2*i+2)
			IF this.grdCwRates.&lcEwRateColumn..Visible
				lnWidthEwRate = this.grdCwRates.&lcEwRateColumn..Width
				lnWidthCRate = this.grdCwRates.&lcCRateColumn..Width
			ENDIF
		NEXT
		FOR i = 1 TO 8
			lcEwRateColumn = "grdBaseSortColumn" + TRANSFORM(2*i+1)
			lcCRateColumn = "grdBaseSortColumn" + TRANSFORM(2*i+2)
			lnPersons = ICASE(this.nPersons = -1, 6, this.nPersons = -2, 7, this.nPersons = -3, 8, this.nPersons)
			llVisible = (i = lnPersons)
			STORE llVisible TO this.grdCwRates.&lcEwRateColumn..Visible, this.grdCwRates.&lcCRateColumn..Visible
			this.grdCwRates.&lcEwRateColumn..Width = lnWidthEwRate
			this.grdCwRates.&lcCRateColumn..Width = lnWidthCRate
		NEXT
		
		IF this.nPersons < 0
			l_nChild = ABS(this.nPersons)
			l_cCaption = lstitem(_screen.oGlobal.oParam.pa_childs, l_nChild)
			IF EMPTY(l_cCaption)
				l_cCaption = TRANSFORM(l_nChild)
			ENDIF
			this.lblPersons.Caption = GetLangText("RATES", "TXT_CHILDREN") + " " + l_cCaption
		ELSE
			this.lblPersons.Caption = GetLangText("CONFPLAN", "TH_PERSONS")
		ENDIF
		
		this.grdCwRates.Refresh()
		
		RETURN .T.
	ENDPROC

	PROCEDURE onsave
		LOCAL lnSuccess
		
		WAIT WINDOW NOWAIT GetLangText("COMMON", "T_PLEASEWAIT")
		
		lnSuccess = this.oCitwebRates.OnValid()
		IF lnSuccess = 1 OR lnSuccess = 2
			Alert(this.oCitwebRates.cMessage)
			this.eq_vroom.SetFocus()
			RETURN .F.
		ENDIF
		
		this.oCitwebRates.oCwvrrt.eq_userid = g_userid
		lnSuccess = this.oCitwebRates.OnSave()
		IF lnSuccess = 0
			IF NOT this.oCitwebRates.oCwvrrt.eq_inactiv AND _screen.oGlobal.oParam2.pa_cwsync AND YesNo(GetLangText("MNGCWR","TXT_SEND_PRICES_NOW"))
				CCOnCitwebSync("all")
			ENDIF
			this.OnClose()
		ENDIF
		
		WAIT CLEAR
		
		RETURN .T.
	ENDPROC

	PROCEDURE setcontrolsource
		SELECT curNewPrices
		this.grdCwRates.RecordSource = "curNewPrices"
		this.grdCwRates.grdBaseSortColumn1.ControlSource = "ew_date"
		this.grdCwRates.grdBaseSortColumn2.ControlSource = "LEFT(MyCDoW(ew_date),2)"
		this.grdCwRates.grdBaseSortColumn3.ControlSource = "ew_rate"
		this.grdCwRates.grdBaseSortColumn4.ControlSource = "c_rate"
		this.grdCwRates.grdBaseSortColumn5.ControlSource = "ew_rate2"
		this.grdCwRates.grdBaseSortColumn6.ControlSource = "c_rate2"
		this.grdCwRates.grdBaseSortColumn7.ControlSource = "ew_rate3"
		this.grdCwRates.grdBaseSortColumn8.ControlSource = "c_rate3"
		this.grdCwRates.grdBaseSortColumn9.ControlSource = "ew_rate4"
		this.grdCwRates.grdBaseSortColumn10.ControlSource = "c_rate4"
		this.grdCwRates.grdBaseSortColumn11.ControlSource = "ew_rate5"
		this.grdCwRates.grdBaseSortColumn12.ControlSource = "c_rate5"
		this.grdCwRates.grdBaseSortColumn13.ControlSource = "ew_crate1"
		this.grdCwRates.grdBaseSortColumn14.ControlSource = "c_crate1"
		this.grdCwRates.grdBaseSortColumn15.ControlSource = "ew_crate2"
		this.grdCwRates.grdBaseSortColumn16.ControlSource = "c_crate2"
		this.grdCwRates.grdBaseSortColumn17.ControlSource = "ew_crate3"
		this.grdCwRates.grdBaseSortColumn18.ControlSource = "c_crate3"
		this.grdCwRates.grdBaseSortColumn19.ControlSource = "ew_minstay"
		this.grdCwRates.grdBaseSortColumn20.ControlSource = "ew_maxstay"
		this.grdCwRates.grdBaseSortColumn21.ControlSource = "c_minstay"
		this.grdCwRates.grdBaseSortColumn22.ControlSource = "c_maxstay"
		this.grdCwRates.grdBaseSortColumn23.ControlSource = "ew_mealcod"
		this.grdCwRates.grdBaseSortColumn24.ControlSource = "c_mealcod"
		this.grdCwRates.grdBaseSortColumn25.ControlSource = "IIF(ew_closed=2,'Closed','Open')"
		this.grdCwRates.grdBaseSortColumn26.ControlSource = "c_closed"
		this.grdCwRates.grdBaseSortColumn2.DynamicForeColor = "IIF(INLIST(DOW(ew_date), 1, 7), RGB(255, 0, 0), RGB(0, 0, 0))"
		this.eq_vroom.RowSource = "curVirtRooms.vr_rtname,c_fortname,c_fortypes,vr_vroom"
		IF this.nmode = EDIT_MODE
			this.eq_vroom.ControlSource = IIF(EMPTY(thisform.oCitwebRates.oCwvrrt.eq_chvroom),"thisform.oCitwebRates.oCwvrrt.eq_vroom","thisform.oCitwebRates.oCwvrrt.eq_chvroom")
		ELSE
			this.eq_vroom.ControlSource = "thisform.oCitwebRates.oCwvrrt.eq_vroom"
		ENDIF
		this.chkInactiv.ControlSource = "thisform.oCitwebRates.oCwvrrt.eq_inactiv"
		this.chkYieldManagerActive.ControlSource = "thisform.oCitwebRates.oCwvrrt.eq_ymactiv"
		this.eq_ratecod.ControlSource = "thisform.oCitwebRates.oCwvrrt.eq_ratecod"
		this.eq_adults.ControlSource = "thisform.oCitwebRates.oCwvrrt.eq_adults"
		this.eq_adusta.ControlSource = "thisform.oCitwebRates.oCwvrrt.eq_adusta"
		this.eq_rateid.ControlSource = "thisform.oCitwebRates.oCwvrrt.eq_rateid"
		this.eq_descrip.ControlSource = "thisform.oCitwebRates.oCwvrrt.eq_descrip"
		this.eq_channel.ControlSource = "thisform.oCitwebRates.oCwvrrt.eq_channel"
		this.spnPriceForPersons.ControlSource = "thisform.nPersons"
		this.dtxtFrom.ControlSource = "thisform.oCitwebRates.dFrom"
		this.dtxtTo.ControlSource = "thisform.oCitwebRates.dTo"
		this.eq_citucwr.ControlSource = "thisform.oCitwebRates.oCwvrrt.eq_citucwr"
		this.eq_citcwcr.ControlSource = "thisform.oCitwebRates.oCwvrrt.eq_citcwcr"
		this.eq_citcwcp.ControlSource = "thisform.oCitwebRates.oCwvrrt.eq_citcwcp"
		this.SetMaxAdults()
	ENDPROC

	PROCEDURE setmaxadults
		IF this.nPersons > this.oCitwebRates.oCwvrrt.eq_adults
			this.nPersons = this.oCitwebRates.oCwvrrt.eq_adults
		ENDIF
		
		this.spnPriceForPersons.KeyboardHighValue = this.oCitwebRates.oCwvrrt.eq_adults
		this.spnPriceForPersons.SpinnerHighValue = this.oCitwebRates.oCwvrrt.eq_adults
		this.spnPriceForPersons.Refresh()
	ENDPROC

	PROCEDURE Unload
		DODEFAULT()
		
		RETURN this.cResult
	ENDPROC

	PROCEDURE chkDeleteMinMaxStay.InteractiveChange
		STORE NOT this.Value TO this.Parent.txtMinStay.Enabled, this.Parent.txtMaxStay.Enabled
	ENDPROC

	PROCEDURE cmdApplyMinMaxStay.Click
		thisform.OnApplyMinMaxStay()
	ENDPROC

	PROCEDURE cmdApplyMP.Click
		thisform.OnApplyMealPlan()
	ENDPROC

	PROCEDURE cmdApplyOC.Click
		thisform.OnApplyOpenClosed()
	ENDPROC

	PROCEDURE cmdCancel.Click
		thisform.Onclose()
	ENDPROC

	PROCEDURE cmdDelete.Click
		thisform.OnDelete()
	ENDPROC

	PROCEDURE cmdgetprices.Click
		IF thisform.optpricetype.Value = 3
			thisform.OnCustomPrice()
		ELSE
			thisform.OnGetPrices()
		ENDIF
		
		RETURN .T.
	ENDPROC

	PROCEDURE cmdOK.Click
		thisform.OnSave()
	ENDPROC

	PROCEDURE cmdShowPrices.Click
		thisform.ComparePrices()
	ENDPROC

	PROCEDURE dtxtFrom.LostFocus
		IF NOT BETWEEN(this.Value, thisform.oCitwebRates.dMindate, thisform.oCitwebRates.dMaxdate)
			Alert(GetLangText("KEYCARD","TXT_RANGEERROR") + " (Min: " + DTOC(thisform.oCitwebRates.dMindate) + " Max: " + DTOC(thisform.oCitwebRates.dMaxdate) + ")")
			this.Value = SysDate()
			this.Refresh()
		ENDIF
	ENDPROC

	PROCEDURE dtxtTo.LostFocus
		IF NOT BETWEEN(this.Value, thisform.oCitwebRates.dMindate, thisform.oCitwebRates.dMaxdate)
			Alert(GetLangText("KEYCARD","TXT_RANGEERROR") + " (Min: " + DTOC(thisform.oCitwebRates.dMindate) + " Max: " + DTOC(thisform.oCitwebRates.dMaxdate) + ")")
			this.Value = SysDate()
			this.Refresh()
		ENDIF
	ENDPROC

	PROCEDURE eq_adults.InteractiveChange
		thisform.oCitwebRates.oCwvrrt.eq_adults = INT(this.Value)
		thisform.SetMaxAdults()
	ENDPROC

	PROCEDURE eq_citucwr.Click
		thisform.EnablePriceCorrectionControls()
	ENDPROC

	PROCEDURE eq_citucwr.LostFocus
		thisform.EnablePriceCorrectionControls()
	ENDPROC

	PROCEDURE eq_ratecod.Init
		LPARAMETERS tlDoInit
		
		IF tlDoInit
			DODEFAULT()
		ENDIF
	ENDPROC

	PROCEDURE eq_ratecod.initsqlproperties
		TEXT TO this.cWhere TEXTMERGE NOSHOW PRETEXT 2 + 8
			rc_fromdat <= <<SqlCnv(SysDate(),.T.)>> AND rc_todat > <<SqlCnv(SysDate(),.T.)>> AND
			(rc_roomtyp = '*   ' OR ','+rc_roomtyp+',' $ ','+LEFT(curVirtRooms.c_fortypes,CEILING(LEN(ALLTRIM(curVirtRooms.c_fortypes))/5)*5-1)+',') AND
			NOT rc_inactiv AND rc_period = 3 AND NOT rc_complim AND rc_ratecod <> 'DUM       '
		ENDTEXT
		IF NOT EMPTY(thisform.oCitwebRates.oCwvrrt.eq_ratecod)
			this.cWhere = this.cWhere + " OR rc_ratecod = " + SqlCnv(thisform.oCitwebRates.oCwvrrt.eq_ratecod)
		ENDIF
	ENDPROC

	PROCEDURE eq_vroom.LostFocus
		thisform.eq_ratecod.SqlRequery()
	ENDPROC

	PROCEDURE grdCwRates.Grdbasesortcolumn20.TBGRID1.KeyPress
		LPARAMETERS nKeyCode, nShiftAltCtrl
		IF INLIST(nKeyCode, 49, 50, 3, 5, 24, 4, 19, 9, 18, 3, 7, 1, 2, 22, 13, 127, 32) AND nShiftAltCtrl = 0
			DODEFAULT(nKeyCode, nShiftAltCtrl)
		ELSE
			NODEFAULT
		ENDIF
		
		RETURN .T.
	ENDPROC

	PROCEDURE optpricetype.InteractiveChange
		thisform.txtPrice.Enabled = (this.Value = 3)
	ENDPROC

	PROCEDURE spnPriceForPersons.DownClick
		this.Tag = "DOWN"
	ENDPROC

	PROCEDURE spnPriceForPersons.InteractiveChange
		this.SetFocus()
	ENDPROC

	PROCEDURE spnPriceForPersons.UpClick
		this.Tag = "UP"
	ENDPROC

ENDDEFINE
