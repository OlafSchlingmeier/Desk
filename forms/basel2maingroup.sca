*--------------------------------------------------------------------------------------------------------------------------------------------------------
* (ES) AUTOGENERADO - ¡¡ATENCIÓN!! - ¡¡NO PENSADO PARA EJECUTAR!! USAR SOLAMENTE PARA INTEGRAR CAMBIOS Y ALMACENAR CON HERRAMIENTAS SCM!!
* (EN) AUTOGENERATED - ATTENTION!! - NOT INTENDED FOR EXECUTION!! USE ONLY FOR MERGING CHANGES AND STORING WITH SCM TOOLS!!
*--------------------------------------------------------------------------------------------------------------------------------------------------------
*< FOXBIN2PRG: Version="1.19" SourceFile="basel2maingroup.scx" /> (Solo para binarios VFP 9 / Only for VFP 9 binaries)
*
*
#INCLUDE "..\include\constdefines.h"

DEFINE CLASS basel2maingroup AS tform OF "..\libs\main.vcx" 
 	*< CLASSDATA: Baseclass="form" Timestamp="" Scale="" Uniqueid="" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="TlCode" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="TlDesc" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="TtCode" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="TtDesc" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="TcomOkCmd" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="TcomCancelCmd" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="TchErLos" UniqueID="" Timestamp="" />

	*<DefinedPropArrayMethod>
		*m: mcheckid		&& Checks if candidade Id is allready in table
		*m: mgetnewid		&& Returns new Id for selected Table. Index must be set on Id Field
		*p: datacopy		&& Property to store a fields values from currently selected record
		*p: mode		&& Mode in which this form is called (EDIT, NEW)
		*p: result		&& Result, which is returned from this form to calling function
	*</DefinedPropArrayMethod>

	Caption = "basel2maingroup"
	ControlBox = .T.
	DoCreate = .T.
	Height = 122
	Icon = ..\bitmap\icons\folder06.ico
	MaxButton = .F.
	MinButton = .F.
	Name = "basel2maingroup"
	Width = 409
	WindowType = 1

	ADD OBJECT 'TchErLos' AS tcheckbox WITH ;
		Alignment = 0, ;
		Caption = "TchErLos", ;
		Height = 17, ;
		Left = 168, ;
		Name = "TchErLos", ;
		TabIndex = 3, ;
		Top = 64, ;
		Width = 228
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="checkbox" />

	ADD OBJECT 'TcomCancelCmd' AS tcommandbutton WITH ;
		Caption = "TcomCancelCmd", ;
		Left = 213, ;
		Name = "TcomCancelCmd", ;
		TabIndex = 5, ;
		Top = 91
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'TcomOkCmd' AS tcommandbutton WITH ;
		Caption = "TcomOkCmd", ;
		Left = 111, ;
		Name = "TcomOkCmd", ;
		TabIndex = 4, ;
		Top = 91
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'TlCode' AS tlabel WITH ;
		Caption = "TlCode", ;
		Height = 17, ;
		Left = 11, ;
		Name = "TlCode", ;
		TabIndex = 6, ;
		Top = 11, ;
		Width = 156
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'TlDesc' AS tlabel WITH ;
		Caption = "TlDesc", ;
		Height = 17, ;
		Left = 12, ;
		Name = "TlDesc", ;
		TabIndex = 7, ;
		Top = 37, ;
		Width = 156
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'TtCode' AS ttext WITH ;
		Height = 23, ;
		Left = 168, ;
		Name = "TtCode", ;
		TabIndex = 1, ;
		Top = 8, ;
		Width = 120
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />

	ADD OBJECT 'TtDesc' AS ttext WITH ;
		Height = 23, ;
		Left = 168, ;
		Name = "TtDesc", ;
		TabIndex = 2, ;
		Top = 34, ;
		Width = 228
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />
	
	PROCEDURE Init
		LParameter m.Mode, lp_nId
		this.Mode = m.Mode
		this.AddProperty("pOldValues")
		this.AddProperty("oca",.NULL.)
		this.AddProperty("nid",.NULL.)
		DODEFAULT()
		
		this.Caption = ChildTitle(GetLangText("MGRPLIST","TXT_MGWINDOW"))
		this.tcomOkCmd.Caption = GetLangText("COMMON","TXT_OK")
		this.tcomCancelCmd.Caption = GetLangText("COMMON","TXT_CANCEL")
		this.tlCode.Caption = GetLangText("MGRPLIST","TXT_MGNUM")
		this.tlDesc.Caption = GetLangText("MGRPLIST","TXT_MGLANG")
		this.tchErLos.Caption = GetLangText("MGRPLIST","TXT_MG_BASEL_CHECK_BOX")
		
		this.oca = CREATEOBJECT("cahauptgrp")
		this.oca.Alias = "curhauptgrp"
		
		DO CASE
			CASE m.Mode = EDIT_MODE
				this.oca.cFilterClause = "hg_nummer = " + SqlCnv(lp_nId, .T.)
				this.oca.CursorFill()
				SELECT curhauptgrp
				SCATTER Name this.DataCopy MEMO
				SCATTER NAME this.pOldValues MEMO
				this.ttCode.Enabled = .F.
			CASE m.Mode = NEW_MODE
				this.oca.SetProp(.F.,.T.)
				this.oca.CursorFill()
				SELECT curhauptgrp
				SCATTER BLANK Name this.DataCopy MEMO
		ENDCASE
		
		this.ttCode.ControlSource = [thisform.DataCopy.hg_nummer]
		this.ttcode.Format = "K"
		this.ttcode.InputMask = "99"
		
		this.ttDesc.ControlSource = [thisform.DataCopy.hg_text]
		this.ttDesc.Format = "KR"
		this.ttDesc.InputMask = REPLICATE("X",30)
		
		this.tchErLos.ControlSource = [thisform.DataCopy.hg_erlos]
		
		IF m.Mode = NEW_MODE
			this.ttCode.Value = this.mGetNewId()
		ENDIF
		
	ENDPROC

	PROCEDURE KeyPress
		LPARAMETERS nKeyCode, nShiftAltCtrl
		
		IF nKeyCode = 27
			this.tcomCancelCmd.Click()
			NODEFAULT
		ENDIF
	ENDPROC

	PROCEDURE mcheckid		&& Checks if candidade Id is allready in table
		LPARAMETERS lnId
		LOCAL llFound, llProceed
		llFound = .T.
		llProceed = .T.
		IF this.mode = EDIT_MODE
			IF lnId = this.pOldValues.hg_nummer
				llProceed = .F.
			ENDIF
		ENDIF
		IF llProceed
			DO CheckNextId IN managerfunctions WITH llFound,lnId,'hauptgrp','tag1'
		ENDIF
		RETURN llFound
		
	ENDPROC

	PROCEDURE mgetnewid		&& Returns new Id for selected Table. Index must be set on Id Field
		LOCAL lnRecNo, lnNextId
		lnNextId = 0
		
		sqlcursor("SELECT TOP 1 hg_nummer FROM hauptgrp ORDER BY 1 DESC", "curhgb5a1")
		IF USED("curhgb5a1") AND NOT EMPTY(curhgb5a1.hg_nummer)
			lnNextId = curhgb5a1.hg_nummer + 1
			lnNextId = MIN(lnNextId, 99)
		ELSE
			lnNextId = 1
		ENDIF
		
		RETURN lnNextId
	ENDPROC

	PROCEDURE QueryUnload
		NODEFAULT
		this.tcomCancelCmd.Click()
		
	ENDPROC

	PROCEDURE Unload
		this.Visible = .F.
		ChildTitle("")
		
		return this.nid
		
	ENDPROC

	PROCEDURE TcomCancelCmd.Click
		thisform.Result = 0
		thisform.Release()
		
	ENDPROC

	PROCEDURE TcomOkCmd.Click
		LOCAL l_nId
		
		IF EMPTY(thisform.DataCopy.hg_nummer)
			thisform.ttCode.SetFocus()
			RETURN .T.
		ENDIF
		
		IF thisform.Mode <> EDIT_MODE
			l_nId = dlookup("hauptgrp","hg_nummer = " + SqlCnv(thisform.DataCopy.hg_nummer, .T.),"hg_nummer")
			IF NOT EMPTY(l_nId)
				alert(GetLangText("COMMON", "TXT_RECORDEXISTS"))
				thisform.ttCode.Value = thisform.mGetNewId()
				thisform.ttCode.SetFocus()
				RETURN .T.
			ENDIF
		ENDIF
		
		SELECT curhauptgrp
		
		if thisform.Mode <> EDIT_MODE
			Append Blank
		endif
		
		GATHER Name thisform.DataCopy MEMO
		thisform.oca.DoTableUpdate()
		thisform.nid = thisform.DataCopy.hg_nummer
		
		thisform.Result = RecNo()
		
		thisform.Release()
		
		RETURN .T.
	ENDPROC

ENDDEFINE

DEFINE CLASS dataenvironment AS dataenvironment 
 	*< CLASSDATA: Baseclass="dataenvironment" Timestamp="" Scale="" Uniqueid="" ClassIcon="1" />

	DataSource = .NULL.
	Height = 0
	Left = 0
	Name = "Dataenvironment"
	Top = 0
	Width = 0

ENDDEFINE
