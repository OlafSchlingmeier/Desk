*--------------------------------------------------------------------------------------------------------------------------------------------------------
* (ES) AUTOGENERADO - ¡¡ATENCIÓN!! - ¡¡NO PENSADO PARA EJECUTAR!! USAR SOLAMENTE PARA INTEGRAR CAMBIOS Y ALMACENAR CON HERRAMIENTAS SCM!!
* (EN) AUTOGENERATED - ATTENTION!! - NOT INTENDED FOR EXECUTION!! USE ONLY FOR MERGING CHANGES AND STORING WITH SCM TOOLS!!
*--------------------------------------------------------------------------------------------------------------------------------------------------------
*< FOXBIN2PRG: Version="1.19" SourceFile="srvsettings.scx" /> (Solo para binarios VFP 9 / Only for VFP 9 binaries)
*
*
DEFINE CLASS dataenvironment AS dataenvironment 
 	*< CLASSDATA: Baseclass="dataenvironment" Timestamp="" Scale="" Uniqueid="" ClassIcon="2" />

	DataSource = .NULL.
	Height = 200
	Left = 1
	Name = "Dataenvironment"
	Top = 220
	Width = 520
	
	PROCEDURE Init
		this.NewObject("oCAParam2","caparam2","progs\cadefdesk.prg")
		this.oCAParam2.CursorFill()
		
		IF USED("adrmain")
			this.NewObject("oCAHotel","cahotel","progs\cadefdesk.prg")
			this.oCAHotel.CursorFill()
		ENDIF
		RETURN .T.
	ENDPROC

ENDDEFINE

DEFINE CLASS frmsrvsettings AS tformcommon OF "..\libs\main.vcx" 
 	*< CLASSDATA: Baseclass="form" Timestamp="" Scale="" Uniqueid="" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="oGrdHotel" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtmainserverpath" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblmainserverpath" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtHotCode" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblHotCode" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtHotPath" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblHotPath" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdOK" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdCancel" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdselecthotelpath" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtHotThisCode" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblHotThisCode" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdNew" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdDelete" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdImport" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="oProcAddress" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtDescript" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblDescript" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdSave" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chkMainServer" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtHosecId" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblHosecId" UniqueID="" Timestamp="" />

	*<DefinedPropArrayMethod>
		*m: mainserverpathvalid
		*m: onimportaddress
		*m: onnomainserverdefined
		*m: onok
		*m: onprogresscancel
		*p: ofrmprogress
		*p: ohotdata		&& Scatter object as controlsource for hotel data controls
	*</DefinedPropArrayMethod>

	BindControls = .F.
	Caption = "frmsrvsettings"
	DoCreate = .T.
	doiniopenmainservertables = .T.
	formname = frmsrvsettings
	Height = 447
	KeyPreview = .T.
	lmainserverform = .T.
	Name = "frmsrvsettings"
	ofrmprogress = .NULL.
	ohotdata = .NULL.		&& Scatter object as controlsource for hotel data controls
	Width = 657

	ADD OBJECT 'chkMainServer' AS tcheckbox WITH ;
		Alignment = 0, ;
		AutoSize = .T., ;
		Caption = "chkMainServer", ;
		ControlSource = "thisform.oHotData.ho_mainsrv", ;
		Height = 17, ;
		Left = 164, ;
		Name = "chkMainServer", ;
		TabIndex = 13, ;
		Top = 427, ;
		Value = .F., ;
		Width = 98
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="checkbox" />

	ADD OBJECT 'cmdCancel' AS tcommandbutton WITH ;
		Caption = "cmdCancel", ;
		Left = 564, ;
		Name = "cmdCancel", ;
		TabIndex = 17, ;
		Top = 48
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'cmdDelete' AS tcommandbutton WITH ;
		Caption = "", ;
		Left = 48, ;
		Name = "cmdDelete", ;
		Picture = ..\bitmap\toolbar\delete.png, ;
		TabIndex = 5, ;
		Top = 81, ;
		Width = 27
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'cmdImport' AS tcommandbutton WITH ;
		AutoSize = .T., ;
		Caption = "Import", ;
		Left = 317, ;
		Name = "cmdImport", ;
		TabIndex = 3, ;
		Top = 40
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'cmdNew' AS tcommandbutton WITH ;
		Caption = "", ;
		Left = 12, ;
		Name = "cmdNew", ;
		Picture = ..\bitmap\toolbar\new.png, ;
		TabIndex = 4, ;
		Top = 81, ;
		Width = 27
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'cmdOK' AS tcommandbutton WITH ;
		Caption = "cmdOK", ;
		Left = 564, ;
		Name = "cmdOK", ;
		TabIndex = 16, ;
		Top = 12
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'cmdSave' AS tcommandbutton WITH ;
		Caption = "", ;
		Left = 85, ;
		Name = "cmdSave", ;
		Picture = ..\bitmap\toolbar\save.bmp, ;
		TabIndex = 6, ;
		Top = 81, ;
		Width = 27
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'cmdselecthotelpath' AS tcommandbutton WITH ;
		Caption = "...", ;
		Height = 27, ;
		Left = 491, ;
		Name = "cmdselecthotelpath", ;
		TabIndex = 10, ;
		Top = 345, ;
		Width = 24
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'lblDescript' AS tlabel WITH ;
		AutoSize = .T., ;
		Caption = "lblDescript", ;
		Left = 10, ;
		Name = "lblDescript", ;
		TabIndex = 21, ;
		Top = 379
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'lblHosecId' AS tlabel WITH ;
		AutoSize = .T., ;
		Caption = "lblHosecId", ;
		Left = 10, ;
		Name = "lblHosecId", ;
		TabIndex = 19, ;
		Top = 406
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'lblHotCode' AS tlabel WITH ;
		AutoSize = .T., ;
		Caption = "lblHotCode", ;
		Left = 10, ;
		Name = "lblHotCode", ;
		TabIndex = 18, ;
		Top = 322
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'lblHotPath' AS tlabel WITH ;
		AutoSize = .T., ;
		Caption = "lblHotPath", ;
		Left = 10, ;
		Name = "lblHotPath", ;
		TabIndex = 20, ;
		Top = 351
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'lblHotThisCode' AS tlabel WITH ;
		AutoSize = .T., ;
		Caption = "lblHotThisCode", ;
		Left = 10, ;
		Name = "lblHotThisCode", ;
		TabIndex = 15, ;
		Top = 46
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'lblmainserverpath' AS tlabel WITH ;
		AutoSize = .T., ;
		Caption = "lblmainserverpath", ;
		Left = 10, ;
		Name = "lblmainserverpath", ;
		TabIndex = 14, ;
		Top = 10, ;
		WordWrap = .T.
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'oGrdHotel' AS grdbasecommon WITH ;
		ColumnCount = 5, ;
		Height = 200, ;
		Left = 12, ;
		Name = "oGrdHotel", ;
		TabIndex = 7, ;
		Top = 111, ;
		Width = 636, ;
		Grdbasesortcolumn1.HEADER1.Alignment = 2, ;
		Grdbasesortcolumn1.HEADER1.Caption = "Header1", ;
		Grdbasesortcolumn1.HEADER1.Name = "HEADER1", ;
		Grdbasesortcolumn1.Name = "Grdbasesortcolumn1", ;
		Grdbasesortcolumn1.TBGRID1.Name = "TBGRID1", ;
		Grdbasesortcolumn2.HEADER1.Alignment = 2, ;
		Grdbasesortcolumn2.HEADER1.Caption = "Header1", ;
		Grdbasesortcolumn2.HEADER1.Name = "HEADER1", ;
		Grdbasesortcolumn2.Name = "Grdbasesortcolumn2", ;
		Grdbasesortcolumn2.TBGRID1.Name = "TBGRID1", ;
		Grdbasesortcolumn2.Width = 270, ;
		Grdbasesortcolumn3.Header1.Alignment = 2, ;
		Grdbasesortcolumn3.Header1.Caption = "Header1", ;
		Grdbasesortcolumn3.Header1.Name = "Header1", ;
		Grdbasesortcolumn3.Name = "Grdbasesortcolumn3", ;
		Grdbasesortcolumn3.TBGRID1.Name = "TBGRID1", ;
		Grdbasesortcolumn3.Width = 120, ;
		Grdbasesortcolumn4.HEADER1.Alignment = 2, ;
		Grdbasesortcolumn4.HEADER1.Caption = "Header1", ;
		Grdbasesortcolumn4.HEADER1.Name = "HEADER1", ;
		Grdbasesortcolumn4.Name = "Grdbasesortcolumn4", ;
		Grdbasesortcolumn4.TBGRID1.Name = "TBGRID1", ;
		Grdbasesortcolumn4.Width = 65, ;
		Grdbasesortcolumn5.Header1.Alignment = 2, ;
		Grdbasesortcolumn5.Header1.Caption = "Header1", ;
		Grdbasesortcolumn5.Header1.Name = "Header1", ;
		Grdbasesortcolumn5.Name = "Grdbasesortcolumn5", ;
		Grdbasesortcolumn5.Tbgrid1.Name = "Tbgrid1", ;
		Grdbasesortcolumn5.Width = 78
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="grid" />

	ADD OBJECT 'oProcAddress' AS procaddress WITH ;
		caddressalias = , ;
		Left = 146, ;
		lopenadrmain = .F., ;
		Name = "oProcAddress", ;
		Top = 89
		*< END OBJECT: ClassLib="..\libs\proc_address.vcx" BaseClass="custom" />

	ADD OBJECT 'txtDescript' AS ttext WITH ;
		ControlSource = "thisform.oHotData.ho_descrip", ;
		Height = 23, ;
		Left = 164, ;
		Name = "txtDescript", ;
		TabIndex = 11, ;
		Top = 375, ;
		Width = 412
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtHosecId' AS ttext WITH ;
		ControlSource = "thisform.oHotData.ho_hosecid", ;
		Height = 23, ;
		InputMask = "99999999", ;
		Left = 164, ;
		Name = "txtHosecId", ;
		TabIndex = 12, ;
		Top = 402, ;
		Width = 112
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtHotCode' AS ttext WITH ;
		ControlSource = "thisform.oHotData.ho_hotcode", ;
		Height = 23, ;
		InputMask = "!!!!!!!!!!", ;
		Left = 164, ;
		Name = "txtHotCode", ;
		TabIndex = 8, ;
		Top = 318, ;
		Width = 112
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtHotPath' AS ttext WITH ;
		ControlSource = "thisform.oHotData.ho_path", ;
		Height = 23, ;
		Left = 164, ;
		Name = "txtHotPath", ;
		TabIndex = 9, ;
		Top = 347, ;
		Width = 324
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtHotThisCode' AS ttext WITH ;
		ControlSource = "caparam2.pa_hotcode", ;
		Enabled = .F., ;
		Height = 23, ;
		InputMask = "!!!!!!!!!!", ;
		Left = 164, ;
		Name = "txtHotThisCode", ;
		TabIndex = 2, ;
		Top = 42, ;
		Width = 112
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtmainserverpath' AS ttext WITH ;
		ControlSource = "caparam2.pa_srvpath", ;
		Enabled = .F., ;
		Height = 23, ;
		Left = 164, ;
		Name = "txtmainserverpath", ;
		TabIndex = 1, ;
		Top = 12, ;
		Width = 324
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />
	
	PROCEDURE activatebeforefirsttime
		IF this.MainServerPathValid()
			SELECT cahotel
			SCATTER NAME thisform.ohotdata MEMO BLANK
			this.BindControls = .T.
			LOCAL l_oCaHotel
			l_oCaHotel = GETCURSORADAPTER("cahotel")
			l_oCaHotel.cFilterClause = "ho_hotcode = " + sqlcnv(PADR(EVALUATE(this.oGrdHotel.ccurname+".ho_hotcode"),10))
			l_oCaHotel.CursorRefresh()
			SELECT cahotel
			SCATTER NAME thisform.ohotdata MEMO
		
			this.oGrdHotel.CursorRequery()
			SELECT (this.oGrdHotel.RecordSource)
			LOCATE FOR ho_hotcode = cahotel.ho_hotcode
		
		ELSE
			this.OnNoMainServerDefined()
		ENDIF
	ENDPROC

	PROCEDURE assigncaption
		this.Caption = childtitle(Getlangtext("SRVSETTI","TXT_MAIN_SERVER_SETTINGS"))
		this.lblMainServerPath.Caption = Getlangtext("SRVSETTI","TXT_MAIN_SERVER_PATH")
		this.lblHotThisCode.Caption = Getlangtext("SRVSETTI","TXT_THIS_HOTEL_CODE")
		this.cmdOK.Caption = Getlangtext("COMMON","TXT_OK")
		this.cmdCancel.Caption = Getlangtext("COMMON","TXT_CANCEL")
		this.oGrdHotel.grdbasesortcolumn1.header1.Caption = Getlangtext("SRVSETTI","TXT_HOTEL_CODE")
		this.oGrdHotel.grdbasesortcolumn2.header1.Caption = Getlangtext("SRVSETTI","TXT_HOTEL_PATH")
		this.oGrdHotel.grdbasesortcolumn3.header1.Caption = Getlangtext("ACT","T_DESCR")
		this.oGrdHotel.grdbasesortcolumn4.header1.Caption = Getlangtext("SRVSETTI","TXT_MULTIPROPER")
		this.oGrdHotel.grdbasesortcolumn5.header1.Caption = "HoSeCo Id"
		this.lblHotCode.Caption = Getlangtext("SRVSETTI","TXT_HOTEL_CODE")
		this.lblHotPath.Caption = Getlangtext("SRVSETTI","TXT_HOTEL_PATH")
		this.lblDescript.Caption = Getlangtext("ACT","T_DESCR")
		this.lblHosecId.Caption = "HoSeCo Id"
		this.chkMainServer.Caption = Getlangtext("SRVSETTI","TXT_MULTIPROPER")
		this.cmdImport.Caption = Getlangtext("SRVSETTI","TXT_IMPORT_ADDRESS")
	ENDPROC

	PROCEDURE mainserverpathvalid
		LOCAL l_lSuccess, l_cCur, l_cPath
		
		_screen.oGlobal.RefreshTableParam2()
		
		RETURN .T.
	ENDPROC

	PROCEDURE ondelete
		LOCAL l_nSelect
		l_nSelect = SELECT()
		SELECT cahotel
		DELETE
		SKIP 1
		IF EOF()
			GO BOTTOM
		ENDIF
		thisform.Refresh()
		
		this.oGrdHotel.Cursorrequery()
		
		SELECT (l_nSelect)
		
		RETURN .T.
	ENDPROC

	PROCEDURE onimportaddress
		IF NOT yesno(Getlangtext("SRVSETTI","TXT_IMPORT_INTO_ADRMAIN"))
			RETURN .F.
		ENDIF
		
		this.oProcAddress.AdrMainImport()
		IF this.oProcAddress.lcancelimport
			this.oProcAddress.lcancelimport = .F.
			alert(GetLangText("COMMON","TXT_PROGRESS_ABORTED"))
		ENDIF
		RETURN .T.
	ENDPROC

	PROCEDURE onnew
		LOCAL l_nSelect
		l_nSelect = SELECT()
		SELECT cahotel
		IF NOT EMPTY(ho_hotcode)
			APPEND BLANK
			SCATTER NAME thisform.ohotdata MEMO
			thisform.Refresh()
		ENDIF
		SELECT (l_nSelect)
		
		RETURN .T.
	ENDPROC

	PROCEDURE onnomainserverdefined
		LOCAL l_cPath, l_cHotCode, l_oCaHotel, l_oHotData
		
		l_cPath = SYS(5)+SYS(2003)
		l_cHotCode = "MULTIPROP"
		
		l_oCaParam2 = NEWOBJECT("caparam2","progs\cadefdesk.prg")
		l_oCaParam2.Alias = "caparam2cur"
		l_oCaParam2.ldontfill = .F.
		l_oCaParam2.CursorFill()
		
		l_oCaHotel = NEWOBJECT("cahotel","progs\cadefdesk.prg")
		l_oCaHotel.Alias = "cahotelcur"
		l_oCaHotel.ldontfill = .F.
		l_oCaHotel.cFilterClause = "ho_hotcode = " + sqlcnv(l_cHotCode,.T.)
		l_oCaHotel.CursorFill()
		
		REPLACE caparam2cur.pa_hotcode WITH l_cHotCode, ;
				caparam2cur.pa_srvpath WITH l_cPath ;
				IN caparam2cur
		
		SELECT cahotelcur
		IF RECCOUNT()=0
			APPEND BLANK
		ENDIF
		SCATTER MEMO NAME l_oHotData BLANK
		l_oHotData.ho_hotcode = l_cHotCode
		l_oHotData.ho_path = l_cPath
		l_oHotData.ho_mainsrv = .T.
		GATHER MEMO NAME l_oHotData
		
		l_oCaParam2.DoTableUpdate(.F.)
		l_oCahotel.DoTableUpdate(.F.)
		
		l_oCaParam2.dclose()
		l_oCahotel.dclose()
		
		_screen.oGlobal.RefreshTableParam2()
		IF yesno(GetLangText("COMMON","TXT_TRY_AGAIN"))
			ini(this.DoIniOpenCommonTables, this.DoIniOpenMainServerTables, this.DataEnvironment)
			l_oCaParam2 = GETCURSORADAPTER("caparam2")
			l_oCaParam2.CursorRefresh()
			this.activatebeforefirsttime()
		ELSE
			this.Release()
		ENDIF
	ENDPROC

	PROCEDURE onok
		LOCAL l_lSuccess, l_cPath, l_oCaParam2, l_cCur
		DoTableUpdate(.F.,.T.,"caparam2")
		IF this.MainServerPathValid()
			DoTableUpdate(.T.,.T.,"cahotel")
			l_lSuccess = .T.
		ENDIF
		IF l_lSuccess
			_screen.oGlobal.RefreshTableParam2()
			thisform.Release()
		ENDIF
	ENDPROC

	PROCEDURE onprogresscancel
		this.oProcAddress.lcancelimport = .T.
	ENDPROC

	PROCEDURE onsave
		LOCAL l_nSelect, l_nRecNo, l_cParam2Alias, l_cHotelDataPath
		l_nSelect = SELECT()
		SELECT cahotel
		GATHER NAME thisform.oHotData MEMO
		
		&& Only one multiproper version allowed!
		IF thisform.oHotData.ho_mainsrv
			REPLACE caparam2.pa_hotcode WITH thisform.oHotData.ho_hotcode, ;
					caparam2.pa_srvpath WITH thisform.oHotData.ho_path ;
					IN caparam2
			l_nRecNo = RECNO()
			SCAN FOR ho_mainsrv = .T. AND ho_hotcode <> thisform.oHotData.ho_hotcode
				REPLACE ho_mainsrv WITH .F.
			ENDSCAN
			GO l_nRecNo
		ELSE
			* Update param2.pa_srvpath and pa_hotcode in local hotel installation
			l_cHotelDataPath = FNGetMPDataPath(thisform.oHotData.ho_path)
			IF FILE(l_cHotelDataPath + "param2.dbf")
				l_cParam2Alias = "MP_" + ALLTRIM(thisform.oHotData.ho_hotcode)
				IF openfiledirect(,"param2",l_cParam2Alias,l_cHotelDataPath)
					REPLACE pa_srvpath WITH ALLTRIM(caparam2.pa_srvpath), pa_hotcode WITH ALLTRIM(thisform.oHotData.ho_hotcode) IN (l_cParam2Alias)
					FLUSH FORCE
					dclose(l_cParam2Alias)
				ENDIF
			ENDIF
		ENDIF
		
		thisform.oGrdHotel.CursorRequery()
		thisform.Refresh()
		
		SELECT (l_nSelect)
		
		RETURN .T.
	ENDPROC

	PROCEDURE cmdCancel.Click
		thisform.OnClose()
	ENDPROC

	PROCEDURE cmdDelete.Click
		thisform.OnDelete()
	ENDPROC

	PROCEDURE cmdImport.Click
		thisform.OnImportaddress()
	ENDPROC

	PROCEDURE cmdNew.Click
		thisform.OnNew()
	ENDPROC

	PROCEDURE cmdOK.Click
		thisform.OnOk()
	ENDPROC

	PROCEDURE cmdSave.Click
		thisform.OnSave()
	ENDPROC

	PROCEDURE cmdselecthotelpath.Click
		LOCAL lcPath
		
		lcPath = GETDIR(ALLTRIM(this.Parent.txtHotPath.Value), this.Parent.lblHotPath.Caption, "", 112)
		IF NOT EMPTY(lcPath)
			this.Parent.txtHotPath.Value = ALLTRIM(JUSTPATH(PROPER(lcPath)))
		ENDIF
	ENDPROC

	PROCEDURE oGrdHotel.afterrowcolchangeafter
		LOCAL l_nSelect
		IF thisform.MainServerPathValid()
			= dlocate("cahotel","ho_hotcode = " + sqlcnv(PADR(EVALUATE(this.ccurname+".ho_hotcode"),10)))
			l_nSelect = SELECT()
			SELECT cahotel
			SCATTER MEMO NAME thisform.oHotData
			SELECT (l_nSelect)
			thisform.Refresh()
		ENDIF
	ENDPROC

	PROCEDURE oGrdHotel.cursorcreatebefore
		LOCAL l_cSql, l_lReadWrite
		l_lReadWrite = .T.
		IF thisform.MainServerPathValid()
			TEXT TO l_cSql TEXTMERGE NOSHOW PRETEXT 15
			     SELECT ho_hotcode, ho_path, ho_descrip, ho_mainsrv, ho_hosecid ;
			               FROM hotel ;
			               WHERE 0=1
			ENDTEXT
		ELSE
			TEXT TO l_cSql TEXTMERGE NOSHOW PRETEXT 15
				SELECT CAST("" AS Char(10)) AS ho_hotcode, ;
						CAST("" AS Char(254)) AS ho_path, CAST("" AS Char(100)) AS ho_descrip, ;
						0=1 AS ho_mainsrv, CAST(0 AS Integer) AS ho_hosecid ;
						FROM param
			ENDTEXT
		ENDIF
		= sqlcursor(l_cSql,this.cCurName,.F.,"",.NULL.,.T.,.F.,l_lReadWrite)
		RETURN .T.
	ENDPROC

	PROCEDURE oGrdHotel.cursorrequerybefore
		SELECT * FROM cahotel WITH (BUFFERING = .T.) ORDER BY ho_hotcode INTO CURSOR (this.cCurSource)
		
		
		RETURN .T.
	ENDPROC

	PROCEDURE oProcAddress.adrmainimportprogress
		LPARAMETERS lp_nPercent, lp_nMode, lp_cCaption, lp_nMax
		* Modes:
		* 0 - Start, 1 - Iterate, 2 - Finish
		
		LOCAL l_lDoEvents
		
		IF EMPTY(lp_nMode)
			lp_nMode = 0
		ENDIF
		IF EMPTY(lp_nPercent)
			lp_nPercent = 1
		ENDIF
		
		DO CASE
			CASE lp_nMode = 0
				IF VARTYPE(thisform.ofrmprogress) = "X"
					DO FORM "forms\progress" WITH "Import...", .F., .T., .T., .T., .T. NAME thisform.ofrmprogress
					thisform.ofrmprogress.ocallref = thisform
				ENDIF
				thisform.ofrmprogress.InitProgress(EVL(lp_nMax,1))
			CASE lp_nMode = 2
				IF VARTYPE(thisform.ofrmprogress) = "O"
					thisform.ofrmprogress.Release()
					thisform.ofrmprogress = .NULL.
				ENDIF
			OTHERWISE
				IF VARTYPE(thisform.ofrmprogress) = "O"
					thisform.ofrmprogress.Progress(lp_nPercent, "", lp_nPercent)
					l_lDoEvents = .T.
				ENDIF
		ENDCASE
		
		IF VARTYPE(thisform.ofrmprogress) = "O"
			IF NOT EMPTY(lp_cCaption)
				thisform.ofrmprogress.Setlabel(1, TRANSFORM(lp_cCaption))
				l_lDoEvents = .T.
			ENDIF
		ENDIF
		
		IF l_lDoEvents
			DOEVENTS
		ENDIF
		
		RETURN .T.
	ENDPROC

	PROCEDURE txtmainserverpath.LostFocus
		IF NOT thisform.Mainserverpathvalid()
			REPLACE caparam2.pa_srvpath WITH ALLTRIM(this.Value) IN caparam2
		ENDIF
	ENDPROC

ENDDEFINE
