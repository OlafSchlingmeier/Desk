*--------------------------------------------------------------------------------------------------------------------------------------------------------
* (ES) AUTOGENERADO - ¡¡ATENCIÓN!! - ¡¡NO PENSADO PARA EJECUTAR!! USAR SOLAMENTE PARA INTEGRAR CAMBIOS Y ALMACENAR CON HERRAMIENTAS SCM!!
* (EN) AUTOGENERATED - ATTENTION!! - NOT INTENDED FOR EXECUTION!! USE ONLY FOR MERGING CHANGES AND STORING WITH SCM TOOLS!!
*--------------------------------------------------------------------------------------------------------------------------------------------------------
*< FOXBIN2PRG: Version="1.19" SourceFile="viewhotstat.scx" /> (Solo para binarios VFP 9 / Only for VFP 9 binaries)
*
*
DEFINE CLASS dataenvironment AS dataenvironment 
 	*< CLASSDATA: Baseclass="dataenvironment" Timestamp="" Scale="" Uniqueid="" ClassIcon="2" />

	DataSource = .NULL.
	Height = 530
	Left = 16
	Name = "Dataenvironment"
	Top = 4
	Width = 728

ENDDEFINE

DEFINE CLASS frmshotstat AS formset 
 	*< CLASSDATA: Baseclass="formset" Timestamp="" Scale="" Uniqueid="" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="frmHotstat" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="frmHotstat.grdData" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="frmHotstat.grdData.Grdhotstatcolumn1.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="frmHotstat.grdData.Grdhotstatcolumn2.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="frmHotstat.grdData.Grdhotstatcolumn3.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="frmHotstat.grdData.Grdhotstatcolumn4.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="frmHotstat.grdData.Grdhotstatcolumn5.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="frmHotstat.grdData.Grdhotstatcolumn6.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="frmHotstat.grdData.Grdhotstatcolumn7.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="frmHotstat.grdData.Grdhotstatcolumn8.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="frmHotstat.grdData.Grdhotstatcolumn9.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="frmHotstat.grdData.Grdhotstatcolumn10.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="frmHotstat.grdData.Grdhotstatcolumn11.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="frmHotstat.grdData.Grdhotstatcolumn12.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="frmHotstat.grdData.Grdhotstatcolumn13.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="frmHotstat.grdData.Grdhotstatcolumn14.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="frmHotstat.grdData.Grdhotstatcolumn15.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="frmHotstat.grdData.Grdhotstatcolumn16.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="frmHotstat.grdData.Grdhotstatcolumn17.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="frmHotstat.grdData.Grdhotstatcolumn18.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="frmHotstat.grdData.Grdhotstatcolumn19.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="frmHotstat.grdData.Grdhotstatcolumn20.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="frmHotstat.grdData.Grdhotstatcolumn21.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="frmHotstat.grdData.Grdhotstatcolumn22.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="frmHotstat.grdData.Grdhotstatcolumn23.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="frmHotstat.grdData.Grdhotstatcolumn24.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="frmHotstat.grdData.Grdhotstatcolumn25.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="frmHotstat.grdData.Grdhotstatcolumn26.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="frmHotstat.grdData.Grdhotstatcolumn27.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="frmHotstat.grdData.Grdhotstatcolumn28.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="frmHotstat.grdData.Grdhotstatcolumn29.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="frmHotstat.grdData.Grdhotstatcolumn30.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="frmHotstat.grdData.Grdhotstatcolumn31.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="frmHotstat.grdData.Grdhotstatcolumn32.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="frmHotstat.grdData.Grdhotstatcolumn33.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="frmHotstat.prnForm" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="frmHotStatDlg" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="frmHotStatDlg.lblStart" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="frmHotStatDlg.txtStart" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="frmHotStatDlg.lblBuilding" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="frmHotStatDlg.cboBuilding" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="frmHotStatDlg.cmdOK" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="frmHotStatDlg.cmdCancel" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="toolSettings" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="toolSettings.spnColCount" UniqueID="" Timestamp="" />

	*<DefinedPropArrayMethod>
		*m: doclose
		*m: dogoto
		*m: dosettings
		*m: m_createdatacrsr
		*m: m_drwdata
		*m: m_linkdata
		*m: m_setcolumnwidth
		*m: m_showdata
		*m: showsearchres
		*p: cbuildingexp
		*p: dfirst
		*p: lformsizeadjusted
		*p: nforecast
		*p: nmaxcol
		*p: nvirtrt
		*a: aforecast[1,0]
		*a: ahsdata[23,0]
		*a: atoday[4,0]
		*a: avirtrt[1,0]
	*</DefinedPropArrayMethod>

	AutoRelease = .T.
	DataSession = 2
	Name = "frmshotstat"
	nforecast = 0
	nmaxcol = 31
	nvirtrt = 0

	ADD OBJECT 'frmHotstat' AS tform WITH ;
		AlwaysOnTop = .F., ;
		AutoCenter = .F., ;
		Caption = "frmHotstat", ;
		cformlabel = HOTELSTAT, ;
		ControlBox = .T., ;
		ctbrclass = ctbrHotStat, ;
		DoCreate = .T., ;
		formname = frmHotstat, ;
		Height = 484, ;
		Icon = ..\bitmap\icons\percent.ico, ;
		KeyPreview = .T., ;
		Name = "frmHotstat", ;
		saveformsize = .T., ;
		Visible = .F., ;
		Width = 684
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="form" />

	ADD OBJECT 'frmHotstat.grdData' AS tgrid WITH ;
		AllowHeaderSizing = .F., ;
		AllowRowSizing = .F., ;
		ColumnCount = 33, ;
		DeleteMark = .F., ;
		Enabled = .F., ;
		GridLineColor = 192,192,192, ;
		HeaderHeight = 0, ;
		Height = 484, ;
		HighlightRow = .F., ;
		HighlightStyle = 0, ;
		Left = 0, ;
		lresizecolumns = .T., ;
		lsetgridprop = .F., ;
		MemberClass = "grdHotstatColumn", ;
		MemberClassLibrary = ..\commonclasses.prg, ;
		Name = "grdData", ;
		RecordMark = .F., ;
		resizefontsize = .T., ;
		ScrollBars = 0, ;
		Top = 0, ;
		Width = 684, ;
		Grdhotstatcolumn1.Enabled = .F., ;
		Grdhotstatcolumn1.Name = "Grdhotstatcolumn1", ;
		Grdhotstatcolumn1.TBGRID1.Enabled = .F., ;
		Grdhotstatcolumn1.TBGRID1.Name = "TBGRID1", ;
		Grdhotstatcolumn1.Width = 170, ;
		Grdhotstatcolumn10.Enabled = .F., ;
		Grdhotstatcolumn10.Name = "Grdhotstatcolumn10", ;
		Grdhotstatcolumn10.TBGRID1.Enabled = .F., ;
		Grdhotstatcolumn10.TBGRID1.Name = "TBGRID1", ;
		Grdhotstatcolumn11.Enabled = .F., ;
		Grdhotstatcolumn11.Name = "Grdhotstatcolumn11", ;
		Grdhotstatcolumn11.TBGRID1.Enabled = .F., ;
		Grdhotstatcolumn11.TBGRID1.Name = "TBGRID1", ;
		Grdhotstatcolumn12.Enabled = .F., ;
		Grdhotstatcolumn12.Name = "Grdhotstatcolumn12", ;
		Grdhotstatcolumn12.TBGRID1.Enabled = .F., ;
		Grdhotstatcolumn12.TBGRID1.Name = "TBGRID1", ;
		Grdhotstatcolumn13.Enabled = .F., ;
		Grdhotstatcolumn13.Name = "Grdhotstatcolumn13", ;
		Grdhotstatcolumn13.TBGRID1.Enabled = .F., ;
		Grdhotstatcolumn13.TBGRID1.Name = "TBGRID1", ;
		Grdhotstatcolumn14.Enabled = .F., ;
		Grdhotstatcolumn14.Name = "Grdhotstatcolumn14", ;
		Grdhotstatcolumn14.TBGRID1.Enabled = .F., ;
		Grdhotstatcolumn14.TBGRID1.Name = "TBGRID1", ;
		Grdhotstatcolumn15.Enabled = .F., ;
		Grdhotstatcolumn15.Name = "Grdhotstatcolumn15", ;
		Grdhotstatcolumn15.TBGRID1.Enabled = .F., ;
		Grdhotstatcolumn15.TBGRID1.Name = "TBGRID1", ;
		Grdhotstatcolumn16.Enabled = .F., ;
		Grdhotstatcolumn16.Name = "Grdhotstatcolumn16", ;
		Grdhotstatcolumn16.TBGRID1.Enabled = .F., ;
		Grdhotstatcolumn16.TBGRID1.Name = "TBGRID1", ;
		Grdhotstatcolumn17.Enabled = .F., ;
		Grdhotstatcolumn17.Name = "Grdhotstatcolumn17", ;
		Grdhotstatcolumn17.TBGRID1.Enabled = .F., ;
		Grdhotstatcolumn17.TBGRID1.Name = "TBGRID1", ;
		Grdhotstatcolumn18.Enabled = .F., ;
		Grdhotstatcolumn18.Name = "Grdhotstatcolumn18", ;
		Grdhotstatcolumn18.TBGRID1.Enabled = .F., ;
		Grdhotstatcolumn18.TBGRID1.Name = "TBGRID1", ;
		Grdhotstatcolumn19.Enabled = .F., ;
		Grdhotstatcolumn19.Name = "Grdhotstatcolumn19", ;
		Grdhotstatcolumn19.TBGRID1.Enabled = .F., ;
		Grdhotstatcolumn19.TBGRID1.Name = "TBGRID1", ;
		Grdhotstatcolumn2.Enabled = .F., ;
		Grdhotstatcolumn2.Name = "Grdhotstatcolumn2", ;
		Grdhotstatcolumn2.TBGRID1.Enabled = .F., ;
		Grdhotstatcolumn2.TBGRID1.Name = "TBGRID1", ;
		Grdhotstatcolumn20.Enabled = .F., ;
		Grdhotstatcolumn20.Name = "Grdhotstatcolumn20", ;
		Grdhotstatcolumn20.TBGRID1.Enabled = .F., ;
		Grdhotstatcolumn20.TBGRID1.Name = "TBGRID1", ;
		Grdhotstatcolumn21.Enabled = .F., ;
		Grdhotstatcolumn21.Name = "Grdhotstatcolumn21", ;
		Grdhotstatcolumn21.TBGRID1.Enabled = .F., ;
		Grdhotstatcolumn21.TBGRID1.Name = "TBGRID1", ;
		Grdhotstatcolumn22.Enabled = .F., ;
		Grdhotstatcolumn22.Name = "Grdhotstatcolumn22", ;
		Grdhotstatcolumn22.TBGRID1.Enabled = .F., ;
		Grdhotstatcolumn22.TBGRID1.Name = "TBGRID1", ;
		Grdhotstatcolumn23.Enabled = .F., ;
		Grdhotstatcolumn23.Name = "Grdhotstatcolumn23", ;
		Grdhotstatcolumn23.TBGRID1.Enabled = .F., ;
		Grdhotstatcolumn23.TBGRID1.Name = "TBGRID1", ;
		Grdhotstatcolumn24.Enabled = .F., ;
		Grdhotstatcolumn24.Name = "Grdhotstatcolumn24", ;
		Grdhotstatcolumn24.TBGRID1.Enabled = .F., ;
		Grdhotstatcolumn24.TBGRID1.Name = "TBGRID1", ;
		Grdhotstatcolumn25.Enabled = .F., ;
		Grdhotstatcolumn25.Name = "Grdhotstatcolumn25", ;
		Grdhotstatcolumn25.TBGRID1.Enabled = .F., ;
		Grdhotstatcolumn25.TBGRID1.Name = "TBGRID1", ;
		Grdhotstatcolumn26.Enabled = .F., ;
		Grdhotstatcolumn26.Name = "Grdhotstatcolumn26", ;
		Grdhotstatcolumn26.TBGRID1.Enabled = .F., ;
		Grdhotstatcolumn26.TBGRID1.Name = "TBGRID1", ;
		Grdhotstatcolumn27.Enabled = .F., ;
		Grdhotstatcolumn27.Name = "Grdhotstatcolumn27", ;
		Grdhotstatcolumn27.TBGRID1.Enabled = .F., ;
		Grdhotstatcolumn27.TBGRID1.Name = "TBGRID1", ;
		Grdhotstatcolumn28.Enabled = .F., ;
		Grdhotstatcolumn28.Name = "Grdhotstatcolumn28", ;
		Grdhotstatcolumn28.TBGRID1.Enabled = .F., ;
		Grdhotstatcolumn28.TBGRID1.Name = "TBGRID1", ;
		Grdhotstatcolumn29.Enabled = .F., ;
		Grdhotstatcolumn29.Name = "Grdhotstatcolumn29", ;
		Grdhotstatcolumn29.TBGRID1.Enabled = .F., ;
		Grdhotstatcolumn29.TBGRID1.Name = "TBGRID1", ;
		Grdhotstatcolumn3.Enabled = .F., ;
		Grdhotstatcolumn3.Name = "Grdhotstatcolumn3", ;
		Grdhotstatcolumn3.TBGRID1.Enabled = .F., ;
		Grdhotstatcolumn3.TBGRID1.Name = "TBGRID1", ;
		Grdhotstatcolumn30.Enabled = .F., ;
		Grdhotstatcolumn30.Name = "Grdhotstatcolumn30", ;
		Grdhotstatcolumn30.TBGRID1.Enabled = .F., ;
		Grdhotstatcolumn30.TBGRID1.Name = "TBGRID1", ;
		Grdhotstatcolumn31.Enabled = .F., ;
		Grdhotstatcolumn31.Name = "Grdhotstatcolumn31", ;
		Grdhotstatcolumn31.TBGRID1.Enabled = .F., ;
		Grdhotstatcolumn31.TBGRID1.Name = "TBGRID1", ;
		Grdhotstatcolumn32.Enabled = .F., ;
		Grdhotstatcolumn32.Name = "Grdhotstatcolumn32", ;
		Grdhotstatcolumn32.TBGRID1.Enabled = .F., ;
		Grdhotstatcolumn32.TBGRID1.Name = "TBGRID1", ;
		Grdhotstatcolumn33.Enabled = .F., ;
		Grdhotstatcolumn33.Name = "Grdhotstatcolumn33", ;
		Grdhotstatcolumn33.TBGRID1.Enabled = .F., ;
		Grdhotstatcolumn33.TBGRID1.Name = "TBGRID1", ;
		Grdhotstatcolumn4.Enabled = .F., ;
		Grdhotstatcolumn4.Name = "Grdhotstatcolumn4", ;
		Grdhotstatcolumn4.TBGRID1.Enabled = .F., ;
		Grdhotstatcolumn4.TBGRID1.Name = "TBGRID1", ;
		Grdhotstatcolumn5.Enabled = .F., ;
		Grdhotstatcolumn5.Name = "Grdhotstatcolumn5", ;
		Grdhotstatcolumn5.TBGRID1.Enabled = .F., ;
		Grdhotstatcolumn5.TBGRID1.Name = "TBGRID1", ;
		Grdhotstatcolumn6.Enabled = .F., ;
		Grdhotstatcolumn6.Name = "Grdhotstatcolumn6", ;
		Grdhotstatcolumn6.TBGRID1.Enabled = .F., ;
		Grdhotstatcolumn6.TBGRID1.Name = "TBGRID1", ;
		Grdhotstatcolumn7.Enabled = .F., ;
		Grdhotstatcolumn7.Name = "Grdhotstatcolumn7", ;
		Grdhotstatcolumn7.TBGRID1.Enabled = .F., ;
		Grdhotstatcolumn7.TBGRID1.Name = "TBGRID1", ;
		Grdhotstatcolumn8.Enabled = .F., ;
		Grdhotstatcolumn8.Name = "Grdhotstatcolumn8", ;
		Grdhotstatcolumn8.TBGRID1.Enabled = .F., ;
		Grdhotstatcolumn8.TBGRID1.Name = "TBGRID1", ;
		Grdhotstatcolumn9.Enabled = .F., ;
		Grdhotstatcolumn9.Name = "Grdhotstatcolumn9", ;
		Grdhotstatcolumn9.TBGRID1.Enabled = .F., ;
		Grdhotstatcolumn9.TBGRID1.Name = "TBGRID1"
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="grid" />

	ADD OBJECT 'frmHotstat.grdData.Grdhotstatcolumn1.Header1' AS header WITH ;
		Caption = "Header1", ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'frmHotstat.grdData.Grdhotstatcolumn10.Header1' AS header WITH ;
		Caption = "Header1", ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'frmHotstat.grdData.Grdhotstatcolumn11.Header1' AS header WITH ;
		Caption = "Header1", ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'frmHotstat.grdData.Grdhotstatcolumn12.Header1' AS header WITH ;
		Caption = "Header1", ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'frmHotstat.grdData.Grdhotstatcolumn13.Header1' AS header WITH ;
		Caption = "Header1", ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'frmHotstat.grdData.Grdhotstatcolumn14.Header1' AS header WITH ;
		Caption = "Header1", ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'frmHotstat.grdData.Grdhotstatcolumn15.Header1' AS header WITH ;
		Caption = "Header1", ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'frmHotstat.grdData.Grdhotstatcolumn16.Header1' AS header WITH ;
		Caption = "Header1", ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'frmHotstat.grdData.Grdhotstatcolumn17.Header1' AS header WITH ;
		Caption = "Header1", ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'frmHotstat.grdData.Grdhotstatcolumn18.Header1' AS header WITH ;
		Caption = "Header1", ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'frmHotstat.grdData.Grdhotstatcolumn19.Header1' AS header WITH ;
		Caption = "Header1", ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'frmHotstat.grdData.Grdhotstatcolumn2.Header1' AS header WITH ;
		Caption = "Header1", ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'frmHotstat.grdData.Grdhotstatcolumn20.Header1' AS header WITH ;
		Caption = "Header1", ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'frmHotstat.grdData.Grdhotstatcolumn21.Header1' AS header WITH ;
		Caption = "Header1", ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'frmHotstat.grdData.Grdhotstatcolumn22.Header1' AS header WITH ;
		Caption = "Header1", ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'frmHotstat.grdData.Grdhotstatcolumn23.Header1' AS header WITH ;
		Caption = "Header1", ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'frmHotstat.grdData.Grdhotstatcolumn24.Header1' AS header WITH ;
		Caption = "Header1", ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'frmHotstat.grdData.Grdhotstatcolumn25.Header1' AS header WITH ;
		Caption = "Header1", ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'frmHotstat.grdData.Grdhotstatcolumn26.Header1' AS header WITH ;
		Caption = "Header1", ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'frmHotstat.grdData.Grdhotstatcolumn27.Header1' AS header WITH ;
		Caption = "Header1", ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'frmHotstat.grdData.Grdhotstatcolumn28.Header1' AS header WITH ;
		Caption = "Header1", ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'frmHotstat.grdData.Grdhotstatcolumn29.Header1' AS header WITH ;
		Caption = "Header1", ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'frmHotstat.grdData.Grdhotstatcolumn3.Header1' AS header WITH ;
		Caption = "Header1", ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'frmHotstat.grdData.Grdhotstatcolumn30.Header1' AS header WITH ;
		Caption = "Header1", ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'frmHotstat.grdData.Grdhotstatcolumn31.Header1' AS header WITH ;
		Caption = "Header1", ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'frmHotstat.grdData.Grdhotstatcolumn32.Header1' AS header WITH ;
		Caption = "Header1", ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'frmHotstat.grdData.Grdhotstatcolumn33.Header1' AS header WITH ;
		Caption = "Header1", ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'frmHotstat.grdData.Grdhotstatcolumn4.Header1' AS header WITH ;
		Caption = "Header1", ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'frmHotstat.grdData.Grdhotstatcolumn5.Header1' AS header WITH ;
		Caption = "Header1", ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'frmHotstat.grdData.Grdhotstatcolumn6.Header1' AS header WITH ;
		Caption = "Header1", ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'frmHotstat.grdData.Grdhotstatcolumn7.Header1' AS header WITH ;
		Caption = "Header1", ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'frmHotstat.grdData.Grdhotstatcolumn8.Header1' AS header WITH ;
		Caption = "Header1", ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'frmHotstat.grdData.Grdhotstatcolumn9.Header1' AS header WITH ;
		Caption = "Header1", ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'frmHotstat.prnForm' AS printform WITH ;
		Left = 12, ;
		Name = "prnForm", ;
		Top = 24
		*< END OBJECT: ClassLib="..\libs\basectrl2.vcx" BaseClass="custom" />

	ADD OBJECT 'frmHotStatDlg' AS tform WITH ;
		Caption = "frmHotStatDlg", ;
		ControlBox = .T., ;
		DoCreate = .T., ;
		Height = 112, ;
		MaxButton = .F., ;
		MinButton = .F., ;
		Name = "frmHotStatDlg", ;
		Visible = .F., ;
		Width = 252
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="form" />

	ADD OBJECT 'frmHotStatDlg.cboBuilding' AS cbobuilding WITH ;
		BoundColumn = 2, ;
		ColumnWidths = "150,50", ;
		crowsource = bu_lang, bu_buildng, ;
		Left = 108, ;
		lselectbuilding = .T., ;
		Name = "cboBuilding", ;
		Style = 2, ;
		Top = 36, ;
		Width = 132, ;
		ZOrderSet = 3
		*< END OBJECT: ClassLib="..\libs\cit_ctrl.vcx" BaseClass="combobox" />

	ADD OBJECT 'frmHotStatDlg.cmdCancel' AS tcommandbutton WITH ;
		Caption = "cmdCancel", ;
		Left = 132, ;
		Name = "cmdCancel", ;
		Top = 72, ;
		ZOrderSet = 5
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'frmHotStatDlg.cmdOK' AS tcommandbutton WITH ;
		Caption = "cmdOK", ;
		Left = 36, ;
		Name = "cmdOK", ;
		Top = 72, ;
		ZOrderSet = 4
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'frmHotStatDlg.lblBuilding' AS tlabel WITH ;
		AutoSize = .T., ;
		Caption = "lblBuilding", ;
		Left = 12, ;
		Name = "lblBuilding", ;
		Top = 39, ;
		Width = 60, ;
		ZOrderSet = 2
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'frmHotStatDlg.lblStart' AS tlabel WITH ;
		AutoSize = .T., ;
		Caption = "lblStart", ;
		Left = 12, ;
		Name = "lblStart", ;
		Top = 15, ;
		Width = 40, ;
		ZOrderSet = 0
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'frmHotStatDlg.txtStart' AS tdatectrl WITH ;
		Left = 108, ;
		Name = "txtStart", ;
		Top = 12, ;
		Width = 132, ;
		ZOrderSet = 1
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />

	ADD OBJECT 'toolSettings' AS _toolbar WITH ;
		Caption = "toolSettings", ;
		ControlBox = .F., ;
		Height = 30, ;
		Left = 0, ;
		Name = "toolSettings", ;
		Top = 0, ;
		Visible = .F., ;
		Width = 82
		*< END OBJECT: ClassLib="..\libs\_base.vcx" BaseClass="toolbar" />

	ADD OBJECT 'toolSettings.spnColCount' AS tspinner WITH ;
		Height = 24, ;
		InputMask = "99", ;
		Left = 5, ;
		Name = "spnColCount", ;
		SelectOnEntry = .T., ;
		Top = 3, ;
		Width = 72
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="spinner" />
	
	PROCEDURE doclose
		LOCAL i
		
		FOR i = this.FormCount TO 1 STEP -1
		     this.Forms(i).Release()
		NEXT
		*this.Release()		&& C0005 error on ESC pressed
	ENDPROC

	PROCEDURE dogoto
		this.frmHotStatDlg.txtStart.Value = sysdate()
		this.frmHotStatDlg.Show()
	ENDPROC

	PROCEDURE dosettings
		this.toolSettings.Visible = not this.toolSettings.Visible
	ENDPROC

	PROCEDURE Init
		LOCAL ARRAY laCount[1]
		
		laCount[1] = .T.
		SqlCursor("SELECT COUNT(*) FROM picklist WHERE pl_label = 'VIRROOM   '",,,,,,@laCount)
		IF NOT EMPTY(laCount[1])
			this.nVirtRt = laCount[1]
		ENDIF
		laCount[1] = .T.
		SqlCursor("SELECT COUNT(*) FROM picklist WHERE pl_label = 'FORECAST  ' AND pl_numcod <> 0",,,,,,@laCount)
		IF NOT EMPTY(laCount[1])
			this.nForecast = laCount[1]
		ENDIF
		
		DIMENSION this.aToDay[4], this.ahSdata[23,4+this.nMaxCol], this.aVirtRt[MAX(1,this.nVirtRt),4+this.nMaxCol], this.aForecast[MAX(1,this.nForecast),4+this.nMaxCol]
		STORE 0 TO this.aToDay, this.ahSdata, this.aVirtRt, this.aForecast
		
		this.frmHotstat.Init(.T.)
		
		this.frmHotStatDlg.AssignCaption()
		WITH this.toolSettings.spnColCount
			.SpinnerHighValue = this.nMaxCol
			.SpinnerLowValue = 3
			.Value = 14
			.addProperty("nOldValue", .Value)
		ENDWITH
		this.dFirst = SysDate()
		this.cBuildingExp = ""
		this.DoGoto()
	ENDPROC

	PROCEDURE Load
		Ini(.T.)
	ENDPROC

	PROCEDURE m_createdatacrsr
		LOCAL l_cFields, l_nCol, l_cNo
		
		l_cFields = "HeadData c(40), cOrder i, HeadForeC i, HeadBackC i,"
		FOR l_nCol = 1 TO this.nmaxcol+1
			l_cNo = ALLTRIM(STR(l_nCol))
			l_cFields = l_cFields + "data"+l_cNo+" c(30)," + "ForeC" + l_cNo + " i," + "BackC" + l_cNo + " i"
			IF l_nCol < this.nMaxCol+1
				l_cFields = l_cFields + ","
			ENDIF 
		ENDFOR
		CREATE CURSOR cDataCrsr (&l_cFields)
		INDEX ON corder TAG TAG1
	ENDPROC

	PROCEDURE m_drwdata
		LOCAL l_nRow, l_nCol, l_cRec, l_cRecD, l_cRecF, l_cRecB, l_cRecF2, l_cRecB2, ;
				dDate, l_nForeColor, l_nBackColor, l_cData, ;
				l_nColCnt, l_nOrder, l_oData, l_dFrom, l_dTo, l_cBuildFilter, l_cFreeMacro
		l_nColCnt = this.toolSettings.spnColCount.Value
		LOCAL ARRAY l_aHead(3,l_nColCnt+2) 
		LOCAL ARRAY l_aBackC(3,l_nColCnt+2) 
		LOCAL ARRAY l_aForeC(3,l_nColCnt+2) 
		l_nOrder = 0 && Used to position row in some order in grid.
		
		WITH this
			l_nForeColor = this.frmHotstat.ForeColor
			l_nBackColor = this.frmHotstat.BackColor
			l_aHead[1,1] = PROPER(myCmonth(.dFirst))+' '+STR(YEAR(.dFirst), 4)
			l_aForeC[1,1] = l_nForeColor
			l_aBackC[1,1] = l_nBackColor
		
			IF MONTH(.dFirst+l_nColCnt)<>MONTH(.dFirst)
				IF YEAR(.dFirst+l_nColCnt)<>YEAR(.dFirst)
					l_cData = PROPER(myCmonth(.dFirst+l_nColCnt))+' '+STR(YEAR(.dFirst+l_nColCnt), 4)
				ELSE
					l_cData = PROPER(myCmonth(.dFirst+l_nColCnt))
				ENDIF
			ELSE
				l_cData = ""
			ENDIF
			l_aHead[2,1] = l_cData
			l_aForeC[2,1] = l_nForeColor
			l_aBackC[2,1] = l_nBackColor
		
			l_aHead[3,1] = ""
			l_aForeC[3,1] = l_nForeColor
			l_aBackC[3,1] = l_nBackColor
		
			FOR l_nRow = 1 TO 3
				l_aHead(l_nRow,2) = ""
				l_aForeC(l_nRow,2) = l_nForeColor
				l_aBackC(l_nRow,2) = l_nBackColor
			ENDFOR
		
			TEXT TO l_cSql TEXTMERGE NOSHOW PRETEXT 2 + 8
			SELECT * FROM season
				WHERE se_date BETWEEN <<SqlCnv(this.dfIrst,.T.)>> AND <<SqlCnv(.dfIrst+l_nColCnt-1,.T.)>>
			ENDTEXT
			SqlCursor(l_cSql, "curSeason")
			FOR l_nCol = 3 TO l_nColCnt+2
				ddAte = .dfIrst+l_nCol-3
				l_aHead[1,l_nCol] = SUBSTR(myCdow(ddAte), 1, 2)
				l_aForeC[1,l_nCol] = IIF(INLIST(DOW(ddAte), 1, 7), RGB(0,0,255), RGB(0,0,0))
				l_aBackC[1,l_nCol] = l_nBackColor
				l_aHead[2,l_nCol] = SUBSTR(DTOC(ddAte), 1, 5)
				l_aForeC[2,l_nCol] = l_aForeC[1,l_nCol]
				l_aBackC[2,l_nCol] = l_aBackC[1,l_nCol]
				
				DLocate("curSeason", "se_date = " + SqlCnv(dDate))
				l_aHead[3,l_nCol] = curSeason.se_event
				l_aForeC[3,l_nCol] = l_aForeC[1,l_nCol]
				l_cData = IIF(EMPTY(curSeason.se_color), "l_aBackC[1,l_nCol]", "RGB("+curSeason.se_color+")")
				l_aBackC[3,l_nCol] = &l_cData
			ENDFOR
			DClose("curSeason")
		
			this.frmHotstat.lockScreen = .T.
			SELECT * FROM cDataCrsr WHERE .F. INTO CURSOR curdtemp READWRITE
		
			FOR l_nRow = 1 TO 3
				APPEND BLANK
				l_nOrder = l_nOrder + 1
				REPLACE headData WITH l_aHead[l_nRow,1], ;
					cOrder WITH l_nOrder, ;
					HeadForeC WITH l_aForeC[l_nRow,1], ;
					HeadBackC WITH l_aBackC[l_nRow,1]
		
				FOR l_nCol = 1 TO l_nColCnt+1
					l_cRec = "Data"+ALLTRIM(STR(l_nCol))
					replace &l_cRec WITH l_aHead[l_nRow, l_nCol+1]
					l_cRec = "ForeC"+ALLTRIM(STR(l_nCol))
					replace &l_cRec WITH l_aForeC[l_nRow, l_nCol+1]
					l_cRec = "BackC"+ALLTRIM(STR(l_nCol))
					replace &l_cRec WITH l_aBackC[l_nRow, l_nCol+1]
				ENDFOR
			ENDFOR
		
			FOR l_nRow = 1 TO 23
				APPEND BLANK 
				IF l_nRow = 9
					&& Make a hole, so we can add some cusrom rows an end, after row "Zimmer verfügbar minimum" (blue line).
					l_nOrder = 40
				ELSE
					l_nOrder = l_nOrder + 1
				ENDIF
		
				REPLACE HeadData WITH .ahSdata[l_nRow,1], ;
					cOrder WITH l_nOrder, ;
					HeadForeC WITH this.frmHotstat.ForeColor , ;
					headBackC WITH this.frmHotstat.BackColor
				DO CASE
					CASE l_nRow = 12
						l_cData = IIF(EMPTY(.atoday[1]), "", TRANSFORM(.atoday[1]))
					CASE l_nRow = 13
						l_cData = IIF(EMPTY(.atoday[2]), "", TRANSFORM(.atoday[2]))
					CASE l_nRow = 16
						l_cData = IIF(EMPTY(.atoday[3]), "", TRANSFORM(.atoday[3]))
					CASE l_nRow = 17
						l_cData = IIF(EMPTY(.atoday[4]), "", TRANSFORM(.atoday[4]))
					OTHERWISE
						l_cData = ""
				ENDCASE 	
				REPLACE Data1 WITH l_cData, ;
					ForeC1 WITH this.frmHotstat.ForeColor , ;
					BackC1 WITH this.frmHotstat.BackColor
				FOR l_nCol = 2 TO l_nColCnt+1
					l_cRecD = "Data"+TRANSFORM(l_nCol)
					l_cRecB = "BackC"+TRANSFORM(l_nCol)
					l_cRecF = "ForeC"+TRANSFORM(l_nCol)
					REPLACE &l_cRecD WITH PADR(ROUND(.ahSdata(l_nRow,l_nCol+3),.ahSdata(l_nRow,4)),5), &l_cRecB WITH .ahSdata[l_nRow,2], &l_cRecF WITH .ahSdata[l_nRow,3] IN curdtemp
				ENDFOR
			ENDFOR
			
			IF this.nVirtRt > 0	&& Get virtual roomtypes availability
				l_nOrder = 19
				FOR l_nRow = 1 TO ALEN(.aVirtRt,1)
					INSERT INTO curdtemp (HeadData, cOrder, HeadForeC, HeadBackC, ForeC1, BackC1) ;
						VALUES (.aVirtRt[l_nRow,1], l_nOrder+l_nRow, this.frmHotstat.ForeColor, this.frmHotstat.BackColor, this.frmHotstat.ForeColor, this.frmHotstat.BackColor)
					FOR l_nCol = 2 TO l_nColCnt+1
						l_cRecD = "Data"+TRANSFORM(l_nCol)
						l_cRecB = "BackC"+TRANSFORM(l_nCol)
						l_cRecF = "ForeC"+TRANSFORM(l_nCol)
						REPLACE &l_cRecD WITH PADR(ROUND(.aVirtRt(l_nRow,l_nCol+3),.aVirtRt(l_nRow,4)),5), &l_cRecB WITH .aVirtRt[l_nRow,2], &l_cRecF WITH .aVirtRt[l_nRow,3] IN curdtemp
					NEXT
				NEXT
				l_nOrder = l_nOrder + ALEN(.aVirtRt,1)
			ENDIF
		
			IF this.nForecast > 0	&& Get Forecast groups
				l_nOrder = 59
				FOR l_nRow = 1 TO ALEN(.aForecast,1)
					INSERT INTO curdtemp (HeadData, cOrder, HeadForeC, HeadBackC, ForeC1, BackC1) ;
						VALUES (.aForecast[l_nRow,1], l_nOrder+l_nRow, this.frmHotstat.ForeColor, this.frmHotstat.BackColor, this.frmHotstat.ForeColor, this.frmHotstat.BackColor)
					FOR l_nCol = 2 TO l_nColCnt+1
						l_cRecD = "Data"+TRANSFORM(l_nCol)
						l_cRecB = "BackC"+TRANSFORM(l_nCol)
						l_cRecF = "ForeC"+TRANSFORM(l_nCol)
						REPLACE &l_cRecD WITH PADR(ROUND(.aForecast(l_nRow,l_nCol+3),.aForecast(l_nRow,4)),5), &l_cRecB WITH .aForecast[l_nRow,2], &l_cRecF WITH .aForecast[l_nRow,3] IN curdtemp
					NEXT
				NEXT
				l_nOrder = l_nOrder + ALEN(.aForecast,1)
			ENDIF
		
			* Add 5 empty records on bottom for dynamic Fore and BackColor
			l_nOrder = 100
			l_nBackColor = RGB(181,230,29)
			l_nForeColor = RGB(0,0,0)
			FOR l_nRow = 1 TO 5
				INSERT INTO curdtemp (cOrder, HeadForeC, headBackC, ForeC1, BackC1) ;
					VALUES (l_nOrder, this.frmHotstat.ForeColor, this.frmHotstat.BackColor, this.frmHotstat.ForeColor, this.frmHotstat.BackColor)
				FOR l_nCol = 2 TO l_nColCnt+1
					l_cRecF = "ForeC"+TRANSFORM(l_nCol)
					l_cRecB = "BackC"+TRANSFORM(l_nCol)
					REPLACE &l_cRecF WITH l_nForeColor, &l_cRecB WITH l_nBackColor IN curdtemp
				ENDFOR
			NEXT
			* Fill 1 empty column on right for dynamic Fore and BackColor
			IF l_nColCnt < .nMaxCol
				l_cRecB = "BackC"+TRANSFORM(l_nColCnt+1)
				l_cRecF = "ForeC"+TRANSFORM(l_nColCnt+1)
				l_cRecF2 = "ForeC"+TRANSFORM(l_nColCnt+2)
				l_cRecB2 = "BackC"+TRANSFORM(l_nColCnt+2)
				REPLACE &l_cRecF2 WITH curdtemp.&l_cRecF, &l_cRecB2 WITH curdtemp.&l_cRecB ALL IN curdtemp
			ENDIF
			SELECT cDataCrsr
			ZAP
			APPEND FROM DBF("curdtemp")
			dclose("curdtemp")
			GO TOP IN cDataCrsr
		
			this.frmHotstat.grdData.Refresh()
			this.frmHotstat.lockScreen = .F.
		ENDWITH
	ENDPROC

	PROCEDURE m_linkdata
		LPARAMETERS lp_nFrom, lp_nTo, lp_lHeaders
		LOCAL l_nCol, l_cControl, l_oColumn, l_cData
		WITH this.frmHotstat.grdData
			IF lp_lHeaders
				.RecordSource = "cDataCrsr"
				WITH .columns[1]
					.ControlSource = "headData"
					.DynamicForeColor = "headForeC"
					.DynamicBackColor = "headBackC"
				ENDWITH 
			ENDIF
			FOR l_nCol = lp_nFrom TO lp_nTo
				WITH .columns[l_nCol+1]
					.ControlSource = "ALLTRIM(data"+ALLTRIM(STR(l_nCol))+")"
					.DynamicForeColor = "ForeC"+ALLTRIM(STR(l_nCol))
					.DynamicBackColor = "BackC"+ALLTRIM(STR(l_nCol))
					.DynamicAlignment = [IIF(cOrder = 3, 0, 1)]
				ENDWITH
			ENDFOR
		ENDWITH
	ENDPROC

	PROCEDURE m_setcolumnwidth
		LOCAL lnColNum, lnColWidth
		
		lnColNum = this.toolSettings.spnColCount.Value
		WITH this.frmHotstat.grdData
			lnColWidth = .Columns(1).Width
			.SetAll("Width", INT((.Width-lnColWidth)/(lnColNum+1))-1, "Grdhotstatcolumn")
			.Columns(1).Width = lnColWidth
		ENDWITH
	ENDPROC

	PROCEDURE m_showdata
		LPARAMETERS lp_nLo, lp_nHi
		PRIVATE dFirst, cBuildingExp
		LOCAL l_nRow, l_nCol
		LOCAL ARRAY l_aHsData(1), l_aToDay(1), l_aVirtRt(1), l_aForecast(1)
		
		IF lp_nHi > 0
			dFirst = this.dFirst
			cBuildingExp = this.cBuildingExp
			DO ReadData IN Hotstat WITH lp_nLo, lp_nHi, l_aHsData, l_aToDay, l_aVirtRt, l_aForecast
			FOR l_nCol = 1 TO ALEN(l_aHsData,2)
				FOR l_nRow = 1 TO ALEN(l_aHsData,1)
					this.ahsData[l_nRow, l_nCol+IIF(l_nCol<5, 0, lp_nLo-1)] = l_aHsData[l_nRow, l_ncol]
				NEXT
				FOR l_nRow = 1 TO ALEN(l_aVirtRt,1)
					this.aVirtRt[l_nRow, l_nCol+IIF(l_nCol<5, 0, lp_nLo-1)] = l_aVirtRt[l_nRow, l_ncol]
				NEXT
				FOR l_nRow = 1 TO ALEN(l_aForecast,1)
					this.aForecast[l_nRow, l_nCol+IIF(l_nCol<5, 0, lp_nLo-1)] = l_aForecast[l_nRow, l_ncol]
				NEXT
			NEXT
			ACOPY(l_aToDay,this.aToDay)
		ENDIF
		
		this.m_drwData()
	ENDPROC

	PROCEDURE showsearchres
		this.frmHotStatDlg.Hide()
		IF NOT this.frmHotstat.Visible
			this.m_createdatacrsr()
			this.m_linkData(1, this.nMaxCol+1, .T.)
		ENDIF
		this.m_showData(1, this.toolSettings.spnColCount.Value)
		this.m_setColumnWidth()
		this.frmHotstat.Show()
	ENDPROC

	PROCEDURE frmHotstat.grdData.MouseMove
		LPARAMETERS nButton, nShift, nXCoord, nYCoord
		LOCAL l_nWhOut, l_nRow, l_nCol, l_nMRow, l_nMCol
		
		STORE 1 TO l_nWhOut, l_nRow, l_nCol
		l_nMRow = MROW(thisform.Name,3)
		l_nMCol = MCOL(thisform.Name,3)
		thisform.ShowTips = ;
				this.GridHitTest(l_nMCol,l_nMRow,@l_nWhOut,@l_nRow,@l_nCol) ;
				AND l_nRow = 3 AND l_nCol > 1
	ENDPROC

	PROCEDURE frmHotstat.Init
		LPARAMETERS lp_lDoIt
		
		IF lp_lDoIt
			IF thisformset.nVirtRt + thisformset.nForecast > 0
				* Adjust grid height, when virtual roomtypes are used.
				WITH thisformset.frmHotstat
					.grdData.Height = .grdData.Height + .grdData.RowHeight * (thisformset.nVirtRt + thisformset.nForecast)
					.grdData.h = .grdData.Height
					.Height = .grdData.Height
					.h = .Height
				ENDWITH
			ENDIF
		
			DODEFAULT()
		ENDIF
	ENDPROC

	PROCEDURE frmHotstat.MouseUp
		LPARAMETERS nButton, nShift, nXCoord, nYCoord
		this.grdData.MouseUp(nButton, nShift, nXCoord, nYCoord)
	ENDPROC

	PROCEDURE frmHotstat.onclose
		thisformset.DoClose()
	ENDPROC

	PROCEDURE frmHotstat.onnext
		LOCAL l_nROw, l_nCol
		
		WITH thisformset
			IF .dfIrst + 1 <= sysdate() + _screen.oGlobal.oParam.pa_avail
				.dfIrst = .dfIrst+1
				FOR l_nCol = 5 TO ALEN(.ahSdata,2)-1
					FOR l_nRow = 1 TO ALEN(.ahSdata,1)
						.ahSdata[l_nRow, l_nCol] = .ahSdata(l_nRow,l_nCol+1)
					NEXT
					FOR l_nRow = 1 TO ALEN(.aVirtRt,1)
						.aVirtRt[l_nRow, l_nCol] = .aVirtRt(l_nRow,l_nCol+1)
					NEXT
					FOR l_nRow = 1 TO ALEN(.aForecast,1)
						.aForecast[l_nRow, l_nCol] = .aForecast(l_nRow,l_nCol+1)
					NEXT
				NEXT
				.m_showdata( ;
					.toolSettings.spnColCount.Value, ;
					.toolSettings.spnColCount.Value)
			ENDIF
		ENDWITH
	ENDPROC

	PROCEDURE frmHotstat.onprevious
		LOCAL l_nRow, l_nCol
		
		WITH thisformset
			IF .dfIrst-1 >= sysdate() - _screen.oGlobal.oParam.pa_holdres
				.dFirst = .dFirst - 1
				FOR l_nCol = ALEN(.ahSdata, 2)-1 TO 5 STEP -1
					FOR l_nRow = 1 TO ALEN(.ahsdata,1)
						.ahSdata[l_nRow, l_nCol+1] = .ahSdata[l_nRow,l_nCol]
					NEXT
					FOR l_nRow = 1 TO ALEN(.aVirtRt,1)
						.aVirtRt[l_nRow, l_nCol+1] = .aVirtRt[l_nRow,l_nCol]
					NEXT
					FOR l_nRow = 1 TO ALEN(.aForecast,1)
						.aForecast[l_nRow, l_nCol+1] = .aForecast[l_nRow,l_nCol]
					NEXT
				NEXT
				.m_showdata(1,1)
			ENDIF
		ENDWITH
	ENDPROC

	PROCEDURE frmHotstat.onprint
		thisformset.ToolSettings.Visible = .F.
		this.prnForm.Print()
	ENDPROC

	PROCEDURE frmHotstat.onrefresh
		LPARAMETERS toControl
		
		thisformset.m_showData(1, thisformset.toolSettings.spnColCount.Value)
	ENDPROC

	PROCEDURE frmHotstat.QueryUnload
		NODEFAULT
		this.OnClose()
	ENDPROC

	PROCEDURE frmHotStatDlg.assigncaption
		WITH this
			.Caption = GetLangText("HOTSTAT","TW_STARTDATE")
			.lblStart.Caption = GetLangText("HOTSTAT","T_STARTDATE")
			.lblBuilding.Caption = GetLangText("HOTSTAT","T_BUILDING")
			.cmdOK.Caption = GetLangText("COMMON","TXT_OK")
			.cmdCancel.Caption = GetLangText("COMMON","TXT_CANCEL")
		ENDWITH
	ENDPROC

	PROCEDURE frmHotStatDlg.cmdCancel.Click
		thisform.OnClose()
	ENDPROC

	PROCEDURE frmHotStatDlg.cmdOK.Click
		thisformset.dFirst = thisform.txtStart.Value 
		IF NOT EMPTY(thisform.cbobuilding.Value)
			thisformset.cBuildingExp = "rt_buildng = "+sqlcnv(TRIM(thisform.cboBuilding.Value))
			thisformset.frmHotstat.Caption = GetLangText("HOTSTAT", "TXT_HOTSTAT") + " " + ;
					GetLangText("HOTSTAT","TXT_FOR_BUILDING") + " " + TRIM(thisform.cboBuilding.Value)
		ELSE
			thisformset.cBuildingExp = "1=1"
			thisformset.frmHotstat.caption = GetLangText("HOTSTAT", "TXT_HOTSTAT")
		ENDIF
		thisformset.showsearchres()
	ENDPROC

	PROCEDURE frmHotStatDlg.KeyPress
		LPARAMETERS nKeyCode, nShiftAltCtrl
		
		IF nkeycode = 27
			thisform.OnClose()
		ENDIF
	ENDPROC

	PROCEDURE frmHotStatDlg.onclose
		IF thisformset.frmHotstat.Visible
			this.Hide()
		ELSE
			thisformset.DoClose()
		ENDIF
	ENDPROC

	PROCEDURE frmHotStatDlg.QueryUnload
		NODEFAULT
		this.OnClose()
	ENDPROC

	PROCEDURE frmHotStatDlg.txtStart.Valid
		RETURN !Empty(this.Value)
	ENDPROC

	PROCEDURE toolSettings.Init
		this.Caption = getLangText("HOTSTAT", "TXT_NUM_OF_DAYS")
		DODEFAULT()
	ENDPROC

	PROCEDURE toolSettings.spnColCount.DownClick
		thisformset.m_showdata(0,0)
		thisformset.m_setcolumnwidth()
		
	ENDPROC

	PROCEDURE toolSettings.spnColCount.UpClick
		WITH this
			thisformset.m_showdata(MIN(.nOldValue+1,.Value), .Value)
			.nOldValue = .value
		ENDWITH 
		thisformset.m_setcolumnwidth()
		
	ENDPROC

	PROCEDURE toolSettings.spnColCount.Valid
		DO CASE
			CASE this.Value < 3
				this.Value = 3
			CASE this.Value > thisformset.nmaxcol
				this.Value = thisformset.nmaxcol
		ENDCASE
		DO CASE
			CASE this.Value < this.nOldValue
				thisformset.m_showdata(0,0)
			CASE this.Value > this.nOldValue
				thisformset.m_showdata(this.nOldValue, this.Value)
		ENDCASE
		this.nOldValue = this.Value
		thisformset.m_setcolumnwidth()
		NODEFAULT
		RETURN .T.
	ENDPROC

ENDDEFINE
