*--------------------------------------------------------------------------------------------------------------------------------------------------------
* (ES) AUTOGENERADO - ¡¡ATENCIÓN!! - ¡¡NO PENSADO PARA EJECUTAR!! USAR SOLAMENTE PARA INTEGRAR CAMBIOS Y ALMACENAR CON HERRAMIENTAS SCM!!
* (EN) AUTOGENERATED - ATTENTION!! - NOT INTENDED FOR EXECUTION!! USE ONLY FOR MERGING CHANGES AND STORING WITH SCM TOOLS!!
*--------------------------------------------------------------------------------------------------------------------------------------------------------
*< FOXBIN2PRG: Version="1.19" SourceFile="araccedit.scx" /> (Solo para binarios VFP 9 / Only for VFP 9 binaries)
*
*
DEFINE CLASS dataenvironment AS dataenvironment 
 	*< CLASSDATA: Baseclass="dataenvironment" Timestamp="" Scale="" Uniqueid="" ClassIcon="1" />

	DataSource = .NULL.
	Height = 200
	Left = 1
	Name = "Dataenvironment"
	Top = 220
	Width = 520

ENDDEFINE

DEFINE CLASS frmaraccedit AS tform OF "..\libs\main.vcx" 
 	*< CLASSDATA: Baseclass="form" Timestamp="" Scale="" Uniqueid="" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="tbdebitor" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lDebitor" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lFirma" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="tbfirma" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="tbname" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lcreditlimit" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lname" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdOK" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdCancel" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="tbcreditlimit" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="ogtype" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lstatus" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chpermanent" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chstatment" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chreminder" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cbtype" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="ltype" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="tbLasStatement" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lLastStatement" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="tbLastReminder" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lLastReminder" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lsaytype" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cbcontact" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lcontact" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="tmrActivateForm" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cboRemKey" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cboRemCondition" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lRemKey" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lRemKeyDescipt" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lRemCondition" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lRemConditionDescipt" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chinactive" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="oProcAddress" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="esayname" UniqueID="" Timestamp="" />

	*<DefinedPropArrayMethod>
		*m: activateformagain
		*m: getaddress
		*m: getnextid
		*m: oncancel
		*m: onok
		*m: refreshaddress
		*m: refreshapartner
		*m: refreshartype
		*m: refreshcontactdata
		*m: setaddress
		*p: cam_number
		*p: cay_number
		*p: ccompany
		*p: ccontact
		*p: cmode
		*p: cname
		*p: dlastreminder
		*p: dlaststatement
		*p: frmcaller
		*p: laddresenterkey
		*p: lcreditors
		*p: oaraccdata
	*</DefinedPropArrayMethod>

	Caption = "A/R Accounts Edit / New"
	ccompany = 
	ccontact = 
	cmode = 
	cname = 
	ControlBox = .T.
	dlastreminder = {}
	dlaststatement = {}
	DoCreate = .T.
	formname = frmArAccEdit
	frmcaller = .NULL.
	Height = 501
	Icon = ..\bitmap\icons\folder06.ico
	KeyPreview = .T.
	lcreditors = .F.
	MaxButton = .F.
	MinButton = .F.
	Name = "frmArAccEdit"
	oaraccdata = .NULL.
	Width = 423

	ADD OBJECT 'cbcontact' AS tcombobox WITH ;
		Height = 24, ;
		Left = 112, ;
		Name = "cbcontact", ;
		Style = 2, ;
		TabIndex = 4, ;
		Top = 74, ;
		Width = 216
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="combobox" />

	ADD OBJECT 'cboRemCondition' AS tcombobox WITH ;
		ColumnCount = 2, ;
		ColumnLines = .F., ;
		ColumnWidths = "50,100", ;
		Format = "KR", ;
		Height = 24, ;
		InputMask = "99", ;
		Left = 112, ;
		Name = "cboRemCondition", ;
		TabIndex = 15, ;
		Top = 414, ;
		Width = 60
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="combobox" />

	ADD OBJECT 'cboRemKey' AS tcombobox WITH ;
		ColumnCount = 2, ;
		ColumnLines = .F., ;
		ColumnWidths = "50,100", ;
		Format = "KR", ;
		Height = 24, ;
		InputMask = "99", ;
		Left = 112, ;
		Name = "cboRemKey", ;
		TabIndex = 14, ;
		Top = 390, ;
		Width = 60
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="combobox" />

	ADD OBJECT 'cbtype' AS tcombobox WITH ;
		ColumnCount = 2, ;
		ColumnLines = .F., ;
		ColumnWidths = "40,150", ;
		Format = "K", ;
		Height = 24, ;
		InputMask = "!!!", ;
		Left = 112, ;
		Name = "cbtype", ;
		TabIndex = 7, ;
		Top = 228, ;
		Width = 72
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="combobox" />

	ADD OBJECT 'chinactive' AS tcheckbox WITH ;
		Alignment = 0, ;
		Caption = "chinactive", ;
		Height = 17, ;
		Left = 4, ;
		Name = "chinactive", ;
		TabIndex = 16, ;
		Top = 447, ;
		Width = 260
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="checkbox" />

	ADD OBJECT 'chpermanent' AS tcheckbox WITH ;
		Alignment = 0, ;
		Caption = "chpermanent", ;
		Height = 17, ;
		Left = 4, ;
		Name = "chpermanent", ;
		TabIndex = 8, ;
		Top = 264, ;
		Width = 180
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="checkbox" />

	ADD OBJECT 'chreminder' AS tcheckbox WITH ;
		Alignment = 0, ;
		Caption = "chreminder", ;
		Height = 17, ;
		Left = 4, ;
		Name = "chreminder", ;
		TabIndex = 10, ;
		Top = 312, ;
		Width = 180
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="checkbox" />

	ADD OBJECT 'chstatment' AS tcheckbox WITH ;
		Alignment = 0, ;
		Caption = "chstatment", ;
		Height = 17, ;
		Left = 4, ;
		Name = "chstatment", ;
		TabIndex = 9, ;
		Top = 288, ;
		Width = 180
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="checkbox" />

	ADD OBJECT 'cmdCancel' AS tcommandbutton WITH ;
		Caption = "cmdCancel", ;
		Left = 220, ;
		Name = "cmdCancel", ;
		TabIndex = 18, ;
		Top = 472
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'cmdOK' AS tcommandbutton WITH ;
		Caption = "cmdOK", ;
		Left = 118, ;
		Name = "cmdOK", ;
		TabIndex = 17, ;
		Top = 472
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'esayname' AS teditbox WITH ;
		ForeColor = 0,0,255, ;
		Height = 102, ;
		Left = 4, ;
		Name = "esayname", ;
		ReadOnly = .T., ;
		TabIndex = 6, ;
		TabStop = .F., ;
		Top = 100, ;
		Width = 416
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="editbox" />

	ADD OBJECT 'lcontact' AS tlabel WITH ;
		Caption = "lcontact", ;
		Left = 4, ;
		Name = "lcontact", ;
		TabIndex = 22, ;
		Top = 77
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'lcreditlimit' AS tlabel WITH ;
		Caption = "lcreditlimit", ;
		Height = 17, ;
		Left = 4, ;
		Name = "lcreditlimit", ;
		TabIndex = 23, ;
		Top = 207, ;
		Width = 108
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'lDebitor' AS tlabel WITH ;
		Caption = "lDebitor", ;
		Left = 4, ;
		Name = "lDebitor", ;
		TabIndex = 19, ;
		Top = 5
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'lFirma' AS tlabel WITH ;
		Caption = "lfirma", ;
		Left = 4, ;
		Name = "lFirma", ;
		TabIndex = 20, ;
		Top = 29
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'lLastReminder' AS tlabel WITH ;
		Caption = "lLastReminder", ;
		Left = 4, ;
		Name = "lLastReminder", ;
		TabIndex = 28, ;
		Top = 363, ;
		Width = 140
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'lLastStatement' AS tlabel WITH ;
		Caption = "lLastStatement", ;
		Height = 17, ;
		Left = 4, ;
		Name = "lLastStatement", ;
		TabIndex = 27, ;
		Top = 339, ;
		Width = 140
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'lname' AS tlabel WITH ;
		Caption = "lname", ;
		Left = 4, ;
		Name = "lname", ;
		TabIndex = 21, ;
		Top = 53
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'lRemCondition' AS tlabel WITH ;
		Caption = "lRemCondition", ;
		Height = 17, ;
		Left = 4, ;
		Name = "lRemCondition", ;
		TabIndex = 32, ;
		Top = 418, ;
		Width = 104
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'lRemConditionDescipt' AS tlabel WITH ;
		Caption = "lRemConditionDescipt", ;
		Height = 17, ;
		Left = 174, ;
		Name = "lRemConditionDescipt", ;
		TabIndex = 31, ;
		Top = 418, ;
		Width = 150
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'lRemKey' AS tlabel WITH ;
		Caption = "lRemKey", ;
		Height = 17, ;
		Left = 4, ;
		Name = "lRemKey", ;
		TabIndex = 29, ;
		Top = 392, ;
		Width = 104
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'lRemKeyDescipt' AS tlabel WITH ;
		Caption = "lRemKeyDescipt", ;
		Height = 17, ;
		Left = 174, ;
		Name = "lRemKeyDescipt", ;
		TabIndex = 30, ;
		Top = 392, ;
		Width = 150
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'lsaytype' AS tlabel WITH ;
		Caption = "lsaytype", ;
		Height = 17, ;
		Left = 192, ;
		Name = "lsaytype", ;
		TabIndex = 25, ;
		Top = 232, ;
		Width = 136
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'lstatus' AS tlabel WITH ;
		Caption = "lstatus", ;
		Height = 17, ;
		Left = 208, ;
		Name = "lstatus", ;
		TabIndex = 26, ;
		Top = 252, ;
		Width = 48
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'ltype' AS tlabel WITH ;
		Caption = "ltype", ;
		Height = 17, ;
		Left = 4, ;
		Name = "ltype", ;
		TabIndex = 24, ;
		Top = 232, ;
		Width = 108
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'ogtype' AS toptiongroup WITH ;
		ButtonCount = 3, ;
		Height = 72, ;
		Left = 196, ;
		Name = "ogtype", ;
		TabIndex = 11, ;
		Top = 263, ;
		Width = 132, ;
		Option1.Caption = "Option1", ;
		Option1.Height = 17, ;
		Option1.Left = 6, ;
		Option1.Name = "Option1", ;
		Option1.Top = 5, ;
		Option1.Width = 114, ;
		Option2.Caption = "Option2", ;
		Option2.Height = 17, ;
		Option2.Left = 6, ;
		Option2.Name = "Option2", ;
		Option2.Top = 27, ;
		Option2.Width = 114, ;
		Option3.Caption = "Option3", ;
		Option3.Height = 17, ;
		Option3.Left = 6, ;
		Option3.Name = "Option3", ;
		Option3.Top = 49, ;
		Option3.Width = 114
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="optiongroup" />

	ADD OBJECT 'oProcAddress' AS procaddress WITH ;
		Left = 192, ;
		Name = "oProcAddress", ;
		Top = 120
		*< END OBJECT: ClassLib="..\libs\proc_address.vcx" BaseClass="custom" />

	ADD OBJECT 'tbcreditlimit' AS ttext WITH ;
		Height = 23, ;
		InputMask = (RIGHT(gcCurrcy, 12)), ;
		Left = 112, ;
		Name = "tbcreditlimit", ;
		TabIndex = 5, ;
		Top = 204, ;
		Width = 120
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />

	ADD OBJECT 'tbdebitor' AS ttext WITH ;
		InputMask = (REPLICATE("9",10)), ;
		Left = 112, ;
		Name = "tbdebitor", ;
		TabIndex = 1, ;
		Top = 2
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />

	ADD OBJECT 'tbfirma' AS ttext WITH ;
		Height = 23, ;
		InputMask = (REPLICATE("!", 50)), ;
		Left = 112, ;
		Name = "tbfirma", ;
		TabIndex = 2, ;
		Top = 26, ;
		Width = 260
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />

	ADD OBJECT 'tbLasStatement' AS ttext WITH ;
		BackStyle = 0, ;
		BorderStyle = 0, ;
		ControlSource = "aracct.ac_aracct", ;
		Format = "K", ;
		Left = 147, ;
		Name = "tbLasStatement", ;
		ReadOnly = .T., ;
		Style = 1, ;
		TabIndex = 12, ;
		Top = 336
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />

	ADD OBJECT 'tbLastReminder' AS ttext WITH ;
		BackStyle = 0, ;
		BorderStyle = 0, ;
		ControlSource = "aracct.ac_aracct", ;
		Format = "K", ;
		Left = 147, ;
		Name = "tbLastReminder", ;
		ReadOnly = .T., ;
		Style = 1, ;
		TabIndex = 13, ;
		Top = 360
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />

	ADD OBJECT 'tbname' AS ttext WITH ;
		Height = 23, ;
		InputMask = (REPLICATE("!", 30)), ;
		Left = 112, ;
		Name = "tbname", ;
		TabIndex = 3, ;
		Top = 50, ;
		Width = 260
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />

	ADD OBJECT 'tmrActivateForm' AS timer WITH ;
		Enabled = .F., ;
		Height = 23, ;
		Interval = 100, ;
		Left = 300, ;
		Name = "tmrActivateForm", ;
		Top = 402, ;
		Width = 23
		*< END OBJECT: BaseClass="timer" />
	
	PROCEDURE activateformagain
		* Used to show form, when is this hidden behind the calling form.
		* This happens, when form is called from lostfocus event, but interrupted with
		* message box.
		
		this.tmrActivateForm.Enabled = .T.
		
		RETURN .T.
	ENDPROC

	PROCEDURE getaddress
		LPARAMETERS lp_cMode, lp_cSearch, lp_nAddrid
		LOCAL l_nSelect, l_nPos, l_cNear, l_nTag
		LOCAL l_lEnterKey, l_lFound, l_lSame, l_nMember, l_lName, l_cNameComp, l_cCity, l_nRecNo, l_cOrder, l_lAddressUsed
		LOCAL ARRAY LArray(12)
		
		l_nSelect = SELECT()
		
		l_lAddressUsed = .T.
		IF NOT USED("address")
			= openfile(.F.,"address")
			l_lAddressUsed = .F.
		ENDIF
		SELECT address
		l_nRecNo = RECNO()
		l_cOrder = ORDER()
		
		IF lp_cMode = "NAME"
			l_lName = .T.
		ENDIF
		
		l_lEnterKey = this.laddresenterkey
		this.laddresenterkey = .F.
		l_lFound = NOT EMPTY(lp_nAddrid) AND SEEK(lp_nAddrid,"address","tag1")
		l_lSame = EMPTY(lp_cSearch) OR (l_lFound AND (UPPER(ALLTRIM(lp_cSearch)) == IIF(l_lName, UPPER(ALLTRIM(address.ad_lname)), UPPER(ALLTRIM(address.ad_company)))))
		
		IF ISDIGIT(lp_cSearch)
			l_nMember = VAL(lp_cSearch)
		ELSE
			l_nMember = 0
		ENDIF
		l_nPos = AT("@", lp_cSearch)
		IF l_nPos > 0
			l_cNameComp = UPPER(ALLTRIM(SUBSTR(lp_cSearch, 1, l_nPos-1)))
			IF l_nPos < LEN(lp_cSearch)
				l_cCity = UPPER(ALLTRIM(SUBSTR(lp_cSearch, l_nPos+1)))
			ELSE
				l_cCity = ""
			ENDIF
		ELSE
			l_cNameComp = UPPER(ALLTRIM(lp_cSearch))
			l_cCity = ""
		ENDIF
		
		IF NOT l_lFound OR NOT l_lSame
			IF l_nMember > 0
				l_lFound = SEEK(l_nMember,"address","tag6")
			ELSE
				SELECT address
				IF l_lName
					SET ORDER TO tag2
					l_lFound = SEEK(l_cNameComp,"address")
					IF NOT EMPTY(l_cCity)
						LOCATE REST FOR UPPER(ad_city) = l_cCity WHILE UPPER(ad_lname) = l_cNameComp
						l_lFound = FOUND()
					ENDIF
				ELSE
					SET ORDER TO tag3
					l_lFound = SEEK(l_cNameComp,"address")
					IF NOT EMPTY(l_cCity)
						LOCATE REST FOR UPPER(ad_city) = l_cCity WHILE UPPER(ad_company) = l_cNameComp
						l_lFound = FOUND()
					ENDIF
				ENDIF
				SET ORDER TO
			ENDIF
			IF NOT l_lFound
				IF 6 = MESSAGEBOX(GetLangText("RESERVAT","TA_NAMENOTFOUND"),36,GetLangText("FUNC","TXT_QUESTION"))
					LArray(1) = "EDITC"
					LArray(2) = PROPER(l_cNameComp)
					LArray(3) = 1
					LArray(4) = "ARA"
					LArray(5) = 0
					LArray(6) = 0
					LArray(7) = 12
					LArray(8) = 0
					LArray(9) = this
					LArray(12) = .T.
					doform('addressmask','forms\addressmask','',.F.,@LArray)
				ELSE
					l_cNear = SET("Near")
					SET NEAR ON
					IF l_lName
						= SEEK(l_cNameComp,"address","tag2")
					ELSE
						= SEEK(l_cNameComp,"address","tag3")
					ENDIF
					SET NEAR &l_cNear
					l_lFound = .T.
				ENDIF
			ENDIF
		ENDIF
		IF (l_lFound AND NOT l_lSame) OR (l_lSame AND l_lEnterKey)
			l_nTag = IIF(l_nMember > 0, 6, IIF(l_lName, 2, 3))
			LArray(1) = "BRWC"
			LArray(2) = IIF(l_nMember > 0, l_nMember, l_cNameComp)
			LArray(3) = l_nTag
			LArray(4) = "ARA"
			LArray(5) = RECNO("address")
			LArray(6) = 0
			LArray(7) = 12
			LArray(8) = 0
			LArray(9) = this
			LArray(12) = .T.
			doform('addressmask','forms\addressmask','',.F.,@LArray)
		ENDIF
		
		
		IF NOT l_lAddressUsed
			= dclose("address")
		ELSE
			SELECT address
			SET ORDER TO l_cOrder
			GO l_nRecNo
		ENDIF
		
		SELECT (l_nSelect)
		
		RETURN .T.
	ENDPROC

	PROCEDURE getnextid
		LOCAL l_nNextID
		l_nNextID = 0
		DO ArNextAccID IN araccount WITH l_nNextID
		RETURN l_nNextID
	ENDPROC

	PROCEDURE Init
		LPARAMETERS lp_cMode, lp_oForm, lp_nAddrid, lp_lCreditors
		LOCAL l_cNameOfCallingForm, l_nAmNum, l_nAyNum
		l_cNameOfCallingForm = ""
		this.lCreditors = lp_lCreditors
		DODEFAULT()
		
		this.cMode = lp_cMode
		
		DO CASE
			CASE this.cMode = "NEW"
				this.OnNew(lp_nAddrid)
			CASE this.cMode = "EDIT"
				this.OnEdit()
		ENDCASE
		
		IF VARTYPE(lp_oForm) = "O"
			this.frmCaller = lp_oForm
			IF NOT ISNULL(this.frmCaller)
				this.frmCaller.Enabled = .F.
				IF UPPER(this.frmCaller.Name) = "TFORM12"
					l_cNameOfCallingForm = UPPER(this.frmCaller.FormName)
				ELSE
					l_cNameOfCallingForm = UPPER(this.frmCaller.Name)
				ENDIF
			ENDIF
		ENDIF
		
		* Captions
		IF this.lCreditors
			this.Caption = GetLangText("AR","TXT_CREDITOR_NO")
		ELSE
			this.Caption = GetLangText("AR","TW_ACCT")
		ENDIF
		this.lDebitor.Caption=GetLangText("AR","T_ACCOUNT")
		this.lFirma.Caption=GetLangText("AR","T_COMPANY")
		this.lname.Caption=GetLangText("AR","T_NAME")
		this.lcontact.Caption=GetLangText("AR","T_CONTACT")
		this.lcreditlimit.Caption=GetLangText("AR","T_CREDLIM")
		this.lstatus.Caption=GetLangText("AR","T_STATUS")
		this.ltype.Caption=GetLangText("AR","T_TYPE")
		this.cmdOK.Caption=GetLangText("AR","TB_OK")
		this.cmdCancel.Caption=GetLangText("AR","TB_CANCEL")
		this.ogtype.option1.Caption=GetLangText("AR","T_OK")
		this.ogtype.option2.Caption=GetLangText("AR","T_CASHONLY")
		this.ogtype.option3.Caption=GetLangText("AR","T_BLACKLIST")
		this.chpermanent.Caption=GetLangText("AR","T_PERMANENT")
		this.chreminder.Caption=GetLangText("AR","T_REMINDER")
		this.chstatment.Caption=GetLangText("AR","T_STATEMENT")
		this.llastReminder.Caption=GetLangText("AR","T_REMLAST")
		this.llastStatement.Caption=GetLangText("AR","T_SMTLAST")
		this.lRemCondition.Caption=GetLangText("AR","TXT_PAY_CONDITION")
		this.lRemKey.Caption=GetLangText("AR","TXT_REMAINDER_KEY")
		this.chinactive.Caption=GetLangText("AR","T_INACTIVE")
		
		this.tbcreditlimit.ControlSource = [thisform.oAraccData.ac_credlim]
		this.tbdebitor.ControlSource = [thisform.oAraccData.ac_aracct]
		this.tbfirma.ControlSource = [thisform.ccompany]
		this.tbname.ControlSource = [thisform.cname]
		this.cbcontact.ControlSource = [thisform.ccontact]
		this.cbtype.ControlSource = [thisform.oAraccData.ac_accttyp]
		this.chpermanent.ControlSource = [thisform.oAraccData.ac_perman]
		this.chreminder.ControlSource = [thisform.oAraccData.ac_remind]
		this.chstatment.ControlSource = [thisform.oAraccData.ac_statem]
		this.ogtype.ControlSource = [thisform.oAraccData.ac_status]
		this.tblasStatement.ControlSource = [thisform.dLastStatement]
		this.tblastReminder.ControlSource = [thisform.dLastReminder]
		this.chinactive.ControlSource = [thisform.oAraccData.ac_inactiv]
		
		this.cbcontact.RowSourceType = 6
		this.cbcontact.RowSource = [curApartner.ap_lname]
		
		this.cbtype.RowSourceType = 3
		this.cbtype.RowSource = "SELECT pl_charcod, pl_lang" + ALLTRIM(g_langnum) + " AS pl_lang " + ;
				"FROM picklist WHERE pl_label = [ACCTTYPE] ORDER BY pl_charcod INTO CURSOR cur_aceditpicklist"
		
		IF thisform.oAraccData.ac_amid = 0
			l_nAmNum = dblookup("picklist", "tag4", "ARREMD    " + "DEF", "pl_numcod")
			thisform.oAraccData.ac_amid = dblookup("arremd", "tag2", l_nAmNum, "am_amid")
		ENDIF
		IF thisform.oAraccData.ac_ayid = 0
			l_nAyNum = dblookup("picklist", "tag4", "ARPCOND   " + "DEF", "pl_numcod")
			thisform.oAraccData.ac_ayid = dblookup("arpcond", "tag2", l_nAyNum, "ay_ayid")
		ENDIF
		
		this.cam_number = STR(dblookup("arremd", "tag1", thisform.oAraccData.ac_amid, "am_number"),2)
		this.cay_number = STR(dblookup("arpcond", "tag1", thisform.oAraccData.ac_ayid, "ay_number"),2)
		
		SELECT STR(am_number,2) AS cur_cnumb, am_label, am_number, am_amid ;
			FROM arremd ;
			WHERE NOT am_credito ;
			ORDER BY am_number INTO CURSOR SYS(2015) READWRITE
		*APPEND BLANK
		this.cboRemKey.Tag = ALIAS()
		this.cboRemKey.RowSourceType = 6
		this.cboRemKey.RowSource = this.cboRemKey.Tag + ".cur_cnumb, am_label"
		this.cboRemKey.ControlSource = "thisform.cam_number"
		
		SELECT STR(ay_number,2) AS cur_cnumb, ay_label, ay_number, ay_ayid ;
			FROM arpcond ;
			WHERE IIF(this.lCreditors,ay_credito,NOT ay_credito) ;
			ORDER BY ay_number INTO CURSOR SYS(2015) READWRITE
		*APPEND BLANK
		this.cboRemCondition.Tag = ALIAS()
		this.cboRemCondition.RowSourceType = 6
		this.cboRemCondition.RowSource = this.cboRemCondition.Tag + ".cur_cnumb, ay_label"
		this.cboRemCondition.ControlSource = "thisform.cay_number"
		
		this.lRemKeyDescipt.Caption = dblookup("arremd", "tag1", thisform.oAraccData.ac_amid, "am_label")
		this.lRemConditionDescipt.Caption = dblookup("arpcond", "tag1", thisform.oAraccData.ac_ayid, "ay_label")
		
		IF l_cNameOfCallingForm = "RESERVAT"
			this.ActivateFormAgain()
		ENDIF
		RETURN .T.
	ENDPROC

	PROCEDURE KeyPress
		LPARAMETERS nKeyCode, nShiftAltCtrl
		IF nKeyCode = 27 AND nShiftAltCtrl = 0
			NODEFAULT
			this.oncancel()
		ENDIF
	ENDPROC

	PROCEDURE Load
		DODEFAULT()
		CREATE CURSOR curApartner (ap_apid n(8), ap_lname c(30))
		
		RETURN .T.
	ENDPROC

	PROCEDURE oncancel
		this.Release()
		
		RETURN .T.
	ENDPROC

	PROCEDURE onedit
		LOCAL l_dLastStatement, l_dLastReminder
		STORE '' TO l_cAddress,l_cType
		STORE {} to l_dLastStatement,l_dLastReminder
		
		SELECT aracct
		SCATTER NAME this.oAraccData MEMO
		
		this.RefreshAddress()
		this.RefreshApartner()
		this.RefreshContactData()
		this.RefreshARType(this.oAraccData.ac_accttyp)
		
		DO ArLastReminder WITH this.oAraccData.ac_aracct,l_dLastReminder IN araccount
		this.dlastreminder = l_dLastReminder
		
		DO ArLastStatement WITH this.oAraccData.ac_aracct,l_dLastStatement IN araccount
		this.dlaststatement = l_dLastStatement
		
		this.tbdebitor.Enabled = .F.
		
		RETURN .T.
	ENDPROC

	PROCEDURE onnew
		LPARAMETERS lp_nAddrId
		SELECT aracct
		SCATTER NAME this.oAraccData MEMO BLANK
		
		IF param.pa_arautid
			this.oAraccData.ac_aracct = this.GetNextID()
		ENDIF
		this.oAraccData.ac_status = 1
		this.oAraccData.ac_remind = .T.
		this.oAraccData.ac_statem = .T.
		this.oAraccData.ac_accttyp = dlookup('picklist','pl_label = [ACCTTYPE]','pl_charcod')
		this.oAraccData.ac_perman = .T.
		this.RefreshARType(this.oAraccData.ac_accttyp)
		IF NOT EMPTY(lp_nAddrId)
			this.oAraccData.ac_addrid = lp_nAddrId
		ENDIF
		this.RefreshAddress()
		this.RefreshApartner()
		this.RefreshContactData()
		
		this.llastReminder.Visible = .F.
		this.llastStatement.Visible = .F.
		this.tblasStatement.Visible = .F.
		this.tblastReminder.Visible = .F.
		
		RETURN .T.
	ENDPROC

	PROCEDURE onok
		LOCAL l_cMessage
		
		IF this.cMode = "NEW"
			IF this.lCreditors
				this.oAraccData.ac_credito = .T.
			ENDIF
		ENDIF
		DO CheckArAccount WITH this.oAraccData.ac_aracct, this.oAraccData.ac_addrid, this.cMode = "NEW", l_cMessage, ;
				this.oAraccData.ac_inactiv, this.oAraccData.ac_credito IN ArAccount
		
		IF NOT EMPTY(l_cMessage)
			= alert(l_cMessage)
			RETURN
		ENDIF
		
		SELECT aracct
		IF this.cMode = "NEW"
			APPEND BLANK
		ENDIF
		GATHER NAME this.oAraccData MEMO
		tbrefresh("aracct")
		
		this.oProcAddress.AddressEdit(this.oAraccData.ac_addrid)
		IF EMPTY(this.oProcAddress.oAddress.ad_compnum)
			this.oProcAddress.AddressSetCompNum(this.oAraccData.ac_aracct)
			this.oProcAddress.AddressSave()
		ENDIF
		
		this.Release()
		
		RETURN .T.
	ENDPROC

	PROCEDURE QueryUnload
		NODEFAULT
		this.OnCancel()
		
		RETURN .T.
	ENDPROC

	PROCEDURE refreshaddress
		IF NOT EMPTY(this.oAraccData.ac_addrid)
			SELECT * from address WHERE ad_addrid = thisform.oAraccData.ac_addrid INTO CURSOR cur_AceditAddress
			IF RECCOUNT()>0
				this.ccompany = LEFT(cur_AceditAddress.ad_company,50)
				this.cname = LEFT(cur_AceditAddress.ad_lname,30)
			ENDIF
			USE
		ENDIF
		
		RETURN .T.
	ENDPROC

	PROCEDURE refreshapartner
		LOCAL l_nSelect
		this.ccontact = ""
		l_nSelect = SELECT()
		
		SELECT ap_apid, ap_lname FROM apartner WHERE (ap_apid > 0) AND (ap_addrid = thisform.oAraccData.ac_addrid) ;
				INTO CURSOR curTempApartner READWRITE
		
		IF NOT EMPTY(this.oAraccData.ac_addrid)
			SELECT * FROM address WHERE ad_addrid = thisform.oAraccData.ac_addrid INTO CURSOR cur_aceditaddress
			IF RECCOUNT()>0 AND NOT EMPTY(cur_aceditaddress.ad_lname)
				INSERT INTO curTempApartner (ap_apid, ap_lname) VALUES (0, cur_aceditaddress.ad_lname)
			ENDIF
			USE
		ENDIF
		
		SELECT curTempApartner
		IF RECCOUNT() = 0
			INSERT INTO curTempApartner (ap_apid, ap_lname) VALUES (0, "")
		ENDIF
		SELECT curApartner
		ZAP
		APPEND FROM DBF("curTempApartner")
		LOCATE FOR ap_apid = thisform.oAraccData.ac_apid
		IF FOUND()
			this.ccontact = ALLTRIM(curApartner.ap_lname)
		ENDIF
		
		this.cbcontact.Requery()
		USE IN curTempApartner
		
		SELECT (l_nSelect)
		
		RETURN .T.
	ENDPROC

	PROCEDURE refreshartype
		LPARAMETERS lp_cAccType
		LOCAL l_cType
		DO ArSayType WITH ALLTRIM(lp_cAccType), l_cType IN araccount
		this.lsaytype.Caption = l_cType
		
		RETURN .T.
	ENDPROC

	PROCEDURE refreshcontactdata
		LOCAL l_cAddress, l_cTemp
		DO ArSayAddr WITH this.oAraccData.ac_addrid, this.oAraccData.ac_apid, l_cAddress IN araccount
		
		this.esayname.Value = l_cAddress
		
		RETURN .T.
	ENDPROC

	PROCEDURE setaddress
		LPARAMETERS lp_nAddrId
		LOCAL l_cAddress
		IF lp_nAddrId <> this.oAraccData.ac_addrid AND yesno(GetLangText("BILL","TXT_SAVE_ADDRESS"))
			this.oAraccData.ac_addrid = lp_nAddrId
			this.oAraccData.ac_apid = 0
		ENDIF
		this.RefreshAddress()
		this.RefreshApartner()
		this.RefreshContactData()
		this.Refresh()
		
		this.Enabled = .T.
		
		RETURN .T.
	ENDPROC

	PROCEDURE Unload
		IF USED("curApartner")
			USE IN curApartner
		ENDIF
		IF USED("cur_aceditpicklist")
			USE IN cur_aceditpicklist
		ENDIF
		IF NOT ISNULL(this.frmCaller) AND VARTYPE(this.frmCaller) = "O"
			this.frmCaller.Enabled = .T.
			this.frmCaller.Refresh()
		ENDIF
		
		RETURN .T.
	ENDPROC

	PROCEDURE cbcontact.InteractiveChange
		thisform.oAraccData.ac_apid = curApartner.ap_apid
		thisform.RefreshContactData()
		
		RETURN .T.
	ENDPROC

	PROCEDURE cboRemCondition.LostFocus
		LOCAL l_cCurName
		l_cCurName = this.Tag
		thisform.oAraccData.ac_ayid = &l_cCurName..ay_ayid
		thisform.lRemConditionDescipt.Caption = dblookup("arpcond", "tag1", thisform.oAraccData.ac_ayid, "ay_label")
	ENDPROC

	PROCEDURE cboRemKey.LostFocus
		LOCAL l_cCurName
		l_cCurName = this.Tag
		thisform.oAraccData.ac_amid = &l_cCurName..am_amid
		thisform.lRemKeyDescipt.Caption = dblookup("arremd", "tag1", thisform.oAraccData.ac_amid, "am_label")
	ENDPROC

	PROCEDURE cbtype.InteractiveChange
		thisform.RefreshARType(this.DisplayValue)
		
		RETURN .T.
	ENDPROC

	PROCEDURE cbtype.Valid
		IF EMPTY(this.Value)
			KEYBOARD '{ALT+DNARROW}'
			RETURN 0
		ENDIF
		DODEFAULT()
	ENDPROC

	PROCEDURE cmdCancel.Click
		thisform.OnCancel()
		
		RETURN .T.
	ENDPROC

	PROCEDURE cmdOK.Click
		thisform.OnOk()
		
		RETURN .T.
	ENDPROC

	PROCEDURE tbfirma.KeyPress
		LPARAMETERS nKeyCode, nShiftAltCtrl
		
		IF nKeyCode = 10 AND nShiftAltCtrl = 2
			NODEFAULT
			thisform.laddresenterkey = .T.
			thisform.getaddress("COMP", this.Value, thisform.oAraccData.ac_addrid)
		ENDIF
	ENDPROC

	PROCEDURE tbfirma.LostFocus
		IF EMPTY(this.Value) AND EMPTY(thisform.cName)
			thisform.oAraccData.ac_addrid = 0
			thisform.oAraccData.ac_apid = 0
			thisform.RefreshApartner()
			thisform.RefreshAddress()
			thisform.RefreshContactData()
			RETURN
		ENDIF
		thisform.getaddress("COMP", this.Value, thisform.oAraccData.ac_addrid)
	ENDPROC

	PROCEDURE tbname.KeyPress
		LPARAMETERS nKeyCode, nShiftAltCtrl
		
		IF nKeyCode = 10 AND nShiftAltCtrl = 2
			NODEFAULT
			thisform.laddresenterkey = .T.
			thisform.getaddress("NAME", this.Value, thisform.oAraccData.ac_addrid)
		ENDIF
	ENDPROC

	PROCEDURE tbname.LostFocus
		IF EMPTY(this.Value) AND EMPTY(thisform.cCompany)
			thisform.oAraccData.ac_addrid = 0
			thisform.oAraccData.ac_apid = 0
			thisform.RefreshAddress()
			thisform.RefreshApartner()
			thisform.RefreshContactData()
			RETURN
		ENDIF
		thisform.getaddress("NAME", this.Value, thisform.oAraccData.ac_addrid)
	ENDPROC

	PROCEDURE tmrActivateForm.Timer
		this.Enabled = .F.
		thisform.Show()
		
		RETURN .T.
	ENDPROC

ENDDEFINE
