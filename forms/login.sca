*--------------------------------------------------------------------------------------------------------------------------------------------------------
* (ES) AUTOGENERADO - ¡¡ATENCIÓN!! - ¡¡NO PENSADO PARA EJECUTAR!! USAR SOLAMENTE PARA INTEGRAR CAMBIOS Y ALMACENAR CON HERRAMIENTAS SCM!!
* (EN) AUTOGENERATED - ATTENTION!! - NOT INTENDED FOR EXECUTION!! USE ONLY FOR MERGING CHANGES AND STORING WITH SCM TOOLS!!
*--------------------------------------------------------------------------------------------------------------------------------------------------------
*< FOXBIN2PRG: Version="1.19" SourceFile="login.scx" /> (Solo para binarios VFP 9 / Only for VFP 9 binaries)
*
*
#INCLUDE "..\include\constdefines.h"

DEFINE CLASS dataenvironment AS dataenvironment 
 	*< CLASSDATA: Baseclass="dataenvironment" Timestamp="" Scale="" Uniqueid="" ClassIcon="1" />

	DataSource = .NULL.
	Height = 0
	Left = 0
	Name = "Dataenvironment"
	Top = 0
	Width = 0

ENDDEFINE

DEFINE CLASS frmlogin AS tform OF "..\libs\main.vcx" 
 	*< CLASSDATA: Baseclass="form" Timestamp="" Scale="" Uniqueid="" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="imgLogo" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblUserID" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblPassword" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblCashier" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblBuilding" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cbobuilding1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdOK" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdCancel" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtUserID" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtPassword" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtCashier" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="otmrdetectforceshutdown" UniqueID="" Timestamp="" />

	*<DefinedPropArrayMethod>
		*m: dook
		*m: loginfailed
		*p: cbuilding
		*p: cmode
	*</DefinedPropArrayMethod>

	BorderStyle = 2
	Caption = "frmLogin"
	cbuilding = 
	Closable = .F.
	ControlBox = .T.
	DoCreate = .T.
	Height = 300
	Icon = ..\bitmap\icons\secur06.ico
	MaxButton = .F.
	MinButton = .F.
	Name = "frmLogin"
	Width = 280
	WindowType = 1

	ADD OBJECT 'Cbobuilding1' AS cbobuilding WITH ;
		BoundColumn = 1, ;
		ColumnWidths = "50,150", ;
		ControlSource = "thisform.cbuilding", ;
		crowsource = bu_buildng, bu_lang, ;
		Height = 23, ;
		Left = 120, ;
		lselectbuilding = .T., ;
		Name = "Cbobuilding1", ;
		Style = 2, ;
		TabIndex = 4, ;
		Top = 248, ;
		Visible = .F., ;
		Width = 72, ;
		ZOrderSet = 5
		*< END OBJECT: ClassLib="..\libs\cit_ctrl.vcx" BaseClass="combobox" />

	ADD OBJECT 'cmdCancel' AS tcommandbutton WITH ;
		Caption = "cmdCancel", ;
		Left = 146, ;
		Name = "cmdCancel", ;
		Top = 265
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'cmdOK' AS tcommandbutton WITH ;
		Caption = "cmdOK", ;
		Left = 50, ;
		Name = "cmdOK", ;
		Top = 265
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'imgLogo' AS timage WITH ;
		Height = 152, ;
		Left = 12, ;
		Name = "imgLogo", ;
		Stretch = 2, ;
		Top = 12, ;
		Width = 255
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="image" />

	ADD OBJECT 'lblBuilding' AS tlabel WITH ;
		AutoSize = .T., ;
		Caption = "lblBuilding", ;
		Left = 12, ;
		Name = "lblBuilding", ;
		TabIndex = 10, ;
		Top = 251, ;
		Visible = .F., ;
		Width = 60, ;
		ZOrderSet = 4
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'lblCashier' AS tlabel WITH ;
		AutoSize = .T., ;
		Caption = "lblCashier", ;
		Left = 12, ;
		Name = "lblCashier", ;
		Top = 224
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'lblPassword' AS tlabel WITH ;
		AutoSize = .T., ;
		Caption = "lblPassword", ;
		Left = 12, ;
		Name = "lblPassword", ;
		Top = 200
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'lblUserID' AS tlabel WITH ;
		AutoSize = .T., ;
		Caption = "lblUserID", ;
		Left = 12, ;
		Name = "lblUserID", ;
		Top = 176
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'otmrdetectforceshutdown' AS timer WITH ;
		Height = 23, ;
		Interval = 1000, ;
		Left = 252, ;
		Name = "otmrdetectforceshutdown", ;
		Top = 240, ;
		Width = 23
		*< END OBJECT: BaseClass="timer" />

	ADD OBJECT 'txtCashier' AS ttext WITH ;
		Alignment = 3, ;
		Format = "K", ;
		Height = 23, ;
		InputMask = "99", ;
		Left = 120, ;
		Name = "txtCashier", ;
		Top = 224, ;
		Value = 0, ;
		Width = 60
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtPassword' AS ttext WITH ;
		Format = "K", ;
		Height = 23, ;
		InputMask = (replicate("!", 10)), ;
		Left = 120, ;
		Name = "txtPassword", ;
		PasswordChar = "*", ;
		Top = 200, ;
		Width = 144
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtUserID' AS ttext WITH ;
		Format = "K", ;
		Height = 23, ;
		InputMask = (replicate("!",10)), ;
		Left = 120, ;
		Name = "txtUserID", ;
		Top = 176, ;
		Width = 144
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />
	
	PROCEDURE assigncaption
		WITH this
			.Caption = GetLangText("USER","TXT_LOGIN")
			.cmdOK.Caption = GetLangText("COMMON","TXT_OK")
			.cmdCancel.Caption = GetLangText("COMMON","TXT_CANCEL")
			.lblUserID.Caption = GetLangText("USER","TXT_USERID")
			.lblPassword.Caption = GetLangText("USER","TXT_PASSWORD")
			.lblCashier.Caption = GetLangText("USER","TXT_CASHIER")
			.lblBuilding.Caption = GetLangText("HOTSTAT","T_BUILDING")
		ENDWITH
	ENDPROC

	PROCEDURE Destroy
		DO ChildTitle WITH ""
		DODEFAULT()
	ENDPROC

	PROCEDURE dook
		LOCAL l_lOK, l_cVersion, l_cCur
		l_cVersion = ""
		IF MainStartNotAllowed(,.T.,.T.)
			RETURN .F.
		ENDIF
		
		IF openfiledirect(.F.,"param2")
			l_cCur = sqlcursor("SELECT pa_dbvers FROM param2")
			IF USED(l_cCur) AND RECCOUNT(l_cCur)>0
				l_cVersion = ALLTRIM(&l_cCur..pa_dbvers)
			ENDIF
			dclose(l_cCur)
			dclose("param2")
		ENDIF
		
		* Detect if update was performed, when login window was active
		IF NOT g_lDevelopment AND g_cexeversion < l_cVersion
			* Force restart
			alert(getapplangtext("MAIN","APPLICATION_CANT_START"))
		    = checkwin("cleanup",.T.,.T.,.T.)
		    RETURN TO MASTER
		ENDIF
		
		IF NOT this.cMode == "SPECIAL"
			IF _screen.oglobal.SelectBuildingOnLoginAllowed()
				IF EMPTY(this.cbuilding)
					alert(this.lblBuilding.Caption + " " + GetLangText("COMMON","TXT_FIELD_IS_REQUIRED")+"!")
					this.cbobuilding1.SetFocus()
					RETURN .F.
				ELSE
					_screen.oglobal.SelectBuildingForFinance(this.cbuilding, EVALUATE(this.cbobuilding1.ccursor+".bu_billnrb"), EVALUATE(this.cbobuilding1.ccursor+".bu_lang"))
				ENDIF
			ENDIF
		ENDIF
		cUser_id = this.txtUserID.Value
		cPassword = this.txtpassword.Value
		nCashier = this.txtCashier.Value
		
		IF this.cMode == "SPECIAL"
			DO CheckSpecLogin IN Login WITH cUser_id, cPassword, l_lOK
			IF l_lOK
				p_lSpecLogin = .T.
				this.Release()
			ENDIF
		ELSE
			IF vCheckThem() AND LoginAllowed(cUser_id)
				this.Release()
			ENDIF
		ENDIF
	ENDPROC

	PROCEDURE Init
		LPARAMETERS lp_cMode
		
		this.cMode = IIF(EMPTY(lp_cMode), "", lp_cMode)
		
		IF NOT EMPTY(cbMpfile)
			this.imgLogo.Picture = cBmpFile
		ENDIF
		
		this.AssignCaption()
		
		IF _screen.oglobal.SelectBuildingOnLoginAllowed()
			this.cbobuilding1.Init(,.T.)
			this.cbuilding = _screen.oglobal.oBuilding.ccode
		ENDIF
		
		DODEFAULT()
		
		RETURN .T.
	ENDPROC

	PROCEDURE KeyPress
		LPARAMETERS nKeyCode, nShiftAltCtrl
		
		IF nKeyCode = 27
			NODEFAULT
			this.LoginFailed()
		ENDIF
	ENDPROC

	PROCEDURE loginfailed
		LPARAMETERS lp_lNoYesNo
		IF NOT thisform.cMode == "SPECIAL"
			IF NOT CheckWin("CLEANUP",.T.,.T.,lp_lNoYesNo)
				RETURN .T.
			ELSE
				_screen.oGlobal.lLoginFailed = .T.
			ENDIF
		ENDIF
		
		this.Release()
	ENDPROC

	PROCEDURE onfirststart
		IF NOT this.lOnFirstActivate
			this.lOnFirstActivate = .T.
		
			DO ChildTitle WITH this.Caption
		
			IF _screen.oglobal.SelectBuildingOnLoginAllowed()
				STORE this.Height - this.cmdOK.Height - 1 TO this.cmdOK.Top, this.cmdCancel.Top
				STORE .T. TO this.lblBuilding.Visible, this.cbobuilding1.Visible
			ENDIF
		
			IF NOT thisform.cMode == "SPECIAL"
				DO CloseFiles IN Login
			ENDIF
		
			IF this.cMode == "SPECIAL"
				this.txtUserID.Value = g_Userid
				this.txtPassword.SetFocus()
			ELSE
				this.txtUserID.SetFocus()
			ENDIF
		
		ENDIF
	ENDPROC

	PROCEDURE Cbobuilding1.Init
		LPARAMETERS lp_oParent, lp_lDoInit
		IF lp_lDoInit
			DODEFAULT(lp_oParent)
		ENDIF
		
		RETURN .T.
		
	ENDPROC

	PROCEDURE Cbobuilding1.initsqlproperties
		this.cSqlSelect = "SELECT CAST(bu_lang"+g_langnum+" AS Char(80)) AS bu_lang, bu_buildng, bu_billnrb FROM building"
		this.cSqlUnion = "UNION SELECT CAST('' AS Char(80)) AS bu_lang, CAST('' AS Char(3)) AS bu_buildng, CAST(0 AS Numeric(2)) AS bu_billnrb FROM param"
	ENDPROC

	PROCEDURE cmdCancel.Click
		thisform.LoginFailed()
	ENDPROC

	PROCEDURE cmdOK.Click
		thisform.DoOK()
	ENDPROC

	PROCEDURE otmrdetectforceshutdown.Timer
		LOCAL l_cFile, l_lBlocked, l_nHandle
		l_lBlocked = .F.
		l_cFile = gcDatadir + C_COMSERVERS_BLOCK_FILE
		IF FILE(l_cFile)
		     l_nHandle = FOPEN(l_cFile)
		     IF l_nHandle < 0
		          * Logout cmd detected
		          l_lBlocked = .T.
		     ELSE
		        FCLOSE(l_nHandle)
		     ENDIF
		ENDIF
		IF l_lBlocked
			thisform.Loginfailed(.T.)
		ENDIF
		
		RETURN .T.
	ENDPROC

	PROCEDURE txtUserID.LostFocus
		this.Value = PADR(ALLTRIM(this.Value), 10)
	ENDPROC

ENDDEFINE
