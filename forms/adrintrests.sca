*--------------------------------------------------------------------------------------------------------------------------------------------------------
* (ES) AUTOGENERADO - ¡¡ATENCIÓN!! - ¡¡NO PENSADO PARA EJECUTAR!! USAR SOLAMENTE PARA INTEGRAR CAMBIOS Y ALMACENAR CON HERRAMIENTAS SCM!!
* (EN) AUTOGENERATED - ATTENTION!! - NOT INTENDED FOR EXECUTION!! USE ONLY FOR MERGING CHANGES AND STORING WITH SCM TOOLS!!
*--------------------------------------------------------------------------------------------------------------------------------------------------------
*< FOXBIN2PRG: Version="1.19" SourceFile="adrintrests.scx" /> (Solo para binarios VFP 9 / Only for VFP 9 binaries)
*
*
DEFINE CLASS dataenvironment AS dataenvironment 
 	*< CLASSDATA: Baseclass="dataenvironment" Timestamp="" Scale="" Uniqueid="" ClassIcon="1" />

	Name = "Dataenvironment"

ENDDEFINE

DEFINE CLASS frmintrests AS tform OF "..\libs\main.vcx" 
 	*< CLASSDATA: Baseclass="form" Timestamp="" Scale="" Uniqueid="" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="cmdDelete" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdSave" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdNew" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdEdit" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdExit" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grdIntrests" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grdIntrests.Column1.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grdIntrests.Column1.Tbgrid1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grdIntrests.Column2.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grdIntrests.Column2.Tchkgrid1" UniqueID="" Timestamp="" />

	*<DefinedPropArrayMethod>
		*m: ondelete
		*m: onedit
		*m: onexit
		*m: onnew
		*m: onsave
		*m: ontoggle
		*m: refreshcursor
		*p: naddrid
	*</DefinedPropArrayMethod>

	Caption = "frmIntrests"
	ControlBox = .T.
	DoCreate = .T.
	Height = 374
	KeyPreview = .T.
	MaxButton = .F.
	MinButton = .F.
	Name = "frmIntrests"
	ShowTips = .T.
	Width = 207
	WindowType = 1

	ADD OBJECT 'cmdDelete' AS tcommandbutton WITH ;
		Caption = "", ;
		Height = 24, ;
		Left = 57, ;
		Name = "cmdDelete", ;
		Picture = ..\bitmap\toolbar\delete.bmp, ;
		TabIndex = 3, ;
		Top = 5, ;
		Width = 24
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'cmdEdit' AS tcommandbutton WITH ;
		Caption = "", ;
		Height = 24, ;
		Left = 30, ;
		Name = "cmdEdit", ;
		Picture = ..\bitmap\toolbar\edit.bmp, ;
		TabIndex = 2, ;
		Top = 5, ;
		Width = 24
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'cmdExit' AS tcommandbutton WITH ;
		Caption = "", ;
		Height = 24, ;
		Left = 111, ;
		Name = "cmdExit", ;
		Picture = ..\bitmap\toolbar\exit.bmp, ;
		TabIndex = 5, ;
		Top = 5, ;
		Width = 24
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'cmdNew' AS tcommandbutton WITH ;
		Caption = "", ;
		Height = 24, ;
		Left = 3, ;
		Name = "cmdNew", ;
		Picture = ..\bitmap\toolbar\new.bmp, ;
		TabIndex = 1, ;
		Top = 5, ;
		Width = 24
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'cmdSave' AS tcommandbutton WITH ;
		Caption = "", ;
		Height = 24, ;
		Left = 84, ;
		Name = "cmdSave", ;
		Picture = ..\bitmap\toolbar\save.bmp, ;
		TabIndex = 4, ;
		Top = 5, ;
		Width = 24
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'grdIntrests' AS tgrid WITH ;
		ColumnCount = 2, ;
		DeleteMark = .F., ;
		GridLineColor = 192,192,192, ;
		GridLines = 2, ;
		Height = 336, ;
		Left = 3, ;
		Name = "grdIntrests", ;
		RecordMark = .F., ;
		ScrollBars = 2, ;
		TabIndex = 6, ;
		Top = 35, ;
		Width = 201, ;
		Column1.Name = "Column1", ;
		Column1.ReadOnly = .T., ;
		Column1.Width = 150, ;
		Column2.Name = "Column2", ;
		Column2.Sparse = .F., ;
		Column2.Width = 25
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="grid" />

	ADD OBJECT 'grdIntrests.Column1.Header1' AS header WITH ;
		Caption = "Header1", ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'grdIntrests.Column1.Tbgrid1' AS tbgrid WITH ;
		Left = 44, ;
		Name = "Tbgrid1", ;
		ReadOnly = .T., ;
		Top = 66
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />

	ADD OBJECT 'grdIntrests.Column2.Header1' AS header WITH ;
		Caption = "Header1", ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'grdIntrests.Column2.Tchkgrid1' AS tchkgrid WITH ;
		Caption = "", ;
		Left = 13, ;
		Name = "Tchkgrid1", ;
		ReadOnly = .F., ;
		Top = 30
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="checkbox" />
	
	PROCEDURE Init
		LPARAMETERS lp_nAddrId
		this.nAddrId = lp_nAddrId
		DODEFAULT()
		
		this.Caption = GetLangText("ADDRESS","TXT_INTRESTS")
		this.cmdNew.ToolTipText = GetLangText("ADDRESS","TT_BNEW")
		this.cmdEdit.ToolTipText = GetLangText("ADDRESS","TT_BEDIT")
		this.cmdDelete.ToolTipText = GetLangText("ADDRESS","TT_BDELETE")
		this.cmdSave.ToolTipText = GetLangText("ADDRESS","TT_BSAVE")
		this.cmdExit.ToolTipText = GetLangText("ADDRESS","TT_BEXIT")
		this.grdIntrests.column1.header1.Caption = GetLangText("VIEW","TXT_DESCRIPTION")
		this.grdIntrests.column2.header1.Caption = STRTRAN(GetLangText("COMMON","TXT_SELECT"),"\<")
		
		this.RefreshCursor()
	ENDPROC

	PROCEDURE KeyPress
		LPARAMETERS nKeyCode, nShiftAltCtrl
		DO CASE
			CASE nkeycode=32 AND nShiftAltCtrl=0 && space bar (toggle checkbox)
				NODEFAULT
				thisform.ontoggle()
			CASE nkeycode=14 AND nShiftAltCtrl=2 && new
				thisform.onnew()
				NODEFAULT
			CASE nkeycode=5 AND nShiftAltCtrl=2 && edit
				thisform.onedit()
				NODEFAULT
			CASE nkeycode=19 AND nShiftAltCtrl=2 &&ctrl+s save 
				thisform.onsave()
				NODEFAULT
			CASE nkeycode=4 AND nShiftAltCtrl=2 && delete
				thisform.ondelete()
				NODEFAULT
			CASE nkeycode=27 && close
				thisform.onexit()
				NODEFAULT
		ENDCASE
		
		RETURN .T.
	ENDPROC

	PROCEDURE ondelete
		IF yesno(GetLangText("MGRPLIST", "TXT_DELIT")+" "+TRIM(curAdintrst.ab_descrip)+"?")
			IF SEEK(curAdintrst.ab_abid,"adintrst","tag1")
				DELETE IN adintrst
				DELETE ALL FOR ae_abid = curAdintrst.ab_abid IN adrtoin
			ENDIF
			this.RefreshCursor()
		ENDIF
		
		RETURN .T.
	ENDPROC

	PROCEDURE onedit
		LOCAL l_oForm
		IF SEEK(curAdintrst.ab_abid,"adintrst","tag1")
			SELECT adintrst
			DO FORM forms\adrintrestsedit NAME l_oForm LINKED WITH "EDIT"
			this.RefreshCursor(.F.,adintrst.ab_abid)
		ENDIF
		RETURN .T.
	ENDPROC

	PROCEDURE onexit
		thisform.Release()
	ENDPROC

	PROCEDURE onnew
		LOCAL l_oForm
		DO FORM forms\adrintrestsedit NAME l_oForm LINKED WITH "NEW"
		this.RefreshCursor(.F.,adintrst.ab_abid)
		RETURN .T.
	ENDPROC

	PROCEDURE onsave
		SELECT curAdintrst
		SCAN
			SELECT adrtoin
			LOCATE FOR ae_addrid = thisform.naddrid AND ae_abid = curAdintrst.ab_abid
			DO CASE
				CASE curAdintrst.ab_selected AND NOT FOUND()
					INSERT INTO adrtoin  (ae_addrid, ae_abid) VALUES (thisform.naddrid, curAdintrst.ab_abid)
				CASE NOT curAdintrst.ab_selected AND FOUND()
					DELETE
			ENDCASE
		ENDSCAN
		this.onexit()
		
		RETURN .T.
	ENDPROC

	PROCEDURE ontoggle
		IF USED("curAdintrst") AND RECCOUNT("curAdintrst")>0 AND NOT EOF("curAdintrst") AND ;
				NOT BOF("curAdintrst")
			REPLACE ab_selected WITH NOT ab_selected IN curAdintrst
			NODEFAULT
		ENDIF
		RETURN .T.
	ENDPROC

	PROCEDURE QueryUnload
		NODEFAULT
		this.onexit()
	ENDPROC

	PROCEDURE refreshcursor
		LPARAMETERS lp_lJustCreateCursor, lp_nAbid
		IF EMPTY(lp_nAbid)
			lp_nAbid = 0
		ENDIF
		LOCAL l_nRecNo
		SELECT ab_abid, ab_descrip, UPPER(ab_descrip) AS ab_descupper, .F. AS ab_selected ;
				FROM adintrst ORDER BY ab_descupper INTO CURSOR curTemp READWRITE
		IF NOT lp_lJustCreateCursor
			l_nRecNo = RECNO("curAdintrst")
			SELECT adrtoin
			SCAN FOR ae_addrid = thisform.naddrid
				SELECT curTemp
				LOCATE FOR ab_abid = adrtoin.ae_abid
				IF FOUND()
					REPLACE curTemp.ab_selected WITH .T.
				ENDIF
				SELECT adrtoin
			ENDSCAN
		ENDIF
		IF NOT USED("curAdintrst")
			LOCAL ARRAY l_aCurFields(1)
			= AFIELDS(l_aCurFields,"curTemp")
			CREATE CURSOR curAdintrst FROM ARRAY l_aCurFields
			SELECT curAdintrst
		ELSE
			SELECT curAdintrst
			ZAP
		ENDIF
		IF NOT lp_lJustCreateCursor
			APPEND FROM DBF("curTemp")
			IF lp_nAbid > 0
				LOCATE FOR ab_abid = lp_nAbid
			ELSE
				IF l_nRecNo > RECCOUNT()
					GO TOP
				ELSE
					GO l_nRecNo
				ENDIF
			ENDIF
			this.grdIntrests.Refresh()
			this.grdIntrests.SetFocus()
		ENDIF
		USE IN curTemp
		
		RETURN .T.
	ENDPROC

	PROCEDURE cmdDelete.Click
		thisform.ondelete()
	ENDPROC

	PROCEDURE cmdEdit.Click
		thisform.onedit()
	ENDPROC

	PROCEDURE cmdExit.Click
		thisform.onexit()
	ENDPROC

	PROCEDURE cmdNew.Click
		thisform.onnew()
	ENDPROC

	PROCEDURE cmdSave.Click
		thisform.onsave()
		
	ENDPROC

	PROCEDURE grdIntrests.Column2.Tchkgrid1.InteractiveChange
		* Overlap parent code
	ENDPROC

	PROCEDURE grdIntrests.Init
		thisform.RefreshCursor(.T.)
		this.RecordSource = [curAdintrst]
		this.column1.ControlSource = [curAdintrst.ab_descrip]
		this.column2.ControlSource = [curAdintrst.ab_selected]
		DODEFAULT()
	ENDPROC

ENDDEFINE
