*--------------------------------------------------------------------------------------------------------------------------------------------------------
* (ES) AUTOGENERADO - ¡¡ATENCIÓN!! - ¡¡NO PENSADO PARA EJECUTAR!! USAR SOLAMENTE PARA INTEGRAR CAMBIOS Y ALMACENAR CON HERRAMIENTAS SCM!!
* (EN) AUTOGENERATED - ATTENTION!! - NOT INTENDED FOR EXECUTION!! USE ONLY FOR MERGING CHANGES AND STORING WITH SCM TOOLS!!
*--------------------------------------------------------------------------------------------------------------------------------------------------------
*< FOXBIN2PRG: Version="1.19" SourceFile="selallotmentform.scx" /> (Solo para binarios VFP 9 / Only for VFP 9 binaries)
*
*
#INCLUDE "..\include\constdefines.h"

DEFINE CLASS dataenvironment AS dataenvironment 
 	*< CLASSDATA: Baseclass="dataenvironment" Timestamp="" Scale="" Uniqueid="" ClassIcon="2" />

	DataSource = .NULL.
	Height = 0
	Left = 0
	Name = "Dataenvironment"
	Top = 0
	Width = 0

ENDDEFINE

DEFINE CLASS frmallotment AS tform OF "..\libs\main.vcx" 
 	*< CLASSDATA: Baseclass="form" Timestamp="" Scale="" Uniqueid="" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="lblAllottID" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtAllottID" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblBuilding" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cboBuilding" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblAllott" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtAllott" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblEvent" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdSelectEvents" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cboEvent" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblCompany" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cboCompany" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblApartner" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cboApartner" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblFromDate" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="dtxtFromDate" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblToDate" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="dtxtToDate" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblCutDays" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtCutDays" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblCutDate" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="dtxtCutDate" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblNote" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="edtNote" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblLocation" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtLocation" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblWeekDays" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chkMon" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chkTue" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chkWed" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chkThu" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chkFri" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chkSat" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chkSun" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chkUnallocAllot" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdOK" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdCancel" UniqueID="" Timestamp="" />

	*<DefinedPropArrayMethod>
		*m: allotchangename
		*m: allotfilllnamecombo
		*p: obizallot
		*p: odata
		*a: aweekdays[7,0]
	*</DefinedPropArrayMethod>

	aligntopedges = .T.
	Caption = "frmAllotment"
	ControlBox = .T.
	DataSession = 2
	DoCreate = .T.
	doini = .T.
	Height = 472
	Icon = ..\bitmap\icons\folder06.ico
	MaxButton = .F.
	MinButton = .F.
	MinHeight = 40
	MinWidth = 40
	Name = "frmAllotment"
	obizallot = .NULL.
	odata = .NULL.
	Width = 432
	WindowType = 1

	ADD OBJECT 'cboApartner' AS jcombobox WITH ;
		ColumnLines = .F., ;
		Format = "K", ;
		jboundcolumn = 2, ;
		jcolumncount = 2, ;
		jcolumnwidths = 250,0, ;
		jcursorreadwrite = .T., ;
		Left = 168, ;
		Name = "cboApartner", ;
		Top = 132, ;
		Width = 252, ;
		ZOrderSet = 12
		*< END OBJECT: ClassLib="..\libs\jbase.vcx" BaseClass="combobox" />

	ADD OBJECT 'cboBuilding' AS cbobuilding WITH ;
		BoundColumn = 2, ;
		ColumnWidths = "150,50", ;
		crowsource = bu_lang, bu_buildng, ;
		Format = "K", ;
		Left = 168, ;
		lselectbuilding = .T., ;
		Name = "cboBuilding", ;
		Top = 36, ;
		Width = 192, ;
		ZOrderSet = 3
		*< END OBJECT: ClassLib="..\libs\cit_ctrl.vcx" BaseClass="combobox" />

	ADD OBJECT 'cboCompany' AS jcombobox WITH ;
		ColumnLines = .F., ;
		Format = "K", ;
		InputMask = (REPLICATE("X", 50)), ;
		jboundcolumn = 1, ;
		jcolumncount = 5, ;
		jcolumnwidths = 250,50,100,0,0, ;
		Left = 168, ;
		Name = "cboCompany", ;
		Top = 108, ;
		Width = 252, ;
		ZOrderSet = 10
		*< END OBJECT: ClassLib="..\libs\jbase.vcx" BaseClass="combobox" />

	ADD OBJECT 'cboEvent' AS jcombobox WITH ;
		BoundColumn = 2, ;
		ColumnLines = .F., ;
		Format = "K", ;
		jboundcolumn = 5, ;
		jcolumncount = 4, ;
		jcolumnwidths = 130,120,70,70, ;
		Left = 168, ;
		Name = "cboEvent", ;
		Top = 84, ;
		Width = 252, ;
		ZOrderSet = 8
		*< END OBJECT: ClassLib="..\libs\jbase.vcx" BaseClass="combobox" />

	ADD OBJECT 'chkFri' AS tcheckbox WITH ;
		Alignment = 0, ;
		AutoSize = .T., ;
		Caption = "chkFri", ;
		Left = 204, ;
		Name = "chkFri", ;
		nlineheight = 0, ;
		Top = 375, ;
		Width = 51, ;
		ZOrderSet = 30
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="checkbox" />

	ADD OBJECT 'chkMon' AS tcheckbox WITH ;
		Alignment = 0, ;
		AutoSize = .T., ;
		Caption = "chkMon", ;
		Left = 12, ;
		Name = "chkMon", ;
		Top = 375, ;
		Width = 60, ;
		ZOrderSet = 26
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="checkbox" />

	ADD OBJECT 'chkSat' AS tcheckbox WITH ;
		Alignment = 0, ;
		AutoSize = .T., ;
		Caption = "chkSat", ;
		Left = 252, ;
		Name = "chkSat", ;
		nlineheight = 0, ;
		Top = 375, ;
		Width = 55, ;
		ZOrderSet = 31
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="checkbox" />

	ADD OBJECT 'chkSun' AS tcheckbox WITH ;
		Alignment = 0, ;
		AutoSize = .T., ;
		Caption = "chkSun", ;
		Left = 300, ;
		Name = "chkSun", ;
		nlineheight = 0, ;
		Top = 375, ;
		Width = 59, ;
		ZOrderSet = 32
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="checkbox" />

	ADD OBJECT 'chkThu' AS tcheckbox WITH ;
		Alignment = 0, ;
		AutoSize = .T., ;
		Caption = "chkThu", ;
		Left = 156, ;
		Name = "chkThu", ;
		nlineheight = 0, ;
		Top = 375, ;
		Width = 58, ;
		ZOrderSet = 29
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="checkbox" />

	ADD OBJECT 'chkTue' AS tcheckbox WITH ;
		Alignment = 0, ;
		AutoSize = .T., ;
		Caption = "chkTue", ;
		Left = 60, ;
		Name = "chkTue", ;
		nlineheight = 0, ;
		Top = 375, ;
		Width = 58, ;
		ZOrderSet = 27
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="checkbox" />

	ADD OBJECT 'chkUnallocAllot' AS tcheckbox WITH ;
		Alignment = 0, ;
		AutoSize = .T., ;
		Caption = "chkUnallocAllot", ;
		Left = 12, ;
		Name = "chkUnallocAllot", ;
		Top = 399, ;
		Width = 102, ;
		ZOrderSet = 33
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="checkbox" />

	ADD OBJECT 'chkWed' AS tcheckbox WITH ;
		Alignment = 0, ;
		AutoSize = .T., ;
		Caption = "chkWed", ;
		Left = 108, ;
		Name = "chkWed", ;
		nlineheight = 0, ;
		Top = 375, ;
		Width = 62, ;
		ZOrderSet = 28
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="checkbox" />

	ADD OBJECT 'cmdCancel' AS tcommandbutton WITH ;
		Cancel = .T., ;
		Caption = "cmdCancel", ;
		Left = 222, ;
		Name = "cmdCancel", ;
		Top = 432, ;
		ZOrderSet = 35
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'cmdOK' AS tcommandbutton WITH ;
		Caption = "cmdOK", ;
		Default = .T., ;
		Left = 126, ;
		Name = "cmdOK", ;
		Top = 432, ;
		ZOrderSet = 34
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'cmdSelectEvents' AS tcommandbutton WITH ;
		Caption = "...", ;
		Height = 23, ;
		Left = 144, ;
		Name = "cmdSelectEvents", ;
		Top = 84, ;
		Width = 23, ;
		ZOrderSet = 7
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'dtxtCutDate' AS tdatectrl WITH ;
		Format = "K", ;
		Left = 168, ;
		Name = "dtxtCutDate", ;
		Top = 228, ;
		Width = 96, ;
		ZOrderSet = 20
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />

	ADD OBJECT 'dtxtFromDate' AS tdatectrl WITH ;
		Format = "K", ;
		Left = 168, ;
		Name = "dtxtFromDate", ;
		Top = 156, ;
		Width = 96, ;
		ZOrderSet = 14
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />

	ADD OBJECT 'dtxtToDate' AS tdatectrl WITH ;
		Format = "K", ;
		Left = 168, ;
		Name = "dtxtToDate", ;
		Top = 180, ;
		Width = 96, ;
		ZOrderSet = 16
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />

	ADD OBJECT 'edtNote' AS teditbox WITH ;
		Left = 168, ;
		Name = "edtNote", ;
		Top = 252, ;
		Width = 252, ;
		ZOrderSet = 22
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="editbox" />

	ADD OBJECT 'lblAllott' AS tlabel WITH ;
		AutoSize = .T., ;
		Caption = "lblAllott", ;
		Left = 12, ;
		Name = "lblAllott", ;
		Top = 63, ;
		Width = 41, ;
		ZOrderSet = 4
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'lblAllottID' AS tlabel WITH ;
		AutoSize = .T., ;
		Caption = "lblAllottID", ;
		Left = 12, ;
		Name = "lblAllottID", ;
		Top = 15, ;
		Width = 53, ;
		ZOrderSet = 0
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'lblApartner' AS tlabel WITH ;
		AutoSize = .T., ;
		Caption = "lblApartner", ;
		Left = 12, ;
		Name = "lblApartner", ;
		Top = 135, ;
		Width = 61, ;
		ZOrderSet = 11
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'lblBuilding' AS tlabel WITH ;
		AutoSize = .T., ;
		Caption = "lblBuilding", ;
		Left = 12, ;
		Name = "lblBuilding", ;
		Top = 39, ;
		Width = 60, ;
		ZOrderSet = 2
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'lblCompany' AS tlabel WITH ;
		AutoSize = .T., ;
		Caption = "lblCompany", ;
		Left = 12, ;
		Name = "lblCompany", ;
		Top = 111, ;
		Width = 68, ;
		ZOrderSet = 9
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'lblCutDate' AS tlabel WITH ;
		AutoSize = .T., ;
		Caption = "lblCutDate", ;
		Left = 12, ;
		Name = "lblCutDate", ;
		Top = 231, ;
		Width = 60, ;
		ZOrderSet = 19
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'lblCutDays' AS tlabel WITH ;
		AutoSize = .T., ;
		Caption = "lblCutDays", ;
		Left = 12, ;
		Name = "lblCutDays", ;
		Top = 207, ;
		Width = 62, ;
		ZOrderSet = 17
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'lblEvent' AS tlabel WITH ;
		AutoSize = .T., ;
		Caption = "lblEvent", ;
		Left = 12, ;
		Name = "lblEvent", ;
		Top = 87, ;
		Width = 45, ;
		ZOrderSet = 6
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'lblFromDate' AS tlabel WITH ;
		AutoSize = .T., ;
		Caption = "lblFromDate", ;
		Left = 12, ;
		Name = "lblFromDate", ;
		Top = 159, ;
		Width = 70, ;
		ZOrderSet = 13
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'lblLocation' AS tlabel WITH ;
		AutoSize = .T., ;
		Caption = "lblLocation", ;
		Left = 12, ;
		Name = "lblLocation", ;
		Top = 327, ;
		Width = 62, ;
		ZOrderSet = 23
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'lblNote' AS tlabel WITH ;
		AutoSize = .T., ;
		Caption = "lblNote", ;
		Left = 12, ;
		Name = "lblNote", ;
		Top = 255, ;
		Width = 41, ;
		ZOrderSet = 21
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'lblToDate' AS tlabel WITH ;
		AutoSize = .T., ;
		Caption = "lblToDate", ;
		Left = 12, ;
		Name = "lblToDate", ;
		Top = 183, ;
		Width = 55, ;
		ZOrderSet = 15
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'lblWeekDays' AS tlabel WITH ;
		AutoSize = .T., ;
		Caption = "lblWeekDays", ;
		Left = 12, ;
		Name = "lblWeekDays", ;
		Top = 351, ;
		Width = 74, ;
		ZOrderSet = 25
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'txtAllott' AS ttext WITH ;
		Format = "K", ;
		InputMask = (REPLICATE("X", 30)), ;
		Left = 168, ;
		Name = "txtAllott", ;
		Top = 60, ;
		Width = 192, ;
		ZOrderSet = 5
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtAllottID' AS ttext WITH ;
		Format = "K", ;
		Left = 168, ;
		Name = "txtAllottID", ;
		ReadOnly = .T., ;
		TabStop = .F., ;
		Top = 12, ;
		Width = 72, ;
		ZOrderSet = 1
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtCutDays' AS ttext WITH ;
		Format = "K", ;
		InputMask = "999", ;
		Left = 168, ;
		Name = "txtCutDays", ;
		Top = 204, ;
		Width = 96, ;
		ZOrderSet = 18
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtLocation' AS ttext WITH ;
		Format = "K", ;
		InputMask = (REPLICATE("X", 50)), ;
		Left = 168, ;
		Name = "txtLocation", ;
		Top = 324, ;
		Width = 252, ;
		ZOrderSet = 24
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />
	
	PROCEDURE allotchangename
		LPARAMETERS pOldAllotName, pNewAllottName
		RETURN .T.
		LOCAL LAlias, LMessage
		LAlias = ""
		LMessage = ""
		IF MESSAGEBOX(GetLangText("RESERVAT", "TXT_CHANGE_ALLOTT_NAME"),4+32,GetLangText("FUNC","TXT_QUESTION"))<>6
			RETURN .f.
		ENDIF
		LMessage = GetLangText("COMMON", "T_PLEASEWAIT")
		WAIT window nowait LMessage
		LAlias = ALIAS()
		select reservat
		WAIT window nowait LMessage+"."
		SCAN FOR rs_allott == pOldAllotName
			replace rs_allott WITH pNewAllottName
		ENDSCAN
		WAIT window nowait LMessage+".."
		select histres
		SCAN FOR hr_allott == pOldAllotName
			replace hr_allott WITH pNewAllottName
		ENDSCAN
		WAIT window nowait LMessage+"..."
		WAIT CLEAR	
		SELECT &LAlias
		RETURN .t.
		
	ENDPROC

	PROCEDURE allotfilllnamecombo
		LPARAMETERS tnAddrID
		
		TEXT TO this.cboApartner.jSql TEXTMERGE NOSHOW PRETEXT 15
			SELECT CAST('||EV||GetAddressName(ad_lname, ad_fname, ad_title)' AS Char(70)) AS ad_name,
				0 AS ad_apid, ad_lname, ad_fname, ad_title, 0 FROM address WHERE ad_addrid = <<SqlCnv(tnAddrID,.T.)>>
				UNION SELECT CAST('||EV||GetAddressName(ad_lname, ad_fname, ad_title)' AS Char(70)),
				ap_apid, ap_lname, ap_fname, ap_title, IIF(ap_apid=-9999, 2, 1) FROM apartner WHERE INLIST(ap_addrid, -9999, <<SqlCnv(tnAddrID,.T.)>>)
				ORDER BY 6, 1
		ENDTEXT
		this.cboApartner.Init()
	ENDPROC

	PROCEDURE assigncaption
		this.Caption = GetLangText("MGRRESER", "TXT_ALWINDOW")
		
		this.lblAllottID.Caption = GetLangText("MGRRESER", "TXT_ALALLOTTID")
		this.lblAllott.Caption = GetLangText("MGRRESER", "TXT_ALALLOTT")
		this.lblBuilding.Caption = GetLangText("ALLOTT", "TXT_RENT_OBJECT")
		this.lblEvent.Caption = GetLangText("EVENT", "TXT_EVENT")
		this.lblCompany.Caption = GetLangText("MGRRESER", "TXT_ALCOMPANY")
		this.lblApartner.Caption = GetLangText("MGRRESER", "TXT_ALNAME")
		this.lblFromDate.Caption = GetLangText("MGRRESER", "TXT_ALDATE")
		this.lblToDate.Caption = GetLangText("MGRRESER", "TXT_ALENDDATE")
		this.lblCutDays.Caption = GetLangText("MGRRESER", "TXT_ALCUT")
		this.lblCutDate.Caption = GetLangText("MGRRESER", "TXT_ALCUTDATE")
		this.lblNote.Caption = GetLangText("MGRFINAN", "TXT_NOTE")
		this.lblLocation.Caption = GetLangText("MGRRESER", "TXT_LOCATION")
		this.lblWeekDays.Caption = GetLangText("MGRRESER", "TXT_WEEKDAYS")
		
		this.chkSun.Caption = LEFT(MyCDoW(1),3)
		this.chkMon.Caption = LEFT(MyCDoW(2),3)
		this.chkTue.Caption = LEFT(MyCDoW(3),3)
		this.chkWed.Caption = LEFT(MyCDoW(4),3)
		this.chkThu.Caption = LEFT(MyCDoW(5),3)
		this.chkFri.Caption = LEFT(MyCDoW(6),3)
		this.chkSat.Caption = LEFT(MyCDoW(7),3)
		
		this.chkUnallocAllot.Caption = GetLangText("MGRRESER", "TXT_UNALLOC_ALLOT")
		this.cmdOK.Caption = GetLangText("COMMON", "TXT_OK")
		this.cmdCancel.Caption = GetLangText("COMMON", "TXT_CANCEL")
	ENDPROC

	PROCEDURE Init
		LPARAMETERS tnMode, tnRecordId
		LOCAL i
		
		this.nMode = tnMode
		this.oBizAllot = CREATEOBJECT("cbizallot")
		this.oBizAllot.Initialize()
		this.oBizAllot.AltGetByAlid(tnRecordId)
		
		DO CASE
			CASE this.nMode = NEW_MODE
				SELECT curAlthead
				SCATTER MEMO BLANK NAME this.oData
				this.oData.al_days = "1111111"
				APPEND BLANK
			CASE this.nMode = EDIT_MODE
				SELECT curAlthead
				SCATTER MEMO NAME this.oData
				IF this.oData.al_fromdat <= SysDate()
					this.dtxtFromDate.Enabled = .F.
				ENDIF
			OTHERWISE
				RETURN .F.
		ENDCASE
		
		this.AssignCaption()
		
		FOR i = 1 TO 7
			this.aWeekDays[i] = (SUBSTR(this.oData.al_days,i,1) = '1')
		NEXT
		
		TEXT TO this.cboEvent.jSql TEXTMERGE NOSHOW PRETEXT 15
			SELECT ev_name AS EventName, ev_city AS EventCity, ei_from, ei_to, ei_eiid, UPPER(ev_name)
				FROM evint
				INNER JOIN events ON ev_evid = ei_evid
				UNION SELECT CAST('' AS Char(30)) AS EventName, CAST('' AS Char(30)) AS EventCity, {} AS ei_from, {} AS ei_to, 0 AS ei_eiid, CAST('' AS Char(30)) FROM param
				ORDER BY 6, ei_from
		ENDTEXT
		this.cboEvent.Init()
		
		TEXT TO this.cboCompany.jSql TEXTMERGE NOSHOW PRETEXT 15
			SELECT ad_company, ad_zip, ad_city, ad_lname, UPPER(ad_company), ad_addrid FROM address WHERE ad_addrid = <<SqlCnv(this.oData.al_addrid,.T.)>>
				UNION SELECT CAST('' AS Char(50)), CAST('' AS Char(10)), CAST('' AS Char(30)), CAST('' AS Char(30)), CAST('x' AS Char(50)), 0 FROM param
				ORDER BY 5, 2
		ENDTEXT
		this.cboCompany.Init()
		
		IF NOT g_lShips
			this.AllotFilllNameCombo(this.oData.al_addrid)
		ENDIF
		
		this.cboBuilding.cWhere = "bu_active OR bu_buildng = " + SqlCnv(thisform.oData.al_buildng)
		this.cboBuilding.RequeryCursor()
		this.cboBuilding.ControlSource = [thisform.oData.al_buildng]
		
		this.txtAllottID.ControlSource = [thisform.oData.al_altid]
		this.txtAllott.ControlSource = [thisform.oData.al_allott]
		this.cboCompany.ControlSource = [thisform.oData.al_company]
		this.cboApartner.ControlSource = [thisform.oData.al_apid]
		this.dtxtFromDate.ControlSource = [thisform.oData.al_fromdat]
		this.dtxtToDate.ControlSource = [thisform.oData.al_todat]
		this.txtCutDays.ControlSource = [thisform.oData.al_cutday]
		this.dtxtCutDate.ControlSource = [thisform.oData.al_cutdate]
		this.edtNote.ControlSource = [thisform.oData.al_note]
		this.txtLocation.ControlSource = [thisform.oData.al_locat]
		this.chkUnallocAllot.ControlSource = [thisform.oData.al_unalloc]
		this.cboevent.ControlSource = [thisform.oData.al_eiid]
		this.chkMon.ControlSource = 'thisform.aWeekDays[1]'
		this.chkTue.ControlSource = 'thisform.aWeekDays[2]'
		this.chkWed.ControlSource = 'thisform.aWeekDays[3]'
		this.chkThu.ControlSource = 'thisform.aWeekDays[4]'
		this.chkFri.ControlSource = 'thisform.aWeekDays[5]'
		this.chkSat.ControlSource = 'thisform.aWeekDays[6]'
		this.chkSun.ControlSource = 'thisform.aWeekDays[7]'
		
		DO CASE
			CASE NOT EMPTY(this.oData.al_cutday)
				this.dtxtCutDate.Enabled = .F.
			CASE NOT EMPTY(this.oData.al_cutdate)
				this.txtCutDays.Enabled = .F.
			OTHERWISE
		ENDCASE
		
		this.lblBuilding.Visible = g_lShips
		this.cbobuilding.Visible = g_lShips
		this.lblCompany.Visible = NOT g_lShips
		this.cboCompany.Visible = NOT g_lShips
		this.lblApartner.Visible = NOT g_lShips
		this.cboApartner.Visible = NOT g_lShips
		
		DODEFAULT()
	ENDPROC

	PROCEDURE KeyPress
		LPARAMETERS nKeyCode, nShiftAltCtrl
		
		IF nKeyCode = 27
			this.OnClose()
		ENDIF
	ENDPROC

	PROCEDURE Load
		DODEFAULT()
		
		OpenFile(,"althead",,,5)
		OpenFile(,"altsplit",,,5)
		OpenFile(,"availab",,,5)
		OpenFile(,"building")
		OpenFile(,"roomtype")
		OpenFile(,"apartner")
		OpenFile(,"address")
		OpenFile(,"reservat")
		OpenFile(,"histres")
		OpenFile(,"events")
		OpenFile(,"evint")
	ENDPROC

	PROCEDURE onclose
		this.Release()
	ENDPROC

	PROCEDURE onsave
		LOCAL i, lcSqlSelect, lcCurResult, lnArea, llFound, lcMessage
		
		IF g_lShips
			IF EMPTY(this.oData.al_buildng)
				this.cboBuilding.SetFocus()
				RETURN
			ENDIF
		
			IF this.oData.al_buildng <> curAlthead.al_buildng
				lnArea = SELECT()
				lcCurResult = SqlCursor("SELECT rs_altid FROM reservat WHERE rs_altid = " + SqlCnv(this.oData.al_altid,.T.))
				SELECT (lnArea)
				llFound = USED(lcCurResult) AND RECCOUNT(lcCurResult) > 0
				DClose(lcCurResult)
				IF llFound
					Alert(GetLangText("ALLOTT", "TXT_RESERVATIONS_ALREADY_EXISTS"))
					this.cboBuilding.SetFocus()
					RETURN
				ENDIF
			ENDIF
		
			IF EMPTY(this.oData.al_eiid)
				Alert(GetLangText("ALLOTT", "TXT_MUST_SELECT_EVENT"))
				this.cmdSelectEvents.SetFocus()
				RETURN
			ENDIF
		ELSE
			IF EMPTY(this.oData.al_company)
				this.cboCompany.SetFocus()
				RETURN
			ENDIF
		ENDIF
		
		IF EMPTY(this.oData.al_fromdat) OR this.oData.al_fromdat <= SysDate() AND  curAlthead.al_fromdat <> this.oData.al_fromdat
			this.dtxtFromDate.SetFocus()
			RETURN
		ENDIF
		
		IF this.oData.al_todat < this.oData.al_fromdat
			this.dtxtToDate.SetFocus()
			RETURN
		ENDIF
		
		IF g_lShips
			TEXT TO lcSqlSelect TEXTMERGE NOSHOW PRETEXT 2 + 8
				SELECT al_altid, al_allott, al_fromdat, al_todat FROM althead 
					WHERE al_altid <> <<SqlCnv(this.oData.al_altid,.T.)>> AND 
						al_buildng = <<SqlCnv(PADR(this.oData.al_buildng,3),.T.)>> AND 
						al_eiid = <<SqlCnv(this.oData.al_eiid,.T.)>> AND 
						al_fromdat <= <<SqlCnv(this.oData.al_todat,.T.)>> AND 
						al_todat >= <<SqlCnv(this.oData.al_fromdat,.T.)>>
			ENDTEXT
			lnArea = SELECT()
			lcCurResult = SqlCursor(lcSqlSelect)
			IF USED(lcCurResult)
				llFound = RECCOUNT(lcCurResult) > 0
				lcMessage = Str2Msg(GetLangText("ALLOTT", "TXT_ALLOTT_ALREADY_EXISTS"),"%s",;
						ALLTRIM(&lcCurResult..al_allott),DTOC(&lcCurResult..al_fromdat),DTOC(&lcCurResult..al_todat))
				DClose(lcCurResult)
			ELSE
				llFound = .F.
			ENDIF
			SELECT (lnArea)
			IF llFound
				Alert(lcMessage)
				this.dtxtFromDate.SetFocus()
				RETURN
			ENDIF
		ENDIF
		
		this.oData.al_days = "1111111"
		FOR i = 1 TO 7
			IF NOT this.aWeekDays[i]
				this.oData.al_days = STUFF(this.oData.al_days, i, 1, "0")
			ENDIF
		NEXT
		
		IF this.oData.al_days = "0000000"
			this.chkMon.SetFocus()
			RETURN
		ENDIF
		
		DO CASE
			CASE NOT EMPTY(this.oData.al_cutday)
				this.oData.al_cutdate = this.oData.al_fromdat - this.oData.al_cutday
				llChangeAsCutDate = .T.
			CASE NOT EMPTY(this.oData.al_cutdate) AND (this.oData.al_cutdate > this.oData.al_fromdat)
				this.dtxtCutDate.SetFocus()
				RETURN
			CASE EMPTY(this.oData.al_cutdate)
				llChangeAsCutDate = .T.
			OTHERWISE
		ENDCASE
		
		IF this.nMode = EDIT_MODE
			IF g_lShips AND this.oData.al_buildng <> curAlthead.al_buildng
				* Boat is changed. Delete all from altsplit.
				this.oBizAllot.AltDelete()
			ELSE
				this.oBizAllot.AltChange(this.oData.al_fromdat, this.oData.al_todat, this.oData.al_days)
			ENDIF
			IF NO_ERROR <> this.oBizAllot.GetError(@lcMessage)
				Alert(lcMessage)
				RETURN
			ENDIF
			IF curAlthead.al_allott <> this.oData.al_allott
				IF NOT this.AllotChangeName(curAlthead.al_allott, this.oData.al_allott)
					RETURN
				ENDIF
			ENDIF
			this.oBizAllot.AltCutdateChange(this.oData.al_cutdate, this.oData.al_cutday)
		ELSE
			this.oData.al_altid = NextId("ALLOTT")
		ENDIF
		
		SELECT curAlthead
		GATHER NAME this.oData MEMO
		
		IF NO_ERROR <> this.oBizAllot.AltSave(@lcMessage)
			Alert(lcMessage)
			RETURN
		ENDIF
		
		IF NOT Odbc() AND NOT EMPTY(this.oData.al_cutdate)
			DO ActInsertForAllotment IN ProcAction WITH this.oData
		ENDIF
		EndTransaction()
		
		this.OnClose()
	ENDPROC

	PROCEDURE QueryUnload
		this.OnClose()
		NODEFAULT
	ENDPROC

	PROCEDURE Unload
		DODEFAULT()
		RETURN thisform.oData.al_altid
	ENDPROC

	PROCEDURE cboApartner.InteractiveChange
		thisform.oData.al_lname = EVALUATE(this.jCursor + ".ad_lname")
	ENDPROC

	PROCEDURE cboBuilding.GotFocus
		this.cOldVal = this.Value
	ENDPROC

	PROCEDURE cboBuilding.Init
		LPARAMETERS lp_oParent
		this.AddProperty("cOldVal")
		DODEFAULT(lp_oParent)
	ENDPROC

	PROCEDURE cboBuilding.LostFocus
		IF EMPTY(thisform.oData.al_allott) OR this.cOldVal # this.Value
			thisform.oData.al_allott = LEFT(UPPER(EVALUATE(this.cCursor+".bu_lang")),30)
			thisform.txtAllott.Refresh()
		ENDIF
	ENDPROC

	PROCEDURE cboCompany.DropDown
		IF EMPTY(this.DisplayValue)
			WAIT WINDOW GetLangText("COMMON", "TXT_ENTER_SOME_DATA") NOWAIT
		ENDIF
	ENDPROC

	PROCEDURE cboCompany.LostFocus
		DODEFAULT()
		thisform.oData.al_addrid = EVALUATE(this.jCursor+".ad_addrid")
		thisform.AllotFilllNameCombo(thisform.oData.al_addrid)
	ENDPROC

	PROCEDURE cboCompany.Valid
		IF NOT EMPTY(this.DisplayValue)
			TEXT TO this.jSql TEXTMERGE NOSHOW PRETEXT 15
				SELECT ad_company, ad_zip, ad_city, ad_lname, UPPER(ad_company), ad_addrid FROM address WHERE UPPER(ad_company) LIKE <<SqlCnv(ALLTRIM(UPPER(this.DisplayValue))+"%",.T.)>>
					UNION SELECT CAST('' AS Char(50)), CAST('' AS Char(10)), CAST('' AS Char(30)), CAST('' AS Char(30)), CAST('x' AS Char(50)), 0 FROM param 
					ORDER BY 5, 2
			ENDTEXT
			this.SqlRequery()
		ENDIF
		
		RETURN DODEFAULT()
	ENDPROC

	PROCEDURE cboEvent.LostFocus
		IF EMPTY(thisform.oData.al_fromdat) AND NOT EMPTY(EVALUATE(this.jCursor+".ei_from"))
			thisform.oData.al_fromdat = EVALUATE(this.jCursor+".ei_from")
			thisform.dtxtFromDate.Refresh()
		ENDIF
		IF EMPTY(thisform.oData.al_todat) AND NOT EMPTY(EVALUATE(this.jCursor+".ei_to"))
			thisform.oData.al_todat = EVALUATE(this.jCursor+".ei_to")
			thisform.dtxtToDate.Refresh()
		ENDIF
	ENDPROC

	PROCEDURE cboEvent.sqlrowsource
		DODEFAULT()
		IF Odbc()
			BLANK FIELDS ei_from FOR ei_from = DATE(1611,11,11) IN (this.jCursor)
			BLANK FIELDS ei_to FOR ei_to = DATE(1611,11,11) IN (this.jCursor)
		ENDIF
	ENDPROC

	PROCEDURE cmdCancel.Click
		thisform.OnClose()
	ENDPROC

	PROCEDURE cmdOK.Click
		thisform.OnSave()
	ENDPROC

	PROCEDURE cmdSelectEvents.Click
		LOCAL l_nRet, l_nSelect, lcSql
		LOCAL ARRAY l_aDefs(4,5)
		
		l_nSelect = SELECT()
		
		TEXT TO lcSql TEXTMERGE NOSHOW PRETEXT 15
			SELECT CAST(UPPER(ev_name) AS char(30)) AS EventName, ev_city AS EventCity, ei_from, ei_to, ei_eiid FROM evint
				INNER JOIN events ON ev_evid = ei_evid
		ENDTEXT
		SqlCursor(lcSql,"curChooseEvents",,,,,,.T.)
		
		INDEX ON UPPER(EventName)+DTOS(ei_from) TAG EventName
		INDEX ON UPPER(EventCity)+DTOS(ei_from) TAG EventCity
		INDEX ON ei_from TAG ei_from
		INDEX ON ei_to TAG ei_to
		SET ORDER TO EventName
		* position on right event
		LOCATE FOR ei_eiid = thisform.oData.al_eiid
		IF NOT FOUND()
			LOCATE
		ENDIF
		
		l_aDefs(1,1) = "EventName"
		l_aDefs(1,2) = 100
		l_aDefs(1,3) = GetLangText("EVENT", "TXT_EVENT")
		l_aDefs(1,4) = "TXT"
		l_aDefs(1,5) = "EventName"
		l_aDefs(2,1) = "EventCity"
		l_aDefs(2,2) = 100
		l_aDefs(2,3) = GetLangText("EVENT", "TXT_CITY")
		l_aDefs(2,4) = "TXT"
		l_aDefs(2,5) = "EventCity"
		l_aDefs(3,1) = "ei_from"
		l_aDefs(3,2) = 120
		l_aDefs(3,3) = GetLangText("EVENT", "TXT_FROM")
		l_aDefs(3,4) = "TXT"
		l_aDefs(3,5) = "ei_from"
		l_aDefs(4,1) = "ei_to"
		l_aDefs(4,2) = 120
		l_aDefs(4,3) = GetLangText("EVENT", "TXT_TO")
		l_aDefs(4,4) = "TXT"
		l_aDefs(4,5) = "ei_to"
		
		SELECT 0
		DO FORM forms\brwmulsel WITH "curChooseEvents", l_aDefs, GetLangText("ALLOTT", "TXT_SELECT_EVENTS"), .F., .T. TO l_nRet
		
		IF l_nRet = 1
			thisform.oData.al_eiid = curChooseEvents.ei_eiid
			thisform.cboEvent.Refresh()
			thisform.cboEvent.LostFocus()
		ENDIF
		
		DClose("curChooseEvents")
		
		SELECT (l_nSelect)
		
		RETURN .T.
		
	ENDPROC

	PROCEDURE dtxtCutDate.LostFocus
		thisform.txtCutDays.Enabled = EMPTY(this.Value)
	ENDPROC

	PROCEDURE txtCutDays.LostFocus
		thisform.dtxtCutDate.Enabled = EMPTY(this.Value)
	ENDPROC

ENDDEFINE
