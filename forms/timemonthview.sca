*--------------------------------------------------------------------------------------------------------------------------------------------------------
* (ES) AUTOGENERADO - ¡¡ATENCIÓN!! - ¡¡NO PENSADO PARA EJECUTAR!! USAR SOLAMENTE PARA INTEGRAR CAMBIOS Y ALMACENAR CON HERRAMIENTAS SCM!!
* (EN) AUTOGENERATED - ATTENTION!! - NOT INTENDED FOR EXECUTION!! USE ONLY FOR MERGING CHANGES AND STORING WITH SCM TOOLS!!
*--------------------------------------------------------------------------------------------------------------------------------------------------------
*< FOXBIN2PRG: Version="1.19" SourceFile="timemonthview.scx" /> (Solo para binarios VFP 9 / Only for VFP 9 binaries)
*
*
#INCLUDE "..\include\constdefines.h"

DEFINE CLASS dataenvironment AS dataenvironment 
 	*< CLASSDATA: Baseclass="dataenvironment" Timestamp="" Scale="" Uniqueid="" ClassIcon="2" />

	DataSource = .NULL.
	Height = 0
	Left = 0
	Name = "Dataenvironment"
	Top = 0
	Width = 0

ENDDEFINE

DEFINE CLASS frmtimemonthview AS timeplanbase OF "..\libs\cit_bridge.vcx" 
 	*< CLASSDATA: Baseclass="form" Timestamp="" Scale="" Uniqueid="" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="grdTimePlan.Column0.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grdTimePlan.Column0.Text1" UniqueID="" Timestamp="" />

	*<DefinedPropArrayMethod>
		*m: checkforchanges
		*m: setvalue
		*p: ctimeplancursorcopy		&& Name of cursor which holds original, unchanged data
		*p: dsearchdate		&& Search date for this work time view - First day in month
		*p: njobnumber
		*a: aproperties[1,0]
	*</DefinedPropArrayMethod>

	Caption = "frmTimeMonthView"
	ctimeplancursorcopy = 		&& Name of cursor which holds original, unchanged data
	DoCreate = .T.
	dsearchdate = {}		&& Search date for this work time view - First day in month
	formname = TimeMonthView
	Name = "frmTimeMonthView"
	njobnumber = 0
	savegridwidths = .F.
	grdTimePlan.Column0.Name = "Column0"
	grdTimePlan.HeaderHeight = 32
	grdTimePlan.HighlightStyle = 0
	grdTimePlan.lsetgridprop = .F.
	grdTimePlan.Name = "grdTimePlan"
	grdTimePlan.p_basecolumncontrol = txttimemonthview
	grdTimePlan.savegridsettings = .F.

	ADD OBJECT 'grdTimePlan.Column0.Header1' AS header WITH ;
		Caption = "Header1", ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'grdTimePlan.Column0.Text1' AS textbox WITH ;
		BackColor = 255,255,255, ;
		BorderStyle = 0, ;
		ForeColor = 0,0,0, ;
		Margin = 0, ;
		Name = "Text1"
		*< END OBJECT: BaseClass="textbox" />
	
	PROCEDURE checkforchanges
		LOCAL l_nArea, l_lChanged, l_nEmplId
		
		l_nArea = SELECT()
		
		SELECT (this.TimePlanCursor)
		SCAN
			l_nEmplId = cr_emid
			SELECT (this.cTimeplanCursorCopy)
			LOCATE FOR cr_emid = l_nEmplId
			SELECT (this.TimePlanCursor)
			l_lChanged = RecordChanged(this.TimePlanCursor, this.cTimeplanCursorCopy)
			IF l_lChanged
				EXIT
			ENDIF
		ENDSCAN
		
		SELECT (l_nArea)
		
		RETURN l_lChanged
	ENDPROC

	PROCEDURE Init
		LPARAMETERS lp_aProperties, lp_dSearchDate, lp_nSelectedJob
		LOCAL i, l_cCaption
		
		ACOPY(lp_aProperties,this.aProperties)
		this.dSearchDate = lp_dSearchDate
		this.nJobNumber = lp_nSelectedJob
		
		this.oWorkTimeFunc.GetMonthPlanData(this.dSearchDate, this.nJobNumber, this.TimePLanCursor)
		l_cCaption = IIF(EMPTY(this.nJobNumber), "", ALLTRIM(DLookUp("job", "jb_jbnr = " + SqlCnv(this.nJobNumber), "jb_lang"+g_Langnum))) + " " + ;
				MyCMonth(this.dSearchDate) + " " + TRANSFORM(YEAR(this.dSearchDate))
		this.Caption = GetLangText("EMPLOYEE","TXT_PLAN_FOR") + " " + l_cCaption
		
		DODEFAULT(l_cCaption, @lp_aProperties)
		
		this.grdTimePlan.Init(.T.)
		
		this.grdTimePlan.DefaultPropertiesSet(31, "gr_show", .T.)
		this.grdTimePlan.DefaultPropertiesSet(32, "gr_show", .T.)
		this.grdTimePlan.DefaultPropertiesSet(33, "gr_show", .T.)
		FOR i = LastDay(this.dSearchDate)+1 TO 31
			this.grdTimePlan.Columns(i+2).lShow = .F.
			this.grdTimePlan.Columns(i+2).Visible = .F.
		NEXT
		
		this.cTimeplanCursorCopy = SYS(2015)
		SELECT * FROM (this.TimePlanCursor) WHERE 1=1 INTO CURSOR (this.cTimeplanCursorCopy) NOFILTER
		
		RETURN .T.
	ENDPROC

	PROCEDURE onclose
		IF this.CheckForChanges()
			l_nAnswer = YesNoCancel(GetLangText("RESERVAT","TXT_SAVE_CHANGES"))
			DO CASE
				CASE l_nAnswer = 6
					this.OnSave()
				CASE l_nAnswer = 7
				CASE l_nAnswer = 2
					RETURN
			ENDCASE
		ENDIF
		
		DODEFAULT()
	ENDPROC

	PROCEDURE onprint
		* print month time plan
		PRIVATE cTitle, nLastDay
		
		this.OnSave()
		
		cTitle = this.cCaption
		nLastDay = LastDay(this.dSearchDate)
		PrintReport(gcReportdir+"_AZ00100.frx")
	ENDPROC

	PROCEDURE onsave
		IF this.oWorkTimeFunc.MergeIntervals(this.dSearchDate, this.nJobNumber, this.TimePlanCursor, this.cTimeplanCursorCopy)
			SELECT * FROM (this.TimePlanCursor) WHERE 1=1 INTO CURSOR (this.cTimeplanCursorCopy) NOFILTER
		ENDIF
		
		RETURN .T.
	ENDPROC

	PROCEDURE onsearch
		LOCAL i, l_lSuccess, l_dFromDate, l_nJobNumber
		
		l_dFromDate = this.dSearchDate
		l_nJobNumber = this.nJobNumber
		DO ChangeWorkHourPeriod IN procaze WITH l_lSuccess, l_dFromDate, l_nJobNumber
		IF l_lSuccess
			this.dSearchDate = l_dFromDate
			this.nJobNumber = l_nJobNumber
			l_nLastDay = LastDay(this.dSearchDate)
			this.grdTimePlan.RecordSource = ""
			this.oWorkTimeFunc.GetMonthPlanData(this.dSearchDate, this.nJobNumber, this.TimePLanCursor)
			SELECT * FROM (this.TimePlanCursor) WHERE 1=1 INTO CURSOR (this.cTimeplanCursorCopy) NOFILTER
			SELECT (this.TimePlanCursor)
			this.grdTimePlan.RecordSource = this.TimePlanCursor
			this.grdTimePlan.Columns(1).ControlSource = this.aProperties(1,1)
			this.grdTimePlan.Columns(2).ControlSource = this.aProperties(2,1)
			FOR i = 1 TO this.grdTimePlan.ColumnCount-2
				IF i > 28
					this.grdTimePlan.Columns(i+2).lShow = (i <= l_nLastDay)
					this.grdTimePlan.Columns(i+2).Visible = (i <= l_nLastDay)
				ENDIF
				this.grdTimePlan.Columns(i+2).ControlSource = this.aProperties(i+2,1)
				this.grdTimePlan.Columns(i+2).Header1.Caption = TRANSFORM(i) + " " + CRLF + LEFT(MyCDoW(DOW(this.dSearchDate-1+i)),2)
			NEXT
			this.cCaption = IIF(EMPTY(l_nJobNumber), "", ALLTRIM(DLookUp("job", "jb_jbnr = " + SqlCnv(l_nJobNumber), "jb_lang"+g_Langnum))) + " " + ;
				MyCMonth(this.dSearchDate) + " " + TRANSFORM(YEAR(this.dSearchDate))
			this.Caption = GetLangText("EMPLOYEE","TXT_PLAN_FOR") + " " + this.cCaption
		ENDIF
	ENDPROC

	PROCEDURE opentable
		DODEFAULT()
		OpenFile(,"employeh")
		OpenFile(,"asgempl")
		OpenFile(,"timetype")
	ENDPROC

	PROCEDURE setvalue
		LPARAMETERS lp_nColumnOrder, lp_nXCoord, lp_nYCoord, lp_nTtNr
		LOCAL l_nTtNr, l_nStatus
		
		IF NOT EMPTY(lp_nColumnOrder) AND lp_nColumnOrder > 2 AND VARTYPE(this.oWorkTimeFunc) = "O"
			IF EMPTY(lp_nTtNr)
				l_nTtNr = this.oWorkTimeFunc.ChooseTimetype(lp_nXCoord, lp_nYCoord)
			ELSE
				l_nTtNr = lp_nTtNr
			ENDIF
			l_nStatus = this.oWorkTimeFunc.SetTimetype(l_nTtNr, lp_nColumnOrder-2, this.TimePlanCursor)
			DO CASE
				CASE l_nStatus = 0
				CASE l_nStatus = -1
					Alert(GetLangText("EMPLOYEE","TXT_NO_DEFINED_VACATION"))
				CASE l_nStatus = -2
					Alert(GetLangText("EMPLOYEE","TXT_NO_UNUSED_VACATION"))
				OTHERWISE
					this.grdTimePlan.Refresh()
			ENDCASE
		ENDIF
		
		RETURN .T.
	ENDPROC

	PROCEDURE grdTimePlan.Init
		LPARAMETERS lp_lDoInit
		
		IF NOT lp_lDoInit
			RETURN .T.
		ENDIF
		
		DODEFAULT()
		
		RETURN .T.
	ENDPROC

ENDDEFINE
