*--------------------------------------------------------------------------------------------------------------------------------------------------------
* (ES) AUTOGENERADO - ¡¡ATENCIÓN!! - ¡¡NO PENSADO PARA EJECUTAR!! USAR SOLAMENTE PARA INTEGRAR CAMBIOS Y ALMACENAR CON HERRAMIENTAS SCM!!
* (EN) AUTOGENERATED - ATTENTION!! - NOT INTENDED FOR EXECUTION!! USE ONLY FOR MERGING CHANGES AND STORING WITH SCM TOOLS!!
*--------------------------------------------------------------------------------------------------------------------------------------------------------
*< FOXBIN2PRG: Version="1.19" SourceFile="emailsend.scx" /> (Solo para binarios VFP 9 / Only for VFP 9 binaries)
*
*
#INCLUDE "..\include\constdefines.h"

DEFINE CLASS dataenvironment AS dataenvironment 
 	*< CLASSDATA: Baseclass="dataenvironment" Timestamp="" Scale="" Uniqueid="" ClassIcon="2" />

	DataSource = .NULL.
	Height = 420
	Left = 182
	Name = "Dataenvironment"
	Top = 107
	Width = 537

ENDDEFINE

DEFINE CLASS frmmail AS tform OF "..\libs\main.vcx" 
 	*< CLASSDATA: Baseclass="form" Timestamp="" Scale="" Uniqueid="" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="lblSubject" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtSubject" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="edtMsgBody" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdSend" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdTo" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lstRecipt" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblRecipt" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdClose" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdAttachment" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblAttachmentCount" UniqueID="" Timestamp="" />

	*<DefinedPropArrayMethod>
		*m: addemptyemails
		*m: addnewrecipt
		*m: checkbody
		*m: checkemailaddress
		*m: createattachmcursor
		*m: getheader
		*m: getquotetext
		*m: getresign
		*m: getsignature
		*m: getsubject
		*m: onattachment
		*m: oncancel
		*m: onselectaddress
		*m: onsendcmd
		*m: setselectedemail
		*p: ccuradremail
		*p: ccurapartner
		*p: cemailaddress
		*p: cemaildisplayname
		*p: cemailsubject
		*p: cemailtext
		*p: cmode
		*p: lemailfromreportpreview		&& When .T., called from XFRX report preview, send e-mail button.
		*p: lsuccess
		*p: naddrid
		*p: nattachcount
		*p: nmessageid
		*p: ocallingform
		*p: oemaildata
	*</DefinedPropArrayMethod>

	Caption = "frmMail"
	ccuradremail = 
	ccurapartner = 
	ControlBox = .T.
	DataSession = 2
	DoCreate = .T.
	doini = .T.
	Height = 516
	Icon = ..\bitmap\icons\mail01a.ico
	KeyPreview = .T.
	lemailfromreportpreview = .F.		&& When .T., called from XFRX report preview, send e-mail button.
	naddrid = 0
	Name = "frmMail"
	nattachcount = 0
	ShowTips = .T.
	Width = 592
	WindowType = 1

	ADD OBJECT 'cmdAttachment' AS tcommandbutton WITH ;
		Caption = "", ;
		Left = 73, ;
		Name = "cmdAttachment", ;
		Picture = ..\bitmap\toolbar\import.bmp, ;
		TabIndex = 3, ;
		Top = 7, ;
		Width = 27
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'cmdClose' AS tcommandbutton WITH ;
		Caption = "", ;
		Left = 106, ;
		Name = "cmdClose", ;
		Picture = ..\bitmap\toolbar\close.bmp, ;
		TabIndex = 4, ;
		Top = 7, ;
		Width = 27
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'cmdSend' AS tcommandbutton WITH ;
		Caption = "", ;
		Height = 27, ;
		Left = 40, ;
		Name = "cmdSend", ;
		Picture = ..\bitmap\toolbar\mailsend.bmp, ;
		TabIndex = 2, ;
		Top = 7, ;
		Width = 27
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'cmdTo' AS tcommandbutton WITH ;
		Caption = "", ;
		Height = 27, ;
		Left = 7, ;
		Name = "cmdTo", ;
		Picture = ..\bitmap\toolbar\modify.bmp, ;
		TabIndex = 1, ;
		Top = 7, ;
		Width = 27
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'edtMsgBody' AS teditbox WITH ;
		Height = 372, ;
		Left = 3, ;
		Name = "edtMsgBody", ;
		TabIndex = 7, ;
		Top = 141, ;
		Width = 585
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="editbox" />

	ADD OBJECT 'lblAttachmentCount' AS tlabel WITH ;
		Caption = "", ;
		Left = 492, ;
		Name = "lblAttachmentCount", ;
		TabIndex = 10, ;
		Top = 118, ;
		Width = 96
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'lblRecipt' AS tlabel WITH ;
		Caption = "lblRecipt", ;
		Height = 17, ;
		Left = 5, ;
		Name = "lblRecipt", ;
		TabIndex = 9, ;
		Top = 42, ;
		Width = 70
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'lblSubject' AS tlabel WITH ;
		Caption = "lblSubject", ;
		Height = 17, ;
		Left = 5, ;
		Name = "lblSubject", ;
		TabIndex = 8, ;
		Top = 119, ;
		Width = 70
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'lstRecipt' AS tlistbox WITH ;
		ColumnCount = 2, ;
		ColumnLines = .F., ;
		ColumnWidths = "200,300", ;
		Height = 72, ;
		Left = 75, ;
		Name = "lstRecipt", ;
		TabIndex = 5, ;
		Top = 40, ;
		Width = 513
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="listbox" />

	ADD OBJECT 'txtSubject' AS ttext WITH ;
		Height = 23, ;
		Left = 75, ;
		Name = "txtSubject", ;
		TabIndex = 6, ;
		Top = 115, ;
		Width = 412
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />
	
	PROCEDURE addemptyemails
		LOCAL i
		FOR i = 1 TO 5
			this.AddNewRecipt(0, 0, "", "", "", "", .F.)
		ENDFOR
		
		RETURN .T.
	ENDPROC

	PROCEDURE addnewrecipt
		LPARAMETERS lp_nAddrId, lp_nApId, lp_cEMail, lp_cLName, lp_cFName, lp_cCompany, lp_lMark
		LOCAL l_nSelect
		l_nSelect = SELECT()
		SELECT (this.cCurAdrEMail)
		SCATTER MEMO NAME l_oData BLANK
		l_oData.ec_addrid = lp_nAddrId
		l_oData.ec_apid = lp_nApId
		l_oData.ec_email = lp_cEMail
		IF NOT EMPTY(lp_cLName)
			l_oData.ec_disname = ALLTRIM(Flip(lp_cLName)) + " " + ALLTRIM(lp_cFName)
		ELSE
			l_oData.ec_disname = ALLTRIM(lp_cCompany)
		ENDIF
		l_oData.ec_mark = lp_lMark
		APPEND BLANK
		GATHER MEMO NAME l_oData
		SELECT (l_nSelect)
		RETURN .T.
	ENDPROC

	PROCEDURE checkbody
		LOCAL i, l_cCharacter
		
		FOR i = 1 TO MIN(this.nAttachCount, LEN(this.cEmailText))
			l_cCharacter = SUBSTR(this.cEmailText,i,1)
			IF NOT ISALPHA(l_cCharacter) AND NOT ISDIGIT(l_cCharacter)
				EXIT
			ENDIF
		NEXT
		
		IF i < this.nAttachCount + 1
			this.cEmailText = STUFF(this.cEmailText, i, 0, REPLICATE(" ",this.nAttachCount-i+1))
		ENDIF
	ENDPROC

	PROCEDURE checkemailaddress
		LOCAL l_lHasEMail, l_lExitOnFinish
		l_lExitOnFinish = .T.
		
		l_lHasEMail = DLocate(this.cCurAdrEmail, "ec_mark AND NOT EMPTY(ec_email)")
		IF NOT l_lHasEMail AND RECCOUNT(this.cCurAdrEmail)>0
			* User can select some e-mail address
			this.OnSelectAddress(l_lExitOnFinish)
		ENDIF
		
		l_lHasEMail = DLocate(this.cCurAdrEmail, "ec_mark AND NOT EMPTY(ec_email)")
		this.cmdSend.Enabled = l_lHasEMail
		IF l_lHasEMail
			IF NOT this.lEmailFromReportPreview AND g_oWinEvents.EventBoundOrNot(LETTERS)
				this.cEMailSubject = this.GetSubject()
				this.txtSubject.Refresh()
			ENDIF
		ELSE
			WAIT WINDOW GetLangText("DOC","TA_NOEMAIL") NOWAIT
		ENDIF
		
		RETURN .T.
	ENDPROC

	PROCEDURE createattachmcursor
		LPARAMETERS lp_aDocumentsToSend
		EXTERNAL ARRAY lp_aDocumentsToSend
		LOCAL l_i, l_cDocumentPathName, l_lRetVal
		l_lRetVal = .F.
		
		FOR l_i = 1 TO ALEN(lp_aDocumentsToSend,1)
			l_cDocumentPathName = lp_aDocumentsToSend(l_i)
			IF FILE(l_cDocumentPathName)
				IF NOT l_lRetVal
					SELECT *, .F. AS ea_mark FROM eattachm WHERE .F. INTO CURSOR curAttachments READWRITE
					l_lRetVal = .T.
				ENDIF
				DO AddAttachment IN procemail WITH l_cDocumentPathName
			ENDIF
		ENDFOR
		RETURN l_lRetVal
	ENDPROC

	PROCEDURE getheader
		LPARAMETERS lp_cTitle, lp_cFname, lp_cLname, lp_cSalute, lp_cLang
		RETURN procemail("PEGetHeader", g_oWinEvents.GetProperty(LETTERS,6), lp_cTitle, lp_cFname, lp_cLname, lp_cSalute, lp_cLang)
	ENDPROC

	PROCEDURE getquotetext
		RETURN ALLTRIM(emprop.ep_quote)
	ENDPROC

	PROCEDURE getresign
		RETURN ALLTRIM(emprop.ep_resign)
	ENDPROC

	PROCEDURE getsignature
		RETURN procemail("PEgetsignature")
	ENDPROC

	PROCEDURE getsubject
		LOCAL l_cRetVal
		l_cRetVal = g_oWinEvents.GetProperty(LETTERS,5)
		RETURN IIF(TYPE("l_cRetVal") = "L" AND NOT l_cRetVal, "", l_cRetVal)
	ENDPROC

	PROCEDURE Init
		LPARAMETERS lp_cMode, lp_nAddrId, lp_oRef, lp_nEIId, lp_nESId, lp_aDocumentsToSend
		EXTERNAL ARRAY lp_aDocumentsToSend
		LOCAL l_lCurAttachmentsCreated, l_cHeader, l_cQuoteText, l_cResAdrCur, l_cAdrCur, l_nRecno, l_nApId
		LOCAL ARRAY l_aFields(1)
		
		l_lCurAttachmentsCreated = .F.
		
		DODEFAULT()
		
		this.Caption = GetLangText("EMSEND","TXT_CAPTION")
		this.lblSubject.Caption = GetLangText("EMSEND","TXT_SUBJECT")
		this.lblRecipt.Caption = GetLangText("EMSEND","TXT_TO")
		this.cmdTo.ToolTipText = GetLangText("EMSEND","TT_TO")
		this.cmdSend.ToolTipText = GetLangText("EMSEND","TT_SEND")
		this.cmdClose.ToolTipText = GetLangText("BILL","TT_CLOSE")
		this.cmdAttachment.ToolTipText = GetLangText("EMBROWS","TT_VIEW_ATTACH")
		
		IF PCOUNT() < 3
			this.oCallingForm = .NULL.
		ELSE
			this.oCallingForm = lp_oRef
		ENDIF
		
		IF TYPE("this.oCallingForm.Name") = "C" AND LOWER(this.oCallingForm.Name) = "cusemailoptionsdesk"
			this.lEmailFromReportPreview = .T.
		ENDIF
		
		IF NOT EMPTY(lp_nAddrId)
			this.nAddrId = lp_nAddrId
		ENDIF
		
		DO CASE
			CASE PCOUNT() = 4
				this.nMessageID = lp_nEIId
			CASE PCOUNT() = 5
				this.nMessageID = lp_nESId
			CASE PCOUNT() = 6 AND TYPE("lp_aDocumentsToSend(1)") = "C"
				this.nMessageID = 0
				l_lCurAttachmentsCreated = this.CreateAttachmCursor(@lp_aDocumentsToSend)
			OTHERWISE && case PCOUNT() < 4
				this.nMessageID = 0
		ENDCASE
		
		this.cEMailAddress = ""
		this.cEMailSubject = ""
		this.cEMailText = ""
		this.cEMailDisplayName = ""
		this.cMode = lp_cMode
		
		this.txtSubject.ControlSource = [thisform.cEMailSubject]
		this.edtMsgBody.ControlSource = [thisform.cEMailText]
		
		this.cCurAdrEmail = SYS(2015)
		= AFIELDS(l_aFields,"esentrcp")
		CREATE CURSOR (this.cCurAdrEmail) FROM ARRAY l_aFields
		ALTER TABLE (this.cCurAdrEmail) ADD ec_mark l
		
		this.lstRecipt.RowSourceType = 3
		this.lstRecipt.RowSource = "SELECT ec_email, ec_disname FROM " + this.cCurAdrEmail + ;
				" WHERE ec_mark = .T. INTO CURSOR cur_recipts"
		this.cmdAttachment.Enabled = .T.
		DO CASE
			CASE lp_cMode = "NEW"
				IF NOT EMPTY(lp_nAddrId) AND SEEK(lp_nAddrId,"address","tag1")
					IF NOT EMPTY(address.ad_email)
						this.AddNewRecipt(address.ad_addrid, 0, address.ad_email, address.ad_lname, address.ad_fname, ;
								address.ad_company, .T.)
					ENDIF
					this.cCurapartner = SYS(2015)
					SELECT * FROM apartner ;
							WHERE ap_addrid = lp_nAddrId AND NOT EMPTY(ap_email) ;
							INTO CURSOR (this.cCurapartner)
					SCAN
						this.AddNewRecipt(address.ad_addrid, ap_apid, ap_email, ap_lname, ap_fname, ;
								address.ad_company, .F.)
					ENDSCAN
					IF NOT EMPTY(lp_nESId)
						* Add guest e-mail (from reservat.scx window 1)
						l_cResAdrCur = sqlcursor("SELECT rs_addrid, rs_compid, rs_apid FROM reservat WHERE rs_reserid = " + sqlcnv(lp_nESId,.T.))
						IF NOT EMPTY(l_cResAdrCur) AND USED(l_cResAdrCur)
							IF rs_addrid = rs_compid AND NOT EMPTY(rs_apid)
								l_nApId = rs_apid
							ENDIF
							l_cAdrCur = ;
								sqlcursor("SELECT ad_addrid, ad_email, ad_lname, ad_fname, ad_company FROM address WHERE ad_addrid = " + ;
										sqlcnv(&l_cResAdrCur..rs_addrid,.T.))
							IF NOT EMPTY(l_cAdrCur) AND USED(l_cAdrCur) AND NOT EMPTY(&l_cAdrCur..ad_email)
								IF NOT dlocate(this.cCurAdrEMail,"ec_addrid = " + sqlcnv(&l_cAdrCur..ad_addrid))
									this.AddNewRecipt(&l_cAdrCur..ad_addrid, 0, &l_cAdrCur..ad_email, &l_cAdrCur..ad_lname, ad_fname, ;
											&l_cAdrCur..ad_company, .F.)
									ENDIF
							ENDIF
						ENDIF
						dclose(l_cResAdrCur)
						dclose(l_cAdrCur)
					ENDIF
					this.CheckEmailAddress()
					this.SetSelectedEMail()
				ENDIF
				IF this.lEmailFromReportPreview
					this.cEMailSubject = this.oCallingForm.cSubject
					this.cemailtext = this.oCallingForm.cBody
					IF NOT EMPTY(this.oCallingForm.cto)
						SELECT (this.cCurAdrEMail)
						LOCATE FOR UPPER(ALLTRIM(ec_email)) == UPPER(ALLTRIM(this.oCallingForm.cto))
						IF FOUND()
							l_nRecno = RECNO()
							REPLACE ec_mark WITH .F. ALL
							GO l_nRecno
							REPLACE ec_mark WITH .T.
						ENDIF
					ENDIF
				ELSE
					IF NOT EMPTY(l_nApId)
						SELECT (this.cCurAdrEMail)
						LOCATE FOR ec_apid = l_nApId AND NOT EMPTY(ec_email)
						IF FOUND()
							l_nRecno = RECNO()
							REPLACE ec_mark WITH .F. ALL
							GO l_nRecno
							REPLACE ec_mark WITH .T.
						ENDIF
					ENDIF
				ENDIF
				IF l_lCurAttachmentsCreated
					l_nAttNumber = 0
					SELECT "curAttachments"
					SCAN
						this.nAttachCount = this.nAttachCount + 1
					ENDSCAN
					this.lblAttachmentCount.Caption = STRTRAN(GetLangText("EMBROWS","TXT_ATTACH_COUNT"), ;
														"%s",ALLTRIM(STR(this.nAttachCount)))
					SELECT apartner
				ELSE
					this.lblAttachmentCount.Caption = STRTRAN(GetLangText("EMBROWS","TXT_ATTACH_COUNT"),"%s","0")
				ENDIF
		
				this.addemptyemails()
				this.lstRecipt.Requery()
				this.txtSubject.SetFocus()
			CASE lp_cMode = "EDITRECEIVED"
				this.Caption = GetLangText("DOC","TXT_EMAIL")
				IF SEEK(lp_nEIId,"einbox","tag1")
					INSERT INTO (this.cCurAdrEmail) (ec_email, ec_disname, ec_mark) ;
							VALUES (einbox.ei_sender, einbox.ei_disname, .T.)
					this.cmdTo.Enabled = .F.
					this.cmdSend.Enabled = .F.
					IF NOT EMPTY(einbox.ei_attachm)
						this.cmdAttachment.Enabled = .T.
					ELSE
						this.cmdAttachment.Enabled = .F.
					ENDIF
					this.lblAttachmentCount.Caption = STRTRAN(GetLangText("EMBROWS","TXT_ATTACH_COUNT"), ;
												"%s",ALLTRIM(STR(einbox.ei_attachm)))
					this.txtSubject.Enabled = .F.
					this.edtMsgBody.ReadOnly = .T.
					this.cEMailSubject = einbox.ei_subject
					this.cEMailText = einbox.ei_body
					this.lstRecipt.Requery()
					this.lstRecipt.SetFocus()
				ELSE
					this.cEMailAddress = GetLangText("AR","TA_NODATAFOUND")
				ENDIF
			CASE lp_cMode = "EDITSENT"
				this.Caption = GetLangText("DOC","TXT_EMAIL")
				IF SEEK(lp_nESId,"esent","tag1")
					SELECT * FROM esentrcp WHERE ec_esid = lp_nESId INTO CURSOR curTemp
					SCAN
						INSERT INTO (this.cCurAdrEmail) (ec_email, ec_disname, ec_mark) ;
								VALUES (curTemp.ec_email, curTemp.ec_disname, .T.)
					ENDSCAN
					USE IN curTemp
					this.cmdTo.Enabled = .F.
					this.cmdSend.Enabled = .F.
					IF NOT EMPTY(esent.es_attachm)
						this.cmdAttachment.Enabled = .T.
					ELSE
						this.cmdAttachment.Enabled = .F.
					ENDIF
					this.lblAttachmentCount.Caption = STRTRAN(GetLangText("EMBROWS","TXT_ATTACH_COUNT"), ;
												"%s",ALLTRIM(STR(esent.es_attachm)))
					this.txtSubject.Enabled = .F.
					this.edtMsgBody.ReadOnly = .T.	
					this.cEMailSubject = esent.es_subject
					this.cEMailText = esent.es_body
					this.lstRecipt.Requery()
					this.lstRecipt.SetFocus()
				ELSE
					this.cEMailAddress = GetLangText("AR","TA_NODATAFOUND")
				ENDIF
			CASE lp_cMode = "REPLY"
				IF NOT EMPTY(lp_nAddrId) AND SEEK(lp_nAddrId,"address","tag1") AND SEEK(lp_nEIId,"einbox","tag1")
					l_lSelectedEMail = ALLTRIM(UPPER(address.ad_email)) == ALLTRIM(UPPER(einbox.ei_sender))
					this.AddNewRecipt(address.ad_addrid, 0, address.ad_email, address.ad_lname, address.ad_fname, ;
							address.ad_company, l_lSelectedEMail)
					SELECT apartner
					SCAN FOR ap_addrid = lp_nAddrId AND NOT EMPTY(ap_email)
						l_lSelectedEMail = ALLTRIM(UPPER(ap_email)) == ALLTRIM(UPPER(einbox.ei_sender))
						this.AddNewRecipt(address.ad_addrid, ap_apid, ap_email, ap_lname, ap_fname, ;
								address.ad_company, l_lSelectedEMail)
					ENDSCAN
					this.CheckEmailAddress()
					this.cEMailSubject = this.GetReSign() + einbox.ei_subject
					l_cQuoteText = this.GetQuoteText()
					this.cemailtext = l_cQuoteText + IIF(EMPTY(l_cQuoteText), "", CHR(10)) + IIF(emprop.ep_sgbfrpl, this.GetSignature() + CHR(10) + einbox.ei_body, einbox.ei_body + CHR(10) + this.GetSignature())
					this.lblAttachmentCount.Caption = STRTRAN(GetLangText("EMBROWS","TXT_ATTACH_COUNT"),"%s","0")
					this.addemptyemails()
				ENDIF
				this.lstRecipt.Requery()
				this.txtSubject.SetFocus()
			OTHERWISE
				RETURN .F.
		ENDCASE
		
		RETURN .T.
	ENDPROC

	PROCEDURE KeyPress
		LPARAMETERS nKeyCode, nShiftAltCtrl
		DO CASE
			CASE nKeyCode = 27 AND nShiftAltCtrl = 0
				NODEFAULT
				this.OnCancel()
			CASE nKeyCode = 19 AND nShiftAltCtrl = 2
				NODEFAULT
				this.OnSendCmd()
			CASE nKeyCode = 5 AND nShiftAltCtrl = 2
				NODEFAULT
				this.OnSelectAddress()
			CASE nKeyCode = 23 AND nShiftAltCtrl = 2	&& CTRL + W
				NODEFAULT
				IF this.cmdAttachment.Enabled
					this.OnAttachment()
				ENDIF
		ENDCASE
	ENDPROC

	PROCEDURE Load
		DODEFAULT()
		= openfile(.F.,"address")
		= openfile(.F.,"apartner")
		= openfile(.F.,"document")
		= openfile(.F.,"param")
		= openfile(.F.,"picklist")
		= openfile(.F.,"id")
		= openfile(.F.,"esent")
		= openfile(.F.,"esentrcp")
		= openfile(.F.,"einbox")
		= openfile(.F.,"emprop")
		= openfile(.F.,"eattachm")
		
		RETURN .T.
	ENDPROC

	PROCEDURE onattachment
		LOCAL l_cMode, l_nOldArea, l_lSendMsg
		l_nAttNumber = 0
		l_nOldArea = SELECT()
		DO CASE
			CASE INLIST(this.cMode,"REPLY","NEW")
				l_cMode = "NEW"
				l_lSendMsg = .F.
				DO FORM "forms\viewattachments" WITH this.nMessageID, l_cMode, l_lSendMsg
				SELECT("curAttachments")
				this.nAttachCount = 0
				SCAN
					this.nAttachCount = this.nAttachCount + 1
				ENDSCAN
				this.lblAttachmentCount.Caption = STRTRAN(GetLangText("EMBROWS","TXT_ATTACH_COUNT"), ;
													"%s",ALLTRIM(STR(this.nAttachCount)))
			CASE this.cMode == "EDITSENT"
				l_cMode = "VIEW"
				l_lSendMsg = .T.
				DO FORM "forms\viewattachments" WITH this.nMessageID, l_cMode, l_lSendMsg
				this.lblAttachmentCount.Caption = STRTRAN(GetLangText("EMBROWS","TXT_ATTACH_COUNT"), ;
													"%s",ALLTRIM(STR(esent.es_attachm)))
		*	CASE this.cMode == "EDITRECEIVED"
			OTHERWISE
				l_cMode = "VIEW"
				l_lSendMsg = .F.
				DO FORM "forms\viewattachments" WITH this.nMessageID, l_cMode, l_lSendMsg
				this.lblAttachmentCount.Caption = STRTRAN(GetLangText("EMBROWS","TXT_ATTACH_COUNT"), ;
													"%s",ALLTRIM(STR(einbox.ei_attachm)))
		ENDCASE
		SELECT (l_nOldArea)
	ENDPROC

	PROCEDURE oncancel
		USE IN (this.cCurAdrEMail)
		IF g_oWinEvents.EventBoundOrNot(LETTERS) AND g_oWinEvents.UnbindWhenFinished(LETTERS)
			g_oWinEvents.ReserAllProperty(LETTERS)
			g_oWinEvents.UnBindEvent(_VFP.hWnd, WM_ACTIVATE)
		ENDIF
		this.Release()
	ENDPROC

	PROCEDURE onselectaddress
		LPARAMETERS lp_lExitOnFinish
		LOCAL l_nResult, l_cCursor
		LOCAL ARRAY l_aDefs(3, 6)
		
		IF NOT this.cmdTo.Enabled
			RETURN .T.
		ENDIF
		
		l_cCursor = SYS(2015)
		SELECT * FROM (this.cCurAdrEMail) INTO CURSOR (l_cCursor) READWRITE
		
		l_aDefs(1,1) = "ec_email"
		l_aDefs(1,2) = 250
		l_aDefs(1,3) = GetLangText("DOC","TXT_EMAIL")
		l_aDefs(1,4) = "TXT"
		l_aDefs(1,6) = .F.
		l_aDefs(2,1) = "ec_disname"
		l_aDefs(2,2) = 150
		l_aDefs(2,3) = GetLangText("MESSAGE","TXT_NAME")
		l_aDefs(2,4) = "TXT"
		l_aDefs(2,6) = .T.
		l_aDefs(3,1) = "ec_mark"
		l_aDefs(3,2) = 50
		l_aDefs(3,3) = GetLangText("COMMON","TXT_CHOOSE")
		l_aDefs(3,4) = "CHK"
		l_aDefs(3,6) = .F.
		SELECT 0
		DO FORM forms\brwmulsel WITH l_cCursor, l_aDefs, "",,,GetLangText("EMSEND","TXT_CC_TOOLTIP") TO l_nResult
		IF NOT EMPTY(l_nResult)
			GO TOP IN this.cCurAdrEMail
			SELECT (l_cCursor)
			SCAN ALL
				IF EMPTY(ec_email)
					REPLACE ec_mark WITH .F. ;
							IN (this.cCurAdrEMail)
				ELSE
					REPLACE ec_mark WITH &l_cCursor..ec_mark, ;
							ec_email WITH &l_cCursor..ec_email ;
							IN (this.cCurAdrEMail)
				ENDIF
				SKIP 1 IN (this.cCurAdrEMail)
			ENDSCAN
			this.lstRecipt.Requery()
			IF NOT lp_lExitOnFinish
				this.CheckEmailAddress()
				this.SetSelectedEMail()
			ENDIF
		ENDIF
		
		RETURN .T.
	ENDPROC

	PROCEDURE onsendcmd
		LOCAL l_oEmail, l_oData, l_nArea, l_nAdRecNo
		
		IF NOT this.cmdSend.Enabled
			RETURN .T.
		ENDIF
		
		l_nArea = SELECT()
		SELECT (this.cCurAdrEMail)
		GO TOP
		SCATTER MEMO NAME l_oData
		l_nAdRecNo = RECNO("address")
		IF NOT EMPTY(l_oData.ec_email) AND DLocate("address", "ad_addrid = " + SqlCnv(l_oData.ec_addrid)) AND ;
				EMPTY(address.ad_email) AND YesNo(GetLangText("ADDRESS","TXT_SAVE_EMAIL"))
			REPLACE ad_email WITH l_oData.ec_email IN address
		ENDIF
		GO l_nAdRecNo IN address
		SELECT (l_nArea)
		
		l_oEmail = .NULL.
		l_oEmail = NEWOBJECT("emailclient","cit_email")
		
		IF ISNULL(l_oEmail)
			RETURN .F.
		ENDIF
		
		this.CheckBody()
		
		IF l_oEmail.SendMsg(this.cCurAdrEMail, TRIM(this.cEmailSubject), this.cEmailText)
			this.lSuccess = .T.
			l_oEmail = .NULL.
			this.OnCancel()
		ELSE
			= alert(GetLangText("ADDRESS","T_MAILNOTSENT"))
		ENDIF
		
		RETURN .T.
	ENDPROC

	PROCEDURE QueryUnload
		NODEFAULT
		this.OnCancel()
	ENDPROC

	PROCEDURE setselectedemail
		*
		* Set header in E-Mail to first selected address, cann also bw apartner!
		*
		
		LOCAL l_nSelect, l_cTitle, l_cFname, l_cLname, l_cSalute, l_cLang, l_nCharactersTyped, l_lReplaceEMailText, l_cHeader, l_cEmailTextNew
		
		l_nSelect = SELECT()
		
		l_nCharactersTyped = 10
		
		* Set as default selected address
		
		STORE "" TO l_cTitle, l_cFname, l_cLname, l_cSalute, l_cLang
		
		sqlcursor("SELECT ad_title, ad_fname, ad_lname, ad_salute, ad_lang FROM address WHERE ad_addrid = " + sqlcnv(this.nAddrId,.T.), "curaddr5")
		
		IF RECCOUNT() > 0
			l_cTitle = ALLTRIM(ad_title)
			l_cFname = ALLTRIM(ad_fname)
			l_cLname = ALLTRIM(ad_lname)
			l_cSalute = ALLTRIM(ad_salute)
			l_cLang = ALLTRIM(ad_lang)
		ENDIF
		
		SELECT (this.cCurAdrEmail)
		LOCATE FOR ec_mark AND NOT EMPTY(ec_addrid) && Ignore manualy added E-Mails
		IF FOUND()
		
			l_lReplaceEMailText = .T.
		
			* We found selected E-Mail
		
			IF EMPTY(ec_apid)
		
				* Address is selected
		
				sqlcursor("SELECT ad_title, ad_fname, ad_lname, ad_salute, ad_lang FROM address WHERE ad_addrid = " + sqlcnv(ec_addrid,.T.), "curaddr5")
				IF RECCOUNT()>0
					l_cTitle = ALLTRIM(ad_title)
					l_cFname = ALLTRIM(ad_fname)
					l_cLname = ALLTRIM(ad_lname)
					l_cSalute = ALLTRIM(ad_salute)
					l_cLang = ALLTRIM(ad_lang)
				ENDIF
		
			ELSE
		
				* Apartner is selected
		
				sqlcursor("SELECT ap_title, ap_fname, ap_lname, ap_salute, ap_lang FROM apartner WHERE ap_apid = " + sqlcnv(ec_apid,.T.), "curap5")
		
				IF RECCOUNT()>0
					l_cTitle = ALLTRIM(ap_title)
					l_cFname = ALLTRIM(ap_fname)
					l_cLname = ALLTRIM(ap_lname)
					l_cSalute = ALLTRIM(ap_salute)
					l_cLang = ALLTRIM(ap_lang)
				ENDIF
		
			ENDIF
		ENDIF
		
		IF NOT l_lReplaceEMailText AND EMPTY(this.cemailtext)
			* First time force set header
			l_lReplaceEMailText = .T.
		ENDIF
		
		l_cHeader = this.GetHeader(l_cTitle, l_cFname, l_cLname, l_cSalute, l_cLang)
		l_cEmailTextNew = l_cHeader + IIF(EMPTY(l_cHeader), "", CHR(10)) + this.GetSignature()
		
		IF l_lReplaceEMailText AND LEN(this.cemailtext) - LEN(l_cEmailTextNew) > l_nCharactersTyped
			IF NOT yesno(GetLangText("RESERVAT","TXT_OVERWRITE_CHANGES"))
				l_lReplaceEMailText = .F.
			ENDIF
		ENDIF
		
		IF l_lReplaceEMailText
			this.cemailtext = l_cEmailTextNew
			this.edtMsgBody.Refresh()
		ENDIF
		
		dclose("curaddr5")
		dclose("curap5")
		
		SELECT (l_nSelect)
		
		RETURN .T.
	ENDPROC

	PROCEDURE Unload
		IF NOT ISNULL(thisform.oCallingForm) AND VARTYPE(thisform.oCallingForm) = "O" AND ;
				UPPER(thisform.oCallingForm.Name) = "ADDRESSMASK"
			thisform.oCallingForm.RefreshDocPage()
		ENDIF
		IF USED("curAttachments")
			USE IN "curAttachments"
		ENDIF
		RETURN this.lSuccess
	ENDPROC

	PROCEDURE cmdAttachment.Click
		thisform.onAttachment()
	ENDPROC

	PROCEDURE cmdClose.Click
		thisform.OnCancel()
	ENDPROC

	PROCEDURE cmdSend.Click
		thisform.OnSendCmd()
	ENDPROC

	PROCEDURE cmdTo.Click
		thisform.OnSelectAddress()
	ENDPROC

	PROCEDURE edtMsgBody.KeyPress
		LPARAMETERS nKeyCode, nShiftAltCtrl
		IF nKeyCode = 93 AND nShiftAltCtrl = 1	&&popup button
			this.RightClick()
		ENDIF
		DODEFAULT(nKeyCode, nShiftAltCtrl)
	ENDPROC

	PROCEDURE edtMsgBody.RightClick
		IF NOT EMPTY(thisform.ccurapartner)
			LOCAL l_nCol, l_nRow, l_cText, l_nSelAddr, l_nSelAp
			STORE 0 TO l_nSelAddr, l_nSelAp
		
			DEFINE POPUP Address SHORTCUT RELATIVE
			DEFINE BAR 1 OF Address PROMPT TRIM(address.ad_title) + " " + ;
					TRIM(address.ad_fname) + " " + TRIM(address.ad_lname)
			ON SELECTION BAR 1 OF Address l_nSelAddr = 1
		
			DEFINE POPUP Apartner SHORTCUT RELATIVE IN SCREEN
			SELECT(thisform.ccurapartner)
			SCAN
				l_cText = TRIM(ap_title) + " " + TRIM(ap_fname) + " " + TRIM(ap_lname)
				IF NOT EMPTY(l_cText)
					DEFINE BAR RECNO(thisform.ccurapartner) OF Apartner PROMPT l_cText
					ON SELECTION BAR RECNO(thisform.ccurapartner) OF Apartner ;
							l_nSelAp = BAR()
				ENDIF
			ENDSCAN
		
			DEFINE POPUP PopupMenu SHORTCUT RELATIVE IN SCREEN
			DEFINE BAR 1 OF PopupMenu PROMPT GetLangText("ADDRESS","TXT_ADDRESS")
			DEFINE BAR 2 OF PopupMenu PROMPT STRTRAN(GetLangText("ADDRESS","PT_APARTNERNAME"),"\<")
			ON BAR 1 OF PopupMenu ACTIVATE POPUP Address
			ON BAR 2 OF PopupMenu ACTIVATE POPUP Apartner
		
			l_nCol = MCOL(_screen.Name,3) * SCOLS() / _screen.Width
			l_nRow = MROW(_screen.Name,3) * SROWS() / _screen.Height
			ACTIVATE POPUP PopupMenu AT l_nRow, l_nCol
			DO CASE
				CASE NOT EMPTY(l_nSelAddr)
					l_cText = thisform.GetHeader(address.ad_title,address.ad_fname,address.ad_lname,address.ad_salute,address.ad_lang)
				CASE NOT EMPTY(l_nSelAp)
					GO l_nSelAp IN (thisform.ccurapartner)
					l_cText = thisform.GetHeader(ap_title,ap_fname,ap_lname,ap_salute,ap_lang)
				OTHERWISE
					l_cText = ""
			ENDCASE
			IF NOT EMPTY(l_cText)
				this.SelText = l_cText
			ENDIF
		ENDIF
	ENDPROC

ENDDEFINE
