*--------------------------------------------------------------------------------------------------------------------------------------------------------
* (ES) AUTOGENERADO - ¡¡ATENCIÓN!! - ¡¡NO PENSADO PARA EJECUTAR!! USAR SOLAMENTE PARA INTEGRAR CAMBIOS Y ALMACENAR CON HERRAMIENTAS SCM!!
* (EN) AUTOGENERATED - ATTENTION!! - NOT INTENDED FOR EXECUTION!! USE ONLY FOR MERGING CHANGES AND STORING WITH SCM TOOLS!!
*--------------------------------------------------------------------------------------------------------------------------------------------------------
*< FOXBIN2PRG: Version="1.19" SourceFile="argusedittableres.scx" /> (Solo para binarios VFP 9 / Only for VFP 9 binaries)
*
*
#INCLUDE "..\include\constdefines.h"

DEFINE CLASS dataenvironment AS dataenvironment 
 	*< CLASSDATA: Baseclass="dataenvironment" Timestamp="" Scale="" Uniqueid="" ClassIcon="1" />

	DataSource = .NULL.
	Height = 200
	Left = 1
	Name = "Dataenvironment"
	Top = 220
	Width = 520

ENDDEFINE

DEFINE CLASS frmedittableres AS tform OF "..\libs\main.vcx" 
 	*< CLASSDATA: Baseclass="form" Timestamp="" Scale="" Uniqueid="" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="lblAddrId" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtAddrId" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblGuestGroup" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cboGuestGroup" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblLastName" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtLastName" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblFirstName" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtFirstName" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblTitle" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cboTitle" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblPhone" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtPhone" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="shpGroupData" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblGroupData" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblLocation" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cboLocation" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblTableG" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtTableG" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblPersonsG" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtAdultsG" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtChildsG" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblNoteG" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="edtNoteG" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblTable" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtTable" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblPersons" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtAdults" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtChilds" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chkAssigned" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblDate" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="dtxtDate" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblDashFromToDate" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="dtxtDateTo" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblFromToTime" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtFromTime" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblDashFromToTime" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtToTime" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblReservation" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cboReservation" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblNote" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="edtNote" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblUser" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtUser" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblCreatedUser" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblModified" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtCreated" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtModified" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdOK" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdCancel" UniqueID="" Timestamp="" />

	*<DefinedPropArrayMethod>
		*m: getreservation
		*m: gettitle
		*m: savereservation
		*p: cfromtime
		*p: ctotime
		*p: ddateto
		*p: otableres
	*</DefinedPropArrayMethod>

	aligntopedges = .T.
	Caption = "frmEditTableres"
	cfromtime = 
	ControlBox = .T.
	ctotime = 
	ddateto = {}
	DoCreate = .T.
	Height = 608
	Icon = ..\bitmap\icons\coffee.ico
	Name = "frmEditTableres"
	ocallingobj = .NULL.
	otableres = .NULL.
	Width = 348
	WindowType = 1

	ADD OBJECT 'cboGuestGroup' AS tcombobox WITH ;
		BoundColumn = 2, ;
		BoundTo = .T., ;
		ColumnCount = 2, ;
		ColumnLines = .F., ;
		ColumnWidths = "100,0", ;
		DisabledForeColor = 0,0,0, ;
		Left = 132, ;
		Name = "cboGuestGroup", ;
		RowSource = "SELECT gg_name, gg_gsgrpid FROM AOGuestGrp WHERE NOT gg_deleted INTO CURSOR tblGuestGrp", ;
		RowSourceType = 3, ;
		Style = 2, ;
		Top = 36, ;
		ZOrderSet = 3
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="combobox" />

	ADD OBJECT 'cboLocation' AS tcombobox WITH ;
		BoundColumn = 3, ;
		BoundTo = .T., ;
		ColumnCount = 3, ;
		ColumnLines = .F., ;
		ColumnWidths = "120,60,0", ;
		Left = 132, ;
		Name = "cboLocation", ;
		RowSource = "SELECT lc_descr, CAST(tran(lc_begin)+'-'+tran(lc_end) AS char(9)) AS lc_area, lc_locnr FROM AOLocation WHERE NOT lc_deleted INTO CURSOR tblLocation", ;
		RowSourceType = 3, ;
		Style = 2, ;
		Top = 180, ;
		Width = 204, ;
		ZOrderSet = 15
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="combobox" />

	ADD OBJECT 'cboReservation' AS tcombobox WITH ;
		BoundColumn = 5, ;
		BoundTo = .T., ;
		ColumnCount = 5, ;
		ColumnLines = .F., ;
		ColumnWidths = "70,200,70,70,0", ;
		DisabledForeColor = 0,0,0, ;
		Left = 132, ;
		Name = "cboReservation", ;
		RowSourceType = 6, ;
		Style = 2, ;
		Top = 420, ;
		ZOrderSet = 38
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="combobox" />

	ADD OBJECT 'cboTitle' AS tcombobox WITH ;
		BoundTo = .T., ;
		ColumnCount = 2, ;
		ColumnLines = .F., ;
		ColumnWidths = "200,0", ;
		DisabledForeColor = 0,0,0, ;
		Left = 132, ;
		Name = "cboTitle", ;
		RowSourceType = 6, ;
		Style = 2, ;
		Top = 108, ;
		Width = 204, ;
		ZOrderSet = 9
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="combobox" />

	ADD OBJECT 'chkAssigned' AS tcheckbox WITH ;
		Alignment = 0, ;
		AutoSize = .T., ;
		Caption = "ASG", ;
		Left = 240, ;
		Name = "chkAssigned", ;
		nlineheight = 0, ;
		Top = 351, ;
		ZOrderSet = 28
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="checkbox" />

	ADD OBJECT 'cmdCancel' AS tcommandbutton WITH ;
		Cancel = .T., ;
		Caption = "cmdCancel", ;
		Left = 180, ;
		Name = "cmdCancel", ;
		Top = 572, ;
		ZOrderSet = 48
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'cmdOK' AS tcommandbutton WITH ;
		Caption = "cmdOK", ;
		Default = .T., ;
		Left = 84, ;
		Name = "cmdOK", ;
		Top = 572, ;
		ZOrderSet = 47
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'dtxtDate' AS tdatectrl WITH ;
		DisabledForeColor = 0,0,0, ;
		Format = "K", ;
		InputMask = "99:99:9999", ;
		Left = 132, ;
		Name = "dtxtDate", ;
		Top = 372, ;
		ZOrderSet = 30
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />

	ADD OBJECT 'dtxtDateTo' AS tdatectrl WITH ;
		DisabledForeColor = 0,0,0, ;
		Format = "K", ;
		InputMask = "99:99:9999", ;
		Left = 236, ;
		Name = "dtxtDateTo", ;
		nlineheight = 0, ;
		Top = 372, ;
		Visible = .F., ;
		ZOrderSet = 32
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />

	ADD OBJECT 'edtNote' AS teditbox WITH ;
		Left = 132, ;
		Name = "edtNote", ;
		Top = 444, ;
		Width = 204, ;
		ZOrderSet = 40
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="editbox" />

	ADD OBJECT 'edtNoteG' AS teditbox WITH ;
		Height = 69, ;
		Left = 132, ;
		Name = "edtNoteG", ;
		Top = 252, ;
		Width = 204, ;
		ZOrderSet = 22
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="editbox" />

	ADD OBJECT 'lblAddrId' AS tlabel WITH ;
		AutoSize = .T., ;
		Caption = "lblAddrId", ;
		Left = 12, ;
		Name = "lblAddrId", ;
		Top = 15, ;
		ZOrderSet = 0
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'lblCreatedUser' AS tlabel WITH ;
		Caption = "lblCreatedUser", ;
		ForeColor = 0,0,255, ;
		Height = 17, ;
		Left = 240, ;
		Name = "lblCreatedUser", ;
		Top = 519, ;
		Width = 96, ;
		ZOrderSet = 43
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'lblDashFromToDate' AS tlabel WITH ;
		AutoSize = .T., ;
		Caption = "-", ;
		Left = 233, ;
		Name = "lblDashFromToDate", ;
		Top = 375, ;
		Visible = .F., ;
		ZOrderSet = 31
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'lblDashFromToTime' AS tlabel WITH ;
		AutoSize = .T., ;
		Caption = "-", ;
		Left = 233, ;
		Name = "lblDashFromToTime", ;
		Top = 399, ;
		ZOrderSet = 35
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'lblDate' AS tlabel WITH ;
		AutoSize = .T., ;
		Caption = "lblDate", ;
		Left = 12, ;
		Name = "lblDate", ;
		Top = 375, ;
		ZOrderSet = 29
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'lblFirstName' AS tlabel WITH ;
		AutoSize = .T., ;
		Caption = "lblFirstName", ;
		Left = 12, ;
		Name = "lblFirstName", ;
		Top = 87, ;
		ZOrderSet = 6
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'lblFromToTime' AS tlabel WITH ;
		AutoSize = .T., ;
		Caption = "lblFromToTime", ;
		Left = 12, ;
		Name = "lblFromToTime", ;
		Top = 399, ;
		ZOrderSet = 33
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'lblGroupData' AS tlabel WITH ;
		Alignment = 2, ;
		Caption = "lblGroupData", ;
		FontBold = .T., ;
		FontItalic = .T., ;
		FontUnderline = .T., ;
		Height = 17, ;
		Left = 12, ;
		Name = "lblGroupData", ;
		Top = 159, ;
		Width = 324, ;
		ZOrderSet = 13
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'lblGuestGroup' AS tlabel WITH ;
		AutoSize = .T., ;
		Caption = "lblGuestGroup", ;
		Left = 12, ;
		Name = "lblGuestGroup", ;
		Top = 39, ;
		ZOrderSet = 2
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'lblLastName' AS tlabel WITH ;
		AutoSize = .T., ;
		Caption = "lblLastName", ;
		Left = 12, ;
		Name = "lblLastName", ;
		Top = 63, ;
		ZOrderSet = 4
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'lblLocation' AS tlabel WITH ;
		AutoSize = .T., ;
		Caption = "lblLocation", ;
		FontItalic = .T., ;
		Left = 12, ;
		Name = "lblLocation", ;
		Top = 183, ;
		ZOrderSet = 14
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'lblModified' AS tlabel WITH ;
		AutoSize = .T., ;
		Caption = "lblModified", ;
		Left = 12, ;
		Name = "lblModified", ;
		Top = 543, ;
		ZOrderSet = 44
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'lblNote' AS tlabel WITH ;
		AutoSize = .T., ;
		Caption = "lblNote", ;
		Left = 12, ;
		Name = "lblNote", ;
		Top = 448, ;
		ZOrderSet = 39
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'lblNoteG' AS tlabel WITH ;
		AutoSize = .T., ;
		Caption = "lblNoteG", ;
		FontItalic = .T., ;
		Left = 12, ;
		Name = "lblNoteG", ;
		Top = 256, ;
		ZOrderSet = 21
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'lblPersons' AS tlabel WITH ;
		AutoSize = .T., ;
		Caption = "lblPersons", ;
		Left = 12, ;
		Name = "lblPersons", ;
		Top = 351, ;
		ZOrderSet = 25
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'lblPersonsG' AS tlabel WITH ;
		AutoSize = .T., ;
		Caption = "lblPersonsG", ;
		FontItalic = .T., ;
		Left = 12, ;
		Name = "lblPersonsG", ;
		Top = 231, ;
		ZOrderSet = 18
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'lblPhone' AS tlabel WITH ;
		AutoSize = .T., ;
		Caption = "lblPhone", ;
		Left = 12, ;
		Name = "lblPhone", ;
		Top = 135, ;
		ZOrderSet = 10
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'lblReservation' AS tlabel WITH ;
		AutoSize = .T., ;
		Caption = "lblReservation", ;
		Left = 12, ;
		Name = "lblReservation", ;
		Top = 423, ;
		ZOrderSet = 37
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'lblTable' AS tlabel WITH ;
		AutoSize = .T., ;
		Caption = "lblTable", ;
		Left = 12, ;
		Name = "lblTable", ;
		Top = 327, ;
		ZOrderSet = 23
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'lblTableG' AS tlabel WITH ;
		AutoSize = .T., ;
		Caption = "lblTableG", ;
		FontItalic = .T., ;
		Left = 12, ;
		Name = "lblTableG", ;
		Top = 207, ;
		ZOrderSet = 16
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'lblTitle' AS tlabel WITH ;
		AutoSize = .T., ;
		Caption = "lblTitle", ;
		Left = 12, ;
		Name = "lblTitle", ;
		Top = 111, ;
		ZOrderSet = 8
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'lblUser' AS tlabel WITH ;
		AutoSize = .T., ;
		Caption = "lblUser", ;
		Left = 12, ;
		Name = "lblUser", ;
		Top = 519, ;
		ZOrderSet = 41
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'shpGroupData' AS sh WITH ;
		Height = 168, ;
		Left = 9, ;
		Name = "shpGroupData", ;
		Top = 156, ;
		Width = 332, ;
		ZOrderSet = 12
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="shape" />

	ADD OBJECT 'txtAddrId' AS ttext WITH ;
		DisabledForeColor = 0,0,0, ;
		Format = "K", ;
		InputMask = (REPLICATE([9], 8)), ;
		Left = 132, ;
		Name = "txtAddrId", ;
		Top = 12, ;
		ZOrderSet = 1
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtAdults' AS ttext WITH ;
		DisabledForeColor = 0,0,0, ;
		Format = "K", ;
		InputMask = "9999", ;
		Left = 132, ;
		Name = "txtAdults", ;
		Top = 348, ;
		Width = 50, ;
		ZOrderSet = 26
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtAdultsG' AS ttext WITH ;
		DisabledForeColor = 0,0,0, ;
		Format = "K", ;
		InputMask = "9999", ;
		Left = 132, ;
		Name = "txtAdultsG", ;
		Top = 228, ;
		Width = 50, ;
		ZOrderSet = 19
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtChilds' AS ttext WITH ;
		DisabledForeColor = 0,0,0, ;
		Format = "K", ;
		InputMask = "9999", ;
		Left = 183, ;
		Name = "txtChilds", ;
		nlineheight = 0, ;
		Top = 348, ;
		Width = 49, ;
		ZOrderSet = 27
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtChildsG' AS ttext WITH ;
		DisabledForeColor = 0,0,0, ;
		Format = "K", ;
		InputMask = "9999", ;
		Left = 183, ;
		Name = "txtChildsG", ;
		nlineheight = 0, ;
		Top = 228, ;
		Width = 49, ;
		ZOrderSet = 20
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtCreated' AS ttext WITH ;
		Height = 23, ;
		Left = 132, ;
		Name = "txtCreated", ;
		ReadOnly = .T., ;
		TabStop = .F., ;
		Top = 540, ;
		Width = 104, ;
		ZOrderSet = 45
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtFirstName' AS ttext WITH ;
		DisabledForeColor = 0,0,0, ;
		Format = "K", ;
		InputMask = (REPLICATE([X], 20)), ;
		Left = 132, ;
		Name = "txtFirstName", ;
		Top = 84, ;
		Width = 204, ;
		ZOrderSet = 7
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtFromTime' AS ttext WITH ;
		DisabledForeColor = 0,0,0, ;
		Format = "K", ;
		InputMask = "99:99", ;
		Left = 132, ;
		Name = "txtFromTime", ;
		Top = 396, ;
		ZOrderSet = 34
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtLastName' AS ttext WITH ;
		DisabledForeColor = 0,0,0, ;
		Format = "K", ;
		InputMask = (REPLICATE([X], 30)), ;
		Left = 132, ;
		Name = "txtLastName", ;
		Top = 60, ;
		Width = 204, ;
		ZOrderSet = 5
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtModified' AS ttext WITH ;
		Left = 235, ;
		Name = "txtModified", ;
		nlineheight = 0, ;
		ReadOnly = .T., ;
		TabStop = .F., ;
		Top = 540, ;
		Width = 104, ;
		ZOrderSet = 46
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtPhone' AS ttext WITH ;
		DisabledForeColor = 0,0,0, ;
		Format = "K", ;
		InputMask = (REPLICATE([X], 20)), ;
		Left = 132, ;
		Name = "txtPhone", ;
		Top = 132, ;
		Width = 204, ;
		ZOrderSet = 11
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtTable' AS ttext WITH ;
		Alignment = 0, ;
		DisabledForeColor = 0,0,0, ;
		Format = "K", ;
		InputMask = "9999", ;
		Left = 132, ;
		Name = "txtTable", ;
		Top = 324, ;
		Width = 204, ;
		ZOrderSet = 24
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtTableG' AS ttext WITH ;
		Alignment = 0, ;
		DisabledForeColor = 0,0,0, ;
		Format = "K", ;
		Left = 132, ;
		Name = "txtTableG", ;
		nlineheight = 2, ;
		Top = 204, ;
		Width = 204, ;
		ZOrderSet = 17
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtToTime' AS ttext WITH ;
		DisabledForeColor = 0,0,0, ;
		Format = "K", ;
		InputMask = "99:99", ;
		Left = 236, ;
		Name = "txtToTime", ;
		nlineheight = 0, ;
		Top = 396, ;
		ZOrderSet = 36
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtUser' AS ttext WITH ;
		Left = 132, ;
		Name = "txtUser", ;
		Top = 516, ;
		ZOrderSet = 42
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />
	
	PROCEDURE getreservation
		LOCAL l_cSqlQuery
		
		TEXT TO l_cSqlQuery TEXTMERGE NOSHOW PRETEXT 2+8
		SELECT CAST(NVL(rm_rmname,'') AS Char(10)) AS rm_rmname,
			CAST(ALLTRIM(EVL(rs_lname,NVL(ad_lname,rs_lname)))+', '+ALLTRIM(EVL(rs_fname,NVL(ad_fname,rs_fname))) AS Char(50)) AS rs_name,
			rs_arrdate, rs_depdate, rs_rsid,
			EVL(rs_lname,NVL(ad_lname,rs_lname)) AS rs_lname,
			EVL(rs_fname,NVL(ad_fname,rs_fname)) AS rs_fname,
			EVL(rs_title,NVL(ad_title,rs_title)) AS rs_title,
			rs_addrid FROM Reservat
			LEFT JOIN Room ON rm_roomnum = rs_roomnum
			LEFT JOIN Address ON ad_addrid = rs_addrid
			WHERE <<IIF(EMPTY(this.oTableres.tr_sysdate), [], [ DTOS(rs_arrdate)+rs_lname < ] + SqlCnv(DTOS(this.oTableres.tr_sysdate+1)) + [ AND DTOS(rs_depdate)+rs_roomnum >= ] + SqlCnv(DTOS(this.oTableres.tr_sysdate)) + [ AND])>>
				NOT INLIST(rs_status, 'CXL', 'NS', 'OUT')
			ORDER BY rs_lname, rs_fname
			INTO CURSOR tblReservation
		ENDTEXT
		this.cboReservation.RowSource = ""
		&l_cSqlQuery
		this.cboReservation.RowSource = "tblReservation"
	ENDPROC

	PROCEDURE gettitle
		LOCAL l_cSqlQuery, l_cLang
		
		this.cboTitle.RowSource = ""
		IF NOT EMPTY(this.oTableres.tr_aaddrid) AND ArgusOffice(,,, .T.) AND ArgusOffice("Use", "TitlCode",, .T.)
			l_cSqlQuery = [SELECT tc_title FROM AOTitlCode WHERE NOT tc_deleted]
			IF NOT EMPTY(this.oTableres.tr_title)
				l_cSqlQuery = l_cSqlQuery + [ UNION SELECT ]+SqlCnv(this.oTableres.tr_title)+[ FROM AOTitlCode]
			ENDIF
			l_cSqlQuery = l_cSqlQuery + [ INTO CURSOR tblTitle]
			&l_cSqlQuery
			ArgusOffice("Exit")
		ELSE
			l_cLang = DLookUp("Address", "ad_addrid = " + SqlCnv(this.oTableres.tr_addrid), "ad_lang")
			l_cSqlQuery = [SELECT ti_title FROM Title WHERE INLIST(]+SqlCnv(ALLTRIM(l_cLang))+[, '', ALLTRIM(ti_lang))]
			IF NOT EMPTY(this.oTableres.tr_title)
				l_cSqlQuery = l_cSqlQuery + [ UNION SELECT ]+SqlCnv(this.oTableres.tr_title)+[ FROM Title]
			ENDIF
			l_cSqlQuery = l_cSqlQuery + [ INTO CURSOR tblTitle]
			&l_cSqlQuery
		ENDIF
		this.cboTitle.RowSource = "tblTitle"
		this.cboTitle.Refresh()
	ENDPROC

	PROCEDURE Init
		LPARAMETERS lp_oCallingObj, lp_oTableres
		LOCAL l_oOldRes
		
		this.oCallingObj = lp_oCallingObj
		this.nMode = IIF(LOWER(this.oCallingObj.Name) = "frmtableresplan", this.oCallingObj.nMode, this.oCallingObj.MngCtrl.nMode)
		l_oOldRes = RecordCopyObj(lp_oTableres)
		this.oTableres = MakeStructure("nFromTrId, nToTrId, cFilter, oOldRes, lOK", lp_oTableres)
		this.oTableres.oOldRes = l_oOldRes
		
		this.cFromTime = LEFT(TTOC(this.oTableres.tr_from,2),5)
		this.cToTime = LEFT(TTOC(this.oTableres.tr_to,2),5)
		ProcTableReservation("PtrCopyReset", this.oTableres)
		DO CASE
			CASE EMPTY(this.oTableres.tr_trid) && New, Copy
				IF EMPTY(this.oTableRes.tg_tables)
					this.oTableRes.tg_tables = TRANSFORM(this.oTableRes.tr_tablenr)
				ENDIF
				this.oTableRes.tr_userid = g_userid
			CASE INLIST(this.oTableres.tr_status, TR_NS, TR_CXL)
				this.oTableres.lOK = (0 = ProcTableReservation("PtrReactivate", this.oTableres))
			OTHERWISE
		ENDCASE
		
		IF ArgusOffice("PARAM", "pa_foadr")
			this.txtAddrId.ControlSource = "thisform.oTableRes.tr_addrid"
			this.oTableres.tr_aaddrid = 0
		ELSE
			this.txtAddrId.ControlSource = "thisform.oTableRes.tr_aaddrid"
			this.oTableres.tr_addrid = 0
		ENDIF
		
		this.GetTitle()
		this.GetReservation()
		
		this.Caption = ChildTitle(GetLangText("ARGUS","TW_TABLERESER"))
		this.lblAddrId.Caption = GetLangText("ARGUS","TXT_ADDRID")+":"
		this.lblGuestGroup.Caption = GetLangText("ARGUS","TXT_GUEST_GROUP")+":"
		this.lblLastName.Caption = GetLangText("ARGUS","TXT_LAST_NAME")+":"
		this.lblFirstName.Caption = GetLangText("ARGUS","TXT_FIRST_NAME")+":"
		this.lblTitle.Caption = GetLangText("ARGUS","TXT_TITLE")+":"
		this.lblPhone.Caption = GetLangText("PHONE","TXT_PHONE")+":"
		this.lblGroupData.Caption = GetLangText("ARGUS","TXT_GROUPDATA")
		this.lblTableG.Caption = GetLangText("ARGUS","TH_TABLE")+":"
		this.lblPersonsG.Caption = GetLangText("ARGUS","TXT_PERSONS")+":"
		this.lblNoteG.Caption = GetLangText("RESERVAT","T_NOTE")+":"
		this.lblLocation.Caption = GetLangText("ARGUS","TH_LOCATION")+":"
		this.lblTable.Caption = GetLangText("ARGUS","TH_TABLE")+":"
		this.lblPersons.Caption = GetLangText("ARGUS","TXT_PERSONS")+":"
		this.lblDate.Caption = GetLangText("ARGUS","TH_DATE")+":"
		this.lblFromToTime.Caption = GetLangText("ARGUS","TXT_FROM_TO")+":"
		this.lblReservation.Caption = GetLangText("ARGUS","TH_ROOM")+":"
		this.lblNote.Caption = GetLangText("RESERVAT","T_NOTE")+":"
		this.lblUser.Caption = GetLangText("ACT", "T_USER")
		this.lblModified.Caption = GetLangText("RESERVAT","T_CREATED")+"/"+GetLangText("RESERVAT","T_CHANGED")
		this.cmdOK.Caption = GetLangText("COMMON", "TXT_OK")
		this.cmdCancel.Caption = GetLangText("COMMON", "TXT_CANCEL")
		
		this.txtAddrId.ControlSource = "thisform.oTableRes.tr_addrid"
		this.cboGuestGroup.ControlSource = "thisform.oTableRes.tr_gsgrpid"
		this.txtLastName.ControlSource = "thisform.oTableRes.tr_lname"
		this.txtFirstName.ControlSource = "thisform.oTableRes.tr_fname"
		this.cboTitle.ControlSource = "thisform.oTableRes.tr_title"
		this.txtPhone.ControlSource = "thisform.oTableRes.tr_phone"
		this.cboLocation.ControlSource = "thisform.oTableRes.tg_locnr"
		this.txtTableG.ControlSource = "thisform.oTableRes.tg_tables"
		this.txtAdultsG.ControlSource = "thisform.oTableRes.tg_adults"
		this.txtChildsG.ControlSource = "thisform.oTableRes.tg_childs"
		this.edtNoteG.ControlSource = "thisform.oTableRes.tg_note"
		this.txtAdults.ControlSource = "thisform.oTableRes.tr_persons"
		this.txtChilds.ControlSource = "thisform.oTableRes.tr_childs"
		this.dtxtDate.ControlSource = "thisform.oTableRes.tr_sysdate"
		this.dtxtDateTo.ControlSource = "thisform.dDateTo"
		this.txtFromTime.ControlSource = "thisform.cFromTime"
		this.txtToTime.ControlSource = "thisform.cToTime"
		this.chkAssigned.Enabled = INLIST(this.oTableRes.tr_status, TR_DEF, TR_ASG)
		this.chkAssigned.Value = INLIST(this.oTableRes.tr_status, TR_ASG, TR_IN, TR_OUT)
		this.cboReservation.ControlSource = "thisform.oTableRes.tr_rsid"
		this.edtNote.ControlSource = "thisform.oTableRes.tr_note"
		this.txtUser.ControlSource = "thisform.oTableRes.tr_usrname"
		this.lblCreatedUser.Caption = ProcTableReservation("PtrUser", this.oTableRes.tr_waitnr, this.oTableRes.tr_user, this.oTableRes.tr_userid)
		this.txtCreated.Value = IIF(EMPTY(this.oTableRes.tr_created), "", LEFT(TTOC(this.oTableRes.tr_created),16))
		this.txtModified.Value = IIF(EMPTY(this.oTableRes.tr_updated), "", LEFT(TTOC(this.oTableRes.tr_updated),16))
		
		DO CASE
			CASE this.nMode = 1
				this.cboReservation.Enabled = EMPTY(this.oTableres.tr_rsid)
			CASE this.nMode = 2 AND EMPTY(this.oTableres.tr_aaddrid)
				this.txtAddrId.Enabled = EMPTY(this.oTableres.tr_addrid)
			OTHERWISE
		ENDCASE
		
		IF EMPTY(this.oTableres.tr_trid) && New, Copy
			this.txtTable.ControlSource = "thisform.oTableRes.tg_tables"
			this.txtTable.InputMask = ""
			this.dtxtDateTo.Visible = .T.
			this.lblDashFromToDate.Visible = .T.
		ELSE
			this.txtTable.ControlSource = "thisform.oTableRes.tr_tablenr"
			this.txtTable.Enabled = NOT this.chkAssigned.Value
			IF EMPTY(this.oTableres.tr_tgid)
				this.cboLocation.Enabled = .F.
			ENDIF
		ENDIF
		IF EMPTY(this.oTableres.tr_trid) OR EMPTY(this.oTableres.tr_tgid)
			STORE .F. TO this.shpGroupData.Visible, ;
					this.lblGroupData.Visible, ;
					this.lblTableG.Visible, ;
					this.txtTableG.Visible, ;
					this.lblPersonsG.Visible, ;
					this.txtAdultsG.Visible, ;
					this.txtChildsG.Visible, ;
					this.lblNoteG.Visible, ;
					this.edtNoteG.Visible
			this.lblLocation.Top = this.lblLocation.Top - 24
			this.cboLocation.Top = this.cboLocation.Top - 24
			this.lblLocation.FontItalic = .F.
		ENDIF
		
		DODEFAULT()
		
		IF INLIST(this.oTableRes.tr_status, TR_OUT, TR_NS, TR_CXL)
			this.SetAll("Style", 0, "tComboBox")
			this.SetAll("ReadOnly", .T.)
			this.cmdOK.Enabled = .F.
		ENDIF
	ENDPROC

	PROCEDURE KeyPress
		LPARAMETERS nKeyCode, nShiftAltCtrl
		
		DO CASE
			CASE nKeyCode = 27	&& Esc
				this.OnClose()
				NODEFAULT
			OTHERWISE
		ENDCASE
	ENDPROC

	PROCEDURE Load
		DODEFAULT()
		IF ArgusOffice() AND ArgusOffice("Query", "GuestGrp,Location")
			ArgusOffice("Exit")
		ENDIF
	ENDPROC

	PROCEDURE onclose
		this.Release()
	ENDPROC

	PROCEDURE QueryUnload
		this.OnClose()
		NODEFAULT
	ENDPROC

	PROCEDURE savereservation
		LOCAL l_nErrorCode
		
		IF NOT EMPTY(this.oTableRes.tr_sysdate)
			this.oTableRes.tr_from = CTOT(DTOC(this.oTableRes.tr_sysdate)+" "+this.cFromTime+":00")
			this.oTableRes.tr_to = CTOT(DTOC(this.oTableRes.tr_sysdate)+" "+this.cToTime+":00")
		ENDIF
		IF INLIST(this.oTableRes.tr_status, TR_DEF, TR_ASG)
			this.oTableRes.tr_status = IIF(this.chkAssigned.Value, TR_ASG, TR_DEF)
		ENDIF
		
		l_nErrorCode = ProcTableReservation("SaveReservation", this.oTableRes, this.dDateTo)
		
		DO CASE
			CASE l_nErrorCode = 0
				this.oTableres.lOK = .T.
				this.Release()
			CASE INLIST(l_nErrorCode, 1, 2)
				IF this.txtTable.Enabled
					this.txtTable.SetFocus()
				ELSE
					this.cboLocation.SetFocus()
				ENDIF
			CASE l_nErrorCode = 3
				this.dtxtDate.SetFocus()
			CASE l_nErrorCode = 4
				this.txtFromTime.SetFocus()
			CASE l_nErrorCode = 5
				this.txtToTime.SetFocus()
			CASE l_nErrorCode = 6
				this.txtAdults.SetFocus()
			CASE l_nErrorCode = 7
				this.txtLastName.SetFocus()
			CASE l_nErrorCode = 9
				this.txtUser.SetFocus()
			OTHERWISE
		ENDCASE
	ENDPROC

	PROCEDURE Unload
		this.oCallingObj = .NULL.
		this.oTableres = .NULL.
		DClose("AOGuestGrp")
		DClose("AOLocation")
	ENDPROC

	PROCEDURE cboGuestGroup.Valid
		thisform.oTableRes.tr_gsgrpid = INT(this.Value)
	ENDPROC

	PROCEDURE cboLocation.InteractiveChange
		IF thisform.txtTableG.Visible
			thisform.txtTableG.Enabled = EMPTY(this.Value)
			thisform.txtTableG.Value = tblLocation.lc_area
		ELSE
			thisform.txtTable.Enabled = EMPTY(this.Value)
			thisform.txtTable.Value = tblLocation.lc_area
		ENDIF
	ENDPROC

	PROCEDURE cboLocation.ProgrammaticChange
		IF thisform.txtTableG.Visible
			thisform.txtTableG.Enabled = EMPTY(this.Value)
			thisform.txtTableG.Value = ""
		ELSE
			thisform.txtTable.Enabled = EMPTY(this.Value)
			thisform.txtTable.Value = ""
		ENDIF
	ENDPROC

	PROCEDURE cboLocation.Valid
		thisform.oTableRes.tg_locnr = INT(this.Value)
	ENDPROC

	PROCEDURE cboReservation.InteractiveChange
		thisform.txtAddrId.Value = EVL(tblReservation.rs_addrid, thisform.txtAddrId.Value)
		thisform.cboTitle.Value = EVL(tblReservation.rs_title, thisform.cboTitle.Value)
		thisform.txtLastName.Value = EVL(tblReservation.rs_lname, thisform.txtLastName.Value)
		thisform.txtFirstName.Value = EVL(tblReservation.rs_fname, thisform.txtFirstName.Value)
		thisform.GetTitle()
	ENDPROC

	PROCEDURE cboReservation.Valid
		thisform.oTableRes.tr_rsid = INT(this.Value)
	ENDPROC

	PROCEDURE chkAssigned.InteractiveChange
		IF NOT EMPTY(thisform.oTableres.tr_trid)
			thisform.txtTable.Enabled = NOT this.Value
		ENDIF
	ENDPROC

	PROCEDURE cmdCancel.Click
		thisform.OnClose()
	ENDPROC

	PROCEDURE cmdOK.Click
		thisform.SaveReservation()
	ENDPROC

	PROCEDURE dtxtDate.LostFocus
		thisform.GetReservation()
	ENDPROC

	PROCEDURE txtAddrId.LostFocus
		thisform.GetTitle()
	ENDPROC

	PROCEDURE txtTable.KeyPress
		LPARAMETERS nKeyCode, nShiftAltCtrl
		
		DO CASE
			CASE NOT EMPTY(this.InputMask)
			CASE BETWEEN(nKeyCode, 48, 57)	&& Digits 0 to 9
			CASE nKeyCode = 22				&& Insert
			CASE nKeyCode = 7				&& Del
			CASE nKeyCode = 27				&& Esc
			CASE nKeyCode = 13				&& Enter
			CASE nKeyCode = 127				&& Backspace
			CASE nKeyCode = 9				&& Tab
			CASE nKeyCode = 32				&& Spacebar
			CASE nKeyCode = 45				&& - sign
			CASE nKeyCode = 44				&& , comma
			CASE nKeyCode = 15				&& Backtab
			CASE nKeyCode = 4				&& Right arrow
			CASE nKeyCode = 19				&& Left arrow
			OTHERWISE						&& Ignore all other keys
				NODEFAULT
		ENDCASE
	ENDPROC

	PROCEDURE txtTableG.KeyPress
		LPARAMETERS nKeyCode, nShiftAltCtrl
		
		DO CASE
			CASE NOT EMPTY(this.InputMask)
			CASE BETWEEN(nKeyCode, 48, 57)	&& Digits 0 to 9
			CASE nKeyCode = 22				&& Insert
			CASE nKeyCode = 7				&& Del
			CASE nKeyCode = 27				&& Esc
			CASE nKeyCode = 13				&& Enter
			CASE nKeyCode = 127				&& Backspace
			CASE nKeyCode = 9				&& Tab
			CASE nKeyCode = 32				&& Spacebar
			CASE nKeyCode = 45				&& - sign
			CASE nKeyCode = 44				&& , comma
			CASE nKeyCode = 15				&& Backtab
			CASE nKeyCode = 4				&& Right arrow
			CASE nKeyCode = 19				&& Left arrow
			OTHERWISE						&& Ignore all other keys
				NODEFAULT
		ENDCASE
	ENDPROC

ENDDEFINE
