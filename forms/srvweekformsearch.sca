*--------------------------------------------------------------------------------------------------------------------------------------------------------
* (ES) AUTOGENERADO - ¡¡ATENCIÓN!! - ¡¡NO PENSADO PARA EJECUTAR!! USAR SOLAMENTE PARA INTEGRAR CAMBIOS Y ALMACENAR CON HERRAMIENTAS SCM!!
* (EN) AUTOGENERATED - ATTENTION!! - NOT INTENDED FOR EXECUTION!! USE ONLY FOR MERGING CHANGES AND STORING WITH SCM TOOLS!!
*--------------------------------------------------------------------------------------------------------------------------------------------------------
*< FOXBIN2PRG: Version="1.19" SourceFile="srvweekformsearch.scx" /> (Solo para binarios VFP 9 / Only for VFP 9 binaries)
*
*
#INCLUDE "..\include\constdefines.h"

DEFINE CLASS dataenvironment AS dataenvironment 
 	*< CLASSDATA: Baseclass="dataenvironment" Timestamp="" Scale="" Uniqueid="" ClassIcon="1" />

	DataSource = .NULL.
	Height = 200
	Left = 1
	Name = "Dataenvironment"
	Top = 220
	Width = 520

ENDDEFINE

DEFINE CLASS weekplansearchform AS tform OF "..\libs\main.vcx" 
 	*< CLASSDATA: Baseclass="form" Timestamp="" Scale="" Uniqueid="" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="lblDate" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="dtxtDate" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblRoomtype" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cboRoomtype" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblStatus" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cboStatus" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblRoomname" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cboRoomname" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblClientName" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtClientName" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblClientCompany" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtClientCompany" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblGroup" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cboGroup" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblNumOfDays" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtNumOfDays" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdOK" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdCancel" UniqueID="" Timestamp="" />

	*<DefinedPropArrayMethod>
		*p: result
		*p: searchtunnel
	*</DefinedPropArrayMethod>

	aligntopedges = .T.
	AutoCenter = .T.
	BorderStyle = 3
	Caption = "Weekplan search"
	ControlBox = .T.
	DoCreate = .T.
	Height = 254
	Icon = ..\bitmap\icons\binoculr.ico
	MaxButton = .F.
	MinButton = .F.
	Name = "WeekPlanSearchForm"
	Width = 348
	WindowType = 1

	ADD OBJECT 'cboGroup' AS tcombobox WITH ;
		InputMask = (REPLICATE("!",25)), ;
		Left = 132, ;
		Name = "cboGroup", ;
		RowSourceType = 2, ;
		Top = 156, ;
		Width = 204, ;
		ZOrderSet = 13
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="combobox" />

	ADD OBJECT 'cboRoomname' AS cboroomname WITH ;
		ColumnWidths = "100,70,150", ;
		corder = c_hotcode+rm_rmname, ;
		Left = 132, ;
		Name = "cboRoomname", ;
		RowSourceType = 6, ;
		Top = 84, ;
		Width = 96, ;
		ZOrderSet = 7
		*< END OBJECT: ClassLib="..\libs\cit_ctrl.vcx" BaseClass="combobox" />

	ADD OBJECT 'cboRoomtype' AS cboroomtypehot WITH ;
		Left = 132, ;
		Name = "cboRoomtype", ;
		Top = 36, ;
		Width = 204, ;
		ZOrderSet = 3
		*< END OBJECT: ClassLib="..\libs\cit_ctrl.vcx" BaseClass="combobox" />

	ADD OBJECT 'cboStatus' AS cbo_rs_status WITH ;
		Left = 132, ;
		Name = "cboStatus", ;
		Top = 60, ;
		Width = 72, ;
		ZOrderSet = 5
		*< END OBJECT: ClassLib="..\libs\cit_ctrl.vcx" BaseClass="combobox" />

	ADD OBJECT 'cmdCancel' AS tcommandbutton WITH ;
		Cancel = .T., ;
		Caption = "cmdCancel", ;
		Left = 180, ;
		Name = "cmdCancel", ;
		Top = 216, ;
		ZOrderSet = 17
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'cmdOK' AS tcommandbutton WITH ;
		Caption = "cmdOK", ;
		Left = 84, ;
		Name = "cmdOK", ;
		Top = 216, ;
		ZOrderSet = 16
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'dtxtDate' AS tdatectrl WITH ;
		Left = 132, ;
		Name = "dtxtDate", ;
		Top = 12, ;
		Width = 96, ;
		ZOrderSet = 1
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />

	ADD OBJECT 'lblClientCompany' AS tlabel WITH ;
		AutoSize = .T., ;
		Caption = "lblClientCompany", ;
		Left = 12, ;
		Name = "lblClientCompany", ;
		Top = 135, ;
		Width = 100, ;
		ZOrderSet = 10
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'lblClientName' AS tlabel WITH ;
		AutoSize = .T., ;
		Caption = "lblClientName", ;
		Left = 12, ;
		Name = "lblClientName", ;
		Top = 111, ;
		Width = 81, ;
		ZOrderSet = 8
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'lblDate' AS tlabel WITH ;
		AutoSize = .T., ;
		Caption = "lblDate", ;
		Left = 12, ;
		Name = "lblDate", ;
		Top = 15, ;
		Width = 41, ;
		ZOrderSet = 0
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'lblGroup' AS tlabel WITH ;
		AutoSize = .T., ;
		Caption = "lblGroup", ;
		Left = 12, ;
		Name = "lblGroup", ;
		Top = 159, ;
		ZOrderSet = 12
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'lblNumOfDays' AS tlabel WITH ;
		AutoSize = .T., ;
		Caption = "lblNumOfDays", ;
		Left = 12, ;
		Name = "lblNumOfDays", ;
		Top = 183, ;
		Width = 82, ;
		ZOrderSet = 14
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'lblRoomname' AS tlabel WITH ;
		AutoSize = .T., ;
		Caption = "lblRoomname", ;
		Left = 12, ;
		Name = "lblRoomname", ;
		Top = 87, ;
		Width = 81, ;
		ZOrderSet = 6
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'lblRoomtype' AS tlabel WITH ;
		AutoSize = .T., ;
		Caption = "lblRoomtype", ;
		Left = 12, ;
		Name = "lblRoomtype", ;
		Top = 39, ;
		Width = 71, ;
		ZOrderSet = 2
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'lblStatus' AS tlabel WITH ;
		AutoSize = .T., ;
		Caption = "lblStatus", ;
		Left = 12, ;
		Name = "lblStatus", ;
		Top = 63, ;
		Width = 50, ;
		ZOrderSet = 4
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'txtClientCompany' AS ttext WITH ;
		Format = "K", ;
		InputMask = (REPLICATE("!",30)), ;
		Left = 132, ;
		Name = "txtClientCompany", ;
		Top = 132, ;
		Width = 204, ;
		ZOrderSet = 11
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtClientName' AS ttext WITH ;
		Format = "K", ;
		InputMask = (REPLICATE("!",30)), ;
		Left = 132, ;
		Name = "txtClientName", ;
		Top = 108, ;
		Width = 204, ;
		ZOrderSet = 9
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtNumOfDays' AS ttext WITH ;
		Format = "KR", ;
		InputMask = "99", ;
		Left = 132, ;
		Name = "txtNumOfDays", ;
		Top = 180, ;
		Width = 96, ;
		ZOrderSet = 15
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />
	
	PROCEDURE assigncaption
		this.Caption = GetLangText("ROOMPLAN","T_ROOMPLANSEARCH")
		this.lblDate.Caption = GetLangText("PLAN","T_DATE")
		this.lblRoomname.Caption = GetLangText("PLAN","T_ROOMNUM")
		this.lblRoomtype.Caption = GetLangText("PLAN","T_ROOMTYPE")
		this.lblStatus.Caption = GetLangText("RESERVAT","TH_STATUS")
		this.lblClientName.Caption = GetLangText("PLAN","T_ROOMNAME")
		this.lblClientCompany.Caption = GetLangText("PLAN","T_ROOMCOMP")
		this.lblGroup.Caption = GetLangText("RESERV2","TH_GROUP")
		this.lblNumOfDays.Caption = GetLangText("PLAN","T_NUMOFDAYS")
		this.cmdOK.Caption = GetLangText("COMMON","TXT_OK")
		this.cmdCancel.Caption = GetLangText("COMMON","TXT_CANCEL")
	ENDPROC

	PROCEDURE Init
		LPARAMETERS toSearchTunnel
		LOCAL lcCursor, lcTablePath
		
		this.SearchTunnel = toSearchTunnel
		
		SqlCursor("SELECT gr_name FROM groupres WHERE 0=1", "curGroup",,,,,,.T.)
		SELECT hotel
		SCAN FOR NOT ho_mainsrv
			lcTablePath = FNGetMPDataPath(ho_path)
			OpenFileDirect(,"groupres","groupres_hot",lcTablePath)
			lcCursor = SqlCursor("SELECT gr_name FROM groupres_hot WHERE gr_name <> " + SqlCnv(SPACE(25),.T.), lcCursor)
			SELECT curGroup
			APPEND FROM DBF(lcCursor)
			DClose("groupres_hot")
			SELECT hotel
		ENDSCAN
		DClose(lcCursor)
		SELECT gr_name FROM curGroup GROUP BY 1 INTO CURSOR curGroup
		this.cboRoomtype.cHotel = this.SearchTunnel.SelHotel
		IF PEMSTATUS(this, "cboRoomtypeHotelSelect", 5)
			this.cboRoomtypeHotelSelect.lMultiSelect = .T.
		ENDIF
		this.dtxtDate.ControlSource = [thisform.SearchTunnel.SelectedDate]
		this.cboRoomname.ControlSource = [thisform.SearchTunnel.SelRoomNoC]
		this.cboRoomtype.ControlSource = [thisform.SearchTunnel.SelRoomType]
		this.cboStatus.ControlSource = [thisform.SearchTunnel.SelStatus]
		this.txtClientName.ControlSource = [thisform.SearchTunnel.SelName]
		this.txtClientCompany.ControlSource = [thisform.SearchTunnel.SelCompany]
		* cboGroup hasn't be bound to SearchTunnel.SelGroup because in combo could be entered value that is not in combo list.
		this.cboGroup.Value = this.SearchTunnel.SelGroup
		this.cboGroup.RowSource = [curGroup]
		this.txtNumOfDays.ControlSource = [thisform.SearchTunnel.SelDaysNum]
		
		this.cmdOK.Enabled = parights(157)
		this.cmdCancel.Enabled = parights(158)
		
		this.AssignCaption()
		DODEFAULT()
	ENDPROC

	PROCEDURE KeyPress
		LPARAMETERS nKeyCode, nShiftAltCtrl
		
		IF nKeyCode = 27
			NODEFAULT
			this.OnClose()
		ENDIF
	ENDPROC

	PROCEDURE onclose
		this.Release()
	ENDPROC

	PROCEDURE QueryUnload
		NODEFAULT
		this.OnClose()
	ENDPROC

	PROCEDURE Unload
		RETURN this.Result
	ENDPROC

	PROCEDURE cboGroup.checklistvalues
		LPARAMETERS lp_cValueMacro
		LOCAL i, llRetVal
		
		IF EMPTY(this.DisplayValue)
			llRetVal = .T.
		ELSE
			FOR i = 1 TO this.ListCount
				IF ALLTRIM(UPPER(this.List(i,1))) = ALLTRIM(UPPER(this.DisplayValue))
					llRetVal = .T.
					EXIT
				ENDIF
			NEXT
		ENDIF
		
		RETURN llRetVal
	ENDPROC

	PROCEDURE cboRoomname.Destroy
		*
	ENDPROC

	PROCEDURE cboRoomname.GotFocus
		LOCAL lcFilter
		
		lcFilter = "EMPTY(rm_rmname)"
		DO CASE
			CASE NOT EMPTY(thisform.SearchTunnel.SelRoomType)
				lcFilter = lcFilter + " OR c_hotcode = " + SqlCnv(PADR(thisform.cboRoomtype.cHotel,10),.T.) + " AND rm_roomtyp = " + SqlCnv(PADR(thisform.SearchTunnel.SelRoomType,4),.T.)
			CASE NOT EMPTY(thisform.cboRoomtype.cHotel)
				lcFilter = lcFilter + " OR c_hotcode = " + SqlCnv(PADR(thisform.cboRoomtype.cHotel,10),.T.)
			OTHERWISE
				lcFilter = lcFilter + " OR rt_group = 1"
		ENDCASE
		SET FILTER TO &lcFilter IN (this.cCursorName)
		
		thisform.SearchTunnel.SelRoomNoC = ""
		this.Requery()
	ENDPROC

	PROCEDURE cboRoomname.Init
		this.AddProperty("cHotel", "")
		this.cCursorName = SYS(2015)
		
		TEXT TO this.cSql TEXTMERGE NOSHOW PRETEXT 2 + 8
		SELECT room_hot.*, rm_lang<<g_langnum>> AS rm_lang, rt_group, rd_roomtyp, CAST('' AS Char(21)) AS rm_rmtype, CAST('' AS Char(10)) AS c_hotcode FROM room_hot
			INNER JOIN roomtype_hot ON rt_roomtyp = rm_roomtyp
			INNER JOIN rtypedef_hot ON rd_rdid = rt_rdid
			ORDER BY rm_rmname
		ENDTEXT
		
		this.cRowSource = "rm_rmname,rm_rmtype,rm_lang,rm_roomnum"
		
		tCombobox::Init()
		
		this.RequeryCursor()
		
		RETURN .T.
	ENDPROC

	PROCEDURE cboRoomname.InteractiveChange
		this.cHotel = IIF(EMPTY(this.Value), "", EVALUATE(this.cCursorName + ".c_hotcode"))
	ENDPROC

	PROCEDURE cboRoomname.Requery
		*
	ENDPROC

	PROCEDURE cboRoomname.requerycursor
		LPARAMETERS lp_cRoomType
		LOCAL lcCursor, lnSelect, lcSql, lcTag, lcTablePath, llSourceCursorUsed
		
		lnSelect = SELECT()
		
		this.RowSource = ""
		
		llSourceCursorUsed = USED(this.cCursorName)
		IF llSourceCursorUsed
			ZAP IN (this.cCursorName)
		ENDIF
		
		lcSql = this.cSql + IIF(EMPTY(this.cWhere), "", " WHERE " + this.cWhere)
		SELECT hotel
		SCAN FOR NOT ho_mainsrv
			lcTablePath = FNGetMPDataPath(ho_path)
			OpenFileDirect(,"room","room_hot",lcTablePath)
			OpenFileDirect(,"roomtype","roomtype_hot",lcTablePath)
			OpenFileDirect(,"rtypedef","rtypedef_hot",lcTablePath)
			IF USED(this.cCursorName)
				lcCursor = SqlCursor(lcSql, lcCursor,,,,,,.T.)
				REPLACE c_hotcode WITH hotel.ho_hotcode ALL
				SELECT (this.cCursorName)
				APPEND FROM DBF(lcCursor)
			ELSE
				SqlCursor(lcSql, this.cCursorName,,,,,,.T.)
				REPLACE c_hotcode WITH hotel.ho_hotcode ALL
			ENDIF
			DClose("room_hot")
			DClose("roomtype_hot")
			DClose("rtypedef_hot")
			SELECT hotel
		ENDSCAN
		DClose(lcCursor)
		
		SELECT (this.cCursorName)
		REPLACE rm_rmtype WITH ALLTRIM(rd_roomtyp) + " " + ALLTRIM(c_hotcode) ALL
		IF this.lAppendBlank
			APPEND BLANK
		ENDIF
		IF NOT EMPTY(this.cOrder) AND NOT llSourceCursorUsed
			lcTag = this.cOrder
			INDEX ON &lcTag TAG TAG1
		ENDIF
		
		this.RowSource = this.cCursorName + "." + this.cRowSource
		
		SELECT (lnSelect)
		
		RETURN .T.
	ENDPROC

	PROCEDURE cmdCancel.Click
		thisform.OnClose()
	ENDPROC

	PROCEDURE cmdOK.Click
		LOCAL l_cRoomNum
		
		IF EMPTY(thisform.SearchTunnel.SelectedDate)
			thisform.txtNumOfDays.Value = 0
		ELSE
			IF NOT ((thisform.SearchTunnel.SelectedDate >= _screen.oGlobal.oParam.pa_sysdate - _screen.oGlobal.oParam.pa_holdres) AND ;
					(thisform.SearchTunnel.SelectedDate < _screen.oGlobal.oParam.pa_sysdate + _screen.oGlobal.oParam.pa_avail))
				Alert(GetLangText("RECURRES","TXT_DATE_NOT_VALID"))
				thisform.dtxtDate.SetFocus()
				RETURN .F.
			ENDIF
		ENDIF
		
		thisform.SearchTunnel.SelHotel = thisform.cboRoomtype.cHotel
		thisform.SearchTunnel.SelBuilding = thisform.cboRoomtype.cBuilding
		thisform.SearchTunnel.SelRoomNoH = thisform.cboRoomname.cHotel
		DIMENSION thisform.SearchTunnel.aHotels(1)
		ACOPY(thisform.cboRoomtype.oHotelCombo.aHotels, thisform.SearchTunnel.aHotels)
		thisform.SearchTunnel.SelGroup = thisform.cboGroup.DisplayValue
		thisform.Result = .T.
		l_cRoomNum = thisform.SearchTunnel.SelRoomNoC
		IF NOT EMPTY(l_cRoomNum)
			thisform.SearchTunnel.SelRoomNoN = DLookUp(thisform.cboRoomname.cCursorName, "rm_roomnum = " + SqlCnv(l_cRoomNum,.T.) + " AND c_hotcode = " + SqlCnv(thisform.cboRoomname.cHotel,.T.),"rm_rpseq")
		ELSE
			thisform.SearchTunnel.SelRoomNoN = 0
		ENDIF
		thisform.OnClose()
	ENDPROC

	PROCEDURE txtNumOfDays.Valid
		IF this.Value <> 0 AND EMPTY(thisform.dtxtDate.Value)
			* Return to DATE textbox
			RETURN 3
		ENDIF
	ENDPROC

ENDDEFINE
