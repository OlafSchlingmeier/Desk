*--------------------------------------------------------------------------------------------------------------------------------------------------------
* (ES) AUTOGENERADO - ¡¡ATENCIÓN!! - ¡¡NO PENSADO PARA EJECUTAR!! USAR SOLAMENTE PARA INTEGRAR CAMBIOS Y ALMACENAR CON HERRAMIENTAS SCM!!
* (EN) AUTOGENERATED - ATTENTION!! - NOT INTENDED FOR EXECUTION!! USE ONLY FOR MERGING CHANGES AND STORING WITH SCM TOOLS!!
*--------------------------------------------------------------------------------------------------------------------------------------------------------
*< FOXBIN2PRG: Version="1.19" SourceFile="arremprint.scx" /> (Solo para binarios VFP 9 / Only for VFP 9 binaries)
*
*
DEFINE CLASS dataenvironment AS dataenvironment 
 	*< CLASSDATA: Baseclass="dataenvironment" Timestamp="" Scale="" Uniqueid="" ClassIcon="2" />

	DataSource = .NULL.
	Height = 200
	Left = 1
	Name = "Dataenvironment"
	Top = 220
	Width = 520

ENDDEFINE

DEFINE CLASS frmarremprint AS tform OF "..\libs\main.vcx" 
 	*< CLASSDATA: Baseclass="form" Timestamp="" Scale="" Uniqueid="" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="grdRemBills" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grdRemBills.Column1.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grdRemBills.Column1.Tbgrid1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grdRemBills.Column2.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grdRemBills.Column2.Tbgrid1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grdRemBills.Column3.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grdRemBills.Column3.Tbgrid1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grdRemBills.Column4.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grdRemBills.Column4.Tbgrid1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grdRemBills.Column5.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grdRemBills.Column5.Tbgrid1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grdRemBills.Column6.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grdRemBills.Column6.Tbgrid1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grdRemBills.Column7.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grdRemBills.Column7.Tbgrid1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grdRemBills.Column8.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grdRemBills.Column8.Tbgrid1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grdRemBills.Column9.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grdRemBills.Column9.Tbgrid1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grdRemBills.Column10.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grdRemBills.Column10.Tbgrid1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grdRemBills.Column11.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grdRemBills.Column11.Tbgrid1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grdRemBills.Column12.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grdRemBills.Column12.Tbgrid1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grdRemBills.Column13.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grdRemBills.Column13.Tbgrid1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grdRemBills.Column14.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grdRemBills.Column14.Tchkgrid1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grdRemBills.Column15.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grdRemBills.Column15.Tchkgrid1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grdRemBills.Column16.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grdRemBills.Column16.Tchkgrid1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grdRemBills.Column17.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grdRemBills.Column17.Tbgrid1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdSelect" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblPrintMode" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblSettlementDay" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtSettlementDay" UniqueID="" Timestamp="" />

	*<DefinedPropArrayMethod>
		*m: changedaracct
		*m: checkremainders
		*m: createemptycursor
		*m: getcursordata
		*m: getreccount
		*m: getremainders
		*m: oncanceldispute
		*m: oncontrol
		*m: ondispute
		*m: onmark
		*m: onmarkall
		*m: onprintsign
		*m: refresharacct
		*m: setmark
		*m: settitle
		*p: dsettlementday
		*p: lcreditors
		*p: oprintparams
	*</DefinedPropArrayMethod>

	AlwaysOnTop = .F.
	Caption = "frmarremprint"
	ControlBox = .T.
	ctbrclass = ctbrArRemPrint
	DataSession = 2
	DoCreate = .T.
	doini = .T.
	dsettlementday = {}
	formname = arremprint
	Height = 528
	KeyPreview = .T.
	lcreditors = .F.
	Name = "frmarremprint"
	oprintparams = .NULL.
	resizeheaderfont = .F.
	saveformsize = .T.
	savegridwidths = .T.
	Visible = .F.
	Width = 800

	ADD OBJECT 'cmdSelect' AS tcommandbutton WITH ;
		Caption = "cmdSelect", ;
		Height = 27, ;
		Left = 676, ;
		Name = "cmdSelect", ;
		TabIndex = 3, ;
		TabStop = .F., ;
		Top = 535, ;
		Width = 120
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'grdRemBills' AS tgrid WITH ;
		ColumnCount = 17, ;
		DeleteMark = .F., ;
		GridLineColor = 192,192,192, ;
		Height = 498, ;
		Left = 1, ;
		lnotusesortcursor = .T., ;
		lresizecolumns = .F., ;
		lsetgridprop = .F., ;
		Name = "grdRemBills", ;
		RecordMark = .F., ;
		resizefontsize = .F., ;
		ScrollBars = 3, ;
		setcolumns = .T., ;
		TabIndex = 1, ;
		Top = 28, ;
		Width = 797, ;
		Column1.Name = "Column1", ;
		Column1.Width = 40, ;
		Column10.Name = "Column10", ;
		Column10.Width = 55, ;
		Column11.Name = "Column11", ;
		Column11.Width = 50, ;
		Column12.Name = "Column12", ;
		Column12.Width = 40, ;
		Column13.Name = "Column13", ;
		Column13.Width = 30, ;
		Column14.Name = "Column14", ;
		Column14.ReadOnly = .T., ;
		Column14.Sparse = .F., ;
		Column14.Width = 20, ;
		Column15.Name = "Column15", ;
		Column15.ReadOnly = .T., ;
		Column15.Sparse = .F., ;
		Column15.Width = 30, ;
		Column16.Name = "Column16", ;
		Column16.Sparse = .F., ;
		Column16.Width = 20, ;
		Column17.Name = "Column17", ;
		Column17.Width = 55, ;
		Column2.Name = "Column2", ;
		Column2.Width = 40, ;
		Column3.Name = "Column3", ;
		Column3.Width = 50, ;
		Column4.Name = "Column4", ;
		Column4.Width = 40, ;
		Column5.Name = "Column5", ;
		Column6.Name = "Column6", ;
		Column7.Name = "Column7", ;
		Column7.Width = 55, ;
		Column8.Name = "Column8", ;
		Column8.Width = 55, ;
		Column9.Name = "Column9", ;
		Column9.Width = 55
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="grid" />

	ADD OBJECT 'grdRemBills.Column1.Header1' AS header WITH ;
		Caption = "Header1", ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'grdRemBills.Column1.Tbgrid1' AS tbgrid WITH ;
		Left = 22, ;
		Name = "Tbgrid1", ;
		Top = 22
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />

	ADD OBJECT 'grdRemBills.Column10.Header1' AS header WITH ;
		Caption = "Header1", ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'grdRemBills.Column10.Tbgrid1' AS tbgrid WITH ;
		Left = 20, ;
		Name = "Tbgrid1", ;
		Top = 34
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />

	ADD OBJECT 'grdRemBills.Column11.Header1' AS header WITH ;
		Caption = "Header1", ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'grdRemBills.Column11.Tbgrid1' AS tbgrid WITH ;
		Left = 24, ;
		Name = "Tbgrid1", ;
		Top = 22
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />

	ADD OBJECT 'grdRemBills.Column12.Header1' AS header WITH ;
		Caption = "Header1", ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'grdRemBills.Column12.Tbgrid1' AS tbgrid WITH ;
		Left = 16, ;
		Name = "Tbgrid1", ;
		Top = 34
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />

	ADD OBJECT 'grdRemBills.Column13.Header1' AS header WITH ;
		Caption = "Header1", ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'grdRemBills.Column13.Tbgrid1' AS tbgrid WITH ;
		Left = 4, ;
		Name = "Tbgrid1", ;
		Top = 31
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />

	ADD OBJECT 'grdRemBills.Column14.Header1' AS header WITH ;
		Caption = "Header1", ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'grdRemBills.Column14.Tchkgrid1' AS tchkgrid WITH ;
		Alignment = 0, ;
		BackStyle = 0, ;
		Caption = "", ;
		Left = 9, ;
		Name = "Tchkgrid1", ;
		ReadOnly = .T., ;
		SpecialEffect = 1, ;
		Top = 31
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="checkbox" />

	ADD OBJECT 'grdRemBills.Column15.Header1' AS header WITH ;
		Caption = "Header1", ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'grdRemBills.Column15.Tchkgrid1' AS tchkgrid WITH ;
		Alignment = 0, ;
		BackStyle = 0, ;
		Caption = "", ;
		DisabledForeColor = 0,0,0, ;
		Left = 12, ;
		Name = "Tchkgrid1", ;
		SpecialEffect = 1, ;
		Top = 19
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="checkbox" />

	ADD OBJECT 'grdRemBills.Column16.Header1' AS header WITH ;
		Caption = "Header1", ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'grdRemBills.Column16.Tchkgrid1' AS tchkgrid WITH ;
		Alignment = 0, ;
		Caption = "", ;
		Left = 6, ;
		Name = "Tchkgrid1", ;
		Top = 31
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="checkbox" />

	ADD OBJECT 'grdRemBills.Column17.Header1' AS header WITH ;
		Caption = "Header1", ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'grdRemBills.Column17.Tbgrid1' AS tbgrid WITH ;
		Left = 20, ;
		Name = "Tbgrid1", ;
		Top = 31
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />

	ADD OBJECT 'grdRemBills.Column2.Header1' AS header WITH ;
		Caption = "Header1", ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'grdRemBills.Column2.Tbgrid1' AS tbgrid WITH ;
		Height = 12, ;
		Left = 26, ;
		Name = "Tbgrid1", ;
		Top = 22
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />

	ADD OBJECT 'grdRemBills.Column3.Header1' AS header WITH ;
		Caption = "Header1", ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'grdRemBills.Column3.Tbgrid1' AS tbgrid WITH ;
		Left = 30, ;
		Name = "Tbgrid1", ;
		Top = 34
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />

	ADD OBJECT 'grdRemBills.Column4.Header1' AS header WITH ;
		Caption = "Header1", ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'grdRemBills.Column4.Tbgrid1' AS tbgrid WITH ;
		Left = 47, ;
		Name = "Tbgrid1", ;
		Top = 34
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />

	ADD OBJECT 'grdRemBills.Column5.Header1' AS header WITH ;
		Caption = "Header1", ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'grdRemBills.Column5.Tbgrid1' AS tbgrid WITH ;
		Left = 16, ;
		Name = "Tbgrid1", ;
		Top = 34
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />

	ADD OBJECT 'grdRemBills.Column6.Header1' AS header WITH ;
		Caption = "Header1", ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'grdRemBills.Column6.Tbgrid1' AS tbgrid WITH ;
		Left = 36, ;
		Name = "Tbgrid1", ;
		Top = 34
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />

	ADD OBJECT 'grdRemBills.Column7.Header1' AS header WITH ;
		Caption = "Header1", ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'grdRemBills.Column7.Tbgrid1' AS tbgrid WITH ;
		Left = 20, ;
		Name = "Tbgrid1", ;
		Top = 22
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />

	ADD OBJECT 'grdRemBills.Column8.Header1' AS header WITH ;
		Caption = "Header1", ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'grdRemBills.Column8.Tbgrid1' AS tbgrid WITH ;
		Left = 24, ;
		Name = "Tbgrid1", ;
		Top = 34
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />

	ADD OBJECT 'grdRemBills.Column9.Header1' AS header WITH ;
		Caption = "Header1", ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'grdRemBills.Column9.Tbgrid1' AS tbgrid WITH ;
		Left = 16, ;
		Name = "Tbgrid1", ;
		Top = 34
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />

	ADD OBJECT 'lblPrintMode' AS tlabel WITH ;
		Caption = "", ;
		FontBold = .T., ;
		FontSize = 12, ;
		ForeColor = 0,0,255, ;
		Height = 22, ;
		Left = 2, ;
		Name = "lblPrintMode", ;
		TabIndex = 5, ;
		Top = 4, ;
		Width = 622
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'lblSettlementDay' AS tlabel WITH ;
		Caption = "lblSettlementDay", ;
		Height = 17, ;
		Left = 646, ;
		Name = "lblSettlementDay", ;
		TabIndex = 4, ;
		Top = 5, ;
		Width = 74
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'txtSettlementDay' AS ttext WITH ;
		Height = 23, ;
		Left = 720, ;
		Name = "txtSettlementDay", ;
		TabIndex = 2, ;
		Top = 2, ;
		Width = 76
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />
	
	PROCEDURE assigncaption
		IF this.lCreditors
			this.Caption = GetLangText("ARREMPRI","TXT_CREDITORS_REMAINDERS_ADV")
			this.grdRemBills.column1.header1.Caption = GetLangText("AR","TXT_CREDITOR_ACCOUNT")
		ELSE
			this.Caption = GetLangText("ARREMPRI","TXT_REMAINDERS_ADVANCE")
			this.grdRemBills.column1.header1.Caption = GetLangText("ARREMPRI","TXT_DEBIT_NO")
		ENDIF
		
		this.grdRemBills.column2.header1.Caption = GetLangText("ARREMPRI","TXT_NAME")
		this.grdRemBills.column3.header1.Caption = GetLangText("ARREMPRI","TXT_COMPANY")
		this.grdRemBills.column4.header1.Caption = GetLangText("ARREMPRI","TXT_CITY")
		this.grdRemBills.column5.header1.Caption = GetLangText("ARREMPRI","TXT_BILL_NO")
		this.grdRemBills.column6.header1.Caption = GetLangText("AR","T_BILLDATE")
		this.grdRemBills.column7.header1.Caption = GetLangText("ARREMPRI","TXT_DUE_FROM")
		this.grdRemBills.column8.header1.Caption = GetLangText("ARREMPRI","TXT_BILL_AMOUNT")
		this.grdRemBills.column9.header1.Caption = GetLangText("ARREMPRI","TXT_REM_FEE")
		this.grdRemBills.column10.header1.Caption = GetLangText("ARREMPRI","TXT_BILL_TOTAL")
		this.grdRemBills.column11.header1.Caption = GetLangText("ARREMPRI","TXT_REM_LAST")
		this.grdRemBills.column12.header1.Caption = GetLangText("ARREMPRI","TXT_REM_LEVEL")
		this.grdRemBills.column13.header1.Caption = GetLangText("ARREMPRI","TXT_NEW_REM_LEVEL")
		this.grdRemBills.column14.header1.Caption = GetLangText("ARREMPRI","TXT_REM_PRINTED")
		this.grdRemBills.column15.header1.Caption = GetLangText("ARREMPRI","TXT_DISPUTE")
		this.grdRemBills.column16.header1.Caption = GetLangText("ARREMPRI","TXT_MARK")
		this.grdRemBills.column17.header1.Caption = GetLangText("AR","TXT_DISPUTED_UNTIL")
		
		this.lblSettlementDay.Caption = GetLangText("ARSELPRI","TXT_SETTLEMENT_DAY")
	ENDPROC

	PROCEDURE changedaracct
		LPARAMETERS lp_nArAcct
		IF NOT USED("curChangedAracct")
			CREATE CURSOR curChangedAracct (ac_aracct n(10))
		ENDIF
		IF NOT dlocate("curChangedAracct","ac_aracct = " + sqlcnv(lp_nArAcct))
			INSERT INTO curChangedAracct (ac_aracct) VALUES (lp_nArAcct)
		ENDIF
		
		RETURN .T.
	ENDPROC

	PROCEDURE checkremainders
		LOCAL l_oPrintParams, l_lFoundActive
		DO ArCreatePrintParams IN ar WITH l_oPrintParams, this.lCreditors
		DO ArGetSelectedReceivables IN ar WITH l_oPrintParams, l_lFoundActive
		IF l_lFoundActive
			this.getremainders(l_oPrintParams)
		ELSE
			this.OnSearch()
		ENDIF
	ENDPROC

	PROCEDURE createemptycursor
		LPARAMETERS lp_cCurLocal
		SELECT *, ap_debit AS cur_bal FROM aracct ;
				LEFT JOIN arpost ON ac_aracct = ap_aracct ;
				LEFT JOIN address ON ac_addrid = ad_addrid ;
				LEFT JOIN apartner ON ac_apid = ap_apid ;
				WHERE .F. ;
				INTO CURSOR curTmp
		DO CreateRemainderCursor IN ar WITH "curTmp",lp_cCurLocal
		SELECT &lp_cCurLocal
		INDEX ON STR(ac_aracct,10) + STR(ap_headid,8) TAG TAG1
		USE IN curTmp
		SELECT (lp_cCurLocal)
	ENDPROC

	PROCEDURE Destroy
		DODEFAULT()
		DO ArSetStatusLine IN ar
	ENDPROC

	PROCEDURE getcursordata
		LPARAMETERS lp_cProgressCaption
		LOCAL l_cCurName, l_cWhere, l_lRefreshOneArrAcct, l_nSelectedRecords, l_oCurData
		l_cCurName = SYS(2015)
		this.cmdSelect.SetFocus()
		l_lRefreshOneArrAcct = .F.
		DO ArGetReceivablesData IN ar WITH l_cCurName, this.oPrintParams, lp_cProgressCaption, l_lRefreshOneArrAcct, l_nSelectedRecords
		IF l_nSelectedRecords > 0
			SELECT &l_cCurName
			SCAN ALL
				SCATTER MEMO NAME l_oCurData
				DO ArSaveSelectedReceivables IN ar WITH this.oPrintParams, ap_lineid, l_oCurData
			ENDSCAN
		ELSE
			DO ArDeleteUncompleteReceivables IN ar WITH this.oPrintParams.nAgId
		ENDIF
		SELECT grdRemCur
		ZAP
		APPEND FROM DBF(l_cCurName)
		USE IN &l_cCurName
		GO TOP
		this.grdRemBills.nrecno = RECNO()
		this.grdRemBills.SetFocus()
	ENDPROC

	PROCEDURE getreccount
		LOCAL l_cCurLocal, l_nRecNo, l_nRecCount, l_nSelect
		l_nSelect = SELECT()
		l_nRecCount = 0
		l_cCurLocal = "grdRemCur"
		l_nRecNo = RECNO(l_cCurLocal)
		this.cmdSelect.SetFocus()
		SELECT &l_cCurLocal
		COUNT TO l_nRecCount
		GO l_nRecNo IN &l_cCurLocal
		this.grdRemBills.nrecno = RECNO(l_cCurLocal)
		this.grdRemBills.SetFocus()
		SELECT (l_nSelect)
		RETURN l_nRecCount
	ENDPROC

	PROCEDURE getremainders
		LPARAMETERS lp_oPrintParams
		LOCAL l_cCurName, l_cWhere
		l_cCurName = SYS(2015)
		this.cmdSelect.SetFocus()
		DO ArGetSavedReceivablesData IN ar WITH lp_oPrintParams, l_cCurName
		SELECT grdRemCur
		ZAP
		APPEND FROM DBF(l_cCurName)
		USE IN &l_cCurName
		GO TOP
		this.grdRemBills.nrecno = RECNO()
		this.grdRemBills.SetFocus()
		
		this.oPrintParams = lp_oPrintParams
		this.settitle(this.oPrintParams)
		this.dSettlementDay = this.oPrintParams.dSettlementDay
		this.txtSettlementDay.Refresh()
	ENDPROC

	PROCEDURE Init
		LPARAMETERS lp_lCreditors
		
		this.lcreditors = lp_lCreditors
		IF this.lcreditors
			this.formname = "crarremprint"
		ENDIF
		DO GetRemainderPrintModes IN ar WITH "CurRemPrnModes", this.lCreditors
		DO GetStatmentPrintModes IN ar WITH "CurStmPrnModes"
		
		DODEFAULT()
		this.txtSettlementDay.ControlSource = [thisform.dSettlementDay]
		this.assigncaption()
		this.Show()
		this.CheckRemainders()
	ENDPROC

	PROCEDURE Load
		DODEFAULT()
		openfile(.F.,"arpost")
		openfile(.F.,"aracct")
		openfile(.F.,"param")
		openfile(.F.,"address")
		openfile(.F.,"apartner")
		openfile(.F.,"arremd")
		openfile(.F.,"arpcond")
		openfile(.F.,"picklist")
		openfile(.F.,"document")
		openfile(.F.,"arremlet")
		openfile(.F.,"argenrem")
		openfile(.F.,"user")
		openfile(.F.,"group")
		openfile(.F.,"cashier")
		openfile(.F.,"menu")
		openfile(.F.,"deposit")
		openfile(.F.,"hdeposit")
		
		DO SetUserEnv IN login
		
		CREATE CURSOR curChangedAracct (ac_aracct n(10))
	ENDPROC

	PROCEDURE oncanceldispute
		LOCAL l_lSuccess, l_nLastRecord
		IF this.getreccount()=0
			RETURN .T.
		ENDIF
		l_nLastRecord = 0
		this.setmark()
		this.cmdSelect.SetFocus()
		SELECT grdRemCur
		SCAN FOR cur_mark
			DO ArCancelDispute IN ar WITH grdRemCur.ap_lineid, l_lSuccess
			IF l_lSuccess
				REPLACE ap_dispute WITH .F., ;
						ap_disdate WITH {}
				this.ChangedArAcct(ap_aracct)
			ENDIF
			l_nLastRecord = RECNO()
		ENDSCAN
		this.RefreshArAcct()
		GO l_nLastRecord
		this.grdRemBills.nrecno = RECNO()
		this.grdRemBills.SetFocus()
	ENDPROC

	PROCEDURE onclose
		IF TYPE("this.oPrintParams") = "O" AND NOT ISNULL(this.oPrintParams) AND ;
				NOT EMPTY(this.oPrintParams.nAgId)
			this.oPrintParams.dSettlementDay = this.dSettlementDay
			DO ArUpdateReceivablesList IN ar WITH this.oPrintParams
		ENDIF
		this.Release()
	ENDPROC

	PROCEDURE oncontrol
		LOCAL l_nRecNo, l_cRepName
		IF this.getreccount()=0
			RETURN .T.
		ENDIF
		
		this.cmdSelect.SetFocus()
		SELECT grdRemCur
		l_nRecNo = RECNO()
		GO TOP
		IF this.lCreditors
			l_cRepName = "arcontrollistcreditors.frx"
		ELSE
			l_cRepName = "_arcl100.frx"
		ENDIF
		
		LOCAL l_cFor, l_cReport, l_lNoListsTable, l_oFrmPreview, loToolbarHnd
		l_cFor = ".T."
		l_cReport = ADDBS(gcReportdir)+l_cRepName
		l_lNoListsTable = .T.
		
		IF g_lUseNewRepPreview
			LOCAL loSession, lnRetval, loXFF, loPreview, loExtensionHandler, l_lAutoYield
			loSession=EVALUATE([xfrx("XFRX#LISTENER")])
			lnRetVal = loSession.SetParams("",,,,,,"XFF") && no name = just in memory
			IF lnRetVal = 0
				l_lAutoYield = _vfp.AutoYield
				_vfp.AutoYield = .T.
				REPORT FORM (l_cReport) FOR &l_cFor OBJECT loSession  
				loXFF = loSession.oxfDocument 
				_vfp.AutoYield = l_lAutoYield
				loExtensionHandler = CREATEOBJECT("MyExtensionHandler")
				loExtensionHandler.lNoListsTable = l_lNoListsTable
				loPreview = CREATEOBJECT("frmMpPreviewerDesk")
				loPreview.setExtensionHandler(loExtensionHandler)
				loPreview.PreviewXFF(loXFF)
				loPreview.show(1)
				loExtensionHandler = .NULL.
			ENDIF 
		ELSE
			loToolbarHnd = NEWOBJECT("ctoolbarhnd","proctoolbar.prg")
			loToolbarHnd.DisableToolbars()
			l_oFrmPreview = .NULL.
			DO FORM forms\preview.scx NAME l_oFrmPreview LINKED
			REPORT FORM (l_cReport) FOR &l_cFor PREVIEW NOCONSOLE WINDOW PREVIEW
			l_oFrmPreview.release()
			Do seTstatus In Setup
			loToolbarHnd.EnableToolbars()
		ENDIF
		
		SELECT grdRemCur
		GO l_nRecNo
		this.grdRemBills.nrecno = RECNO()
		this.grdRemBills.SetFocus()
	ENDPROC

	PROCEDURE ondelete
		LOCAL l_nLastRecord, l_oData
		IF this.getreccount()=0
			RETURN .T.
		ENDIF
		
		l_nLastRecord = 0
		this.setmark()
		this.cmdSelect.SetFocus()
		SELECT grdRemCur
		SCAN FOR cur_mark
			SCATTER MEMO NAME l_oData
			DO ArRemoveReceivableFromList IN ar WITH this.oPrintParams, grdRemCur.ap_lineid, l_oData
			DELETE IN grdRemCur
			l_nLastRecord = RECNO()
		ENDSCAN
		GO l_nLastRecord
		SKIP 1
		IF EOF()
			SKIP -1
		ENDIF
		IF BOF()
			SKIP 1
		ENDIF
		this.grdRemBills.nrecno = RECNO()
		this.grdRemBills.SetFocus()
	ENDPROC

	PROCEDURE ondispute
		LOCAL l_oData, l_lContinue, l_lSuccess, l_cLocalCur, l_oDisputeData, l_nLastRecord, l_nMarked, l_cReasonText, l_dDisDate, l_lDisputed
		IF this.getreccount()=0
			RETURN .T.
		ENDIF
		
		this.setmark(@l_nMarked)
		l_nRecNo = RECNO("grdRemCur")
		this.cmdSelect.SetFocus()
		
		l_cReasonText = ""
		l_dDisDate = {}
		l_lDisputed = .F.
		IF l_nMarked = 1
			= dlocate("grdRemCur","cur_mark = " + sqLcnv(.T.))
			IF dlocate("arpost","ap_lineid = " + sqlcnv(grdRemCur.ap_lineid))
				l_cReasonText = arpost.ap_disreas
				l_dDisDate = arpost.ap_disdate
				l_lDisputed = arpost.ap_dispute
			ENDIF
		ENDIF
		
		l_nLastRecord = 0
		l_cLocalCur = "grdRemCur"
		l_oDisputeData = CREATEOBJECT("custom")
		l_oDisputeData.AddProperty("ap_dispute",l_lDisputed)
		l_oDisputeData.AddProperty("ap_disdate",l_dDisDate)
		l_oDisputeData.AddProperty("ap_disreas",l_cReasonText)
		DO FORM forms\ardispute WITH l_oDisputeData TO l_oDisputeData
		l_lContinue = NOT ISNULL(l_oDisputeData)
		IF NOT l_lContinue
			this.grdRemBills.SetFocus()
			RETURN .T.
		ENDIF
		
		
		SELECT grdRemCur
		SCAN FOR cur_mark AND dlocate("ArPost","ap_lineid = "+sqLcnv(grdRemCur.ap_lineid))
			SELECT arpost
			SCATTER NAME l_oData
			SELECT grdRemCur
			l_oData.ap_dispute = l_oDisputeData.ap_dispute
			l_oData.ap_disdate = l_oDisputeData.ap_disdate
			l_oData.ap_disreas = l_oDisputeData.ap_disreas
			DO ArDispute IN ar WITH l_oData, l_cLocalCur, l_lSuccess
			IF l_lSuccess
				IF l_oData.ap_dispute
					REPLACE ap_dispute WITH .T., ;
							ap_disdate WITH l_oData.ap_disdate
					
				ELSE
		        	REPLACE ap_disdate WITH l_oData.ap_disdate, ;
		        			ap_dispute WITH l_oData.ap_dispute, ;
		        			ap_remlast WITH l_oData.ap_remlast, ;
		        			ap_remlev WITH l_oData.ap_remlev, ;
		        			cur_remlev WITH 0
				ENDIF
				this.ChangedArAcct(ap_aracct)
			ENDIF
			l_nLastRecord = RECNO()
		ENDSCAN
		this.RefreshArAcct()
		GO l_nLastRecord
		this.grdRemBills.nrecno = RECNO()
		this.grdRemBills.SetFocus()
	ENDPROC

	PROCEDURE onedit
		LOCAL l_lDone, l_nMarked, l_cDefRelLev, l_nRecNo, l_dDefLastRemDate, l_lForbidenRem4
		PRIVATE p_dDefLastRemDate
		DIMENSION adLg[2, 8]
		
		IF this.getreccount()=0
			RETURN .T.
		ENDIF
		
		this.setmark(@l_nMarked)
		l_nRecNo = RECNO("grdRemCur")
		this.cmdSelect.SetFocus()
		
		IF l_nMarked = 1
			= dlocate("grdRemCur","cur_mark = " + sqLcnv(.T.))
			l_cDefRelLev = STR(grdRemCur.ap_remlev,1)
			p_dDefLastRemDate = IIF(EMPTY(grdRemCur.ap_remlast),sysdate(),grdRemCur.ap_remlast)
			GO l_nRecNo IN grdRemCur
		ELSE
			l_cDefRelLev = "0"
			p_dDefLastRemDate = sysdate()
		ENDIF
		l_lForbidenRem4 = param.pa_noreml4
		
		DO ArGetRemainderDialog IN ar WITH adLg, l_cDefRelLev, l_lForbidenRem4
		
		IF diAlog(GetLangText("ARREMPRI","TXT_EDIT_REMLEV"),'',@adLg)
			l_lDone = .F.
			SELECT grdRemCur
			SCAN FOR cur_mark
				IF ap_remlev <> adLg(1,8)
					DO ArChangeRemainder IN ar WITH adLg(1,8), "grdRemCur", adLg[2, 8], .F., this.oPrintparams
					this.ChangedArAcct(ap_aracct)
				ENDIF
			ENDSCAN
			this.RefreshArAcct()
		ENDIF
		GO l_nRecNo IN grdRemCur
		this.grdRemBills.nrecno = RECNO()
		this.grdRemBills.SetFocus()
	ENDPROC

	PROCEDURE onmark
		LOCAL l_lSkip, l_lMarked, l_nRecno
		IF this.getreccount()=0
			RETURN .T.
		ENDIF
		
		l_lSkip = .T.
		IF grdRemCur.cur_mark
			l_lMarked = .F.
		ELSE
			l_lMarked = .T.
		ENDIF
		REPLACE cur_mark WITH l_lMarked IN grdRemCur
		IF l_lSkip
			l_nRecno = RECNO("grdRemCur")
			SKIP 1 IN grdRemCur
			IF EOF("grdRemCur")
				GO l_nRecno IN grdRemCur
			ENDIF
			this.grdRemBills.nrecno = RECNO("grdRemCur")
		ENDIF
		this.grdRemBills.Refresh()
	ENDPROC

	PROCEDURE onmarkall
		LOCAL l_nRecNo, l_cCurLocal, l_nRecordsMarked
		IF this.getreccount()=0
			RETURN .T.
		ENDIF
		
		l_cCurLocal = "grdRemCur"
		l_nRecNo = RECNO(l_cCurLocal)
		this.cmdSelect.SetFocus()
		COUNT FOR cur_mark TO l_nRecordsMarked
		IF l_nRecordsMarked = 0
			REPLACE cur_mark WITH .T. ALL IN &l_cCurLocal
		ELSE
			REPLACE cur_mark WITH .F. ALL IN &l_cCurLocal
		ENDIF
		GO l_nRecNo IN &l_cCurLocal
		this.grdRemBills.nrecno = l_nRecNo
		this.grdRemBills.SetFocus()
	ENDPROC

	PROCEDURE onprint
		LOCAL l_nRecNo, l_nMarked, l_lOnlyMarked
		IF this.getreccount()=0
			RETURN .T.
		ENDIF
		this.setmark(@l_nMarked, .T.)
		IF l_nMarked > 0
			l_lOnlyMarked = yesno(GetLangText("ARREMPRI","TXT_PRINT_ONLY_MARKED"))
		ELSE
			l_lOnlyMarked = .F.
		ENDIF
		l_nRecNo = RECNO("grdRemCur")
		this.cmdSelect.SetFocus() && Needed to prevent grid to select wrong alias
		this.oPrintParams.dSettlementDay = this.dSettlementDay
		IF this.oPrintParams.nRemainderFilter <> 6
			DO ArPrintRemainders IN ar WITH this.oPrintParams, "grdRemCur", l_lOnlyMarked
		ELSE
			DO ArPrintStatments IN ar WITH this.oPrintParams, "grdRemCur", l_lOnlyMarked
		ENDIF
		GO l_nRecNo IN grdRemCur
		this.grdRemBills.SetFocus()
	ENDPROC

	PROCEDURE onprintsign
		LOCAL l_lDone, l_nRecNo, l_lCurrentPrintSign, l_lNewPrintSign, l_nSelect
		IF this.getreccount()=0
			RETURN .T.
		ENDIF
		l_nSelect = SELECT()
		l_nRecNo = RECNO("grdRemCur")
		this.setmark()
		= dlocate("grdRemCur","cur_mark = " + sqLcnv(.T.))
		l_lCurrentPrintSign = grdRemCur.cur_printed
		l_lNewPrintSign = NOT l_lCurrentPrintSign
		l_lDone = .F.
		SELECT grdRemCur
		SCAN FOR cur_mark AND cur_printed <> l_lNewPrintSign
			DO ArSetPrinted IN ar WITH this.oPrintParams, ap_lineid, l_lNewPrintSign
			REPLACE cur_printed WITH l_lNewPrintSign
		ENDSCAN
		GO l_nRecNo IN grdRemCur
		SELECT (l_nSelect)
	ENDPROC

	PROCEDURE onsave
		LOCAL l_nSelect, l_nRecNo
		IF this.getreccount()=0
			RETURN .T.
		ENDIF
		l_nSelect = SELECT()
		l_nRecNo = RECNO("grdRemCur")
		this.cmdSelect.SetFocus() && Needed to prevent grid to select wrong alias
		
		IF this.oPrintParams.nRemainderFilter <> 6
			DO ArConfirmRemainders IN ar WITH this.oPrintParams, "grdRemCur"
			*this.getcursordata(GetLangText("AR","TXT_REFRESHING_DATA"))
		ELSE
			DO ArConfirmStatments IN ar WITH this.oPrintParams, "grdRemCur"
		ENDIF
		SELECT grdRemCur
		GO l_nRecNo
		IF DELETED()
			SKIP 1
			IF EOF()
				SKIP -1
			ENDIF
			IF BOF()
				SKIP 1
			ENDIF
		ENDIF
		this.grdRemBills.nrecno = RECNO()
		this.grdRemBills.SetFocus()
		SELECT (l_nSelect)
	ENDPROC

	PROCEDURE onsearch
		LOCAL l_oPrintParams, l_lContinue
		
		DO ArSelectArReceivables IN ar WITH l_oPrintParams, l_lContinue, this.lCreditors
		
		IF NOT l_lContinue
		      RETURN .F.
		ENDIF
		this.oPrintParams = l_oPrintParams
		this.settitle(this.oPrintParams)
		this.dSettlementDay = this.oPrintParams.dSettlementDay
		this.txtSettlementDay.Refresh()
		this.getcursordata()
	ENDPROC

	PROCEDURE QueryUnload
		this.OnClose()
		NODEFAULT
	ENDPROC

	PROCEDURE refresharacct
		LOCAL l_nSelect
		l_nSelect = SELECT()
		SELECT curChangedAracct
		SCAN ALL
			DO ArRefreshAracct IN ar WITH ac_aracct, this.oPrintParams, "grdRemCur"
		ENDSCAN
		ZAP IN curChangedAracct
		SELECT (l_nSelect)
		RETURN .T.
	ENDPROC

	PROCEDURE setmark
		LPARAMETERS lp_nMarked, lp_lDontMark
		LOCAL l_cCurLocal, l_nRecNo, l_nMarkedRecords
		l_nMarkedRecords = 0
		l_cCurLocal = "grdRemCur"
		l_nRecNo = RECNO(l_cCurLocal)
		this.cmdSelect.SetFocus()
		COUNT FOR cur_mark TO l_nMarkedRecords
		GO l_nRecNo IN &l_cCurLocal
		this.grdRemBills.nrecno = RECNO(l_cCurLocal)
		IF l_nMarkedRecords = 0 AND NOT lp_lDontMark
			lp_nMarked = 1
			REPLACE cur_mark WITH .T. IN &l_cCurLocal
		ELSE
			lp_nMarked = l_nMarkedRecords
		ENDIF
		this.grdRemBills.SetFocus()
	ENDPROC

	PROCEDURE settitle
		LPARAMETERS lp_oPrintParams
		IF TYPE("this.oPrintParams.nRemainderFilter") <> "N"
			RETURN .T.
		ENDIF
		
		IF this.lCreditors
			this.lblPrintMode.Caption = ;
					dlookup("CurRemPrnModes","cur_no = " + sqlcnv(lp_oPrintParams.nRemainderFilter),"cur_name")
		ELSE
			IF lp_oPrintParams.nRemainderFilter <> 6
				this.lblPrintMode.Caption = ;
						dlookup("CurRemPrnModes","cur_no = " + sqlcnv(lp_oPrintParams.nRemainderFilter),"cur_name")
			ELSE
				this.lblPrintMode.Caption = ;
						dlookup("CurStmPrnModes","cur_no = " + sqlcnv(lp_oPrintParams.nStatmentFilter),"cur_name")
			ENDIF
		ENDIF
	ENDPROC

	PROCEDURE cmdSelect.Init
		DODEFAULT()
		* this control is used to become a focus from grid, and prevent grid to change selected alias
	ENDPROC

	PROCEDURE grdRemBills.Column14.Tchkgrid1.InteractiveChange
		NODEFAULT
	ENDPROC

	PROCEDURE grdRemBills.Column15.Tchkgrid1.InteractiveChange
		NODEFAULT
	ENDPROC

	PROCEDURE grdRemBills.Column16.Tchkgrid1.InteractiveChange
		NODEFAULT
	ENDPROC

	PROCEDURE grdRemBills.Init
		LOCAL l_cCurLocal, l_cForeColor
		l_cCurLocal = "grdRemCur"
		
		thisform.createemptycursor(l_cCurLocal)
		
		this.RecordSource = l_cCurLocal
		this.column1.ControlSource = l_cCurLocal + ".ap_aracct"
		this.column2.ControlSource = "TRIM("+l_cCurLocal+".cur_lname) + '/' + TRIM("+l_cCurLocal+".cur_fname)"
		this.column3.ControlSource = l_cCurLocal + ".cur_company"
		this.column4.ControlSource = l_cCurLocal + ".cur_city"
		this.column5.ControlSource = l_cCurLocal + ".ap_billnr"
		this.column6.ControlSource = l_cCurLocal + ".ap_sysdate"
		this.column7.ControlSource = l_cCurLocal + ".cur_duedate"
		this.column8.ControlSource = l_cCurLocal + ".cur_bal"
		this.column9.ControlSource = l_cCurLocal + ".cur_fixamt + " + l_cCurLocal + ".cur_peramt"
		this.column10.ControlSource = l_cCurLocal + ".cur_bal  + " + l_cCurLocal + ".cur_fixamt + " + l_cCurLocal + ".cur_peramt"
		this.column11.ControlSource = l_cCurLocal + ".ap_remlast"
		this.column12.ControlSource = l_cCurLocal + ".ap_remlev"
		this.column13.ControlSource = l_cCurLocal + ".cur_remlev"
		this.column14.ControlSource = l_cCurLocal + ".cur_printed"
		this.column15.ControlSource = "ArAccount([ArIsDisputed], " + l_cCurLocal + ".ap_dispute, " + l_cCurLocal + ".ap_disdate)"
		this.column16.ControlSource = l_cCurLocal + ".cur_mark"
		this.column17.ControlSource = l_cCurLocal + ".ap_disdate"
		DODEFAULT()
		
		l_cForeColor = "IIF(NOT grdRemCur.cur_mark,RGB(0,0,0),RGB(255,128,128))"
		
		this.SetAll("DynamicForeColor", l_cForeColor, "Column")
		this.SetAll("ReadOnly", .T., "Column")
		this.column16.ReadOnly = .F.
	ENDPROC

ENDDEFINE
