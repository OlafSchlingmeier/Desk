*--------------------------------------------------------------------------------------------------------------------------------------------------------
* (ES) AUTOGENERADO - ¡¡ATENCIÓN!! - ¡¡NO PENSADO PARA EJECUTAR!! USAR SOLAMENTE PARA INTEGRAR CAMBIOS Y ALMACENAR CON HERRAMIENTAS SCM!!
* (EN) AUTOGENERATED - ATTENTION!! - NOT INTENDED FOR EXECUTION!! USE ONLY FOR MERGING CHANGES AND STORING WITH SCM TOOLS!!
*--------------------------------------------------------------------------------------------------------------------------------------------------------
*< FOXBIN2PRG: Version="1.19" SourceFile="mngform.scx" /> (Solo para binarios VFP 9 / Only for VFP 9 binaries)
*
*
#INCLUDE "..\include\constdefines.h"

DEFINE CLASS dataenvironment AS dataenvironment 
 	*< CLASSDATA: Baseclass="dataenvironment" Timestamp="" Scale="" Uniqueid="" ClassIcon="2" />

	DataSource = .NULL.
	Height = 0
	Left = 0
	Name = "Dataenvironment"
	Top = 0
	Width = 0

ENDDEFINE

DEFINE CLASS mngform AS tform OF "..\libs\main.vcx" 
 	*< CLASSDATA: Baseclass="form" Timestamp="" Scale="" Uniqueid="" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="MngGrid" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="MngGrid.Grdbasesortcolumn21.Tchkgrid1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdsetfocus" UniqueID="" Timestamp="" />

	*<DefinedPropArrayMethod>
		*m: preparetooltip
		*m: removefocusfromgrid
		*m: setinitialgridcolumnwidths
		*p: firsttime
	*</DefinedPropArrayMethod>

	AlwaysOnTop = .F.
	Caption = "mngForm"
	ControlBox = .T.
	ctbrclass = ctbrManager
	DataSession = 2
	DoCreate = .T.
	doini = .T.
	firsttime = .T.
	Height = 336
	Icon = ..\bitmap\icons\note01.ico
	KeyPreview = .T.
	MinHeight = 80
	MinWidth = 80
	Name = "mngform"
	resizeheaderfont = .F.
	saveformsize = .T.
	savegridwidths = .T.
	ShowTips = .T.
	Width = 560

	ADD OBJECT 'cmdsetfocus' AS tcommandbutton WITH ;
		Left = -200, ;
		Name = "cmdsetfocus", ;
		Top = -200
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'MngGrid' AS grdbasesort WITH ;
		ColumnCount = 21, ;
		DeleteMark = .F., ;
		GridLines = 2, ;
		Height = 335, ;
		lresizecolumns = .F., ;
		Name = "MngGrid", ;
		ReadOnly = .T., ;
		resizefontsize = .F., ;
		ScrollBars = 2, ;
		setcolumns = .T., ;
		SplitBar = .F., ;
		Width = 560, ;
		ZOrderSet = 13, ;
		Grdbasesortcolumn1.HEADER1.Alignment = 2, ;
		Grdbasesortcolumn1.HEADER1.Caption = "Header1", ;
		Grdbasesortcolumn1.HEADER1.Name = "HEADER1", ;
		Grdbasesortcolumn1.Name = "Grdbasesortcolumn1", ;
		Grdbasesortcolumn1.ReadOnly = .T., ;
		Grdbasesortcolumn1.Tbgrid1.Name = "Tbgrid1", ;
		Grdbasesortcolumn1.Tbgrid1.ReadOnly = .T., ;
		Grdbasesortcolumn10.HEADER1.Alignment = 2, ;
		Grdbasesortcolumn10.HEADER1.Caption = "Header1", ;
		Grdbasesortcolumn10.HEADER1.Name = "HEADER1", ;
		Grdbasesortcolumn10.Name = "Grdbasesortcolumn10", ;
		Grdbasesortcolumn10.ReadOnly = .T., ;
		Grdbasesortcolumn10.Tbgrid1.Name = "Tbgrid1", ;
		Grdbasesortcolumn10.Tbgrid1.ReadOnly = .T., ;
		Grdbasesortcolumn11.HEADER1.Alignment = 2, ;
		Grdbasesortcolumn11.HEADER1.Caption = "Header1", ;
		Grdbasesortcolumn11.HEADER1.Name = "HEADER1", ;
		Grdbasesortcolumn11.Name = "Grdbasesortcolumn11", ;
		Grdbasesortcolumn11.ReadOnly = .T., ;
		Grdbasesortcolumn11.Tbgrid1.Name = "Tbgrid1", ;
		Grdbasesortcolumn11.Tbgrid1.ReadOnly = .T., ;
		Grdbasesortcolumn12.HEADER1.Alignment = 2, ;
		Grdbasesortcolumn12.HEADER1.Caption = "Header1", ;
		Grdbasesortcolumn12.HEADER1.Name = "HEADER1", ;
		Grdbasesortcolumn12.Name = "Grdbasesortcolumn12", ;
		Grdbasesortcolumn12.ReadOnly = .T., ;
		Grdbasesortcolumn12.Tbgrid1.Name = "Tbgrid1", ;
		Grdbasesortcolumn12.Tbgrid1.ReadOnly = .T., ;
		Grdbasesortcolumn13.HEADER1.Alignment = 2, ;
		Grdbasesortcolumn13.HEADER1.Caption = "Header1", ;
		Grdbasesortcolumn13.HEADER1.Name = "HEADER1", ;
		Grdbasesortcolumn13.Name = "Grdbasesortcolumn13", ;
		Grdbasesortcolumn13.ReadOnly = .T., ;
		Grdbasesortcolumn13.Tbgrid1.Name = "Tbgrid1", ;
		Grdbasesortcolumn13.Tbgrid1.ReadOnly = .T., ;
		Grdbasesortcolumn14.HEADER1.Alignment = 2, ;
		Grdbasesortcolumn14.HEADER1.Caption = "Header1", ;
		Grdbasesortcolumn14.HEADER1.Name = "HEADER1", ;
		Grdbasesortcolumn14.Name = "Grdbasesortcolumn14", ;
		Grdbasesortcolumn14.ReadOnly = .T., ;
		Grdbasesortcolumn14.Tbgrid1.Name = "Tbgrid1", ;
		Grdbasesortcolumn14.Tbgrid1.ReadOnly = .T., ;
		Grdbasesortcolumn15.HEADER1.Alignment = 2, ;
		Grdbasesortcolumn15.HEADER1.Caption = "Header1", ;
		Grdbasesortcolumn15.HEADER1.Name = "HEADER1", ;
		Grdbasesortcolumn15.Name = "Grdbasesortcolumn15", ;
		Grdbasesortcolumn15.ReadOnly = .T., ;
		Grdbasesortcolumn15.Tbgrid1.Name = "Tbgrid1", ;
		Grdbasesortcolumn15.Tbgrid1.ReadOnly = .T., ;
		Grdbasesortcolumn16.HEADER1.Alignment = 2, ;
		Grdbasesortcolumn16.HEADER1.Caption = "Header1", ;
		Grdbasesortcolumn16.HEADER1.Name = "HEADER1", ;
		Grdbasesortcolumn16.Name = "Grdbasesortcolumn16", ;
		Grdbasesortcolumn16.ReadOnly = .T., ;
		Grdbasesortcolumn16.Tbgrid1.Name = "Tbgrid1", ;
		Grdbasesortcolumn16.Tbgrid1.ReadOnly = .T., ;
		Grdbasesortcolumn17.HEADER1.Alignment = 2, ;
		Grdbasesortcolumn17.HEADER1.Caption = "Header1", ;
		Grdbasesortcolumn17.HEADER1.Name = "HEADER1", ;
		Grdbasesortcolumn17.Name = "Grdbasesortcolumn17", ;
		Grdbasesortcolumn17.ReadOnly = .T., ;
		Grdbasesortcolumn17.Tbgrid1.Name = "Tbgrid1", ;
		Grdbasesortcolumn17.Tbgrid1.ReadOnly = .T., ;
		Grdbasesortcolumn18.HEADER1.Alignment = 2, ;
		Grdbasesortcolumn18.HEADER1.Caption = "Header1", ;
		Grdbasesortcolumn18.HEADER1.Name = "HEADER1", ;
		Grdbasesortcolumn18.Name = "Grdbasesortcolumn18", ;
		Grdbasesortcolumn18.ReadOnly = .T., ;
		Grdbasesortcolumn18.Tbgrid1.Name = "Tbgrid1", ;
		Grdbasesortcolumn18.Tbgrid1.ReadOnly = .T., ;
		Grdbasesortcolumn19.HEADER1.Alignment = 2, ;
		Grdbasesortcolumn19.HEADER1.Caption = "Header1", ;
		Grdbasesortcolumn19.HEADER1.Name = "HEADER1", ;
		Grdbasesortcolumn19.Name = "Grdbasesortcolumn19", ;
		Grdbasesortcolumn19.ReadOnly = .T., ;
		Grdbasesortcolumn19.Tbgrid1.Name = "Tbgrid1", ;
		Grdbasesortcolumn19.Tbgrid1.ReadOnly = .T., ;
		Grdbasesortcolumn2.HEADER1.Alignment = 2, ;
		Grdbasesortcolumn2.HEADER1.Caption = "Header1", ;
		Grdbasesortcolumn2.HEADER1.Name = "HEADER1", ;
		Grdbasesortcolumn2.Name = "Grdbasesortcolumn2", ;
		Grdbasesortcolumn2.ReadOnly = .T., ;
		Grdbasesortcolumn2.Tbgrid1.Name = "Tbgrid1", ;
		Grdbasesortcolumn2.Tbgrid1.ReadOnly = .T., ;
		Grdbasesortcolumn20.HEADER1.Alignment = 2, ;
		Grdbasesortcolumn20.HEADER1.Caption = "Header1", ;
		Grdbasesortcolumn20.HEADER1.Name = "HEADER1", ;
		Grdbasesortcolumn20.Name = "Grdbasesortcolumn20", ;
		Grdbasesortcolumn20.ReadOnly = .T., ;
		Grdbasesortcolumn20.Tbgrid1.Name = "Tbgrid1", ;
		Grdbasesortcolumn20.Tbgrid1.ReadOnly = .T., ;
		Grdbasesortcolumn21.CurrentControl = "Tchkgrid1", ;
		Grdbasesortcolumn21.HEADER1.Alignment = 2, ;
		Grdbasesortcolumn21.HEADER1.Caption = "", ;
		Grdbasesortcolumn21.HEADER1.Name = "HEADER1", ;
		Grdbasesortcolumn21.Name = "Grdbasesortcolumn21", ;
		Grdbasesortcolumn21.ReadOnly = .F., ;
		Grdbasesortcolumn21.Sparse = .F., ;
		Grdbasesortcolumn21.Tbgrid1.Name = "Tbgrid1", ;
		Grdbasesortcolumn21.Tbgrid1.ReadOnly = .F., ;
		Grdbasesortcolumn21.Width = 20, ;
		Grdbasesortcolumn3.HEADER1.Alignment = 2, ;
		Grdbasesortcolumn3.HEADER1.Caption = "Header1", ;
		Grdbasesortcolumn3.HEADER1.Name = "HEADER1", ;
		Grdbasesortcolumn3.Name = "Grdbasesortcolumn3", ;
		Grdbasesortcolumn3.ReadOnly = .T., ;
		Grdbasesortcolumn3.Tbgrid1.Name = "Tbgrid1", ;
		Grdbasesortcolumn3.Tbgrid1.ReadOnly = .T., ;
		Grdbasesortcolumn4.HEADER1.Alignment = 2, ;
		Grdbasesortcolumn4.HEADER1.Caption = "Header1", ;
		Grdbasesortcolumn4.HEADER1.Name = "HEADER1", ;
		Grdbasesortcolumn4.Name = "Grdbasesortcolumn4", ;
		Grdbasesortcolumn4.ReadOnly = .T., ;
		Grdbasesortcolumn4.Tbgrid1.Name = "Tbgrid1", ;
		Grdbasesortcolumn4.Tbgrid1.ReadOnly = .T., ;
		Grdbasesortcolumn5.HEADER1.Alignment = 2, ;
		Grdbasesortcolumn5.HEADER1.Caption = "Header1", ;
		Grdbasesortcolumn5.HEADER1.Name = "HEADER1", ;
		Grdbasesortcolumn5.Name = "Grdbasesortcolumn5", ;
		Grdbasesortcolumn5.ReadOnly = .T., ;
		Grdbasesortcolumn5.Tbgrid1.Name = "Tbgrid1", ;
		Grdbasesortcolumn5.Tbgrid1.ReadOnly = .T., ;
		Grdbasesortcolumn6.HEADER1.Alignment = 2, ;
		Grdbasesortcolumn6.HEADER1.Caption = "Header1", ;
		Grdbasesortcolumn6.HEADER1.Name = "HEADER1", ;
		Grdbasesortcolumn6.Name = "Grdbasesortcolumn6", ;
		Grdbasesortcolumn6.ReadOnly = .T., ;
		Grdbasesortcolumn6.Tbgrid1.Name = "Tbgrid1", ;
		Grdbasesortcolumn6.Tbgrid1.ReadOnly = .T., ;
		Grdbasesortcolumn7.HEADER1.Alignment = 2, ;
		Grdbasesortcolumn7.HEADER1.Caption = "Header1", ;
		Grdbasesortcolumn7.HEADER1.Name = "HEADER1", ;
		Grdbasesortcolumn7.Name = "Grdbasesortcolumn7", ;
		Grdbasesortcolumn7.ReadOnly = .T., ;
		Grdbasesortcolumn7.Tbgrid1.Name = "Tbgrid1", ;
		Grdbasesortcolumn7.Tbgrid1.ReadOnly = .T., ;
		Grdbasesortcolumn8.HEADER1.Alignment = 2, ;
		Grdbasesortcolumn8.HEADER1.Caption = "Header1", ;
		Grdbasesortcolumn8.HEADER1.Name = "HEADER1", ;
		Grdbasesortcolumn8.Name = "Grdbasesortcolumn8", ;
		Grdbasesortcolumn8.ReadOnly = .T., ;
		Grdbasesortcolumn8.Tbgrid1.Name = "Tbgrid1", ;
		Grdbasesortcolumn8.Tbgrid1.ReadOnly = .T., ;
		Grdbasesortcolumn9.HEADER1.Alignment = 2, ;
		Grdbasesortcolumn9.HEADER1.Caption = "Header1", ;
		Grdbasesortcolumn9.HEADER1.Name = "HEADER1", ;
		Grdbasesortcolumn9.Name = "Grdbasesortcolumn9", ;
		Grdbasesortcolumn9.ReadOnly = .T., ;
		Grdbasesortcolumn9.Tbgrid1.Name = "Tbgrid1", ;
		Grdbasesortcolumn9.Tbgrid1.ReadOnly = .T.
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="grid" />

	ADD OBJECT 'MngGrid.Grdbasesortcolumn21.Tchkgrid1' AS tchkgrid WITH ;
		Alignment = 0, ;
		Left = 35, ;
		Name = "Tchkgrid1", ;
		ReadOnly = .F., ;
		Top = 23
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="checkbox" />
	
	PROCEDURE Activate
		IF this.FirstTime
			this.Resize()
			this.FirstTime = .F.
			this.MngCtrl.FormActivateFirstTime()
		ENDIF
		
		DODEFAULT()
	ENDPROC

	PROCEDURE Init
		LPARAMETERS tcMngCtrlClass, tvRecordId, tcMngFilter, tuParam1
		
		this.AddProperty("MngCtrlClass",tcMngCtrlClass)
		this.AddObject("MngCtrl", tcMngCtrlClass, tvRecordId)
		
		IF NOT PEMSTATUS(this, "MngCtrl", 5)
			RETURN .F.
		ENDIF
		
		this.SetInitialGridColumnWidths()
		
		IF this.MngCtrl.lSelection
			this.mngGrid.DefaultPropertiesSet(this.mngGrid.ColumnCount, "gr_show", .F.)
			this.mngGrid.ChangeColumnOrder(this.mngGrid.Columns(this.mngGrid.ColumnCount),1)
		ENDIF
		this.mngGrid.ColumnCount = ALEN(this.MngCtrl.GColumn, 1)
		this.MngGrid.cgridlabelname = UPPER(tcMngCtrlClass)
		this.mngGrid.Init(.T.)
		IF NOT this.MngCtrl.InitGrid()
			RETURN .F.
		ENDIF
		
		IF NOT EMPTY(tcMngFilter)
			SET FILTER TO &tcMngFilter IN this.MngCtrl.GTAlias
		ENDIF
		
		IF PCOUNT() > 3
			this.MngCtrl.SetMode(tuParam1)
		ENDIF
		
		this.Caption = this.MngCtrl.MngCaption
		
		Goto top in this.MngCtrl.GTAlias
		
		this.cformlabel = tcMngCtrlClass
		
		this.PrepareTooltip()
		this.MngGrid.Cursorrequery()
		this.MngCtrl.BeforeFormInitDoDefault()
		
		DODEFAULT()
		
		RETURN this.MngCtrl.AfterInit(tvRecordId, tcMngFilter, tuParam1)
	ENDPROC

	PROCEDURE KeyPress
		LPARAMETERS nKeyCode, nShiftAltCtrl
		
		IF this.MngCtrl.lUdTooltip
			this.MLToolTip.HideMLText()
		ENDIF
		
		DODEFAULT(nKeyCode, nShiftAltCtrl)
	ENDPROC

	PROCEDURE onclose
		IF this.MngCtrlClass = "MngBuildingCtrl"
			DO SetupBuildingsCheck IN Setup
		ENDIF
		IF NOT this.MngCtrl.lSaveEnabled OR YesNo(GetLangText("RESERVAT","TA_LOSECHANGES")+"@2")
			this.Release()
		ENDIF
	ENDPROC

	PROCEDURE oncopy
		this.MngCtrl.OnCmd2()
	ENDPROC

	PROCEDURE ondelete
		this.MngCtrl.OnCmd4()
	ENDPROC

	PROCEDURE onedit
		this.MngCtrl.OnCmd3()
	ENDPROC

	PROCEDURE onnew
		this.MngCtrl.OnCmd1()
	ENDPROC

	PROCEDURE onrefresh
		this.removefocusfromgrid()
		this.mngGrid.cursorrequery()
		this.Refresh()
	ENDPROC

	PROCEDURE onsave
		this.MngCtrl.OnSave()
	ENDPROC

	PROCEDURE onsearch
		this.MngCtrl.OnCmd5()
	ENDPROC

	PROCEDURE onsearchmore
		this.MngCtrl.OnCmd12()
	ENDPROC

	PROCEDURE preparetooltip
		LOCAL l_lLargeTooltip
		
		IF this.MngCtrl.lUdTooltip
			this.MngGrid.AllowCellSelection = .F.
			this.ShowTips = .F.
			l_lLargeTooltip = .F.
			this.AddObject("MLToolTip", "MLToolTip")
			this.AddObject("_mlttsh", IIF(l_lLargeTooltip, "tooltipwlarge", "tooltipw"))
			this.MLToolTip.ShowEventObj = this.MngCtrl
			this.MLToolTip.ShowEventProc = "OnShowTT()"
			this.MLToolTip.MLText = "String"
			this.MLToolTip.Tag = " "
		ENDIF
	ENDPROC

	PROCEDURE QueryUnload
		NODEFAULT
		this.OnClose()
	ENDPROC

	PROCEDURE removefocusfromgrid
		this.cmdsetfocus.SetFocus()
	ENDPROC

	PROCEDURE setinitialgridcolumnwidths
		Local cMacro, i, nCount, Whole
		
		this.mngGrid.Width = this.MngCtrl.GWidth
		this.mngGrid.Height = this.MngCtrl.GHeight
		this.Width = this.mngGrid.Width
		this.Height = this.mngGrid.Height
		
		Whole = (this.MngGrid.Width - 26) / 100
		nCount = ALen(this.MngCtrl.GColumn, 1)
		for i = 1 to nCount
			cMacro = "this.MngGrid.Columns(" + AllTrim(Str(i)) +")"
			&cMacro..Width = IIF(this.MngCtrl.lcolumnhasrealwidth,this.MngCtrl.GColumn[i, 2],Round(Whole * this.MngCtrl.GColumn[i, 2], 0))
		ENDFOR
		
		this.AutoCenter = this.AutoCenter
		
		IF this.MngCtrl.lDontWriteToGridTable
			this.mngGrid.setcolumns = .F.
			this.mngGrid.savegridsettings = .F.
			this.mngGrid.lresizecolumns = .T.
		ENDIF
		
		RETURN .T.
	ENDPROC

	PROCEDURE toolbardefinition
		DODEFAULT()
		this.MngCtrl.ToolbarDefinition()
	ENDPROC

	PROCEDURE MngGrid.AfterRowColChange
		LPARAMETERS nColIndex
		
		IF NOT EMPTY(thisform.cTbrClass) AND thisform.MngCtrl.lRefreshToolbarOnARC
			thisform.ActivateToolbar()
		ENDIF
	ENDPROC

	PROCEDURE MngGrid.cursorcreatebefore
		thisform.MngCtrl.CursorCreateBefore()
	ENDPROC

	PROCEDURE MngGrid.cursorrequery
		IF NOT EMPTY(this.ccurname) AND USED(this.ccurname)
			RETURN DODEFAULT()
		ENDIF
	ENDPROC

	PROCEDURE MngGrid.cursorrequerybefore
		thisform.MngCtrl.CursorRequeryBefore()
	ENDPROC

	PROCEDURE MngGrid.Grdbasesortcolumn21.Tchkgrid1.InteractiveChange
		thisform.mngGrid.Columns(1).SetFocus()
	ENDPROC

	PROCEDURE MngGrid.Grdbasesortcolumn21.Tchkgrid1.When
		*
	ENDPROC

	PROCEDURE MngGrid.Init
		LPARAMETERS lp_lStartNow
		IF NOT lp_lStartNow
			RETURN .T.
		ENDIF
		
		RETURN DODEFAULT()
		
	ENDPROC

	PROCEDURE MngGrid.MouseMove
		LPARAMETERS nButton, nShift, nXCoord, nYCoord
		LOCAL lnArea
		
		IF thisform.MngCtrl.lUdTooltip
			lnArea = SELECT()
			SELECT (this.RecordSource)
			this.GetPosition(nXCoord, nYCoord)
			SELECT (lnArea)
			IF TRANSFORM(this.nGridRow) <> thisform.MLToolTip.Tag
				thisform.MLToolTip.HideMLText()
				thisform.MLToolTip.Tag = TRANSFORM(this.nGridRow)
			ENDIF
			thisform.MLToolTip.MouseMove(nButton, nShift, nXCoord, nYCoord)
		ENDIF
	ENDPROC

ENDDEFINE
