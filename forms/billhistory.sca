*--------------------------------------------------------------------------------------------------------------------------------------------------------
* (ES) AUTOGENERADO - ¡¡ATENCIÓN!! - ¡¡NO PENSADO PARA EJECUTAR!! USAR SOLAMENTE PARA INTEGRAR CAMBIOS Y ALMACENAR CON HERRAMIENTAS SCM!!
* (EN) AUTOGENERATED - ATTENTION!! - NOT INTENDED FOR EXECUTION!! USE ONLY FOR MERGING CHANGES AND STORING WITH SCM TOOLS!!
*--------------------------------------------------------------------------------------------------------------------------------------------------------
*< FOXBIN2PRG: Version="1.19" SourceFile="billhistory.scx" /> (Solo para binarios VFP 9 / Only for VFP 9 binaries)
*
*
#INCLUDE "..\include\constdefines.h"

DEFINE CLASS dataenvironment AS dataenvironment 
 	*< CLASSDATA: Baseclass="dataenvironment" Timestamp="" Scale="" Uniqueid="" ClassIcon="2" />

	DataSource = .NULL.
	Height = 200
	Left = 1
	Name = "Dataenvironment"
	Top = 220
	Width = 520

ENDDEFINE

DEFINE CLASS frsbillhist AS formset 
 	*< CLASSDATA: Baseclass="formset" Timestamp="" Scale="" Uniqueid="" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="frmBHistBr" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="frmBHistBr.grdBHist" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="frmBHistBr.grdBHist.Column1.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="frmBHistBr.grdBHist.Column1.Tbgrid1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="frmBHistBr.grdBHist.Column2.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="frmBHistBr.grdBHist.Column2.Tbgrid1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="frmBHistBr.grdBHist.Column3.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="frmBHistBr.grdBHist.Column3.Tbgrid1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="frmBHistBr.grdBHist.Column4.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="frmBHistBr.grdBHist.Column4.Tbgrid1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="frmBHistBr.grdBHist.Column5.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="frmBHistBr.grdBHist.Column5.Tbgrid1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="frmBHistBr.grdBHist.Column6.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="frmBHistBr.grdBHist.Column6.Tbgrid1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="frmBHistBr.grdBHist.Column7.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="frmBHistBr.grdBHist.Column7.Tbgrid1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="frmBHistBr.grdBHist.Column8.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="frmBHistBr.grdBHist.Column8.Tbgrid1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="frmBHistBr.grdBHist.Column9.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="frmBHistBr.grdBHist.Column9.Tbgrid1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="frmBHistBr.grdBHist.Column10.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="frmBHistBr.grdBHist.Column10.Tbgrid1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="frmBHistBr.grdBHist.Column11.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="frmBHistBr.grdBHist.Column11.Tbgrid1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="frmBHistBr.grdBHist.Column12.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="frmBHistBr.grdBHist.Column12.Tbgrid1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="frmBHistBr.grdBHist.Column13.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="frmBHistBr.grdBHist.Column13.Tbgrid1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="frmBHistBr.grdBHist.Column14.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="frmBHistBr.grdBHist.Column14.Tbgrid1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="frmBHistBr.grdBHist.Column15.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="frmBHistBr.grdBHist.Column15.Tbgrid1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="frmBHistBr.grdBHist.Column16.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="frmBHistBr.grdBHist.Column16.Tbgrid1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="frmBHistBr.oMypb" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="frmBHistBr.cmdfocus" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="frmBillhist" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="frmBillhist.lblArrival" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="frmBillhist.lblInvoice" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="frmBillhist.lblCompany" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="frmBillhist.lblName" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="frmBillhist.lblBillNum" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="frmBillhist.lblDeparture" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="frmBillhist.txtBillNum" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="frmBillhist.txtName" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="frmBillhist.txtCompany" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="frmBillhist.txtInvoice" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="frmBillhist.cmdOk" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="frmBillhist.cmdCancel" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="frmBillhist.dtxtDeparture" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="frmBillhist.dtxtArrival" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="frmBillhist.cmdskip" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="frmBillhist.lblbilldate" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="frmBillhist.dtxtbillfrom" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="frmBillhist.dtxtbillto" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="frmBillhist.lblReserId" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="frmBillhist.txtReserId" UniqueID="" Timestamp="" />

	*<DefinedPropArrayMethod>
		*m: billaddressget
		*m: cancelsearch
		*m: cvouchernumber_assign
		*m: grid_refresh_record
		*m: grid_refresh_record_get_billnum
		*m: grid_refresh_record_get_more_billnums
		*m: onclose
		*m: ondelete
		*m: onedit
		*m: onpreviewbill
		*m: onprintbill
		*m: onprintrange
		*m: onsearch
		*m: onspeciallogin
		*m: printbill
		*m: restorearchive
		*m: searchtables
		*m: setgridcontrolsource
		*p: cbillnum
		*p: cvouchernumber
		*p: ldefstyle
		*p: lspeclogin
		*p: lusebookingdate
		*p: nstyle
		*p: nvo_number
	*</DefinedPropArrayMethod>

	AutoRelease = .T.
	cbillnum = 
	cvouchernumber = 
	DataSession = 2
	Name = "frsBillHist"
	nvo_number = 0

	ADD OBJECT 'frmBHistBr' AS tform WITH ;
		AlwaysOnTop = .F., ;
		Caption = "frmBHistBr", ;
		cformlabel = BILLHIST, ;
		ControlBox = .T., ;
		ctbrclass = ctbrBillHistory, ;
		DoCreate = .T., ;
		formname = billhist, ;
		Height = 253, ;
		Icon = ..\bitmap\browse.ico, ;
		KeyPreview = .T., ;
		Name = "frmBHistBr", ;
		saveformsize = .T., ;
		savegridwidths = .T., ;
		ScrollBars = 2, ;
		ShowTips = .T., ;
		SizeBox = .T., ;
		Visible = .F., ;
		Width = 767
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="form" />

	ADD OBJECT 'frmBHistBr.cmdfocus' AS tcommandbutton WITH ;
		Left = -400, ;
		Name = "cmdfocus", ;
		Top = -400, ;
		Visible = .F.
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'frmBHistBr.grdBHist' AS tgrid WITH ;
		AllowCellSelection = .F., ;
		ColumnCount = 16, ;
		DeleteMark = .F., ;
		GridLines = 2, ;
		Height = 253, ;
		Left = 0, ;
		lresizecolumns = .F., ;
		Name = "grdBHist", ;
		RecordMark = .F., ;
		resizefontsize = .F., ;
		RightToLeft = .T., ;
		setcolumns = .T., ;
		TabIndex = 5, ;
		TabStop = .F., ;
		Top = 0, ;
		Width = 767, ;
		Column1.CurrentControl = "Tbgrid1", ;
		Column1.Name = "Column1", ;
		Column1.ReadOnly = .T., ;
		Column1.Visible = .T., ;
		Column1.Width = 40, ;
		Column10.CurrentControl = "Tbgrid1", ;
		Column10.Movable = .F., ;
		Column10.Name = "Column10", ;
		Column10.ReadOnly = .T., ;
		Column10.Resizable = .F., ;
		Column10.Visible = .T., ;
		Column11.CurrentControl = "Tbgrid1", ;
		Column11.Movable = .F., ;
		Column11.Name = "Column11", ;
		Column11.ReadOnly = .T., ;
		Column11.Resizable = .F., ;
		Column11.Visible = .T., ;
		Column12.CurrentControl = "Tbgrid1", ;
		Column12.Movable = .F., ;
		Column12.Name = "Column12", ;
		Column12.ReadOnly = .T., ;
		Column12.Resizable = .F., ;
		Column12.Visible = .T., ;
		Column13.CurrentControl = "Tbgrid1", ;
		Column13.Movable = .F., ;
		Column13.Name = "Column13", ;
		Column13.ReadOnly = .T., ;
		Column13.Resizable = .F., ;
		Column13.Visible = .T., ;
		Column14.CurrentControl = "Tbgrid1", ;
		Column14.Movable = .F., ;
		Column14.Name = "Column14", ;
		Column14.ReadOnly = .T., ;
		Column14.Resizable = .F., ;
		Column14.Visible = .T., ;
		Column15.CurrentControl = "Tbgrid1", ;
		Column15.Movable = .F., ;
		Column15.Name = "Column15", ;
		Column15.ReadOnly = .T., ;
		Column15.Resizable = .F., ;
		Column15.Visible = .T., ;
		Column16.Alignment = 2, ;
		Column16.Movable = .F., ;
		Column16.Name = "Column16", ;
		Column16.ReadOnly = .T., ;
		Column16.Resizable = .F., ;
		Column16.Visible = .T., ;
		Column16.Width = 40, ;
		Column2.CurrentControl = "Tbgrid1", ;
		Column2.Name = "Column2", ;
		Column2.ReadOnly = .T., ;
		Column2.Width = 36, ;
		Column3.CurrentControl = "Tbgrid1", ;
		Column3.Name = "Column3", ;
		Column3.ReadOnly = .T., ;
		Column3.Width = 98, ;
		Column4.CurrentControl = "Tbgrid1", ;
		Column4.Name = "Column4", ;
		Column4.ReadOnly = .T., ;
		Column4.Visible = .T., ;
		Column5.CurrentControl = "Tbgrid1", ;
		Column5.Name = "Column5", ;
		Column5.ReadOnly = .T., ;
		Column5.Visible = .T., ;
		Column6.CurrentControl = "Tbgrid1", ;
		Column6.Name = "Column6", ;
		Column6.ReadOnly = .T., ;
		Column6.Visible = .T., ;
		Column6.Width = 67, ;
		Column7.CurrentControl = "Tbgrid1", ;
		Column7.Name = "Column7", ;
		Column7.ReadOnly = .T., ;
		Column7.Visible = .T., ;
		Column7.Width = 63, ;
		Column8.CurrentControl = "Tbgrid1", ;
		Column8.Name = "Column8", ;
		Column8.ReadOnly = .T., ;
		Column8.Visible = .T., ;
		Column8.Width = 37, ;
		Column9.CurrentControl = "Tbgrid1", ;
		Column9.Name = "Column9", ;
		Column9.ReadOnly = .T., ;
		Column9.Visible = .T., ;
		Column9.Width = 34
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="grid" />

	ADD OBJECT 'frmBHistBr.grdBHist.Column1.Header1' AS header WITH ;
		Caption = "room", ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'frmBHistBr.grdBHist.Column1.Tbgrid1' AS tbgrid WITH ;
		Height = 10, ;
		Left = -1, ;
		Name = "Tbgrid1", ;
		ReadOnly = .T., ;
		Top = 23, ;
		Visible = .T., ;
		Width = 10
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />

	ADD OBJECT 'frmBHistBr.grdBHist.Column10.Header1' AS header WITH ;
		Caption = "bills num 1", ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'frmBHistBr.grdBHist.Column10.Tbgrid1' AS tbgrid WITH ;
		Left = 41, ;
		Name = "Tbgrid1", ;
		Top = 23
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />

	ADD OBJECT 'frmBHistBr.grdBHist.Column11.Header1' AS header WITH ;
		Caption = "bills num 2", ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'frmBHistBr.grdBHist.Column11.Tbgrid1' AS tbgrid WITH ;
		Left = 37, ;
		Name = "Tbgrid1", ;
		Top = 35
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />

	ADD OBJECT 'frmBHistBr.grdBHist.Column12.Header1' AS header WITH ;
		Caption = "bills num 3", ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'frmBHistBr.grdBHist.Column12.Tbgrid1' AS tbgrid WITH ;
		Left = 34, ;
		Name = "Tbgrid1", ;
		Top = 23
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />

	ADD OBJECT 'frmBHistBr.grdBHist.Column13.Header1' AS header WITH ;
		Caption = "bills num 4", ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'frmBHistBr.grdBHist.Column13.Tbgrid1' AS tbgrid WITH ;
		Left = 42, ;
		Name = "Tbgrid1", ;
		Top = 23
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />

	ADD OBJECT 'frmBHistBr.grdBHist.Column14.Header1' AS header WITH ;
		Caption = "bills num 5", ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'frmBHistBr.grdBHist.Column14.Tbgrid1' AS tbgrid WITH ;
		Left = 38, ;
		Name = "Tbgrid1", ;
		Top = 23
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />

	ADD OBJECT 'frmBHistBr.grdBHist.Column15.Header1' AS header WITH ;
		Caption = "bills num 6", ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'frmBHistBr.grdBHist.Column15.Tbgrid1' AS tbgrid WITH ;
		Left = 34, ;
		Name = "Tbgrid1", ;
		Top = 23
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />

	ADD OBJECT 'frmBHistBr.grdBHist.Column16.Header1' AS header WITH ;
		Caption = "more...", ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'frmBHistBr.grdBHist.Column16.Tbgrid1' AS tbgrid WITH ;
		Alignment = 2, ;
		Left = 34, ;
		Name = "Tbgrid1", ;
		Top = 23
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />

	ADD OBJECT 'frmBHistBr.grdBHist.Column2.Header1' AS header WITH ;
		Caption = "type", ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'frmBHistBr.grdBHist.Column2.Tbgrid1' AS tbgrid WITH ;
		Height = 10, ;
		Left = 6, ;
		Name = "Tbgrid1", ;
		ReadOnly = .T., ;
		Top = 23, ;
		Visible = .T., ;
		Width = 10
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />

	ADD OBJECT 'frmBHistBr.grdBHist.Column3.Header1' AS header WITH ;
		Caption = "name", ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'frmBHistBr.grdBHist.Column3.Tbgrid1' AS tbgrid WITH ;
		Height = 10, ;
		Left = 5, ;
		Name = "Tbgrid1", ;
		Top = 23, ;
		Visible = .T., ;
		Width = 10
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />

	ADD OBJECT 'frmBHistBr.grdBHist.Column4.Header1' AS header WITH ;
		Caption = "town", ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'frmBHistBr.grdBHist.Column4.Tbgrid1' AS tbgrid WITH ;
		Height = 10, ;
		Left = 2, ;
		Name = "Tbgrid1", ;
		ReadOnly = .T., ;
		Top = 23, ;
		Visible = .T., ;
		Width = 10
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />

	ADD OBJECT 'frmBHistBr.grdBHist.Column5.Header1' AS header WITH ;
		Caption = "city", ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'frmBHistBr.grdBHist.Column5.Tbgrid1' AS tbgrid WITH ;
		Left = 22, ;
		Name = "Tbgrid1", ;
		Top = 23
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />

	ADD OBJECT 'frmBHistBr.grdBHist.Column6.Header1' AS header WITH ;
		Caption = "arrival", ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'frmBHistBr.grdBHist.Column6.Tbgrid1' AS tbgrid WITH ;
		Alignment = 3, ;
		Left = 6, ;
		Name = "Tbgrid1", ;
		Top = 23, ;
		Value =
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />

	ADD OBJECT 'frmBHistBr.grdBHist.Column7.Header1' AS header WITH ;
		Caption = "departure", ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'frmBHistBr.grdBHist.Column7.Tbgrid1' AS tbgrid WITH ;
		Left = 22, ;
		Name = "Tbgrid1", ;
		Top = 35
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />

	ADD OBJECT 'frmBHistBr.grdBHist.Column8.Header1' AS header WITH ;
		Caption = "from", ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'frmBHistBr.grdBHist.Column8.Tbgrid1' AS tbgrid WITH ;
		Left = 18, ;
		Name = "Tbgrid1", ;
		Top = 35
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />

	ADD OBJECT 'frmBHistBr.grdBHist.Column9.Header1' AS header WITH ;
		Caption = "to", ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'frmBHistBr.grdBHist.Column9.Tbgrid1' AS tbgrid WITH ;
		Left = 16, ;
		Name = "Tbgrid1", ;
		Top = 23
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />

	ADD OBJECT 'frmBHistBr.oMypb' AS mypb WITH ;
		Left = -400, ;
		Name = "oMypb", ;
		showcancel = .T., ;
		Top = -400, ;
		Visible = .F.
		*< END OBJECT: ClassLib="..\libs\progressbarex.vcx" BaseClass="container" />

	ADD OBJECT 'frmBillhist' AS tform WITH ;
		Caption = "frmBillhist", ;
		ControlBox = .T., ;
		DoCreate = .T., ;
		formname = billhist, ;
		Height = 197, ;
		Icon = ..\bitmap\icons\binoculr.ico, ;
		KeyPreview = .T., ;
		MaxButton = .F., ;
		MinButton = .F., ;
		Name = "frmBillhist", ;
		Visible = .F., ;
		Width = 429, ;
		WindowState = 0
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="form" />

	ADD OBJECT 'frmBillhist.cmdCancel' AS tcommandbutton WITH ;
		Caption = "cancel", ;
		Height = 27, ;
		Left = 333, ;
		Name = "cmdCancel", ;
		TabIndex = 11, ;
		Top = 47, ;
		Width = 84
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'frmBillhist.cmdOk' AS tcommandbutton WITH ;
		Caption = "ok", ;
		Default = .T., ;
		Height = 27, ;
		Left = 333, ;
		Name = "cmdOk", ;
		TabIndex = 10, ;
		Top = 11, ;
		Width = 84
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'frmBillhist.cmdskip' AS tcommandbutton WITH ;
		Caption = "skip", ;
		Height = 27, ;
		Left = 333, ;
		Name = "cmdskip", ;
		TabIndex = 12, ;
		Top = 83, ;
		Width = 84
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'frmBillhist.dtxtArrival' AS tdatectrl WITH ;
		Height = 23, ;
		Left = 140, ;
		Name = "dtxtArrival", ;
		TabIndex = 1, ;
		Top = 9, ;
		Width = 100
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />

	ADD OBJECT 'frmBillhist.dtxtbillfrom' AS tdatectrl WITH ;
		Height = 23, ;
		Left = 140, ;
		Name = "dtxtbillfrom", ;
		TabIndex = 8, ;
		Top = 171, ;
		Width = 100
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />

	ADD OBJECT 'frmBillhist.dtxtbillto' AS tdatectrl WITH ;
		Height = 23, ;
		Left = 249, ;
		Name = "dtxtbillto", ;
		TabIndex = 9, ;
		Top = 171, ;
		Width = 100
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />

	ADD OBJECT 'frmBillhist.dtxtDeparture' AS tdatectrl WITH ;
		Height = 23, ;
		Left = 140, ;
		Name = "dtxtDeparture", ;
		TabIndex = 2, ;
		Top = 32, ;
		Width = 100
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />

	ADD OBJECT 'frmBillhist.lblArrival' AS tlabel WITH ;
		Caption = "arrival", ;
		Height = 17, ;
		Left = 8, ;
		Name = "lblArrival", ;
		TabIndex = 20, ;
		Top = 9, ;
		Width = 132
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'frmBillhist.lblbilldate' AS tlabel WITH ;
		Caption = "billdate", ;
		Height = 17, ;
		Left = 8, ;
		Name = "lblbilldate", ;
		TabIndex = 19, ;
		Top = 175, ;
		Width = 132
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'frmBillhist.lblBillNum' AS tlabel WITH ;
		Caption = "bill num", ;
		Height = 17, ;
		Left = 8, ;
		Name = "lblBillNum", ;
		TabIndex = 16, ;
		Top = 57, ;
		Width = 132
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'frmBillhist.lblCompany' AS tlabel WITH ;
		Caption = "company", ;
		Height = 17, ;
		Left = 8, ;
		Name = "lblCompany", ;
		TabIndex = 14, ;
		Top = 128, ;
		Width = 132
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'frmBillhist.lblDeparture' AS tlabel WITH ;
		Caption = "departure", ;
		Height = 17, ;
		Left = 8, ;
		Name = "lblDeparture", ;
		TabIndex = 18, ;
		Top = 33, ;
		Width = 132
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'frmBillhist.lblInvoice' AS tlabel WITH ;
		Caption = "invoice", ;
		Height = 17, ;
		Left = 8, ;
		Name = "lblInvoice", ;
		TabIndex = 13, ;
		Top = 152, ;
		Width = 132
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'frmBillhist.lblName' AS tlabel WITH ;
		Caption = "name", ;
		Height = 17, ;
		Left = 8, ;
		Name = "lblName", ;
		TabIndex = 15, ;
		Top = 104, ;
		Width = 132
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'frmBillhist.lblReserId' AS tlabel WITH ;
		Caption = "reser id", ;
		Height = 17, ;
		Left = 8, ;
		Name = "lblReserId", ;
		TabIndex = 17, ;
		Top = 80, ;
		Width = 132
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'frmBillhist.txtBillNum' AS ttext WITH ;
		InputMask = ("!#########"), ;
		Left = 140, ;
		Name = "txtBillNum", ;
		TabIndex = 3, ;
		Top = 55, ;
		Width = 120
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />

	ADD OBJECT 'frmBillhist.txtCompany' AS ttext WITH ;
		InputMask = ("!!!!!!!!!!!!!!!!!!!!!!!!!"), ;
		Left = 140, ;
		Name = "txtCompany", ;
		TabIndex = 6, ;
		Top = 124, ;
		Width = 180
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />

	ADD OBJECT 'frmBillhist.txtInvoice' AS ttext WITH ;
		InputMask = ("!!!!!!!!!!!!!!!!!!!!!!!!!"), ;
		Left = 140, ;
		Name = "txtInvoice", ;
		TabIndex = 7, ;
		Top = 147, ;
		Width = 180
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />

	ADD OBJECT 'frmBillhist.txtName' AS ttext WITH ;
		InputMask = ("!!!!!!!!!!!!!!!!!!!!!!!!!"), ;
		Left = 140, ;
		Name = "txtName", ;
		TabIndex = 5, ;
		Top = 101, ;
		Width = 180
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />

	ADD OBJECT 'frmBillhist.txtReserId' AS ttext WITH ;
		Alignment = 3, ;
		InputMask = ("99999999.999"), ;
		Left = 140, ;
		Name = "txtReserId", ;
		TabIndex = 4, ;
		Top = 78, ;
		Value = 0.000, ;
		Width = 120
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />
	
	PROCEDURE billaddressget
		LPARAMETERS lp_nPsWindow
		PRIVATE g_BillNum
		LOCAL l_cToolTipText, l_cTitle, l_cDepartment, l_cName, l_cStreet1, l_cStreet2, l_cCity, l_cCountry, ;
				l_nSelect, l_cBillNr, l_nAddrId
		LOCAL ARRAY l_aReportHeader(7)
		l_cToolTipText = ""
		IF EMPTY(lp_nPsWindow)
			RETURN l_cToolTipText
		ENDIF
		l_cBillNr = IIF(curResultCursor.hr_reserid = 0.100, curResultCursor.c_billnum, FNGetBillData(curResultCursor.hr_reserid, lp_nPsWindow, 'bn_billnum'))
		IF EMPTY(l_cBillNr)
			RETURN l_cToolTipText
		ENDIF
		
		IF SEEK(l_cBillNr, "billnum", "tag1") AND SEEK(billnum.bn_addrid, "address", "tag1") AND ;
				curResultCursor.c_history = 1 AND (curResultCursor.hr_reserid = histres.hr_reserid OR SEEK(curResultCursor.hr_reserid, "histres", "tag1")) AND ;
				(curResultCursor.hr_reserid = hresext.rs_reserid OR SEEK(curResultCursor.hr_reserid, "hresext", "tag1") OR .T.) OR ;
				curResultCursor.c_history <> 1 AND (curResultCursor.hr_reserid = reservat.rs_reserid OR SEEK(curResultCursor.hr_reserid, "reservat", "tag1") OR .T.)
			l_nSelect = SELECT()
			g_BillNum = l_cBillNr
			DO BillReportHeader IN ProcBill WITH (curResultCursor.c_history = 1), lp_nPsWindow, l_aReportHeader
			l_cTitle = ALLTRIM(l_aReportHeader(1))
			l_cDepartment = ALLTRIM(l_aReportHeader(2))
			l_cName = ALLTRIM(l_aReportHeader(3))
			l_cStreet1 = ALLTRIM(l_aReportHeader(4))
			l_cStreet2 = ALLTRIM(l_aReportHeader(5))
			l_cCity = ALLTRIM(l_aReportHeader(6))
			l_cCountry = ALLTRIM(l_aReportHeader(7))
		
			l_cToolTipText = l_cTitle + IIF(NOT EMPTY(l_cTitle), CHR(13), "") + ;
					l_cDepartment + IIF(NOT EMPTY(l_cDepartment), CHR(13), "") + ;
					l_cName + IIF(NOT EMPTY(l_cName), CHR(13), "") + ;
					l_cStreet1 + IIF(NOT EMPTY(l_cStreet1), CHR(13), "") + ;
					l_cStreet2 + IIF(NOT EMPTY(l_cStreet2), CHR(13), "") + ;
					l_cCity + IIF(NOT EMPTY(l_cCity), CHR(13), "") + ;
					l_cCountry
			SELECT (l_nSelect)
		ENDIF
		
		RETURN l_cToolTipText
	ENDPROC

	PROCEDURE cancelsearch
		IF this.frmBHistBr.Visible
			this.frmBillhist.Visible = .F.
		ELSE
			this.OnClose()
		ENDIF
	ENDPROC

	PROCEDURE cvouchernumber_assign
		LPARAMETERS lp_cNewVal
		
		this.cVoucherNumber = lp_cNewVal
		
		this.frmBHistBr.Caption = GetLangText("BILLHIST","TW_BILLHIST") + ;
				IIF(EMPTY(this.cVoucherNumber),""," [" + GetLangText("VOUCHER","TXT_VCAPTION") + ;
				": " + this.cVoucherNumber + "]")
	ENDPROC

	PROCEDURE grid_refresh_record
		IF NOT CHR(2) $ curResultCursor.c_rmname
			REPLACE c_rmname WITH ALLTRIM(get_rm_rmname(curResultCursor.c_roomnum)) + CHR(2) IN curResultCursor
		ENDIF
		IF NOT CHR(2) $ curResultCursor.c_rtname
			REPLACE c_rtname WITH ALLTRIM(get_rt_roomtyp(curResultCursor.c_roomtyp)) + CHR(2) IN curResultCursor
		ENDIF
		IF NOT CHR(2) $ curResultCursor.c_bname
			REPLACE c_bname WITH ALLTRIM(GetReservatName('curResultCursor','curResultCursor','curResultCursor')) + CHR(2) IN curResultCursor
		ENDIF
		IF NOT CHR(2) $ curResultCursor.c_arrd
			REPLACE c_arrd WITH ALLTRIM(MakeShorDateString(curResultCursor.c_arrdate)) + CHR(2) IN curResultCursor
			*WAIT WINDOW TRANSFORM(RECNO("curResultCursor")) NOWAIT
		ENDIF
		IF NOT CHR(2) $ curResultCursor.c_depd
			REPLACE c_depd WITH ALLTRIM(MakeShorDateString(curResultCursor.c_depdate)) + CHR(2) IN curResultCursor
		ENDIF
		IF NOT CHR(2) $ curResultCursor.c_b1
			REPLACE c_b1 WITH this.grid_refresh_record_get_billnum(1) + CHR(2) IN curResultCursor
		ENDIF
		IF NOT CHR(2) $ curResultCursor.c_b2
			REPLACE c_b2 WITH this.grid_refresh_record_get_billnum(2) + CHR(2) IN curResultCursor
		ENDIF
		IF NOT CHR(2) $ curResultCursor.c_b3
			REPLACE c_b3 WITH this.grid_refresh_record_get_billnum(3) + CHR(2) IN curResultCursor
		ENDIF
		IF NOT CHR(2) $ curResultCursor.c_b4
			REPLACE c_b4 WITH this.grid_refresh_record_get_billnum(4) + CHR(2) IN curResultCursor
		ENDIF
		IF NOT CHR(2) $ curResultCursor.c_b5
			REPLACE c_b5 WITH this.grid_refresh_record_get_billnum(5) + CHR(2) IN curResultCursor
		ENDIF
		IF NOT CHR(2) $ curResultCursor.c_b6
			REPLACE c_b6 WITH this.grid_refresh_record_get_billnum(6) + CHR(2) IN curResultCursor
		ENDIF
		IF NOT CHR(2) $ curResultCursor.c_bmf
			REPLACE c_bmf WITH this.grid_refresh_record_get_more_billnums() + CHR(2) IN curResultCursor
		ENDIF
		
		RETURN curResultCursor.c_rmname
		
		
		
	ENDPROC

	PROCEDURE grid_refresh_record_get_billnum
		LPARAMETERS lp_nWindow
		LOCAL l_cBillNum, l_cFor
		
		l_cBillNum = ""
		
		DO CASE
			CASE EMPTY(lp_nWindow) OR EMPTY(curResultCursor.hr_reserid)
			CASE curResultCursor.hr_reserid = 0.100
				IF lp_nWindow = 1
					l_cBillNum = ALLTRIM(curResultCursor.c_billnum)
				ENDIF
			OTHERWISE
				l_cFor = "bn_reserid = " + SqlCnv(curResultCursor.hr_reserid) + " AND bn_status <> 'CXL' AND bn_window = " + SqlCnv(lp_nWindow)
				SELECT gbillnum
				LOCATE FOR &l_cFor
				IF FOUND()
					l_cBillNum = ALLTRIM(bn_billnum)
				ENDIF
		ENDCASE
		
		RETURN l_cBillNum
	ENDPROC

	PROCEDURE grid_refresh_record_get_more_billnums
		LOCAL l_cRetval, l_cFor
		l_cRetval = ""
		
		IF hr_reserid > 1
			l_cFor = "bn_reserid = " + SqlCnv(curResultCursor.hr_reserid) + " AND bn_status <> 'CXL' AND bn_window > 6"
			SELECT gbillnum
			LOCATE FOR &l_cFor
			IF FOUND()
				l_cRetval = ">"
			ENDIF
		ENDIF
		
		RETURN l_cRetval
	ENDPROC

	PROCEDURE Init
		LPARAMETERS lp_nVoucherNumber
		
		this.lDefStyle = .T.
		this.nStyle = MAX(paRam.pa_billsty, 1)
		IF EMPTY(lp_nVoucherNumber)
			this.frmBillhist.Show()
		ELSE
			this.nvo_number = lp_nVoucherNumber
			this.cVoucherNumber = TRANSFORM(lp_nVoucherNumber)+"XX"
			IF this.SearchTables()
				this.frmBHistBr.Show()
				this.frmBHistBr.grdBHist.SetFocus()
			ELSE
				RETURN .F.
			ENDIF
		ENDIF
	ENDPROC

	PROCEDURE Load
		LOCAL l_cSql
		
		DO ini
		
		openfile(.F., "param")
		openfile(.F., "histres")
		openfile(.F., "address")
		openfile(.F., "billnum")
		OpenFileDirect(, "billnum", "gbillnum")
		openfile(.F., "post")
		openfile(.F., "histpost")
		openfile(.F., "ratecode")
		openfile(.F., "ratearti")
		openfile(.F., "article")
		openfile(.F., "paymetho")
		openfile(.F., "reservat")
		openfile(.F., "room")
		openfile(.F., "hresext")
		openfile(.F., "apartner")
		openfile(.F., "resrart")
		openfile(.F., "hresrart")
		
		* Needed in this.billaddressget()
		
		* Initialize lang variables for report. When not initialized, error can occour in BillReportHeader function.
		g_Rptlngnr = g_Langnum
		g_Rptlng = g_Language
		
		* Create empty cursor for grid
		
		TEXT TO l_cSql TEXTMERGE NOSHOW PRETEXT 15
		SELECT CAST('' AS Char(11)) AS c_rmname, 
			CAST('' AS Char(11)) AS c_rtname, 
			CAST('' AS Char(30)) AS c_bname, 
			ad_city AS c_city, 
			rs_company AS c_company, 
			CAST('' AS Char(9)) AS c_arrd, 
			CAST('' AS Char(9)) AS c_depd, 
			rs_arrtime AS c_arrtime, 
			rs_deptime AS c_deptime, 
			CAST('' AS Char(11)) AS c_b1, 
			CAST('' AS Char(11)) AS c_b2, 
			CAST('' AS Char(11)) AS c_b3, 
			CAST('' AS Char(11)) AS c_b4, 
			CAST('' AS Char(11)) AS c_b5, 
			CAST('' AS Char(11)) AS c_b6, 
			' ' AS c_bmf 
			FROM billnum, reservat, address, apartner
			WHERE 0=1
		ENDTEXT
		SqlCursor(l_cSql, "curResultCursor",,,,,,.T.)
		
		RETURN .T.
	ENDPROC

	PROCEDURE onclose
		******************** Delete temp files *************************************************************
		*
		ProcArchive("DeleteTempArchive", "histres,hresext,histpost")
		*
		****************************************************************************************************
		
		this.frmBHistBr.HideToolbar()
		this.Release()
	ENDPROC

	PROCEDURE ondelete
		LOCAL l_oCheckReservat, l_lDelete, l_oEnvironment, l_lInHistory
		
		IF this.lSpecLogin
			IF curResultCursor.hr_reserid < 1 OR curResultCursor.c_history = 0
				Alert(GetLangText("BILLHIST","TA_PASSERBY"))
			ELSE
				l_oEnvironment = SetEnvironment("manager, mngbuild, orstat, histors, astat, histstat, roomtype, room, " + ;
					"post, postchng, histpost, hpostcng, reservat, histres, resrooms, hresroom, resrate, hresrate")
				IF NOT SEEK(curResultCursor.hr_reserid, "reservat", "tag1")
					IF SEEK(curResultCursor.hr_reserid, "histres", "tag1")
						ProcReservat("FromHistToRes", curResultCursor.hr_reserid)
						ProcReservat("FromHistToPost", curResultCursor.hr_reserid)
						l_lInHistory = .T.
					ELSE
						Alert(GetLangText("BILLHIST","TA_NO_RESERVATION"))
						RETURN
					ENDIF
				ENDIF
				l_oCheckReservat = CREATEOBJECT("CheckReservat")
				l_oCheckReservat.DeleteReser("reservat", .T., .T., this.lSpecLogin)
				l_lDelete = NOT SEEK(curResultCursor.hr_reserid, "reservat", "tag1")
				IF l_lDelete
					ProcBill("SpcAfterDeleteReser", curResultCursor.hr_reserid, l_lInHistory)
					DELETE IN curResultCursor
					this.Refresh()
				ELSE
					IF l_lInHistory
						ProcReservat("FromResToHist", curResultCursor.hr_reserid)
					ENDIF
				ENDIF
			ENDIF
		ENDIF
	ENDPROC

	PROCEDURE onedit
		LOCAL l_nPsWindow, l_oParams
		LOCAL ARRAY LArray(2)
		
		IF curResultCursor.hr_reserid < 1
			Alert(GetLangText("BILLHIST","TA_PASSERBY"))
		ELSE
			IF NOT this.lSpecLogin AND (curResultCursor.c_history = 1 AND (curResultCursor.hr_reserid = histres.hr_reserid OR SEEK(curResultCursor.hr_reserid, "histres", "tag1")) AND ;
					(curResultCursor.hr_reserid = hresext.rs_reserid OR SEEK(curResultCursor.hr_reserid, "hresext", "tag1") OR .T.) OR ;
					curResultCursor.c_history <> 1 AND (curResultCursor.hr_reserid = reservat.rs_reserid OR SEEK(curResultCursor.hr_reserid, "reservat", "tag1") OR .T.))
				l_oParams = MakeStructure("cbillfrxname")
				l_oParams.cbillfrxname = ""
				DO FORM "forms\billhistselectwin" WITH "", l_oParams TO l_nPsWindow
		
				IF EMPTY(l_nPsWindow)
					RETURN
				ELSE
					this.cBillNum = FNGetBillData(curresultcursor.hr_reserid, l_nPsWindow, "bn_billnum")
				ENDIF
			ENDIF
			LArray(1) = curResultCursor.hr_reserid
			LArray(2) = this.frmBHistBr
			doform('frmbills','forms\bills','',.T.,@LArray)
		ENDIF
		
		RETURN
	ENDPROC

	PROCEDURE onpreviewbill
		this.printbill(.T.)
	ENDPROC

	PROCEDURE onprintbill
		this.printbill(.F.)
	ENDPROC

	PROCEDURE onprintrange
		PRIVATE p_dFrom, p_dTo
		LOCAL l_cCur, l_cBillFrxName, l_nStyle, l_cPrinterName, l_aDialog
		LOCAL ARRAY l_aDialog(3,11)
		STORE {} TO p_dFrom, p_dTo
		STORE "" TO l_cBillFrxName, l_cPrinterName
		
		l_aDialog[1, 1] = "txtStartDate"
		l_aDialog[1, 2] = GetLangText("BILLHIST","TH_FROM")
		l_aDialog[1, 3] = "SysDate()"
		l_aDialog[1, 4] = ""
		l_aDialog[1, 5] = 16
		l_aDialog[1, 6] = ""
		l_aDialog[1, 7] = ""
		l_aDialog[2, 1] = "txtEndDate"
		l_aDialog[2, 2] = GetLangText("BILLHIST","TH_TO")
		l_aDialog[2, 3] = "SysDate()"
		l_aDialog[2, 4] = ""
		l_aDialog[2, 5] = 16
		l_aDialog[2, 6] = ""
		l_aDialog[2, 7] = ""
		l_aDialog(3,1) = "cbofrx"
		l_aDialog(3,2) = GetLangText("BILL","TXT_BILL_LAYOUT_FILE")
		l_aDialog(3,3) = "[BILLCPY1.FRX]"
		l_aDialog(3,4) = "@G"
		l_aDialog(3,5) = 40
		l_aDialog(3,6) = ""
		l_aDialog(3,7) = ""
		l_aDialog(3,9) = "SELECT li_lang"+g_langnum+", li_frx FROM lists WHERE li_menu = 0 AND (LEFT(li_frx,8)='BILLCPY1' OR LEFT(li_frx,5)='BILL1') ORDER BY 1"
		l_aDialog(3,11) = CREATEOBJECT("collection")
		l_aDialog(3,11).Add(2,"ColumnCount")
		l_aDialog(3,11).Add(2,"BoundColumn")
		l_aDialog(3,11).Add(.T.,"BoundTo")
		l_aDialog(3,11).Add(.F.,"ColumnLines")
		l_aDialog(3,11).Add("250,150","ColumnWidths")
		l_aDialog(3,11).Add(3,"RowSourceType")
		
		
		IF Dialog(GetLangText("BILL","TXT_PRINT_BILLS"),GetLangText("RESERVAT","T_CREATED"),@l_aDialog)
			p_dFrom = l_aDialog(1,8)
			p_dTo = l_aDialog(2,8)
			l_cBillFrxName = ALLTRIM(l_aDialog(3,8))
		ELSE
			RETURN .T.
		ENDIF
		
		* Get all bills, which have record in histpost. Only records from histpost are shown.
		
		TEXT TO l_cSql TEXTMERGE NOSHOW PRETEXT 15
		
		SELECT b2.bn_billnum, b2.bn_reserid, b2.bn_window, b2.bn_addrid, ICASE(NOT ISNULL(hr_reserid),1,NOT ISNULL(rs_reserid),2,0) AS c_history, CAST(NVL(hr_rsid, rs_rsid) AS Integer) AS c_rsid ;
		     FROM ;
		     (SELECT bn_billnum ;
		          FROM billnum ;
		          LEFT JOIN histpost ON bn_billnum = hp_billnum ;
		          LEFT JOIN post ON bn_billnum = ps_billnum ;
		          WHERE bn_date BETWEEN __SQLPARAM__p_dFrom AND  __SQLPARAM__p_dTo AND bn_status = 'PCO' AND (NOT ISNULL(hp_billnum) OR NOT ISNULL(ps_billnum)) ;
		          GROUP BY 1) c1 ;
		     INNER JOIN billnum b2 ON b2.bn_billnum = c1.bn_billnum ;
		     LEFT JOIN histres ON b2.bn_reserid = hr_reserid ;
		     LEFT JOIN reservat ON b2.bn_reserid = rs_reserid ;
		     ORDER BY b2.bn_billnum
		
		ENDTEXT
		
		l_cCur = sqlcursor(l_cSql,"",.F.,"",.NULL.,.T.)
		IF USED(l_cCur) AND RECCOUNT()>0
			l_cPrinterName = GETPRINTER()
			IF NOT EMPTY(l_cPrinterName)
				SET PRINTER TO NAME (l_cPrinterName)
		
				this.frmBHistBr.cmdfocus.Visible = .T.
				this.frmBHistBr.grdBHist.Visible = .F.
				this.frmBHistBr.cmdfocus.SetFocus()
		
				WAIT WINDOW "" TIMEOUT .001
		
				* Delete keyboard buffer, for LASTKEY()
				KEYBOARD '{SPACEBAR}'
		
				WAIT WINDOW "" TIMEOUT .001
		
				DO FORM forms\billhistoryprintbills.scx WITH l_cCur, l_cBillFrxName
				
				SET PRINTER TO DEFAULT
				this.frmBHistBr.grdBHist.Visible = .T.
				this.frmBHistBr.cmdfocus.Visible = .F.
				this.frmBHistBr.grdBHist.SetFocus()
			ENDIF
		ELSE
			= alErt(GetLangText("RATES","TA_NODATA")+"!")
		ENDIF
		
		dclose(l_cCur)
		
		RETURN .T.
	ENDPROC

	PROCEDURE onsearch
		this.frmBillhist.txtReserId.Value = 0.000
		this.frmBillhist.Visible = .T.
		this.frmBillhist.dtxtArrival.SetFocus()
	ENDPROC

	PROCEDURE onspeciallogin
		PRIVATE cBmpFile, p_lSpecLogin
		p_lSpecLogin = .F.
		cBmpFile = IIF(FILE("logo.bmp"), "Logo.Bmp", "")
		DO FORM Forms\Login.scx WITH "SPECIAL"
		this.lSpecLogin = p_lSpecLogin
	ENDPROC

	PROCEDURE printbill
		LPARAMETERS lp_lPreviewOrPrint
		LOCAL l_nPrintBillnum, l_oParams, l_nBillNum, l_nBillAddrId, l_lUseBDateInStyle
		
		IF curResultCursor.c_history = 1 AND (curResultCursor.hr_reserid = histres.hr_reserid OR SEEK(curResultCursor.hr_reserid, "histres", "tag1")) AND ;
				(curResultCursor.hr_reserid = hresext.rs_reserid OR SEEK(curResultCursor.hr_reserid, "hresext", "tag1") OR .T.) OR ;
				curResultCursor.c_history <> 1 AND (curResultCursor.hr_reserid = reservat.rs_reserid OR SEEK(curResultCursor.hr_reserid, "reservat", "tag1") OR .T.)
			l_oParams = CREATEOBJECT("Empty")
			ADDPROPERTY(l_oParams, "cbillfrxname", "")
			DO FORM "forms\billhistselectwin" WITH "", l_oParams TO l_nPrintBillnum
		
			IF NOT EMPTY(l_nPrintBillnum)
				SELECT curresultcursor
				IF hr_reserid = 0.100 OR c_history = 0
					DO PrintPassCopy IN billhist WITH c_billnum, lp_lPreviewOrPrint
				ELSE
					IF this.ldefstyle
						this.nstyle = ProcBillStyle(hr_rsid, l_nPrintBillnum, @l_lUseBDateInStyle, (c_history = 1))
					ELSE
						l_lUseBDateInStyle = thisformset.lUseBookingDate
					ENDIF
					* Determine addrid
					l_nBillNum = FNGetBillData(curresultcursor.hr_reserid, l_nPrintBillnum, "bn_billnum")
					l_nBillAddrId = dlookup("billnum","bn_billnum = " + sqlcnv(l_nBillNum,.T.),"bn_addrid")
					DO PrintCopy IN billhist WITH hr_reserid, l_nPrintBillnum, lp_lPreviewOrPrint, ;
								this.nstyle, l_lUseBDateInStyle, l_nBillAddrId,,l_oParams.cbillfrxname
				ENDIF
			ENDIF
			this.frmBHistBr.grdBHist.SetFocus()
		ENDIF
	ENDPROC

	PROCEDURE restorearchive
		LPARAMETERS lp_cArcBnWhere, lp_cArcHrWhere, lp_cArcAdWhere
		LOCAL l_cArchHr, l_cArchRs, l_cArchHp, l_cChildsId
		
		STORE "" TO l_cArchHr, l_cArchRs, l_cArchHp, l_cChildsId
		DO CASE
			CASE NOT _screen.oGlobal.lArchive
			CASE NOT EMPTY(this.nvo_number)
			*---- V O U C H E R   N O ----
				* Show all bills for one voucher
				TEXT TO l_cArchHr TEXTMERGE NOSHOW PRETEXT 15
				SELECT histres.* FROM histres
					INNER JOIN (
					SELECT hp_reserid AS c_reserid FROM histpost
						WHERE hp_voucnum = <<SqlCnvB(this.nvo_number,.T.)>>
						GROUP BY hp_reserid
					) hp ON hr_reserid = c_reserid
				ENDTEXT
				TEXT TO l_cArchRs TEXTMERGE NOSHOW PRETEXT 15
				SELECT hresext.* FROM hresext
					INNER JOIN (
					SELECT hp_reserid AS c_reserid FROM histpost
						WHERE hp_voucnum = <<SqlCnvB(this.nvo_number,.T.)>>
						GROUP BY hp_reserid
					) hp ON rs_reserid = c_reserid
				ENDTEXT
				TEXT TO l_cArchHp TEXTMERGE NOSHOW PRETEXT 15
				SELECT histpost.* FROM histpost
					INNER JOIN (
					SELECT hp_reserid AS c_reserid FROM histpost
						WHERE hp_reserid > 1 AND hp_voucnum = <<SqlCnvB(this.nvo_number,.T.)>>
						GROUP BY hp_reserid
					) hp ON hp_reserid = c_reserid
				UNION
				SELECT histpost.* FROM histpost
					INNER JOIN (
					SELECT hp_billnum AS c_billnum FROM histpost
						WHERE hp_voucnum = <<SqlCnvB(this.nvo_number,.T.)>>
						GROUP BY hp_billnum
					) hp ON hp_billnum = c_billnum
				ENDTEXT
			OTHERWISE
				IF NOT EMPTY(lp_cArcBnWhere)
					TEXT TO l_cArchHr TEXTMERGE NOSHOW PRETEXT 15
					SELECT histres.* FROM histres
						INNER JOIN (
						SELECT hr_reserid AS c_reserid FROM histres
							INNER JOIN billnum ON bn_reserid = hr_reserid AND <<lp_cArcBnWhere>>
							GROUP BY hr_reserid
						) hr ON hr_reserid = c_reserid
					ENDTEXT
					TEXT TO l_cArchRs TEXTMERGE NOSHOW PRETEXT 15
					SELECT hresext.* FROM hresext
						INNER JOIN (
						SELECT rs_reserid AS c_reserid FROM hresext
							INNER JOIN billnum ON bn_reserid = rs_reserid AND <<lp_cArcBnWhere>>
							GROUP BY rs_reserid
						) rs ON rs_reserid = c_reserid
					ENDTEXT
					TEXT TO l_cArchHp TEXTMERGE NOSHOW PRETEXT 15
					SELECT histpost.* FROM histpost
						INNER JOIN billnum ON bn_billnum = hp_billnum AND <<lp_cArcBnWhere>>
					UNION
					SELECT histpost.* FROM histpost
						INNER JOIN (
						SELECT bn_reserid AS c_reserid FROM billnum
							WHERE bn_reserid > 1 AND <<lp_cArcBnWhere>>
							GROUP BY bn_reserid
						) bn ON hp_reserid = c_reserid
					ENDTEXT
				ENDIF
				IF NOT EMPTY(lp_cArcHrWhere)
					TEXT TO l_cArchHr TEXTMERGE NOSHOW PRETEXT 15
					<<IIF(EMPTY(l_cArchHr), "", l_cArchHr + " UNION")>>
					SELECT histres.* FROM histres
						WHERE <<lp_cArcHrWhere>>
					ENDTEXT
					TEXT TO l_cArchRs TEXTMERGE NOSHOW PRETEXT 15
					<<IIF(EMPTY(l_cArchRs), "", l_cArchRs + " UNION")>>
					SELECT hresext.* FROM hresext
						INNER JOIN histres ON hr_reserid = rs_reserid AND <<lp_cArcHrWhere>>
					ENDTEXT
					TEXT TO l_cArchHp TEXTMERGE NOSHOW PRETEXT 15
					<<IIF(EMPTY(l_cArchHp), "", l_cArchHp + " UNION")>>
					SELECT histpost.* FROM histpost
						INNER JOIN histres ON hr_reserid = hp_reserid AND <<lp_cArcHrWhere>>
					ENDTEXT
				ENDIF
				IF NOT EMPTY(lp_cArcAdWhere)
					SELECT ad_addrid FROM address WHERE &lp_cArcAdWhere INTO CURSOR curtemp6551
					SCAN
						l_cChildsId = l_cChildsId + IIF(EMPTY(l_cChildsId), "", ",") + TRANSFORM(ad_addrid)
					ENDSCAN
					USE
					IF EMPTY(l_cChildsId)
						l_cChildsId = "0"
					ENDIF
					IF NOT EMPTY(this.frmBillhist.txtname.Value)
						TEXT TO l_cArchHr TEXTMERGE NOSHOW PRETEXT 15
						<<IIF(EMPTY(l_cArchHr), "", l_cArchHr + " UNION")>>
						SELECT histres.* FROM histres
							WHERE hr_addrid IN (<<l_cChildsId>>)
						ENDTEXT
						TEXT TO l_cArchRs TEXTMERGE NOSHOW PRETEXT 15
						<<IIF(EMPTY(l_cArchRs), "", l_cArchRs + " UNION")>>
						SELECT hresext.* FROM hresext
							INNER JOIN histres ON hr_reserid = rs_reserid AND hr_addrid IN (<<l_cChildsId>>)
						ENDTEXT
						TEXT TO l_cArchHp TEXTMERGE NOSHOW PRETEXT 15
						<<IIF(EMPTY(l_cArchHp), "", l_cArchHp + " UNION")>>
						SELECT histpost.* FROM histpost
							INNER JOIN histres ON hr_reserid = hp_reserid AND hr_addrid IN (<<l_cChildsId>>)
						ENDTEXT
					ENDIF
					IF NOT EMPTY(this.frmBillhist.txtcompany.Value)
						TEXT TO l_cArchHr TEXTMERGE NOSHOW PRETEXT 15
						<<IIF(EMPTY(l_cArchHr), "", l_cArchHr + " UNION")>>
						SELECT histres.* FROM histres
							INNER JOIN hpwindow ON pw_rsid = hr_rsid AND pw_window = 2
							WHERE pw_addrid IN (<<l_cChildsId>>)
						ENDTEXT
						TEXT TO l_cArchRs TEXTMERGE NOSHOW PRETEXT 15
						<<IIF(EMPTY(l_cArchRs), "", l_cArchRs + " UNION")>>
						SELECT hresext.* FROM hresext
							INNER JOIN hpwindow ON pw_rsid = rs_rsid AND pw_window = 2
							WHERE pw_addrid IN (<<l_cChildsId>>)
						ENDTEXT
						TEXT TO l_cArchHp TEXTMERGE NOSHOW PRETEXT 15
						<<IIF(EMPTY(l_cArchHp), "", l_cArchHp + " UNION")>>
						SELECT histpost.* FROM histpost
							INNER JOIN histres ON hr_reserid = hp_reserid
							INNER JOIN hpwindow ON pw_rsid = hr_rsid AND pw_window = 2
							WHERE pw_addrid IN (<<l_cChildsId>>)
						ENDTEXT
					ENDIF
					IF NOT EMPTY(this.frmBillhist.txtinvoice.Value)
						TEXT TO l_cArchHr TEXTMERGE NOSHOW PRETEXT 15
						<<IIF(EMPTY(l_cArchHr), "", l_cArchHr + " UNION")>>
						SELECT histres.* FROM histres
							WHERE hr_invid IN (<<l_cChildsId>>)
						ENDTEXT
						TEXT TO l_cArchRs TEXTMERGE NOSHOW PRETEXT 15
						<<IIF(EMPTY(l_cArchRs), "", l_cArchRs + " UNION")>>
						SELECT hresext.* FROM hresext
							INNER JOIN histres ON hr_reserid = rs_reserid AND hr_invid IN (<<l_cChildsId>>)
						ENDTEXT
						TEXT TO l_cArchHp TEXTMERGE NOSHOW PRETEXT 15
						<<IIF(EMPTY(l_cArchHp), "", l_cArchHp + " UNION")>>
						SELECT histpost.* FROM histpost
							INNER JOIN histres ON hr_reserid = hp_reserid AND hr_invid IN (<<l_cChildsId>>)
						ENDTEXT
					ENDIF
				ENDIF
		ENDCASE
		
		IF NOT EMPTY(l_cArchHr) AND NOT EMPTY(l_cArchRs) AND NOT EMPTY(l_cArchHp)
			ProcArchive("RestoreArchive", "histres,hresext,histpost", l_cArchHr+";"+l_cArchRs+";"+l_cArchHp, {})
		ENDIF
		
		RETURN .T.
	ENDPROC

	PROCEDURE searchtables
		LOCAL l_nArea, l_cJoin, l_cWhere, l_cPassWhere, l_cOrder, l_cSql, l_cPassSql, l_lRet
		LOCAL l_dArrival, l_dDeparture, l_cBillNum, l_cName, l_cCompany, l_cInvoice, l_curVoucher
		LOCAL l_dBillFrom, l_dBillTo, l_cPassJoin, l_nReserId, l_cArcBnWhere, l_cArcHrWhere, l_cArcAdWhere
		
		l_nArea = SELECT()
		
		l_dArrival = this.frmBillhist.dtxtArrival.Value
		l_dDeparture = this.frmBillhist.dtxtDeparture.Value
		l_cBillNum = ALLTRIM(this.frmBillhist.txtbillNum.Value)
		l_nReserId = this.frmBillhist.txtReserId.Value
		l_cName = ALLTRIM(this.frmBillhist.txtname.Value)
		l_cCompany = ALLTRIM(this.frmBillhist.txtcompany.Value)
		l_cInvoice = ALLTRIM(this.frmBillhist.txtinvoice.Value)
		l_dBillFrom = this.frmBillhist.dtxtbillfrom.Value
		l_dBillTo = this.frmBillhist.dtxtbillto.Value
		
		STORE "" TO l_cJoin, l_cPassJoin, l_cPassWhere, l_cArcBnWhere, l_cArcHrWhere, l_cArcAdWhere
		
		IF NOT EMPTY(l_nReserId)
			l_cWhere = "bn.bn_reserid = " + sqlcnv(l_nReserId)
		ELSE
			l_cWhere = "bn.bn_reserid > 1 AND bn.bn_status = 'PCO'"
			l_cPassWhere = "bn_reserid = 0.100 AND bn_status = 'PCO'"
		ENDIF
		l_cOrder = "3 DESC, 19"
		
		DO CASE
			CASE NOT EMPTY(this.nvo_number)
			*---- V O U C H E R   N O ----
				* Show all bills for one voucher
				l_cJoin = "LEFT JOIN post ON bn.bn_billnum = ps_billnum AND ps_voucnum = " + sqlcnv(this.nvo_number,.T.) + " " + ;
						"LEFT JOIN histpost ON bn.bn_billnum = hp_billnum AND hp_voucnum = " + sqlcnv(this.nvo_number,.T.)
				l_cWhere = SqlAnd("NOT (ISNULL(ps_billnum) AND ISNULL(hp_billnum))", l_cWhere)
				l_cPassWhere = SqlAnd("NOT (ISNULL(ps_billnum) AND ISNULL(hp_billnum))", l_cPassWhere)
				l_cPassJoin = STRTRAN(l_cJoin, "bn.")	&& No BN alias in select UNION part.
				l_cOrder = "3 ASC"
			CASE EMPTY(l_cBillNum) AND EMPTY(l_dBillFrom) AND EMPTY(l_dBillTo) AND EMPTY(l_cName) AND EMPTY(l_cCompany) AND EMPTY(l_cInvoice) ;
					AND EMPTY(l_dArrival) AND EMPTY(l_dDeparture)
				IF this.frmBillhist.lSkip
					RETURN .F.
				ENDIF
			OTHERWISE
			*--- B I L L   N U M B E R ---
				IF NOT EMPTY(l_cBillNum)
					l_cArcBnWhere = SqlAnd(l_cArcBnWhere, "bn_billnum = " + SqlCnvB(l_cBillNum,.T.))
					l_cJoin = "INNER JOIN billnum bnb ON bnb.bn_reserid = bn.bn_reserid AND bnb.bn_billnum = " + SqlCnv(l_cBillNum,.T.)
					*l_cWhere = SqlAnd("bn.bn_billnum = " + SqlCnv(l_cBillNum,.T.), l_cWhere)
					l_cPassWhere = SqlAnd("bn_billnum = " + SqlCnv(l_cBillNum,.T.), l_cPassWhere)
				ENDIF
				DO CASE
					CASE NOT EMPTY(l_dBillFrom) AND NOT EMPTY(l_dBillTo)
			*------- BILL FROM DATE - BILL TO DATE -----
						l_cArcBnWhere = SqlAnd(l_cArcBnWhere, "BETWEEN(bn_date, " + SqlCnvB(l_dBillFrom,.T.) + ", " + SqlCnvB(l_dBillTo,.T.) + ")")
						l_cWhere = SqlAnd(l_cWhere, "BETWEEN(bn.bn_date, " + SqlCnv(l_dBillFrom,.T.) + ", " + SqlCnv(l_dBillTo,.T.) + ")")
						l_cPassWhere = SqlAnd(l_cPassWhere, "BETWEEN(bn_date, " + SqlCnv(l_dBillFrom,.T.) + ", " + SqlCnv(l_dBillTo,.T.) + ")")
					CASE NOT EMPTY(l_dBillFrom)
			*------- BILL FROM DATE -------
						l_cArcBnWhere = SqlAnd(l_cArcBnWhere, "bn_date = " + SqlCnvB(l_dBillFrom,.T.))
						l_cWhere = SqlAnd(l_cWhere, "bn.bn_date = " + SqlCnv(l_dBillFrom,.T.))
						l_cPassWhere = SqlAnd(l_cPassWhere, "bn_date = " + SqlCnv(l_dBillFrom,.T.))
					CASE NOT EMPTY(l_dBillTo)
			*----- BILL TO DATE -----
						l_cArcBnWhere = SqlAnd(l_cArcBnWhere, "bn_date = " + SqlCnvB(l_dBillTo,.T.))
						l_cWhere = SqlAnd(l_cWhere, "bn.bn_date = " + SqlCnv(l_dBillTo,.T.))
						l_cPassWhere = SqlAnd(l_cPassWhere, "bn_date = " + SqlCnv(l_dBillTo,.T.))
					OTHERWISE
				ENDCASE
				DO CASE
					CASE NOT EMPTY(l_dArrival) AND NOT EMPTY(l_dDeparture)
			*------- ARRIVAL - DEPARTURE -----
						l_cArcHrWhere = SqlAnd(l_cArcHrWhere, "hr_arrdate = " + SqlCnvB(l_dArrival,.T.) + " AND " + "hr_depdate = " + SqlCnvB(l_dDeparture,.T.))
						l_cWhere = SqlAnd(l_cWhere, "NVL(hr_arrdate, rs.rs_arrdate) = " + SqlCnv(l_dArrival,.T.) + " AND " + "NVL(hr_depdate, rs.rs_depdate) = " + SqlCnv(l_dDeparture,.T.))
						l_cPassWhere = "0=1"
					CASE NOT EMPTY(l_dArrival)
			*------- ARRIVAL -------
						l_cArcHrWhere = SqlAnd(l_cArcHrWhere, "hr_arrdate = " + SqlCnvB(l_dArrival,.T.))
						l_cWhere = SqlAnd(l_cWhere, "NVL(hr_arrdate, rs.rs_arrdate) = " + SqlCnv(l_dArrival,.T.))
						l_cPassWhere = "0=1"
					CASE NOT EMPTY(l_dDeparture)
			*----- DEPARTURE -----
						l_cArcHrWhere = SqlAnd(l_cArcHrWhere, "hr_depdate = " + SqlCnvB(l_dDeparture,.T.))
						l_cWhere = SqlAnd(l_cWhere, "NVL(hr_depdate, rs.rs_depdate) = " + SqlCnv(l_dDeparture,.T.))
						l_cPassWhere = "0=1"
					OTHERWISE
				ENDCASE
			*---------- N A M E ----------
				IF NOT EMPTY(l_cName)
					l_cArcAdWhere = SqlAnd(l_cArcAdWhere, "UPPER(ad_lname) = " + SqlCnv(l_cName,.T.))
					l_cWhere = SqlAnd(l_cWhere, "UPPER(adn.ad_lname) = " + SqlCnv(l_cName,.T.))
					l_cPassWhere = SqlAnd(l_cPassWhere, "UPPER(adp.ad_lname) = " + SqlCnv(l_cName,.T.))
				ENDIF
			*------- C O M P A N Y -------
				IF NOT EMPTY(l_cCompany)
					l_cArcAdWhere = SqlAnd(l_cArcAdWhere, "UPPER(ad_company) = " + SqlCnv(l_cCompany,.T.))
					l_cJoin = l_cJoin + " INNER JOIN address adc ON adc.ad_addrid = NVL(pw.pw_addrid, hw.pw_addrid)"
					l_cWhere = SqlAnd(l_cWhere, "UPPER(adc.ad_company) = " + SqlCnv(l_cCompany,.T.))
					l_cPassWhere = SqlAnd(l_cPassWhere, "UPPER(adp.ad_company) = " + SqlCnv(l_cCompany,.T.))
					l_cOrder = "3 DESC, 20, 19"
				ENDIF
			*------- I N V O I C E -------
				IF NOT EMPTY(l_cInvoice)
					l_cArcAdWhere = SqlAnd(l_cArcAdWhere, "UPPER(ad_company) = " + SqlCnv(l_cInvoice,.T.))
					l_cJoin = l_cJoin + " INNER JOIN address adi ON adi.ad_addrid = NVL(rs.rs_invid, hr_invid)"
					l_cWhere = SqlAnd(l_cWhere, "UPPER(adi.ad_company) = " + SqlCnv(l_cInvoice,.T.))
					l_cPassWhere = "0=1"
				ENDIF
		ENDCASE
		
		WAIT GetLangText("COMMON", "T_PLEASEWAIT") WINDOW NOWAIT
		this.frmBHistBr.grdBHist.RecordSource = ""
		
		IF EMPTY(l_cPassWhere)
			l_cPassSql = ""
		ELSE
			TEXT TO l_cPassSql TEXTMERGE NOSHOW PRETEXT 2 + 8
				UNION SELECT bn_reserid, 0, bn_date, bn_date, '', '', '', '', 0, bn_addrid, bn_addrid, '', '', '', 0=1, '', '', '',
					NVL(adp.ad_lname,<<SqlCnv(GetLangText("PASSERBY","TXT_PASSERBY"),.T.)>>), NVL(adp.ad_fname,''), NVL(adp.ad_company,''), NVL(adp.ad_city,''), bn_billnum, 1,
					CAST('' AS Char(11)) AS c_b1, CAST('' AS Char(11)) AS c_b2, CAST('' AS Char(11)) AS c_b3, 
					CAST('' AS Char(11)) AS c_b4, CAST('' AS Char(11)) AS c_b5, CAST('' AS Char(11)) AS c_b6, '  ' AS c_bmf, CAST('' AS Char(31)) AS c_bname, 
					CAST('' AS Char(11)) AS c_rmname, CAST('' AS Char(11)) AS c_rtname, 
					CAST('' AS Char(9)) AS c_arrd, CAST('' AS Char(9)) AS c_depd
					FROM billnum
					LEFT JOIN address adp ON adp.ad_addrid = bn_addrid
					<<l_cPassJoin>>
					WHERE <<l_cPassWhere>>
			ENDTEXT
		ENDIF
		
		TEXT TO l_cSql TEXTMERGE NOSHOW PRETEXT 2 + 8
		SELECT bn.bn_reserid AS hr_reserid, bn.bn_rsid AS hr_rsid, NVL(NVL(hr_arrdate, rs.rs_arrdate),{}) AS c_arrdate, NVL(NVL(hr_depdate, rs.rs_depdate),{}) AS c_depdate,
				CAST(NVL(NVL(hr_arrtime, rs.rs_arrtime),"") AS Char(5)) AS c_arrtime, CAST(NVL(NVL(hr_deptime, rs.rs_deptime),"") AS Char(5)) AS c_deptime,
				CAST(NVL(NVL(hr_roomnum, rs.rs_roomnum),"") AS Char(4)) AS c_roomnum, CAST(NVL(NVL(hr_roomtyp, rs.rs_roomtyp),"") AS Char(4)) AS c_roomtyp,
				ICASE(NOT ISNULL(hr_reserid),1,NOT ISNULL(rs.rs_reserid),2,0) AS c_history,
				NVL(hr_addrid, rs.rs_addrid) AS rs_addrid, NVL(hr_compid, rs.rs_compid) AS rs_compid,
				NVL(hr_lname, rs.rs_lname) AS rs_lname, NVL(hr_fname, rs.rs_fname) AS rs_fname,
				NVL(hr_apname, rs.rs_apname) AS rs_apname, NVL(hr_noaddr, rs.rs_noaddr) AS rs_noaddr, CAST(NVL(NVL(hr.rs_sname, rs.rs_sname),'') AS Char(30)) AS rs_sname,
				CAST(NVL(ap_lname,'') AS Char(30)) AS ap_lname, CAST(NVL(ap_fname,'') AS Char(20)) AS ap_fname, CAST(NVL(adn.ad_lname,'') AS Char(30)) AS ad_lname,
				CAST(NVL(adn.ad_fname,'') AS Char(20)) AS ad_fname, NVL(hr_company, rs.rs_company) AS c_company, CAST(NVL(adn.ad_city,'') AS Char(30)) AS c_city,
				bn.bn_billnum AS c_billnum, bn.bn_window AS c_window,
				CAST('' AS Char(11)) AS c_b1, CAST('' AS Char(11)) AS c_b2, CAST('' AS Char(11)) AS c_b3, 
				CAST('' AS Char(11)) AS c_b4, CAST('' AS Char(11)) AS c_b5, CAST('' AS Char(11)) AS c_b6, ' ' AS c_bmf, CAST('' AS Char(31)) AS c_bname, 
				CAST('' AS Char(11)) AS c_rmname, CAST('' AS Char(11)) AS c_rtname, 
				CAST('' AS Char(9)) AS c_arrd, CAST('' AS Char(9)) AS c_depd
				FROM billnum bn
				LEFT JOIN histres ON hr_reserid = bn.bn_reserid
				LEFT JOIN hresext hr ON hr.rs_reserid = bn.bn_reserid
				LEFT JOIN pswindow pw ON pw.pw_rsid = hr_rsid AND pw.pw_window = 2
				LEFT JOIN reservat rs ON rs.rs_reserid = bn.bn_reserid
				LEFT JOIN hpwindow hw ON hw.pw_rsid = hr_rsid AND hw.pw_window = 2
				LEFT JOIN address adn ON adn.ad_addrid = NVL(hr_addrid, rs.rs_addrid)
				<<l_cJoin>>
				LEFT JOIN apartner ON ap_apid = NVL(hr_apid, rs.rs_apid)
				WHERE <<l_cWhere>>
				GROUP BY 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22
				<<l_cPassSql>>
				ORDER BY <<l_cOrder>>
		ENDTEXT
		
		******************** Prepare SQLs for archive ******************************************************
		*
		this.RestoreArchive(l_cArcBnWhere, l_cArcHrWhere, l_cArcAdWhere)
		*
		****************************************************************************************************
		
		this.frmBHistBr.grdBHist.RecordSource = ""
		
		SqlCursor(l_cSql, "curResultCursor",,,,,,.T.)
		
		WAIT CLEAR
		l_lRet = (RECCOUNT("curResultCursor") > 0)
		
		this.SetGridControlSource()
		
		SELECT(l_nArea)
		
		RETURN l_lRet
	ENDPROC

	PROCEDURE setgridcontrolsource
		this.frmBHistBr.grdBHist.RecordSource = "curResultCursor"
		this.frmBHistBr.grdBHist.column1.ControlSource = "thisformset.grid_refresh_record()"
		this.frmBHistBr.grdBHist.column2.ControlSource = "curResultCursor.c_rtname"
		this.frmBHistBr.grdBHist.column3.ControlSource = "curResultCursor.c_bname"
		this.frmBHistBr.grdBHist.column4.ControlSource = "curResultCursor.c_city"
		this.frmBHistBr.grdBHist.column5.ControlSource = "curResultCursor.c_company"
		this.frmBHistBr.grdBHist.column6.ControlSource = "curResultCursor.c_arrd"
		this.frmBHistBr.grdBHist.column7.ControlSource = "curResultCursor.c_depd"
		this.frmBHistBr.grdBHist.column8.ControlSource = "curResultCursor.c_arrtime"
		this.frmBHistBr.grdBHist.column9.ControlSource = "curResultCursor.c_deptime"
		this.frmBHistBr.grdBHist.column10.ControlSource = "curResultCursor.c_b1"
		this.frmBHistBr.grdBHist.column11.ControlSource = "curResultCursor.c_b2"
		this.frmBHistBr.grdBHist.column12.ControlSource = "curResultCursor.c_b3"
		this.frmBHistBr.grdBHist.column13.ControlSource = "curResultCursor.c_b4"
		this.frmBHistBr.grdBHist.column14.ControlSource = "curResultCursor.c_b5"
		this.frmBHistBr.grdBHist.column15.ControlSource = "curResultCursor.c_b6"
		this.frmBHistBr.grdBHist.column16.ControlSource = "curResultCursor.c_bmf"
		
		RETURN .T.
	ENDPROC

	PROCEDURE frmBHistBr.grdBHist.DblClick
		_screen.oProcessHandler(ALLTRIM(STR(P_PRINT))).Execute(thisform, "GridDblClick")
	ENDPROC

	PROCEDURE frmBHistBr.grdBHist.Init
		this.column1.header1.Caption = GetLangText("BILLHIST","TH_ROOMNUM")
		this.column2.header1.Caption = GetLangText("BILLHIST","TH_ROOMTYPE")
		this.column3.header1.Caption = GetLangText("BILLHIST","TH_NAME")
		this.column4.header1.Caption = GetLangText("BILLHIST","TH_CITY")
		this.column5.header1.Caption = GetLangText("ADDRESS","TXT_COMPANY")
		this.column6.header1.Caption = GetLangText("BILLHIST","TH_ARRDATE")
		this.column7.header1.Caption = GetLangText("BILLHIST","TH_DEPDATE")
		this.column8.header1.Caption = GetLangText("BILLHIST","TH_FROM")
		this.column9.header1.Caption = GetLangText("BILLHIST","TH_TO")
		this.column10.header1.Caption = GetLangText("BILLHIST","TXT_BILL1",,.T.)
		this.column11.header1.Caption = GetLangText("BILLHIST","TXT_BILL2",,.T.)
		this.column12.header1.Caption = GetLangText("BILLHIST","TXT_BILL3",,.T.)
		this.column13.header1.Caption = GetLangText("BILLHIST","TXT_BILL4",,.T.)
		this.column14.header1.Caption = GetLangText("BILLHIST","TXT_BILL5",,.T.)
		this.column15.header1.Caption = GetLangText("BILLHIST","TXT_BILL6",,.T.)
		this.column16.header1.Caption = GetLangText("PARAMS","TXT_EXTRA")
		this.DefaultPropertiesSet(16, "gr_activ", .T.)
		this.DefaultPropertiesSet(16, "gr_show", .T.)
		this.column16.Visible = .T.
		
		thisformset.SetGridControlSource()
		
		DODEFAULT()
		
		RETURN .T.
	ENDPROC

	PROCEDURE frmBHistBr.grdBHist.MouseMove
		LPARAMETERS nButton, nShift, nXCoord, nYCoord
		LOCAL nwhereout,nrelrowout,nrelcolout,ctooltiptext, ncolumn
		ctooltiptext = ""
		STORE 0 TO nwhereout,nrelrowout,nrelcolout
		
		IF nXCoord>0 AND nYCoord>0 AND ;
				this.GridHitTest(nXCoord,nYCoord,@nwhereout,@nrelrowout,@nrelcolout)
			IF nwhereout = 3 AND nrelrowout = this.RelativeRow
				ncolumn = this.LeftColumn - 1 + nrelcolout
				DO CASE
					CASE ncolumn = 10
						ctooltiptext = thisformset.BillAddressGet(1)
					CASE ncolumn = 11
						ctooltiptext = thisformset.BillAddressGet(2)
					CASE ncolumn = 12
						ctooltiptext = thisformset.BillAddressGet(3)
					CASE ncolumn = 13
						ctooltiptext = thisformset.BillAddressGet(4)
					CASE ncolumn = 14
						ctooltiptext = thisformset.BillAddressGet(5)
					CASE ncolumn = 15
						ctooltiptext = thisformset.BillAddressGet(6)
				ENDCASE
			ENDIF
		ENDIF
		
		IF NOT this.ToolTipText == ctooltiptext
			this.ToolTipText = ctooltiptext
		ENDIF
	ENDPROC

	PROCEDURE frmBHistBr.Init
		DODEFAULT()
		this.Caption = GetLangText("BILLHIST","TW_BILLHIST")
	ENDPROC

	PROCEDURE frmBHistBr.onclose
		thisformset.OnClose()
	ENDPROC

	PROCEDURE frmBHistBr.QueryUnload
		NODEFAULT
		thisformset.OnClose()
	ENDPROC

	PROCEDURE frmBillhist.cmdCancel.Click
		thisformset.cancelsearch()
	ENDPROC

	PROCEDURE frmBillhist.cmdOk.Click
		thisform.Visible = .F.
		thisform.cmdskip.Visible = .F.
		thisformset.nvo_number = 0
		thisformset.cVoucherNumber = ""
		IF (thisformset.searchtables())
			thisformset.frmBHistBr.Show()
			thisformset.frmBHistBr.grdBHist.SetFocus()
		ELSE
			MESSAGEBOX(GetLangText("BILLHIST","TA_NOHIST"),GetLangText("FUNC","TXT_MESSAGE"),048)
			thisformset.cancelSearch()
		ENDIF
	ENDPROC

	PROCEDURE frmBillhist.cmdskip.Click
		* Show this button only on startup, to allow user to skip search, and use other options in toolbar
		thisform.Visible = .F.
		thisform.lskip = .T.
		this.Visible = .F.
		thisformset.searchtables()
		thisform.lskip = .F.
		thisformset.frmBHistBr.Show()
		thisformset.frmBHistBr.grdBHist.SetFocus()
	ENDPROC

	PROCEDURE frmBillhist.Init
		DODEFAULT()
		this.AddProperty("lskip",.F.)
		this.Caption = GetLangText("BILLHIST","TW_BILLHIST")
		this.lblArrival.Caption = GetLangText("BILLHIST","TH_ARRDATE")
		this.lblDeparture.Caption = GetLangText("BILLHIST","TH_DEPDATE")
		this.lblBillNum.Caption = GetLangText("BILLHIST","TH_BILLNUM")
		this.lblReserId.Caption = GetLangText("RESERVAT","TM_RESNUM")
		this.lblName.Caption = GetLangText("BILLHIST","TH_NAME")
		this.lblCompany.Caption = GetLangText("ADDRESS","TXT_COMPANY")
		this.lblInvoice.Caption = GetLangText("BILLHIST","T_INVOICE")
		this.lblbilldate.Caption = GetLangText("BILL","TXT_BILL_DATE")
		this.cmdOk.Caption = GetLangText("COMMON","TXT_OK")
		this.cmdskip.Caption = GetLangText("COMMON","TXT_SKIP")
		this.cmdCancel.Caption = GetLangText("COMMON","TXT_CANCEL")
	ENDPROC

	PROCEDURE frmBillhist.KeyPress
		LPARAMETERS nKeyCode, nShiftAltCtrl
		IF nKeyCode = 27	&& ESC
			NODEFAULT
			thisformset.cancelSearch()
		ENDIF
	ENDPROC

	PROCEDURE frmBillhist.QueryUnload
		NODEFAULT
		thisformset.cancelSearch()
	ENDPROC

ENDDEFINE
