*--------------------------------------------------------------------------------------------------------------------------------------------------------
* (ES) AUTOGENERADO - ¡¡ATENCIÓN!! - ¡¡NO PENSADO PARA EJECUTAR!! USAR SOLAMENTE PARA INTEGRAR CAMBIOS Y ALMACENAR CON HERRAMIENTAS SCM!!
* (EN) AUTOGENERATED - ATTENTION!! - NOT INTENDED FOR EXECUTION!! USE ONLY FOR MERGING CHANGES AND STORING WITH SCM TOOLS!!
*--------------------------------------------------------------------------------------------------------------------------------------------------------
*< FOXBIN2PRG: Version="1.19" SourceFile="msgedit.scx" /> (Solo para binarios VFP 9 / Only for VFP 9 binaries)
*
*
DEFINE CLASS dataenvironment AS dataenvironment 
 	*< CLASSDATA: Baseclass="dataenvironment" Timestamp="" Scale="" Uniqueid="" ClassIcon="2" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="Cursor1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor2" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor3" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor4" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor5" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Relation1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Relation2" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor8" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Relation3" UniqueID="" Timestamp="" />

	AutoOpenTables = .F.
	DataSource = .NULL.
	Height = 484
	Left = 1
	Name = "Dataenvironment"
	Top = 220
	Width = 667

	ADD OBJECT 'Cursor1' AS cursor WITH ;
		Alias = "reservat", ;
		CursorSource = ..\data\reservat.dbf, ;
		Height = 63, ;
		Left = 9, ;
		Name = "Cursor1", ;
		Top = 22, ;
		Width = 90
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor2' AS cursor WITH ;
		Alias = "room", ;
		CursorSource = ..\data\room.dbf, ;
		Height = 1, ;
		Left = 7, ;
		Name = "Cursor2", ;
		Top = 127, ;
		Width = 90
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor3' AS cursor WITH ;
		Alias = "outoford", ;
		CursorSource = ..\data\outoford.dbf, ;
		Height = 1, ;
		Left = 121, ;
		Name = "Cursor3", ;
		Top = 159, ;
		Width = 90
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor4' AS cursor WITH ;
		Alias = "address", ;
		CursorSource = ..\data\address.dbf, ;
		Height = 1, ;
		Left = 119, ;
		Name = "Cursor4", ;
		Top = 23, ;
		Width = 90
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor5' AS cursor WITH ;
		Alias = "apartner", ;
		CursorSource = ..\data\apartner.dbf, ;
		Height = 1, ;
		Left = 119, ;
		Name = "Cursor5", ;
		Top = 53, ;
		Width = 90
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor8' AS cursor WITH ;
		Alias = "company", ;
		CursorSource = ..\data\address.dbf, ;
		Height = 1, ;
		Left = 119, ;
		Name = "Cursor8", ;
		Top = 83, ;
		Width = 90
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Relation1' AS relation WITH ;
		ChildAlias = "apartner", ;
		ChildOrder = "tag3", ;
		Name = "Relation1", ;
		ParentAlias = "reservat", ;
		RelationalExpr = "rs_apid"
		*< END OBJECT: BaseClass="relation" />

	ADD OBJECT 'Relation2' AS relation WITH ;
		ChildAlias = "address", ;
		ChildOrder = "tag1", ;
		Name = "Relation2", ;
		ParentAlias = "reservat", ;
		RelationalExpr = "rs_addrid"
		*< END OBJECT: BaseClass="relation" />

	ADD OBJECT 'Relation3' AS relation WITH ;
		ChildAlias = "company", ;
		ChildOrder = "tag1", ;
		Name = "Relation3", ;
		ParentAlias = "reservat", ;
		RelationalExpr = "rs_compid"
		*< END OBJECT: BaseClass="relation" />

ENDDEFINE

DEFINE CLASS frmmsgedit AS tform OF "..\libs\main.vcx" 
 	*< CLASSDATA: Baseclass="form" Timestamp="" Scale="" Uniqueid="" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="lblName" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chkShowOnCheckin" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="edtMessage" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdOk" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdCancel" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdPrint" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdDelete" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chkShowOnCheckOut" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chkShowOnModify" UniqueID="" Timestamp="" />

	*<DefinedPropArrayMethod>
		*p: ccompanyname
		*p: cguestname
		*p: lshowoncheckout
		*p: lshowonmodify
		*p: ocamessage
	*</DefinedPropArrayMethod>

	AlwaysOnTop = .F.
	Caption = "frmMsgEdit"
	ccompanyname = 
	cformlabel = .F.
	cguestname = 
	ControlBox = .T.
	DataSession = 2
	DoCreate = .T.
	doini = .T.
	doiniopencommontables = .T.
	Height = 306
	Icon = ..\bitmap\icons\mail01a.ico
	lshowoncheckout = .F.
	lshowonmodify = .F.
	Name = "frmMsgEdit"
	ocamessage = .NULL.
	Width = 361
	WindowState = 0
	WindowType = 1

	ADD OBJECT 'chkShowOnCheckin' AS tcheckbox WITH ;
		Alignment = 0, ;
		Caption = "chkShowOnCheckin", ;
		Height = 17, ;
		Left = 223, ;
		Name = "chkShowOnCheckin", ;
		TabIndex = 2, ;
		Top = 5, ;
		Value = .F., ;
		Width = 133, ;
		ZOrderSet = 1
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="checkbox" />

	ADD OBJECT 'chkShowOnCheckOut' AS tcheckbox WITH ;
		Alignment = 0, ;
		AutoSize = .T., ;
		Caption = "chkShowOnCheckOut", ;
		Height = 17, ;
		Left = 199, ;
		Name = "chkShowOnCheckOut", ;
		TabIndex = 4, ;
		Top = 22, ;
		Value = .F., ;
		Visible = .F., ;
		Width = 138, ;
		ZOrderSet = 1
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="checkbox" />

	ADD OBJECT 'chkShowOnModify' AS tcheckbox WITH ;
		Alignment = 0, ;
		AutoSize = .T., ;
		Caption = "chkShowOnModify", ;
		Height = 17, ;
		Left = 56, ;
		Name = "chkShowOnModify", ;
		TabIndex = 3, ;
		Top = 22, ;
		Value = .F., ;
		Visible = .F., ;
		Width = 118, ;
		ZOrderSet = 1
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="checkbox" />

	ADD OBJECT 'cmdCancel' AS tcommandbutton WITH ;
		Caption = "cmdCancel", ;
		Left = 94, ;
		Name = "cmdCancel", ;
		TabIndex = 7, ;
		Top = 273, ;
		ZOrderSet = 4
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'cmdDelete' AS tcommandbutton WITH ;
		Caption = "cmdDelete", ;
		Left = 270, ;
		Name = "cmdDelete", ;
		TabIndex = 9, ;
		Top = 273, ;
		ZOrderSet = 6
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'cmdOk' AS tcommandbutton WITH ;
		Caption = "cmdOK", ;
		Left = 6, ;
		Name = "cmdOk", ;
		TabIndex = 6, ;
		Top = 273, ;
		ZOrderSet = 3
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'cmdPrint' AS tcommandbutton WITH ;
		Caption = "cmdPrint", ;
		Left = 182, ;
		Name = "cmdPrint", ;
		TabIndex = 8, ;
		Top = 273, ;
		ZOrderSet = 5
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'edtMessage' AS teditbox WITH ;
		Height = 228, ;
		Left = 2, ;
		Name = "edtMessage", ;
		TabIndex = 5, ;
		Top = 40, ;
		Width = 355, ;
		ZOrderSet = 2
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="editbox" />

	ADD OBJECT 'lblName' AS tlabel WITH ;
		Caption = "lblName", ;
		Height = 17, ;
		Left = 2, ;
		Name = "lblName", ;
		TabIndex = 1, ;
		Top = 5, ;
		Width = 214, ;
		ZOrderSet = 0
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />
	
	PROCEDURE assigncaption
		DO CASE
			CASE this.nMode = 1
				this.Caption = GetLangText("MESSAGE","TXT_RESERVAT")
				this.lblName.Caption = GetLangText("MESSAGE","TXT_NAME")+": "+ this.cGuestName
				this.chkShowOnCheckin.Caption = GetLangText("MESSAGE","TXT_SHOWATCHECKIN")
				this.chkShowOnCheckOut.Caption = GetLangText("MESSAGE","TXT_SHOWATCHECKOUT")
				this.chkShowOnModify.Caption = GetLangText("MESSAGE","TXT_SHOWATMODIFY")
			CASE this.nMode = 2
				this.Caption = GetLangText("MESSAGE","TXT_ROOM")
				this.lblName.Caption = GetLangText("MESSAGE","TXT_NAME")+": "+ this.cGuestName
				this.chkShowOnCheckin.Caption = GetLangText("MESSAGE","TXT_ACTLAMP")
			CASE this.nMode = 3
				this.Caption = GetLangText("OUTOFORD", "TXT_NOTE_FOR_OUT_OF_ORDER")
				this.lblName.Caption = GetLangText("MESSAGE","TXT_NOTE_FOR_ROOM") + " " + Get_rm_rmname(curMessage.oo_roomnum)
				this.chkShowOnCheckin.Caption = GetLangText("OUTOFORD","TXT_FLAGTEXT")
		ENDCASE
		this.cmdOk.Caption = GetLangText("COMMON","TXT_OK")
		this.cmdCancel.Caption = GetLangText("COMMON","TXT_CANCEL")
		this.cmdPrint.Caption = GetLangText("MESSAGE","TXT_PRINTOUT")
		this.cmdDelete.Caption = GetLangText("MESSAGE","TXT_DELETE")
	ENDPROC

	PROCEDURE Init
		LPARAMETERS tnMode, tnRecordId, tcGuestName, tcCompanyName
		* Valid modes are:
		* 1 - Called for reservat, parameter tnRecordId is rs_reserid
		* 2 - Called for room, parameter tnRecordId is rs_reserid
		* 3 - Called for OutOfOrd, parameter tnRecordId is oo_id
		LOCAL lcRomnum
		
		this.nMode = tnMode
		IF NOT EMPTY(tcGuestName)
			this.cGuestName = tcGuestName
		ENDIF
		IF NOT EMPTY(tcCompanyName)
			this.cCompanyName = tcCompanyName
		ENDIF
		DO CASE
			CASE this.nMode = 1
				this.ocaMessage = CREATEOBJECT("caReservat")
				this.ocaMessage.cFilterClause = "rs_reserid = " + SqlCnv(tnRecordId,.T.)
				STORE .T. TO this.chkShowOnCheckOut.Visible, this.chkShowOnModify.Visible
			CASE this.nMode = 2
				lcRomnum = DLookUp("reservat", "rs_reserid = " + SqlCnv(tnRecordId,.T.), "rs_roomnum")
				this.ocaMessage = CREATEOBJECT("caRoom")
				this.ocaMessage.cFilterClause = "rm_roomnum = " + SqlCnv(lcRomnum,.T.)
			CASE this.nMode = 3
				this.ocaMessage = CREATEOBJECT("caOutOfOrd")
				this.ocaMessage.cFilterClause = "oo_id = " + SqlCnv(tnRecordId,.T.)
		ENDCASE
		
		this.ocaMessage.Alias = "curMessage"
		this.ocaMessage.CursorFill()
		this.edtMessage.ControlSource = [curMessage.rs_message]
		this.chkShowOnCheckin.ControlSource = [curMessage.rs_msgshow]
		IF EMPTY(curMessage.rs_message)
			this.chkShowOnCheckin.Value = IIF(this.nMode = 1, _screen.oGlobal.oParam.pa_msgshow, _screen.oGlobal.oParam.pa_waishow)
		ENDIF
		IF this.nMode = 1
			thisform.lShowOnModify = IIF(SUBSTR(curMessage.rs_mshwcco,1,1)="1",.T.,.F.)
			thisform.lShowOnCheckOut= IIF(SUBSTR(curMessage.rs_mshwcco,2,1)="1",.T.,.F.)
			this.chkShowOnModify.ControlSource = [thisform.lShowOnModify]
			this.chkShowOnCheckOut.ControlSource = [thisform.lShowOnCheckOut]
		ENDIF
		this.AssignCaption()
		
		DODEFAULT()
	ENDPROC

	PROCEDURE KeyPress
		LPARAMETERS nKeyCode, nShiftAltCtrl
		
		IF nKeyCode = 27
			this.OnClose()
		ENDIF
	ENDPROC

	PROCEDURE onclose
		this.Release()
	ENDPROC

	PROCEDURE ondelete
		IF YesNo(GetLangText("MESSAGE","TXT_DELMESSAGE"))
			this.edtMessage.Value = ""
			this.chkShowOnCheckin.Value = IIF(_screen.oGlobal.oParam.pa_msgshow, 1, 0)
		ENDIF
		this.Refresh()
		this.edtMessage.SetFocus()
	ENDPROC

	PROCEDURE onprint
		IF NOT EMPTY(curMessage.rs_message)
			LOCAL lnArea, lcFrx, lcLangDbf
		
			lnArea = SELECT()
		
			this.OnSave(.T.)
			
			lcFrx = gcReportdir + "_message.frx"
			lcLangDbf = FORCEEXT(lcFrx, "dbf")
		
			IF FILE(lcLangDbf)
				USE (lcLangDbf) IN 0 ALIAS RepText SHARED NOUPDATE
			ENDIF
			
			PRIVATE p_cRoomNum, p_cCompany, p_cGuestName
			p_cCompany = this.cCompanyName
			p_cGuestName = this.cGuestName
			DO CASE
				CASE this.nMode = 1
					p_cRoomNum = curMessage.rs_roomnum
				CASE this.nMode = 2
					p_cRoomNum = curMessage.rm_roomnum
				CASE this.nMode = 3
					p_cRoomNum = curMessage.oo_roomnum
			ENDCASE
		
			SELECT curMessage
			g_Rptlngnr = g_Langnum
			g_Rptlng = g_Language
		    REPORT FORM (lcFrx) TO PRINTER PROMPT NOCONSOLE RECORD RECNO()
		
			DClose('RepText')
		
			DO SetStatus IN Setup
		
			SELECT (lnArea)
		ELSE
			Alert(GetLangText("MESSAGE","TXT_NOMSG"))
		ENDIF
		
		RETURN .T.
	ENDPROC

	PROCEDURE onsave
		LPARAMETERS plDoNotActivateInterface
		LOCAL l_oData
		
		IF this.nMode = 1
			REPLACE rs_mshwcco WITH IIF(thisform.lShowOnModify,"1","0")+IIF(thisform.lShowOnCheckOut,"1","0") IN curMessage
		ENDIF
		
		this.ocaMessage.DoTableUpdate()
		
		IF this.nMode = 2 AND NOT plDoNotActivateInterface AND curMessage.rs_msgshow
			IF _screen.oGlobal.oParam.pa_pttmess
				DO WritePTTMessageWaiting IN MsgEdit WITH ALLTRIM(curMessage.rm_roomnum), curMessage.rs_message
			ENDIF
			IF _screen.oGlobal.oParam.pa_ptvmess
				DO WritePTVMessageWaiting IN MsgEdit WITH ALLTRIM(curMessage.rm_roomnum), curMessage.rs_message
			ENDIF
		ENDIF
	ENDPROC

	PROCEDURE QueryUnload
		this.OnClose()
		NODEFAULT
	ENDPROC

	PROCEDURE cmdCancel.Click
		IF curMessage.rs_message == OLDVAL("rs_message","curMessage") AND curMessage.rs_msgshow = OLDVAL("rs_msgshow","curMessage") OR ;
				YesNo(GetLangText("MESSAGE","TXT_OKTOLOSEALLCHANGES"))
			thisform.OnClose()
		ELSE
			thisform.edtMessage.SetFocus()
		ENDIF
		
		RETURN .T.
	ENDPROC

	PROCEDURE cmdDelete.Click
		thisform.OnDelete()
	ENDPROC

	PROCEDURE cmdOk.Click
		thisform.OnSave()
		thisform.OnClose()
	ENDPROC

	PROCEDURE cmdPrint.Click
		thisform.OnPrint()
	ENDPROC

ENDDEFINE
