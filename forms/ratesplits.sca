*--------------------------------------------------------------------------------------------------------------------------------------------------------
* (ES) AUTOGENERADO - ¡¡ATENCIÓN!! - ¡¡NO PENSADO PARA EJECUTAR!! USAR SOLAMENTE PARA INTEGRAR CAMBIOS Y ALMACENAR CON HERRAMIENTAS SCM!!
* (EN) AUTOGENERATED - ATTENTION!! - NOT INTENDED FOR EXECUTION!! USE ONLY FOR MERGING CHANGES AND STORING WITH SCM TOOLS!!
*--------------------------------------------------------------------------------------------------------------------------------------------------------
*< FOXBIN2PRG: Version="1.19" SourceFile="ratesplits.scx" /> (Solo para binarios VFP 9 / Only for VFP 9 binaries)
*
*
#INCLUDE "..\include\constdefines.h"

DEFINE CLASS dataenvironment AS dataenvironment 
 	*< CLASSDATA: Baseclass="dataenvironment" Timestamp="" Scale="" Uniqueid="" ClassIcon="1" />

	DataSource = .NULL.
	Height = 0
	Left = 0
	Name = "Dataenvironment"
	Top = 0
	Width = 0

ENDDEFINE

DEFINE CLASS frmcustomsplits AS tform OF "..\libs\main.vcx" 
 	*< CLASSDATA: Baseclass="form" Timestamp="" Scale="" Uniqueid="" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="Sh1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Sh2" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grdRateArti" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grdRateArti.COLUMN0.Text1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grdRateArti.COLUMN0.Text2" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grdRateArti.COLUMN0.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grdRateArti.COLUMN0.Text3" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblRateCode" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtRateCode" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblRateArti" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblResRart" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdNew" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdEdit" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdDelete" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdDeleteAll" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grdResRArt" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grdResRArt.COLUMN0.Text1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grdResRArt.COLUMN0.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grdResRArt.COLUMN0.Text2" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdOK" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdCancel" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtSum1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtSum2" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblSum1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblSum2" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblSelectedDate" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdNote" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdPrev" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdNext" UniqueID="" Timestamp="" />

	*<DefinedPropArrayMethod>
		*m: calculategridsum
		*m: changeallowed
		*m: copysplits
		*m: losechanges
		*m: mustcopysplits
		*m: ondatechange
		*m: onnote
		*m: refreshform
		*m: refreshsplitsgrid
		*m: setcontrolsource
		*p: crdateuserfield
		*p: croomtype		&& ri_roomtyp for selected date
		*p: darrdate
		*p: ddepdate
		*p: dselecteddate
		*p: lchanged		&& When .T., user changed some data
		*p: lok
		*p: ngroup		&& rt_group for selected date
		*p: nselectedday
		*p: oratecode
	*</DefinedPropArrayMethod>

	AutoCenter = .F.
	Caption = "frmCustomSplits"
	ControlBox = .T.
	crdateuserfield = 
	croomtype = 		&& ri_roomtyp for selected date
	darrdate = {}
	ddepdate = {}
	DoCreate = .T.
	dselecteddate = {}
	Height = 570
	Icon = ..\bitmap\icons\misc25.ico
	KeyPreview = .T.
	lchanged = .F.		&& When .T., user changed some data
	Name = "frmCustomSplits"
	ngroup = 0		&& rt_group for selected date
	nselectedday = 0
	oratecode = .NULL.
	saveformsize = .T.
	savegridwidths = .T.
	ShowTips = .T.
	Width = 780
	WindowType = 1

	ADD OBJECT 'cmdCancel' AS tcommandbutton WITH ;
		Cancel = .T., ;
		Caption = "cmdCancel", ;
		Left = 396, ;
		Name = "cmdCancel", ;
		TabIndex = 11, ;
		Top = 530, ;
		ZOrderSet = 13
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'cmdDelete' AS tcommandbutton WITH ;
		Caption = "", ;
		Height = 23, ;
		Left = 60, ;
		Name = "cmdDelete", ;
		Picture = ..\bitmap\toolbar\delete.png, ;
		PicturePosition = 14, ;
		TabIndex = 5, ;
		Top = 290, ;
		Width = 23, ;
		ZOrderSet = 9
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'cmdDeleteAll' AS tcommandbutton WITH ;
		Caption = "", ;
		Height = 23, ;
		Left = 84, ;
		Name = "cmdDeleteAll", ;
		Picture = ..\bitmap\toolbar\dirtyall.png, ;
		PicturePosition = 14, ;
		TabIndex = 6, ;
		Top = 290, ;
		Width = 23, ;
		ZOrderSet = 10
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'cmdEdit' AS tcommandbutton WITH ;
		Caption = "", ;
		Height = 23, ;
		Left = 36, ;
		Name = "cmdEdit", ;
		Picture = ..\bitmap\toolbar\edit.png, ;
		PicturePosition = 14, ;
		TabIndex = 4, ;
		Top = 290, ;
		Width = 23, ;
		ZOrderSet = 8
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'cmdNew' AS tcommandbutton WITH ;
		Caption = "", ;
		Height = 23, ;
		Left = 12, ;
		Name = "cmdNew", ;
		Picture = ..\bitmap\toolbar\new.png, ;
		PicturePosition = 14, ;
		TabIndex = 3, ;
		Top = 290, ;
		Width = 23, ;
		ZOrderSet = 7
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'cmdNext' AS tcommandbutton WITH ;
		Caption = "", ;
		Height = 23, ;
		Left = 156, ;
		Name = "cmdNext", ;
		Picture = ..\bitmap\toolbar\next.png, ;
		PicturePosition = 14, ;
		TabIndex = 9, ;
		Top = 290, ;
		Width = 23
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'cmdNote' AS tcommandbutton WITH ;
		Caption = "", ;
		Height = 23, ;
		Left = 108, ;
		Name = "cmdNote", ;
		Picture = ..\bitmap\toolbar\report.png, ;
		PicturePosition = 14, ;
		TabIndex = 7, ;
		Top = 290, ;
		Width = 23
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'cmdOK' AS tcommandbutton WITH ;
		Caption = "cmdOK", ;
		Default = .T., ;
		Left = 300, ;
		Name = "cmdOK", ;
		TabIndex = 10, ;
		Top = 530, ;
		ZOrderSet = 12
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'cmdPrev' AS tcommandbutton WITH ;
		Caption = "", ;
		Height = 23, ;
		Left = 132, ;
		Name = "cmdPrev", ;
		Picture = ..\bitmap\toolbar\prev.png, ;
		PicturePosition = 14, ;
		TabIndex = 8, ;
		Top = 290, ;
		Width = 23
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'grdRateArti' AS grdratearti WITH ;
		Height = 204, ;
		Left = 12, ;
		Name = "grdRateArti", ;
		TabIndex = 1, ;
		Top = 60, ;
		ZOrderSet = 2, ;
		COLUMN0.Enabled = .T., ;
		COLUMN0.Name = "COLUMN0", ;
		COLUMN0.Visible = .F., ;
		grcAmount.Enabled = .T., ;
		grcAmount.Header1.Name = "Header1", ;
		grcAmount.Name = "grcAmount", ;
		grcAmount.TBGRID1.Enabled = .T., ;
		grcAmount.TBGRID1.Name = "TBGRID1", ;
		grcArticle.Enabled = .T., ;
		grcArticle.Header1.Name = "Header1", ;
		grcArticle.Name = "grcArticle", ;
		grcArticle.TBGRID1.Enabled = .T., ;
		grcArticle.TBGRID1.Name = "TBGRID1", ;
		grcComment.Header1.Name = "Header1", ;
		grcComment.Name = "grcComment", ;
		grcComment.TBGRID1.Name = "TBGRID1", ;
		grcDescription.Enabled = .T., ;
		grcDescription.Header1.Name = "Header1", ;
		grcDescription.Name = "grcDescription", ;
		grcDescription.TBGRID1.Enabled = .T., ;
		grcDescription.TBGRID1.Name = "TBGRID1", ;
		grcMultiply.Enabled = .T., ;
		grcMultiply.Header1.Name = "Header1", ;
		grcMultiply.Name = "grcMultiply", ;
		grcMultiply.TBGRID1.Enabled = .T., ;
		grcMultiply.TBGRID1.Name = "TBGRID1", ;
		grcOnlyOn.Enabled = .T., ;
		grcOnlyOn.Header1.Name = "Header1", ;
		grcOnlyOn.Name = "grcOnlyOn", ;
		grcOnlyOn.TBGRID1.Enabled = .T., ;
		grcOnlyOn.TBGRID1.Name = "TBGRID1", ;
		grcSagroup.Enabled = .T., ;
		grcSagroup.Header1.Name = "Header1", ;
		grcSagroup.Name = "grcSagroup", ;
		grcSagroup.TBGRID1.Enabled = .T., ;
		grcSagroup.TBGRID1.Name = "TBGRID1", ;
		grcType.Enabled = .T., ;
		grcType.Header1.Name = "Header1", ;
		grcType.Name = "grcType", ;
		grcType.TBGRID1.Enabled = .T., ;
		grcType.TBGRID1.Name = "TBGRID1", ;
		grcUser1.Header1.Name = "Header1", ;
		grcUser1.Name = "grcUser1", ;
		grcUser1.Tbgrid1.Name = "Tbgrid1", ;
		grcUser2.Header1.Name = "Header1", ;
		grcUser2.Name = "grcUser2", ;
		grcUser2.Tbgrid1.Name = "Tbgrid1", ;
		grcUser3.Header1.Name = "Header1", ;
		grcUser3.Name = "grcUser3", ;
		grcUser3.Tbgrid1.Name = "Tbgrid1", ;
		grcUser4.Header1.Name = "Header1", ;
		grcUser4.Name = "grcUser4", ;
		grcUser4.Tbgrid1.Name = "Tbgrid1"
		*< END OBJECT: ClassLib="..\libs\cit_ratecode.vcx" BaseClass="grid" />

	ADD OBJECT 'grdRateArti.COLUMN0.Header1' AS header WITH ;
		Caption = "Header1", ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'grdRateArti.COLUMN0.Text1' AS textbox WITH ;
		BackColor = 255,255,255, ;
		BorderStyle = 0, ;
		Enabled = .T., ;
		ForeColor = 0,0,0, ;
		Margin = 0, ;
		Name = "Text1", ;
		Visible = .F.
		*< END OBJECT: BaseClass="textbox" />

	ADD OBJECT 'grdRateArti.COLUMN0.Text2' AS textbox WITH ;
		BackColor = 255,255,255, ;
		BorderStyle = 0, ;
		ForeColor = 0,0,0, ;
		Margin = 0, ;
		Name = "Text2", ;
		Visible = .F.
		*< END OBJECT: BaseClass="textbox" />

	ADD OBJECT 'grdRateArti.COLUMN0.Text3' AS textbox WITH ;
		BackColor = 255,255,255, ;
		BorderStyle = 0, ;
		ForeColor = 0,0,0, ;
		Margin = 0, ;
		Name = "Text3", ;
		Visible = .F.
		*< END OBJECT: BaseClass="textbox" />

	ADD OBJECT 'grdResRArt' AS grdratearti WITH ;
		Height = 204, ;
		Left = 12, ;
		Name = "grdResRArt", ;
		TabIndex = 2, ;
		Top = 314, ;
		ZOrderSet = 11, ;
		COLUMN0.Name = "COLUMN0", ;
		COLUMN0.Visible = .F., ;
		grcAmount.Header1.Name = "Header1", ;
		grcAmount.Name = "grcAmount", ;
		grcAmount.TBGRID1.Name = "TBGRID1", ;
		grcArticle.Header1.Name = "Header1", ;
		grcArticle.Name = "grcArticle", ;
		grcArticle.TBGRID1.Name = "TBGRID1", ;
		grcComment.Header1.Name = "Header1", ;
		grcComment.Name = "grcComment", ;
		grcComment.TBGRID1.Name = "TBGRID1", ;
		grcDescription.Header1.Name = "Header1", ;
		grcDescription.Name = "grcDescription", ;
		grcDescription.TBGRID1.Name = "TBGRID1", ;
		grcMultiply.Header1.Name = "Header1", ;
		grcMultiply.Name = "grcMultiply", ;
		grcMultiply.TBGRID1.Name = "TBGRID1", ;
		grcOnlyOn.Header1.Name = "Header1", ;
		grcOnlyOn.Name = "grcOnlyOn", ;
		grcOnlyOn.TBGRID1.Name = "TBGRID1", ;
		grcSagroup.Header1.Name = "Header1", ;
		grcSagroup.Name = "grcSagroup", ;
		grcSagroup.TBGRID1.Name = "TBGRID1", ;
		grcType.Header1.Name = "Header1", ;
		grcType.Name = "grcType", ;
		grcType.TBGRID1.Name = "TBGRID1", ;
		grcUser1.Header1.Name = "Header1", ;
		grcUser1.Name = "grcUser1", ;
		grcUser1.Tbgrid1.Name = "Tbgrid1", ;
		grcUser2.Header1.Name = "Header1", ;
		grcUser2.Name = "grcUser2", ;
		grcUser2.Tbgrid1.Name = "Tbgrid1", ;
		grcUser3.Header1.Name = "Header1", ;
		grcUser3.Name = "grcUser3", ;
		grcUser3.Tbgrid1.Name = "Tbgrid1", ;
		grcUser4.Header1.Name = "Header1", ;
		grcUser4.Name = "grcUser4", ;
		grcUser4.Tbgrid1.Name = "Tbgrid1"
		*< END OBJECT: ClassLib="..\libs\cit_ratecode.vcx" BaseClass="grid" />

	ADD OBJECT 'grdResRArt.COLUMN0.Header1' AS header WITH ;
		Caption = "Header1", ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'grdResRArt.COLUMN0.Text1' AS textbox WITH ;
		BackColor = 255,255,255, ;
		BorderStyle = 0, ;
		ForeColor = 0,0,0, ;
		Margin = 0, ;
		Name = "Text1", ;
		Visible = .F.
		*< END OBJECT: BaseClass="textbox" />

	ADD OBJECT 'grdResRArt.COLUMN0.Text2' AS textbox WITH ;
		BackColor = 255,255,255, ;
		BorderStyle = 0, ;
		ForeColor = 0,0,0, ;
		Margin = 0, ;
		Name = "Text2", ;
		Visible = .F.
		*< END OBJECT: BaseClass="textbox" />

	ADD OBJECT 'lblRateArti' AS tlabel WITH ;
		AutoSize = .T., ;
		BackStyle = 1, ;
		Caption = "lblRateArti", ;
		Height = 17, ;
		Left = 36, ;
		Name = "lblRateArti", ;
		TabIndex = 19, ;
		Top = 39, ;
		Width = 58, ;
		ZOrderSet = 5
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'lblRateCode' AS tlabel WITH ;
		Caption = "lblRateCode", ;
		Left = 12, ;
		Name = "lblRateCode", ;
		TabIndex = 13, ;
		Top = 15, ;
		Width = 108, ;
		ZOrderSet = 3
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'lblResRart' AS tlabel WITH ;
		AutoSize = .T., ;
		BackStyle = 1, ;
		Caption = "lblResRart", ;
		Height = 17, ;
		Left = 36, ;
		Name = "lblResRart", ;
		TabIndex = 20, ;
		Top = 269, ;
		Width = 61, ;
		ZOrderSet = 6
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'lblSelectedDate' AS tlabel WITH ;
		AutoSize = .T., ;
		Caption = "lblSelectedDate", ;
		Left = 198, ;
		Name = "lblSelectedDate", ;
		TabIndex = 12, ;
		Top = 293, ;
		Visible = .F., ;
		Width = 89, ;
		ZOrderSet = 3
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'lblSum1' AS tlabel WITH ;
		AutoSize = .T., ;
		BackStyle = 1, ;
		Caption = "lblSum1", ;
		Height = 17, ;
		Left = 658, ;
		Name = "lblSum1", ;
		TabIndex = 18, ;
		Top = 39, ;
		Width = 48, ;
		ZOrderSet = 5
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'lblSum2' AS tlabel WITH ;
		AutoSize = .T., ;
		BackStyle = 1, ;
		Caption = "lblSum2", ;
		Height = 17, ;
		Left = 658, ;
		Name = "lblSum2", ;
		TabIndex = 17, ;
		Top = 293, ;
		Width = 48, ;
		ZOrderSet = 5
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'Sh1' AS sh WITH ;
		Height = 224, ;
		Left = 6, ;
		Name = "Sh1", ;
		Top = 46, ;
		Width = 768, ;
		ZOrderSet = 0
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="shape" />

	ADD OBJECT 'Sh2' AS sh WITH ;
		Height = 248, ;
		Left = 6, ;
		Name = "Sh2", ;
		Top = 276, ;
		Width = 768, ;
		ZOrderSet = 1
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="shape" />

	ADD OBJECT 'txtRateCode' AS ttext WITH ;
		DisabledForeColor = 0,0,0, ;
		Enabled = .F., ;
		Format = "K!", ;
		Height = 23, ;
		InputMask = (REPLICATE("X",9)), ;
		Left = 132, ;
		Name = "txtRateCode", ;
		TabIndex = 16, ;
		Top = 12, ;
		Width = 132, ;
		ZOrderSet = 4
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtSum1' AS ttext WITH ;
		Alignment = 1, ;
		DisabledForeColor = 0,0,0, ;
		Height = 23, ;
		Left = 708, ;
		Name = "txtSum1", ;
		ReadOnly = .T., ;
		TabIndex = 15, ;
		TabStop = .F., ;
		Top = 35, ;
		Width = 60, ;
		ZOrderSet = 4
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtSum2' AS ttext WITH ;
		Alignment = 1, ;
		DisabledForeColor = 0,0,0, ;
		Height = 23, ;
		Left = 708, ;
		Name = "txtSum2", ;
		ReadOnly = .T., ;
		TabIndex = 14, ;
		TabStop = .F., ;
		Top = 289, ;
		Width = 60, ;
		ZOrderSet = 4
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />
	
	PROCEDURE assigncaption
		this.Caption = GetLangText("MGRFINAN", "TW_RATEARTI") + " (" + GetLangText("PHONE", "TXT_RESERID") + ": " + ;
				TRANSFORM(this.oCallingobj.Parent.oNewRes.rs_reserid) + ;
				" " + GetLangText("RESERVAT", "TXT_ARRDATE") + ": " + DTOC(this.oCallingobj.Parent.oNewRes.rs_arrdate) + " " + ;
				GetLangText("RESERVAT", "TXT_DEPDATE") + ": " + DTOC(this.oCallingobj.Parent.oNewRes.rs_depdate) + ")"
		this.lblRateCode.Caption = GetLangText("RESERVAT","T_RATECODE")
		this.lblRateArti.Caption = GetLangText("RESRATE", "TXT_DEF_RATEARTI")
		this.lblResRart.Caption = GetLangText("RESRATE", "TXT_CST_RATEARTI")
		this.lblSum1.Caption = GetLangText("EMPLOYEE", "TXT_SUM")
		this.lblSum2.Caption = GetLangText("EMPLOYEE", "TXT_SUM")
		this.cmdNew.Caption = GetText("COMMON","TXT_NEW",,.T.)
		this.cmdNew.ToolTipText = this.cmdNew.Caption + " (" + GetText("COMMON","TXT_CTRL") + "+N)"
		this.cmdEdit.Caption = GetText("COMMON","TXT_EDIT",,.T.)
		this.cmdEdit.ToolTipText = this.cmdEdit.Caption + " (" + GetText("COMMON","TXT_CTRL") + "+E)"
		this.cmdDelete.Caption = GetText("COMMON","TXT_DELETE",,.T.)
		this.cmdDelete.ToolTipText = this.cmdDelete.Caption + " (" + GetText("COMMON","TXT_CTRL") + "+D)"
		this.cmdDeleteAll.Caption = GetText("FISCAL","TXT_DELETE_ALL_ARTICLES")
		this.cmdDeleteAll.ToolTipText = this.cmdDeleteAll.Caption + " (" + GetText("COMMON","TXT_CTRL") + "+B)"
		this.cmdNote.Caption = GetLangText("RESERVAT","T_NOTE")
		this.cmdNote.ToolTipText = GetLangText("RESERVAT","TT_RSNOTE")
		this.cmdPrev.ToolTipText = GetText("ADDRESS","TT_BPREVIOUS")
		this.cmdNext.ToolTipText = GetText("ADDRESS","TT_BNEXT")
		this.cmdOK.Caption = GetLangText("COMMON","TXT_SAVE")
		this.cmdCancel.Caption = GetLangText("COMMON","TXT_CLOSE")
		
		RETURN .T.
	ENDPROC

	PROCEDURE calculategridsum
		LOCAL l_nSelect, l_nSum1Grid, l_nSum2Grid, l_nRecNo
		
		l_nSelect = SELECT()
		
		SELECT curRatearti
		
		l_nRecNo = RECNO()
		
		SUM ra_units*ra_amnt TO l_nSum1Grid
		
		GO l_nRecNo
		
		this.txtSum1.Value = l_nSum1Grid
		this.txtSum1.Refresh()
		
		SELECT curResrart
		
		l_nRecNo = RECNO()
		
		SUM ra_units*ra_amnt TO l_nSum2Grid
		
		GO l_nRecNo
		
		this.txtSum2.Value = l_nSum2Grid
		this.txtSum2.Refresh()
		
		SELECT (l_nSelect)
		
		RETURN .T.
	ENDPROC

	PROCEDURE changeallowed
		RETURN EMPTY(this.oCallingobj.Parent.oNewRes.rs_ratedat) OR ;
			DLookUp("curResRate", "rr_date <= " + SqlCnv(this.oCallingobj.Parent.oNewRes.rs_ratedat) + " AND rr_ratecod = " + SqlCnv(this.oRatecode.rc_key), "NOT FOUND()")
	ENDPROC

	PROCEDURE copysplits
		LOCAL lnSelect, lnRecNo, loDataRA, lcRDateUserField, l_nDays, l_nDay
		
		lnSelect = SELECT()
		
		* Create temp cursor with split records for every day
		SELECT * FROM curRatearti WHERE 1=0 INTO CURSOR curTempS1 READWRITE
		
		SELECT curRatearti
		
		lnRecNo = RECNO()
		
		* Get number of days for this reservation
		l_nDays = MAX(this.oCallingobj.Parent.oNewRes.rs_depdate - this.oCallingobj.Parent.oNewRes.rs_arrdate + IIF(this.nGroup=2,1,0), 1)
		
		SCAN ALL
			SCATTER NAME loDataRA MEMO
			IF ra_artityp > 1 AND ra_onlyon = 0 AND NOT (INLIST(this.oRatecode.rc_period,6,7) AND this.oRatecode.rc_rhytm < 5)
				* We must create 1 record for every day of reservation
				FOR l_nDay = 1 TO l_nDays
					loDataRA.ra_onlyon = l_nDay
					INSERT INTO curTempS1 FROM NAME loDataRA
				ENDFOR
			ELSE
				IF loDataRA.ra_onlyon = 999 && Post on last day of reservation
					loDataRA.ra_onlyon = l_nDays
				ENDIF
				INSERT INTO curTempS1 FROM NAME loDataRA
			ENDIF
		ENDSCAN
		
		* Scan through temp cursor with split articles, and insert those in curResrart cursor
		SELECT curTempS1
		
		SCAN ALL
			SCATTER NAME loDataRA MEMO
			ADDPROPERTY(loDataRA, "ra_rsid", this.oCallingobj.Parent.oNewRes.rs_rsid)
			loDataRA.ra_ratecod = this.oRatecode.rc_key
			loDataRA.ra_raid = 0
			IF NOT EMPTY(this.cRDateUserField)
				lcRDateUserField = this.cRDateUserField
				loDataRA.&lcRDateUserField = IIF(EMPTY(loDataRA.ra_onlyon), '', TRANSFORM(this.dArrdate+loDataRA.ra_onlyon-1))
			ENDIF
			INSERT INTO curResrart FROM NAME loDataRA
		ENDSCAN
		
		USE
		
		SELECT curRatearti
		
		GO lnRecNo
		
		GO TOP IN curResrart
		
		SELECT (lnSelect)
		
		RETURN .T.
	ENDPROC

	PROCEDURE Init
		LPARAMETERS toCallingOnj
		LOCAL lcRDateUserField
		
		this.oCallingobj = toCallingOnj
		this.dArrdate = this.oCallingobj.Parent.oNewRes.rs_arrdate
		this.dDepdate = this.oCallingobj.Parent.oNewRes.rs_depdate
		lcRDateUserField = LOWER(ReadINI(FULLPATH(INI_FILE), [resrart], [rdateuserfield], []))
		IF NOT EMPTY(lcRDateUserField) AND LEFT(lcRDateUserField,7) == "ra_user"
			this.cRDateUserField = lcRDateUserField
		ENDIF
		
		DODEFAULT()
		
		this.AssignCaption()
		
		this.OnDateChange(.T.)
		
		RETURN .T.
	ENDPROC

	PROCEDURE KeyPress
		LPARAMETERS nKeyCode, nShiftAltCtrl
		
		DO CASE
			CASE nShiftAltCtrl = 2 AND nKeyCode = 14	&& Ctrl+N - New split article
				NODEFAULT
				this.OnNew()
			CASE nShiftAltCtrl = 2 AND nKeyCode = 5		&& Ctrl+E - Edit split article
				NODEFAULT
				this.OnEdit()
			CASE nShiftAltCtrl = 2 AND nKeyCode = 4		&& Ctrl+D - Delete split article
				NODEFAULT
				this.OnDelete()
			CASE nShiftAltCtrl = 2 AND nKeyCode = 2		&& Ctrl+B - Delete all split articles
				NODEFAULT
				this.OnDelete(.T.)
			CASE nShiftAltCtrl = 2 AND nKeyCode = 15		&& Ctrl+O - Edit Note
				NODEFAULT
				this.OnNote()
			CASE nShiftAltCtrl = 2 AND nKeyCode = 141		&& Ctrl+UP ARROW - Previous date
				NODEFAULT
				this.OnPrevious()
			CASE nShiftAltCtrl = 2 AND nKeyCode = 145		&& Ctrl+DOWN ARROW - Next date
				NODEFAULT
				this.OnNext()
		ENDCASE
	ENDPROC

	PROCEDURE Load
		DODEFAULT()
		
		*******************************************************************************************************************
		* SELECT 0 is needed for grids recordsource, to prevent recordsource property to use some randomly selected alias *
		* and later cause error 1925.                                                                                     *
		*******************************************************************************************************************
		
		SELECT 0
		
		RETURN .T.
	ENDPROC

	PROCEDURE losechanges
		IF this.lChanged
			IF NOT YesNo(GetLangText("RESERVAT","TXT_LOSECHANGES"))
				RETURN .T.
			ENDIF
			this.lChanged = .F.
		ENDIF
		
		RETURN .F.
	ENDPROC

	PROCEDURE mustcopysplits
		LOCAL lnSelect, lnRecords, lnRecNo
		
		lnSelect = SELECT()
		
		SELECT curResrart
		
		lnRecNo = RECNO()
		
		COUNT TO lnRecords
		
		GO lnRecNo
		
		SELECT (lnSelect)
		
		RETURN lnRecords = 0
	ENDPROC

	PROCEDURE onclose
		IF this.LoseChanges()
			RETURN .T.
		ENDIF
		
		this.Release()
		
		RETURN .T.
	ENDPROC

	PROCEDURE ondatechange
		LPARAMETERS lp_lInit
		LOCAL lcurRatecode, llChangeAllowed, llResartExists
		
		this.dSelectedDate = curResRate.rr_date
		this.nSelectedDay = MAX(this.dSelectedDate - this.dArrdate + 1, 1)
		this.cRoomType = ALLTRIM(curResRate.ri_roomtyp)
		this.nGroup = dbLookup("RoomType","Tag1",this.cRoomType,"rt_group")
		lcurRatecode = SqlCursor("SELECT * FROM ratecode WHERE rc_key = " + SqlCnv(curResRate.rr_ratecod,.T.))
		SCATTER MEMO NAME this.oRatecode
		DClose(lcurRatecode)
		
		this.SetControlSource()
		
		llChangeAllowed = this.ChangeAllowed()
		llResartExists = NOT EOF("curResrart")
		this.cmdNew.Enabled = paRights(44) AND llChangeAllowed
		this.cmdEdit.Enabled = paRights(45) AND llChangeAllowed AND llResartExists
		this.cmdDelete.Enabled = paRights(46) AND llChangeAllowed AND llResartExists
		this.cmdDeleteAll.Enabled = paRights(47) AND llChangeAllowed AND llResartExists
		this.cmdNote.Enabled = paRights(45) AND llChangeAllowed AND llResartExists
		IF llChangeAllowed
			this.oCallingobj.Parent.CheckPriceForSplitSum(IIF(llResartExists, "curResrart", "curRatearti"), .T.)
		ENDIF
		
		IF NOT lp_lInit
			this.RefreshForm()
			GO TOP IN curResrart
			GO TOP IN curRatearti
			this.Refresh()
		ENDIF
		
		RETURN .T.
	ENDPROC

	PROCEDURE ondelete
		LPARAMETERS tlAll
		LOCAL llDeleted, l_nRecno
		
		l_nRecno = RECNO()
		
		IF tlAll
			IF NOT this.cmdDeleteAll.Enabled
				RETURN
			ENDIF
			IF YesNo(GetLangText("MGRFINAN", "TA_DELETE_ALL"))
				SELECT curResrart
				SET FILTER TO
				DELETE ALL IN curResrart
				llDeleted = .T.
			ENDIF
		ELSE
			IF NOT this.cmdDelete.Enabled
				RETURN
			ENDIF
			IF YesNo(GetLangText("MGRFINAN", "TA_DELETE") + CRLF + TRANSFORM(curResrart.ra_artinum) + " " + ALLTRIM(curResrart.c_lang))
				DELETE IN curResrart
				llDeleted = .T.
			ENDIF
		ENDIF
		
		IF llDeleted
			SELECT curResrart
			LOCATE
			this.cmdEdit.Enabled = paRights(45) AND NOT EOF()
			this.cmdDelete.Enabled = paRights(46) AND NOT EOF()
			this.cmdDeleteAll.Enabled = paRights(47) AND NOT EOF()
			this.cmdNote.Enabled = paRights(45) AND NOT EOF()
		
			this.grdResRArt.Refresh()
			this.grdResRArt.SetFocus()
			LOCATE
			this.grdResRArt.DoScroll(3)
			this.grdResRArt.DoScroll(2)
			
			* Position on next not deleted record
			GO l_nRecno
			IF DELETED()
				SKIP 1
			ENDIF
		ENDIF
		
		this.refreshsplitsgrid()
		
		STRTOFILE(TRANSFORM(DATETIME())+"|LINENO"+TRANSFORM(LINENO(1))+"|RECNO:"+TRANSFORM(RECNO())+"|DELETED:"+TRANSFORM(DELETED())+"|BOF:"+TRANSFORM(BOF())+"|EOF:"+TRANSFORM(EOF())+CHR(13),"selectedrecord.log",1)
		
		this.lChanged = .T.
		
		RETURN .T.
	ENDPROC

	PROCEDURE onedit
		LOCAL loDataRA, lcRDateUserField
		
		IF NOT this.cmdEdit.Enabled
			RETURN
		ENDIF
		
		DO FORM "forms\SelRateArtiForm" WITH EDIT_MODE, this.oRatecode, "curResrart" TO loDataRA
		
		SELECT curResrart
		IF NOT ISNULL(loDataRA)
			IF NOT EMPTY(this.cRDateUserField)
				lcRDateUserField = this.cRDateUserField
				loDataRA.&lcRDateUserField = IIF(EMPTY(loDataRA.ra_onlyon), '', TRANSFORM(this.dArrdate+loDataRA.ra_onlyon-1))
			ENDIF
			loDataRA.ra_units = ICASE(loDataRA.ra_multipl=1, this.oCallingobj.Parent.oNewRes.rs_adults, ;
								loDataRA.ra_multipl=2, this.oCallingobj.Parent.oNewRes.rs_adults+this.oCallingobj.Parent.oNewRes.rs_childs+this.oCallingobj.Parent.oNewRes.rs_childs2+this.oCallingobj.Parent.oNewRes.rs_childs3, ;
								loDataRA.ra_multipl=3, this.oCallingobj.Parent.oNewRes.rs_childs, ;
								loDataRA.ra_multipl=5, this.oCallingobj.Parent.oNewRes.rs_childs2, ;
								loDataRA.ra_multipl=6, this.oCallingobj.Parent.oNewRes.rs_childs3, ;
								loDataRA.ra_multipl=7, 0, 1)
			GATHER NAME loDataRA MEMO
		ENDIF
		GO RECNO()
		this.grdResRArt.SetFocus()
		
		this.refreshsplitsgrid()
		
		this.lChanged = .T.
		
		RETURN .T.
	ENDPROC

	PROCEDURE onfirststart
		IF NOT this.lOnFirstActivate
			this.lOnFirstActivate = .T.
			this.RefreshForm()
			this.lblSelectedDate.Visible = .T.
			GO TOP IN curResrart
			GO TOP IN curRatearti
		ENDIF
		
		RETURN .T.
	ENDPROC

	PROCEDURE onnew
		LOCAL loDataRA, lcRDateUserField
		
		IF NOT this.cmdNew.Enabled
			RETURN
		ENDIF
		
		****************************************************************************
		* If there are no custom split articles for this reservation, ask user if  *
		* he wishes to copy all articles from splits for selected ratecode.       **
		****************************************************************************
		
		IF this.MustCopySplits() AND yesno(GetLangText("RESRATE", "TXT_COPY_SPLITS"))
			this.CopySplits()
		ELSE
			DO FORM "forms\SelRateArtiForm" WITH NEW_MODE, this.oRatecode, "curResrart" TO loDataRA
			SELECT curResrart
			IF NOT ISNULL(loDataRA)
				APPEND BLANK
				loDataRA.ra_rsid = this.oCallingobj.Parent.oNewRes.rs_rsid
				loDataRA.ra_ratecod = this.oRatecode.rc_key
				loDataRA.ra_units = ICASE(loDataRA.ra_multipl=1, this.oCallingobj.Parent.oNewRes.rs_adults, ;
									loDataRA.ra_multipl=2, this.oCallingobj.Parent.oNewRes.rs_adults+this.oCallingobj.Parent.oNewRes.rs_childs+this.oCallingobj.Parent.oNewRes.rs_childs2+this.oCallingobj.Parent.oNewRes.rs_childs3, ;
									loDataRA.ra_multipl=3, this.oCallingobj.Parent.oNewRes.rs_childs, ;
									loDataRA.ra_multipl=5, this.oCallingobj.Parent.oNewRes.rs_childs2, ;
									loDataRA.ra_multipl=6, this.oCallingobj.Parent.oNewRes.rs_childs3, ;
									loDataRA.ra_multipl=7, 0, 1)
				IF NOT EMPTY(this.cRDateUserField)
					lcRDateUserField = this.cRDateUserField
					loDataRA.&lcRDateUserField = IIF(EMPTY(loDataRA.ra_onlyon), '', TRANSFORM(this.dArrdate+loDataRA.ra_onlyon-1))
				ENDIF
				GATHER NAME loDataRA MEMO
			ENDIF
		ENDIF
		
		this.cmdEdit.Enabled = paRights(45) AND NOT EOF("curResrart")
		this.cmdDelete.Enabled = paRights(46) AND NOT EOF("curResrart")
		this.cmdDeleteAll.Enabled = paRights(47) AND NOT EOF("curResrart")
		this.cmdNote.Enabled = paRights(45) AND NOT EOF("curResrart")
		this.Refresh()
		GO RECNO()
		this.grdResRArt.SetFocus()
		
		this.refreshsplitsgrid()
		
		this.lChanged = .T.
		
		RETURN .T.
	ENDPROC

	PROCEDURE onnext
		IF this.LoseChanges()
			RETURN .T.
		ENDIF
		
		SKIP 1 IN curResRate
		IF NOT EOF("curResRate")
			this.OnDateChange()
		ELSE
			SKIP -1 IN curResRate
		ENDIF
		
		RETURN .T.
	ENDPROC

	PROCEDURE onnote
		LOCAL loDataRA, lcRDateUserField, lcPlainText, lcCaption, lcPrintText
		PRIVATE pcNote
		
		IF NOT this.cmdNote.Enabled
			RETURN
		ENDIF
		
		IF EMPTY(curResrart.ra_note) AND curResrart.ar_notecpy
			pcNote = curResrart.ar_notef
		ELSE
			pcNote = curResrart.ra_notef
		ENDIF
		
		lcCaption = GetLangText("CHKOUT2", "TXT_NOTE") + " " + GetLangText("MGRPLIST", "TXT_PERC_FOR") + " " + TRANSFORM(curResrart.ar_artinum) + " " + ALLTRIM(curResrart.c_lang)
		
		IF _screen.oGlobal.larticlenotewithformating
			DO FORM Forms\NoteFormFormat WITH pcNote, lcCaption TO pcNote
		ELSE
			DO FORM Forms\NoteForm WITH pcNote, lcCaption TO pcNote
		ENDIF
		
		IF NOT ISNULL(pcNote)
			lcPlainText = FNRemoveHTMLTag(pcNote)
			IF EMPTY(lcPlainText)
				lcPlainText = ""
				pcNote = ""
				lcPrintText = ""
			ELSE
				lcPrintText = FNReplaceHTMLTag(pcNote)
			ENDIF
			REPLACE ra_note WITH lcPlainText, ra_notef WITH pcNote, ra_notep WITH lcPrintText IN curResrart
		ENDIF
		
		GO RECNO()
		this.grdResRArt.SetFocus()
		
		this.refreshsplitsgrid()
		
		this.lChanged = .T.
		
		RETURN .T.
	ENDPROC

	PROCEDURE onprevious
		IF this.LoseChanges()
			RETURN .T.
		ENDIF
		
		SKIP -1 IN curResRate
		IF NOT BOF("curResRate")
			this.OnDateChange()
		ENDIF
		
		RETURN .T.
	ENDPROC

	PROCEDURE onsave
		LOCAL i, loResrart, lcFilter, llResartExists
		LOCAL ARRAY laRatecodes(1)
		
		SELECT curResrart
		lcFilter = FILTER()
		SET FILTER TO
		LOCATE
		
		llResartExists = NOT EOF("curResrart")
		
		IF NOT this.oCallingobj.Parent.CheckPriceForSplitSum(IIF(llResartExists, "curResrart", "curRatearti"))
			SELECT curResrart
			SET FILTER TO &lcFilter
			RETURN .F.
		ENDIF
		
		REPLACE ra_rcsetid WITH this.oRatecode.rc_rcsetid, ra_raid WITH -NextID("RESRART") FOR ra_raid = 0 IN curResrart
		DELETE FOR ra_rsid = this.oCallingobj.Parent.oNewRes.rs_rsid AND ra_rcsetid = this.oRatecode.rc_rcsetid AND ;
			NOT SEEK(STR(resrart.ra_rsid,10)+STR(resrart.ra_rcsetid,8)+STR(resrart.ra_raid,10), "curResrart", "tag2") IN resrart
		SELECT DISTINCT ra_ratecod FROM resrart ;
			WHERE ra_rsid = this.oCallingobj.Parent.oNewRes.rs_rsid AND ra_rcsetid = this.oRatecode.rc_rcsetid ;
			INTO ARRAY laRatecodes
		
		SELECT curResrart
		SCAN
			SCATTER NAME loResrart MEMO
			SELECT resrart
			FOR i = 1 TO ALEN(laRatecodes)
				IF NOT EMPTY(laRatecodes(i))
					loResrart.ra_ratecod = laRatecodes(i)
				ENDIF
				IF NOT SEEK(STR(loResrart.ra_rsid,10)+loResrart.ra_ratecod+STR(loResrart.ra_raid,10), "resrart", "tag2")
					APPEND BLANK
				ENDIF
				GATHER NAME loResrart MEMO
			NEXT
			SELECT curResrart
		ENDSCAN
		
		this.lChanged = .F.
		this.lOK = .T.
		
		SELECT curResrart
		SET FILTER TO &lcFilter
		
		*this.OnClose()
		
		RETURN .T.
	ENDPROC

	PROCEDURE QueryUnload
		NODEFAULT
		this.OnClose()
	ENDPROC

	PROCEDURE refreshform
		this.refreshsplitsgrid()
		IF NOT EMPTY(this.dselecteddate)
			this.lblSelectedDate.Caption = GetLangText("ACT","T_DATE") + ": " + DTOC(this.dselecteddate) + " " + LEFT(MyCDoW(this.dselecteddate),2) + " " + ;
					"(" + GetLangText("MGRFINAN","TXT_DAY") + " " + TRANSFORM(this.nSelectedDay) + ")"
		ENDIF
		
		RETURN .T.
	ENDPROC

	PROCEDURE refreshsplitsgrid
		LOCAL lnSelectedDay, lnLastDay, lcDayFilter, l_nSelect
		
		l_nSelect = SELECT()
		
		lnSelectedDay = this.nSelectedDay
		lnLastDay = this.oCallingobj.Parent.oNewRes.rs_depdate - this.dArrdate + 1
		
		lcDayFilter = [(INLIST(ra_onlyon, 0, ]+TRANSFORM(lnSelectedDay)+[)]
		IF lnSelectedDay = lnLastDay
			* On last day show all future splits
			lcDayFilter = lcDayFilter + [ OR ra_onlyon > ]+TRANSFORM(lnSelectedDay)+[)]
		ELSE
			lcDayFilter = lcDayFilter + [)]
		ENDIF
		
		SELECT curResrart
		SET FILTER TO &lcDayFilter
		
		this.calculategridsum()
		
		SELECT (l_nSelect)
		
		RETURN .T.
	ENDPROC

	PROCEDURE setcontrolsource
		LOCAL lcSql, adl, ch1, ch2, ch3
		
		this.txtRateCode.Value = ALLTRIM(LEFT(this.oRatecode.rc_key,10))
		
		adl = TRANSFORM(this.oCallingobj.Parent.oNewRes.rs_adults)
		ch1 = TRANSFORM(this.oCallingobj.Parent.oNewRes.rs_childs)
		ch2 = TRANSFORM(this.oCallingobj.Parent.oNewRes.rs_childs2)
		ch3 = TRANSFORM(this.oCallingobj.Parent.oNewRes.rs_childs3)
		
		this.grdratearti.RecordSource = ""
		this.grdResRArt.RecordSource = ""
		
		TEXT TO lcSql TEXTMERGE NOSHOW PRETEXT 2+8
		SELECT ratearti.*, <<SqlCnv(this.oCallingobj.Parent.oNewRes.rs_rsid)>> AS ra_rsid,
			CAST(ICASE(ra_multipl=1,<<adl>>,ra_multipl=2,<<adl>>+<<ch1>>+<<ch2>>+<<ch3>>,ra_multipl=3,<<ch1>>,ra_multipl=5,<<ch2>>,ra_multipl=6,<<ch3>>,ra_multipl=7,0,1) AS Num(4)) AS ra_units,
			CAST(NVL(ar_lang<<g_Langnum>>,'') AS Character(35)) AS c_lang, CAST(IIF(EMPTY(ra_onlyon), '', DTOS(<<SqlCnv(this.dArrdate)>>+ra_onlyon-1)) AS Char(10)) AS c_daysort
			FROM ratearti
			LEFT JOIN article ON ra_artinum = ar_artinum
			WHERE ra_ratecod = <<SqlCnv(this.oRatecode.rc_key,.T.)>>
			ORDER BY ra_artityp, ra_artinum
		ENDTEXT
		SqlCursor(lcSql,"curRatearti",,,,,,.T.)
		INDEX ON STR(ra_rsid,10)+ra_ratecod+STR(ra_artityp,1)+STR(ra_artinum,4) TAG tag1
		INDEX ON STR(ra_rsid,10)+ra_ratecod+STR(ra_raid,10) TAG tag2
		SET ORDER TO
		TEXT TO lcSql TEXTMERGE NOSHOW PRETEXT 2+8
		SELECT *,
			CAST(ICASE(ra_multipl=1,<<adl>>,ra_multipl=2,<<adl>>+<<ch1>>+<<ch2>>+<<ch3>>,ra_multipl=3,<<ch1>>,ra_multipl=5,<<ch2>>,ra_multipl=6,<<ch3>>,ra_multipl=7,0,1) AS Num(4)) AS ra_units,
			CAST(NVL(ar_lang<<g_Langnum>>,'') AS Character(35)) AS c_lang, CAST(IIF(EMPTY(ra_onlyon), '', DTOS(<<SqlCnv(this.dArrdate)>>+ra_onlyon-1)) AS Char(10)) AS c_daysort
			FROM resrart WITH (BUFFERING = .T.)
			LEFT JOIN article ON ra_artinum = ar_artinum
			WHERE ra_rsid = <<SqlCnv(this.oCallingobj.Parent.oNewRes.rs_rsid)>> AND ra_ratecod = <<SqlCnv(this.oRatecode.rc_key,.T.)>>
			ORDER BY ra_artityp, ra_artinum
		ENDTEXT
		&lcSql INTO CURSOR curResrart READWRITE
		IF NOT EMPTY(this.cRDateUserField)
			REPLACE (this.cRDateUserField) WITH IIF(EMPTY(ra_onlyon), '', TRANSFORM(this.dArrdate+ra_onlyon-1))
		ENDIF
		INDEX ON STR(ra_rsid,10)+ra_ratecod+STR(ra_artityp,1)+STR(ra_artinum,4) TAG tag1
		INDEX ON STR(ra_rsid,10)+STR(ra_rcsetid,8)+STR(ra_raid,10) TAG tag2
		SET ORDER TO tag1
		
		this.grdRateArti.SetGrid("curRatearti")
		this.grdResRArt.SetGrid("curResrart")
	ENDPROC

	PROCEDURE Unload
		DODEFAULT()
		
		RETURN this.lOK
	ENDPROC

	PROCEDURE cmdCancel.Click
		thisform.OnClose()
	ENDPROC

	PROCEDURE cmdDelete.Click
		thisform.OnDelete()
	ENDPROC

	PROCEDURE cmdDeleteAll.Click
		thisform.OnDelete(.T.)
	ENDPROC

	PROCEDURE cmdEdit.Click
		thisform.OnEdit()
	ENDPROC

	PROCEDURE cmdNew.Click
		thisform.OnNew()
	ENDPROC

	PROCEDURE cmdNext.Click
		thisform.OnNext()
	ENDPROC

	PROCEDURE cmdNote.Click
		thisform.OnNote()
	ENDPROC

	PROCEDURE cmdOK.Click
		thisform.OnSave()
	ENDPROC

	PROCEDURE cmdPrev.Click
		thisform.OnPrevious()
	ENDPROC

	PROCEDURE grdRateArti.setgrid
		LPARAMETERS tcRecordSource
		
		DODEFAULT(tcRecordSource)
		
		SELECT &tcRecordSource
		this.grcOnlyOn.ControlSource = "ICASE(EMPTY(ra_onlyon), '" + GetLangText("RESFIX", "TXT_ALL_DAYS") + "', ra_onlyon=999, TRANSFORM(thisform.dDepdate-1), TRANSFORM(thisform.dArrdate+ra_onlyon-1))"
		
		this.grcOnlyOn.csortorder = "c_daysort"
		
		RETURN .T.
	ENDPROC

	PROCEDURE grdResRArt.DblClick
		thisform.OnEdit()
	ENDPROC

	PROCEDURE grdResRArt.defineudpopupmenu
		DIMENSION this.aPopupMenu[5]
		this.aPopupMenu[1] = this.Parent.cmdNew
		this.aPopupMenu[2] = this.Parent.cmdEdit
		this.aPopupMenu[3] = this.Parent.cmdDelete
		this.aPopupMenu[4] = this.Parent.cmdDeleteAll
		this.aPopupMenu[5] = this.Parent.cmdNote
	ENDPROC

	PROCEDURE grdResRArt.setgrid
		LPARAMETERS tcRecordSource
		
		DODEFAULT(tcRecordSource)
		
		SELECT &tcRecordSource
		this.grcOnlyOn.ControlSource = "IIF(EMPTY(ra_onlyon), '" + GetLangText("RESFIX", "TXT_ALL_DAYS") + "', TRANSFORM(thisform.dArrdate+ra_onlyon-1))"
		this.grcOnlyOn.csortorder = "c_daysort"
		IF NOT EMPTY(thisform.cRDateUserField)
			lcGridUserField = STRTRAN(thisform.cRDateUserField,"ra_user","grcUser")
			this.&lcGridUserField..ControlSource = "EVL("+thisform.cRDateUserField+", '" + GetLangText("RESFIX", "TXT_ALL_DAYS") + "')"
		ENDIF
		
		RETURN .T.
	ENDPROC

ENDDEFINE
