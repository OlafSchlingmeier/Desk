*--------------------------------------------------------------------------------------------------------------------------------------------------------
* (ES) AUTOGENERADO - ¡¡ATENCIÓN!! - ¡¡NO PENSADO PARA EJECUTAR!! USAR SOLAMENTE PARA INTEGRAR CAMBIOS Y ALMACENAR CON HERRAMIENTAS SCM!!
* (EN) AUTOGENERATED - ATTENTION!! - NOT INTENDED FOR EXECUTION!! USE ONLY FOR MERGING CHANGES AND STORING WITH SCM TOOLS!!
*--------------------------------------------------------------------------------------------------------------------------------------------------------
*< FOXBIN2PRG: Version="1.19" SourceFile="selectreport.scx" /> (Solo para binarios VFP 9 / Only for VFP 9 binaries)
*
*
DEFINE CLASS dataenvironment AS dataenvironment 
 	*< CLASSDATA: Baseclass="dataenvironment" Timestamp="" Scale="" Uniqueid="" ClassIcon="2" />

	DataSource = .NULL.
	Height = 410
	Left = 1
	Name = "Dataenvironment"
	Top = 220
	Width = 788

ENDDEFINE

DEFINE CLASS selectreport AS tform OF "..\libs\main.vcx" 
 	*< CLASSDATA: Baseclass="form" Timestamp="" Scale="" Uniqueid="" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="cmdGo" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdCance" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Tlistbox1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Tlabel1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Reports1" UniqueID="" Timestamp="" />

	*<DefinedPropArrayMethod>
		*m: mopentables
	*</DefinedPropArrayMethod>

	AlwaysOnTop = .F.
	ControlBox = .T.
	DataSession = 2
	DoCreate = .T.
	doini = .T.
	formname = selectreport
	Height = 336
	Icon = ..\bitmap\icons\note01.ico
	MaxButton = .F.
	MinButton = .F.
	Name = "SELECTREPORT"
	Visible = .T.
	Width = 289
	WindowState = 0

	ADD OBJECT 'cmdCance' AS tcommandbutton WITH ;
		Caption = "cmdCancel", ;
		Left = 60, ;
		Name = "cmdCance", ;
		TabIndex = 2, ;
		Top = 306
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'cmdGo' AS tcommandbutton WITH ;
		Caption = "cmdGo", ;
		Left = 144, ;
		Name = "cmdGo", ;
		TabIndex = 3, ;
		Top = 306
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'Reports1' AS reports WITH ;
		Height = 17, ;
		Left = 0, ;
		Name = "Reports1", ;
		Top = 300, ;
		Width = 36
		*< END OBJECT: ClassLib="..\libs\reports.vcx" BaseClass="custom" />

	ADD OBJECT 'Tlabel1' AS tlabel WITH ;
		Height = 17, ;
		Left = 12, ;
		Name = "Tlabel1", ;
		TabIndex = 4, ;
		Top = 3, ;
		Width = 264
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'Tlistbox1' AS tlistbox WITH ;
		Height = 276, ;
		Left = 12, ;
		Name = "Tlistbox1", ;
		RowSourceType = 6, ;
		TabIndex = 1, ;
		Top = 24, ;
		Width = 264
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="listbox" />
	
	PROCEDURE Error
		LPARAMETERS nError, cMethod, nLine
		DO errorsys WITH  nError, MESSAGE(), 'PRTREPORT', nLine, MESSAGE(1)
		
	ENDPROC

	PROCEDURE Init
		Lparameters nMenuGroup,cpRompt,nsIzeofbrowse,laExtraParam1, nmode
		LOCAL i,l_cModule,lnRn,nsIzeofbrowse,LString1,cfOrclause,cwInname,_letters,cwHileclause,nMenu,nOrder,cId,cMacro,lnCount
		LOCAL LFound   
		IF PCOUNT()<5
			nmode=0
		ENDIF
		
		this.nmode=nmode
		IF PCOUNT()>=4
			DECLARE laExtraParam(ALEN(laExtraParam1,1),ALEN(laExtraParam1,2))
			ACOPY(laExtraParam1,laExtraParam)
			this.AddProperty('aExtraParam['+ALLTRIM(STR(ALEN(laExtraParam,1)))+','+ALLTRIM(STR(ALEN(laExtraParam,2)))+']')
			ACOPY(laExtraParam,this.aExtraParam)
		endif
		
		DODEFAULT()
		
		this.mopentables
		DO CASE 
			CASE nmode=0
				SELECT lists
				nsIzeofbrowse=0
				SELECT lists
				LOCAL LString1
				LString1 = "EMPTY(li_license)"
				FOR i = 1 TO GETWORDCOUNT(_screen.liclist,",")
					l_cModule = GETWORDNUM(_screen.liclist,i,",")
					IF _screen.&l_cModule
						LString1 = LString1 + " OR '" + l_cModule + "' $ li_license" 
					ENDIF
				NEXT
				cfOrclause = "(EMPTY(li_usrgrp) OR g_UserGroup $ li_usrgrp) AND NOT li_hide AND (" + LString1 + ")"
				cwHileclause = "li_menu = " + STR(nMenuGroup)
				If (nmEnugroup==8)
					cwInname = WONTOP()&&wnAme()
					Do Case
		* reservation browse
					Case Inlist(cwInname,'RESBRW')
						cfOrclause = cfOrclause + " AND li_lettype = 1"
						Count All For Lists.li_menu==nMenuGroup .And.  Lists.li_lettype = 1 To nsIzeofbrowse
						lnRn=0
						lnDS=THIS.DataSessionId
						
						FOR lnCount=1 TO _screen.formcount
							IF UPPER(ALLTRIM(_screen.forms(lnCount).name))='RESBRW'
								SET DATASESSION TO _screen.forms(lnCount).datasessionid
								lnRN=RECNO('reservat3')
								SET DATASESSION TO lnDS
								exit
							ENDIF
						next
						_letters = .T.
						IF lnRN<>0 .and. lnRN<=RECCOUNT('reservat')
							GO lnRN IN reservat
						ENDIF
		* reservation edit
					Case Inlist(cwInname,'TFORM12')
						cfOrclause = cfOrclause + " AND li_lettype = 1"
						Count All For Lists.li_menu==nMenuGroup .And.  Lists.li_lettype = 1 To nsIzeofbrowse
						lnRn=0
						lnDS=THIS.DataSessionId
		
						FOR lnCount=1 TO _screen.formcount
							IF UPPER(ALLTRIM(_screen.forms(lnCount).name))='TFORM12' .and. TYPE('_screen.forms(lnCount).formname')='C' .and. ALLTRIM(UPPER(_screen.forms(lnCount).formname))='RESERVAT'
								SET DATASESSION TO _screen.forms(lnCount).datasessionid
								lnRN=RECNO('reservat')
								SET DATASESSION TO lnDS
								exit
							ENDIF
						NEXT
		
						_letters = .T.
						IF lnRN<>0 .and. lnRN<=RECCOUNT('reservat')
							GO lnRN IN reservat
						ELSE
							nsIzeofbrowse=0
						ENDIF
		* old reservation
					Case Inlist(cwInname,'WRSBROWSE','WRESERVAT')
						cfOrclause = cfOrclause + " AND li_lettype = 1"
						Count All For Lists.li_menu==nMenuGroup .And.  Lists.li_lettype = 1 To nsIzeofbrowse
						lnRn=0
						lnDS=THIS.DataSessionId
						SET DATASESSION TO 
						lnRN=RECNO('reservat')
						SET DATASESSION TO lnDS
						_letters = .T.
						IF lnRN<>0 .and. lnRN<=RECCOUNT('reservat')
							GO lnRN IN reservat
						ELSE
							nsIzeofbrowse=0
						ENDIF
		* room plan
					Case Inlist(cwInname,'FWEEKFORM')
						cfOrclause = cfOrclause + " AND li_lettype = 1"
						Count All For Lists.li_menu==nMenuGroup .And.  Lists.li_lettype = 1 To nsIzeofbrowse
						
						lnRn=0.000
						
						FOR lnCount=1 TO _screen.formcount
							IF UPPER(ALLTRIM(_screen.forms(lnCount).name))='FWEEKFORM'
								IF !IsNull(_screen.forms(lnCount).SelectedReser)
									lnRN=_screen.forms(lnCount).SelectedReser.reserid
									=SEEK(lnrn,'reservat','tag1')
								ELSE
									nsIzeofbrowse=0
								ENDIF
								exit
							ENDIF
						next
						_letters = .T.
		
		* addressmask, roomplan				
					Case Inlist(cwInname, 'FADDRESSMASK','FWEEKFORM')
		*ACTIVATE WINDOW VIEW
		
						cfOrclause = cfOrclause + " AND li_lettype = 0"
						SELECT lists
						Count All For Lists.li_menu==nMenuGroup .And.  Lists.li_lettype = 0 To nsIzeofbrowse
						_letters = .T.
						lnRn=0
						lnDS=THIS.DataSessionId
		
						FOR lnCount=1 TO _screen.formcount
							IF INLIST(UPPER(ALLTRIM(_screen.forms(lnCount).name)),'FADDRESSMASK')
								SET DATASESSION TO _screen.forms(lnCount).datasessionid
								lnRN=RECNO('address')
								SET DATASESSION TO lnDS
								exit
							ENDIF
						next
						_letters = .T.
						IF lnRN<>0 .and. lnRN<=RECCOUNT('address')
							GO lnRN IN address
						ELSE
							nsIzeofbrowse=0
						ENDIF
					Endcase
				ELSE
					SELECT lists
					Count All For Lists.li_menu==nMenuGroup To nsIzeofbrowse
				Endif
				If (nsIzeofbrowse==0)
					= alErt(GetLangText("MYLISTS","TXT_NOLISTSINTHISGROUP"))
					RETURN TO master
				else
					SET FILTER TO &cForClause .and. &cWhileClause IN lists
					Thisform.tlistbox1.RowSource="Lists.Li_Lang"+g_Langnum
					Thisform.cmdCance.Caption=GetLangText("COMMON","TXT_CLOSE")
					Thisform.cmdgo.Caption=GetLangText("MYLISTS","TXT_GO")
					Thisform.Caption= GetLangText("MYLISTS","TW_REPORTS")+"/ "+cpRompt
					thisform.tlabel1.Caption=GetLangText("MYLISTS","TH_DESCRIPT")
					thisform.tlistbox1.Selected(1)= .t.
					thisform.Refresh
				ENDIF
			CASE nmode=1
		*  print directly
		*		this.Visible=.f.
		* position in lists.dbf
				nMenu=this.aExtraParam(2,1)
				nOrder=this.aExtraParam(3,1)
				cId=PADR(UPPER(ALLTRIM(this.aExtraPAram(4,1))),8)
		*		IF !SEEK(STR(Nmenu,2)+IIF(EMPTY(Norder),"9999",PADL(Norder,4,"0"))+UPPER(Clang),'lists','tag1')
		*			RETURN
		*		ENDIF
				SELECT lists
				SCAN FOR lists.li_listid = cId
					LFound = .T.
					EXIT
				ENDSCAN
				IF !LFound
					RETURN
				ENDIF
				IF TYPE('thisform.aExtraParam(1,1)')<>'U'
					LOCAL lnCount
					FOR lnCount=1 TO ALEN(thisform.aExtraPAram,1)
						cMacro='p'+ALLTRIM(STR(lnCount))
						&cMacro=thisform.aextraParam(lnCount,1)
					NEXT
				endif
				thisform.reports1.mprint(EVALUATE('lists.li_menu=8'))
				RETURN
		ENDCASE
	ENDPROC

	PROCEDURE KeyPress
		LPARAMETERS nKeyCode, nShiftAltCtrl
		IF nkeycode=27
			thisform.cmdCance.Click
		endif
			
	ENDPROC

	PROCEDURE mopentables
		=openfile()
		=relations()
	ENDPROC

	PROCEDURE QueryUnload
		this.cmdcance.Click()
		nodefault
	ENDPROC

	PROCEDURE cmdCance.Click
		SET FILTER TO IN lists
		thisform.Release
		
	ENDPROC

	PROCEDURE cmdGo.Click
		IF TYPE('thisform.aExtraParam(1,1)')<>'U'
			LOCAL lnCount
			FOR lnCount=1 TO ALEN(thisform.aExtraPAram,1)
				cMacro='p'+ALLTRIM(STR(lnCount))
				&cMacro=thisform.aextraParam(lnCount,1)
			NEXT
		ENDIF
		
		thisform.reports1.mprint(EVALUATE('lists.li_menu=8'))
	ENDPROC

ENDDEFINE
