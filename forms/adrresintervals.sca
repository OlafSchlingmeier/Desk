*--------------------------------------------------------------------------------------------------------------------------------------------------------
* (ES) AUTOGENERADO - ¡¡ATENCIÓN!! - ¡¡NO PENSADO PARA EJECUTAR!! USAR SOLAMENTE PARA INTEGRAR CAMBIOS Y ALMACENAR CON HERRAMIENTAS SCM!!
* (EN) AUTOGENERATED - ATTENTION!! - NOT INTENDED FOR EXECUTION!! USE ONLY FOR MERGING CHANGES AND STORING WITH SCM TOOLS!!
*--------------------------------------------------------------------------------------------------------------------------------------------------------
*< FOXBIN2PRG: Version="1.19" SourceFile="adrresintervals.scx" /> (Solo para binarios VFP 9 / Only for VFP 9 binaries)
*
*
DEFINE CLASS dataenvironment AS dataenvironment 
 	*< CLASSDATA: Baseclass="dataenvironment" Timestamp="" Scale="" Uniqueid="" ClassIcon="1" />

	Name = "Dataenvironment"

ENDDEFINE

DEFINE CLASS frmadrressintervals AS tform OF "..\libs\main.vcx" 
 	*< CLASSDATA: Baseclass="form" Timestamp="" Scale="" Uniqueid="" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="cmdDelete" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdSave" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdNew" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdEdit" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdExit" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grdResIntervals" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grdResIntervals.Column1.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grdResIntervals.Column1.Tbgrid1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grdResIntervals.Column2.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grdResIntervals.Column2.Tbgrid1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grdResIntervals.Column3.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grdResIntervals.Column3.Tbgrid1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grdResIntervals.Column4.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grdResIntervals.Column4.Tchkgrid1" UniqueID="" Timestamp="" />

	*<DefinedPropArrayMethod>
		*m: disablebuttons
		*m: getevents
		*m: ondelete
		*m: onedit
		*m: onexit
		*m: onnew
		*m: onsave
		*m: ontoggle
		*m: recalculatemonths
		*m: refreshcursor
		*p: naddrid
	*</DefinedPropArrayMethod>

	Caption = "frmadrressintervals"
	ControlBox = .T.
	DoCreate = .T.
	Height = 374
	KeyPreview = .T.
	MaxButton = .F.
	MinButton = .F.
	Name = "frmadrressintervals"
	ShowTips = .T.
	Width = 351
	WindowType = 1

	ADD OBJECT 'cmdDelete' AS tcommandbutton WITH ;
		Caption = "", ;
		Height = 24, ;
		Left = 57, ;
		Name = "cmdDelete", ;
		Picture = ..\bitmap\toolbar\delete.bmp, ;
		TabIndex = 3, ;
		Top = 5, ;
		Width = 24
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'cmdEdit' AS tcommandbutton WITH ;
		Caption = "", ;
		Height = 24, ;
		Left = 30, ;
		Name = "cmdEdit", ;
		Picture = ..\bitmap\toolbar\edit.bmp, ;
		TabIndex = 2, ;
		Top = 5, ;
		Width = 24
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'cmdExit' AS tcommandbutton WITH ;
		Caption = "", ;
		Height = 24, ;
		Left = 111, ;
		Name = "cmdExit", ;
		Picture = ..\bitmap\toolbar\exit.bmp, ;
		TabIndex = 5, ;
		Top = 5, ;
		Width = 24
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'cmdNew' AS tcommandbutton WITH ;
		Caption = "", ;
		Height = 24, ;
		Left = 3, ;
		Name = "cmdNew", ;
		Picture = ..\bitmap\toolbar\new.bmp, ;
		TabIndex = 1, ;
		Top = 5, ;
		Width = 24
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'cmdSave' AS tcommandbutton WITH ;
		Caption = "", ;
		Height = 24, ;
		Left = 84, ;
		Name = "cmdSave", ;
		Picture = ..\bitmap\toolbar\save.bmp, ;
		TabIndex = 4, ;
		Top = 5, ;
		Width = 24
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'grdResIntervals' AS tgrid WITH ;
		ColumnCount = 4, ;
		DeleteMark = .F., ;
		GridLineColor = 192,192,192, ;
		GridLines = 2, ;
		Height = 336, ;
		Left = 3, ;
		Name = "grdResIntervals", ;
		Panel = 1, ;
		RecordMark = .F., ;
		ScrollBars = 2, ;
		TabIndex = 6, ;
		Top = 35, ;
		Width = 345, ;
		Column1.Name = "Column1", ;
		Column1.ReadOnly = .T., ;
		Column1.Width = 150, ;
		Column2.Name = "Column2", ;
		Column2.Sparse = .F., ;
		Column2.Width = 50, ;
		Column3.Name = "Column3", ;
		Column3.Width = 50, ;
		Column4.Name = "Column4", ;
		Column4.Sparse = .F., ;
		Column4.Width = 60
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="grid" />

	ADD OBJECT 'grdResIntervals.Column1.Header1' AS header WITH ;
		Caption = "Header1", ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'grdResIntervals.Column1.Tbgrid1' AS tbgrid WITH ;
		Left = 44, ;
		Name = "Tbgrid1", ;
		ReadOnly = .T., ;
		Top = 66
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />

	ADD OBJECT 'grdResIntervals.Column2.Header1' AS header WITH ;
		Caption = "Header1", ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'grdResIntervals.Column2.Tbgrid1' AS tbgrid WITH ;
		Left = 13, ;
		Name = "Tbgrid1", ;
		Top = 36
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />

	ADD OBJECT 'grdResIntervals.Column3.Header1' AS header WITH ;
		Caption = "Header1", ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'grdResIntervals.Column3.Tbgrid1' AS tbgrid WITH ;
		Left = 35, ;
		Name = "Tbgrid1", ;
		Top = 36
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />

	ADD OBJECT 'grdResIntervals.Column4.Header1' AS header WITH ;
		Caption = "Header1", ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'grdResIntervals.Column4.Tchkgrid1' AS tchkgrid WITH ;
		Caption = "", ;
		Left = 31, ;
		Name = "Tchkgrid1", ;
		Top = 36
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="checkbox" />
	
	PROCEDURE disablebuttons
		IF BETWEEN(curResIntervals.ai_month,1,12)
			this.cmdEdit.Enabled = .F.
			this.cmdDelete.Enabled = .F.
		ELSE
			this.cmdEdit.Enabled = .T.
			this.cmdDelete.Enabled = .T.
		ENDIF
		
		RETURN .T.
	ENDPROC

	PROCEDURE getevents
		DO getEvents IN procaddress
		RETURN .T.
	ENDPROC

	PROCEDURE Init
		LPARAMETERS lp_nAddrId
		this.nAddrId = lp_nAddrId
		DODEFAULT()
		
		this.Caption = GetLangText("ADDRESS","TXT_EXPECTED_RES_INTERVALS")
		this.cmdNew.ToolTipText = GetLangText("ADDRESS","TT_BNEW")
		this.cmdEdit.ToolTipText = GetLangText("ADDRESS","TT_BEDIT")
		this.cmdDelete.ToolTipText = GetLangText("ADDRESS","TT_BDELETE")
		this.cmdSave.ToolTipText = GetLangText("ADDRESS","TT_BSAVE")
		this.cmdExit.ToolTipText = GetLangText("ADDRESS","TT_BEXIT")
		this.grdResIntervals.column1.header1.Caption = GetLangText("VIEW","TXT_DESCRIPTION")
		this.grdResIntervals.column2.header1.Caption = GetLangText("ADDRESS","TXT_FROM")
		this.grdResIntervals.column3.header1.Caption = GetLangText("ADDRESS","TXT_TO")
		this.grdResIntervals.column4.header1.Caption = STRTRAN(GetLangText("COMMON","TXT_SELECT"),"\<")
		this.RecalculateMonths()
		this.GetEvents()
		this.RefreshCursor()
	ENDPROC

	PROCEDURE KeyPress
		LPARAMETERS nKeyCode, nShiftAltCtrl
		DO CASE
			CASE nkeycode=32 AND nShiftAltCtrl=0 && space bar (toggle checkbox)
				NODEFAULT
				this.ontoggle()
			CASE nkeycode=14 AND nShiftAltCtrl=2 AND this.cmdNew.Enabled && new
				this.onnew()
				NODEFAULT
			CASE nkeycode=5 AND nShiftAltCtrl=2 AND this.cmdEdit.Enabled && edit
				this.onedit()
				NODEFAULT
			CASE nkeycode=19 AND nShiftAltCtrl=2 AND this.cmdSave.Enabled &&save 
				this.onsave()
				NODEFAULT
			CASE nkeycode=4 AND nShiftAltCtrl=2 AND this.cmdDelete.Enabled && delete
				this.ondelete()
				NODEFAULT
			CASE nkeycode=27 && close
				this.onexit()
				NODEFAULT
		ENDCASE
		
		RETURN .T.
	ENDPROC

	PROCEDURE ondelete
		IF yesno(GetLangText("MGRPLIST", "TXT_DELIT")+" "+TRIM(curResIntervals.ai_descrip)+"?")
			IF SEEK(curResIntervals.ai_aiid,"adrstint","tag1")
				DELETE IN adrstint
				DELETE ALL FOR ao_aiid = curResIntervals.ai_aiid IN adrtosi
			ENDIF
			this.RefreshCursor()
		ENDIF
		
		RETURN .T.
	ENDPROC

	PROCEDURE onedit
		LOCAL l_oForm
		IF SEEK(curResIntervals.ai_aiid,"adrstint","tag1")
			DO FORM forms\adrresintervalsedit NAME l_oForm LINKED WITH "EDIT"
			this.RefreshCursor(.F.,adrstint.ai_aiid)
		ENDIF
		RETURN .T.
	ENDPROC

	PROCEDURE onexit
		thisform.Release()
	ENDPROC

	PROCEDURE onnew
		LOCAL l_oForm
		DO FORM forms\adrresintervalsedit NAME l_oForm LINKED WITH "NEW"
		this.RefreshCursor(.F.,adrstint.ai_aiid)
		RETURN .T.
	ENDPROC

	PROCEDURE onsave
		SELECT curResIntervals
		SCAN
			SELECT adrtosi
			LOCATE FOR ao_addrid = thisform.naddrid AND ao_aiid = curResIntervals.ai_aiid
			DO CASE
				CASE curResIntervals.ai_selected AND NOT FOUND()
					INSERT INTO adrtosi  (ao_addrid, ao_aiid) VALUES (thisform.naddrid, curResIntervals.ai_aiid)
				CASE NOT curResIntervals.ai_selected AND FOUND()
					DELETE
			ENDCASE
		ENDSCAN
		this.onexit()
		
		RETURN .T.
	ENDPROC

	PROCEDURE ontoggle
		IF USED("curResIntervals") AND RECCOUNT("curResIntervals")>0 AND NOT EOF("curResIntervals") AND ;
				NOT BOF("curResIntervals")
			REPLACE ai_selected WITH NOT ai_selected IN curResIntervals
			NODEFAULT
		ENDIF
		RETURN .T.
	ENDPROC

	PROCEDURE QueryUnload
		NODEFAULT
		this.onexit()
	ENDPROC

	PROCEDURE recalculatemonths
		DO RecalculateMonths IN procaddress
		
		RETURN .T.
	ENDPROC

	PROCEDURE refreshcursor
		LPARAMETERS lp_lJustCreateCursor, lp_nAbid
		IF EMPTY(lp_nAbid)
			lp_nAbid = 0
		ENDIF
		LOCAL l_nRecNo
		SELECT ai_aiid, ai_fromdat, ai_todat, ai_evid, LEFT(DTOC(ai_fromdat),6) AS ai_frommonth, ;
					LEFT(DTOC(ai_todat),6) AS ai_tomonth, ai_month, ai_descrip, .F. AS ai_selected ;
				FROM adrstint ;
				ORDER BY ai_fromdat ;
				INTO CURSOR curTemp READWRITE
		IF NOT lp_lJustCreateCursor
			l_nRecNo = RECNO("curResIntervals")
			SELECT adrtosi
			SCAN FOR ao_addrid = thisform.naddrid
				SELECT curTemp
				LOCATE FOR ai_aiid = adrtosi.ao_aiid
				IF FOUND()
					REPLACE curTemp.ai_selected WITH .T.
				ENDIF
				SELECT adrtosi
			ENDSCAN
		ENDIF
		IF NOT USED("curResIntervals")
			LOCAL ARRAY l_aCurFields(1)
			= AFIELDS(l_aCurFields,"curTemp")
			CREATE CURSOR curResIntervals FROM ARRAY l_aCurFields
			SELECT curResIntervals
		ELSE
			SELECT curResIntervals
			ZAP
		ENDIF
		IF NOT lp_lJustCreateCursor
			APPEND FROM DBF("curTemp")
			IF lp_nAbid > 0
				LOCATE FOR ai_aiid = lp_nAbid
			ELSE
				IF l_nRecNo > RECCOUNT()
					GO TOP
				ELSE
					GO l_nRecNo
				ENDIF
			ENDIF
			this.grdResIntervals.Refresh()
			this.grdResIntervals.SetFocus()
		ENDIF
		USE IN curTemp
		
		RETURN .T.
	ENDPROC

	PROCEDURE cmdDelete.Click
		thisform.ondelete()
	ENDPROC

	PROCEDURE cmdEdit.Click
		thisform.onedit()
	ENDPROC

	PROCEDURE cmdExit.Click
		thisform.onexit()
	ENDPROC

	PROCEDURE cmdNew.Click
		thisform.onnew()
	ENDPROC

	PROCEDURE cmdSave.Click
		thisform.onsave()
		
	ENDPROC

	PROCEDURE grdResIntervals.AfterRowColChange
		LPARAMETERS nColIndex
		DODEFAULT()
		thisform.DisableButtons()
	ENDPROC

	PROCEDURE grdResIntervals.Column4.Tchkgrid1.InteractiveChange
		* Overlap parent method
	ENDPROC

	PROCEDURE grdResIntervals.Init
		thisform.RefreshCursor(.T.)
		this.RecordSource = [curResIntervals]
		this.column1.ControlSource = [curResIntervals.ai_descrip]
		this.column2.ControlSource = [curResIntervals.ai_frommonth]
		this.column3.ControlSource = [curResIntervals.ai_tomonth]
		this.column4.ControlSource = [curResIntervals.ai_selected]
		DODEFAULT()
	ENDPROC

ENDDEFINE
