*--------------------------------------------------------------------------------------------------------------------------------------------------------
* (ES) AUTOGENERADO - ¡¡ATENCIÓN!! - ¡¡NO PENSADO PARA EJECUTAR!! USAR SOLAMENTE PARA INTEGRAR CAMBIOS Y ALMACENAR CON HERRAMIENTAS SCM!!
* (EN) AUTOGENERATED - ATTENTION!! - NOT INTENDED FOR EXECUTION!! USE ONLY FOR MERGING CHANGES AND STORING WITH SCM TOOLS!!
*--------------------------------------------------------------------------------------------------------------------------------------------------------
*< FOXBIN2PRG: Version="1.19" SourceFile="genpicklform.scx" /> (Solo para binarios VFP 9 / Only for VFP 9 binaries)
*
*
#INCLUDE "..\include\constdefines.h"

DEFINE CLASS dataenvironment AS dataenvironment 
 	*< CLASSDATA: Baseclass="dataenvironment" Timestamp="" Scale="" Uniqueid="" ClassIcon="1" />

	DataSource = .NULL.
	Height = 0
	Left = 0
	Name = "Dataenvironment"
	Top = 0
	Width = 0

ENDDEFINE

DEFINE CLASS frmgenpick AS tform OF "..\libs\main.vcx" 
 	*< CLASSDATA: Baseclass="form" Timestamp="" Scale="" Uniqueid="" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="lblCode" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtCode" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblDesc1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtDesc1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblDesc2" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtDesc2" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="edtDesc2" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblDesc3" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtDesc3" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cboDesc3" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chkDesc3" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblDesc4" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtDesc4" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chkInactive" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdOK" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdCancel" UniqueID="" Timestamp="" />

	*<DefinedPropArrayMethod>
		*m: mcheckid
		*m: mgetnewid
		*p: datacopy
		*p: lfirsttime
		*p: oparamdata
		*p: result
	*</DefinedPropArrayMethod>

	aligntopedges = .T.
	Caption = "frmGenPick"
	ControlBox = .T.
	datacopy = .NULL.
	DoCreate = .T.
	Height = 352
	Icon = ..\bitmap\icons\folder06.ico
	KeyPreview = .T.
	lfirsttime = .T.
	MaxButton = .F.
	MinButton = .F.
	Name = "frmGenPick"
	oparamdata = .NULL.
	Width = 360
	WindowType = 1

	ADD OBJECT 'cboDesc3' AS tcombobox WITH ;
		ColumnCount = -1, ;
		ColumnLines = .F., ;
		Left = 156, ;
		Name = "cboDesc3", ;
		RowSourceType = 5, ;
		Top = 204, ;
		Visible = .F., ;
		Width = 192, ;
		ZOrderSet = 9
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="combobox" />

	ADD OBJECT 'chkDesc3' AS tcheckbox WITH ;
		Alignment = 0, ;
		Caption = "chkDesc3", ;
		Height = 17, ;
		Left = 156, ;
		Name = "chkDesc3", ;
		Top = 231, ;
		Visible = .F., ;
		Width = 192, ;
		ZOrderSet = 10
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="checkbox" />

	ADD OBJECT 'chkInactive' AS tcheckbox WITH ;
		Alignment = 0, ;
		Caption = "chkInactive", ;
		Left = 12, ;
		Name = "chkInactive", ;
		Top = 279, ;
		Visible = .F., ;
		Width = 336, ;
		ZOrderSet = 13
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="checkbox" />

	ADD OBJECT 'cmdCancel' AS tcommandbutton WITH ;
		Cancel = .T., ;
		Caption = "cmdCancel", ;
		Left = 186, ;
		Name = "cmdCancel", ;
		Top = 312, ;
		ZOrderSet = 15
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'cmdOK' AS tcommandbutton WITH ;
		Caption = "cmdOK", ;
		Default = .T., ;
		Left = 90, ;
		Name = "cmdOK", ;
		Top = 312, ;
		ZOrderSet = 14
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'edtDesc2' AS teditbox WITH ;
		Height = 95, ;
		Left = 12, ;
		Name = "edtDesc2", ;
		nlineheight = 4, ;
		Top = 84, ;
		Visible = .F., ;
		Width = 336, ;
		ZOrderSet = 6
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="editbox" />

	ADD OBJECT 'lblCode' AS tlabel WITH ;
		Caption = "lblCode", ;
		Left = 12, ;
		Name = "lblCode", ;
		Top = 15, ;
		Width = 144, ;
		ZOrderSet = 0
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'lblDesc1' AS tlabel WITH ;
		Caption = "lblDesc1", ;
		Left = 12, ;
		Name = "lblDesc1", ;
		Top = 39, ;
		Width = 144, ;
		ZOrderSet = 2
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'lblDesc2' AS tlabel WITH ;
		Caption = "lblDesc2", ;
		Left = 12, ;
		Name = "lblDesc2", ;
		Top = 63, ;
		Visible = .F., ;
		Width = 144, ;
		ZOrderSet = 4
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'lblDesc3' AS tlabel WITH ;
		Caption = "lblDesc3", ;
		Left = 12, ;
		Name = "lblDesc3", ;
		Top = 183, ;
		Visible = .F., ;
		Width = 144, ;
		ZOrderSet = 7
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'lblDesc4' AS tlabel WITH ;
		Caption = "lblDesc4", ;
		Left = 12, ;
		Name = "lblDesc4", ;
		Top = 255, ;
		Visible = .F., ;
		Width = 144, ;
		ZOrderSet = 11
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'txtCode' AS ttext WITH ;
		Left = 156, ;
		Name = "txtCode", ;
		Top = 12, ;
		Width = 192, ;
		ZOrderSet = 1
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtDesc1' AS ttext WITH ;
		Left = 156, ;
		Name = "txtDesc1", ;
		Top = 36, ;
		Width = 192, ;
		ZOrderSet = 3
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtDesc2' AS ttext WITH ;
		Left = 156, ;
		Name = "txtDesc2", ;
		Top = 60, ;
		Visible = .F., ;
		Width = 192, ;
		ZOrderSet = 5
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtDesc3' AS ttext WITH ;
		Left = 156, ;
		Name = "txtDesc3", ;
		Top = 180, ;
		Visible = .F., ;
		Width = 192, ;
		ZOrderSet = 8
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtDesc4' AS ttext WITH ;
		Left = 156, ;
		Name = "txtDesc4", ;
		Top = 252, ;
		Visible = .F., ;
		Width = 192, ;
		ZOrderSet = 12
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />
	
	PROCEDURE Init
		LPARAMETERS m.Mode, m.PisckLCtrlClass, lp_oParamData
		LOCAL l_nTop, l_oObject, l_nHeight
		
		this.AddObject("PickLCtrl", m.PisckLCtrlClass)
		this.AddProperty("pEnableAutoId",0)
		this.AddProperty("pMaxValue",99)
		this.AddProperty("pOldValues",NULL)
		IF PCOUNT()>2
			this.oParamData = lp_oParamData
		ENDIF
		
		IF ATC("pl_numcod",this.PickLCtrl.CodeCS)>0
			this.pEnableAutoId = 1
		ENDIF
		
		this.nMode = m.Mode
		
		this.Caption = ChildTitle(this.PickLCtrl.PickLCaption)
		
		this.cmdOK.Caption = this.PickLCtrl.OKCapt
		this.cmdCancel.Caption = this.PickLCtrl.CancelCapt
		
		this.lblCode.Caption = this.PickLCtrl.CodeCapt
		this.lblDesc1.Caption = this.PickLCtrl.Desc1Capt
		
		DO CASE
			CASE m.Mode = EDIT_MODE
				SCATTER Name this.DataCopy MEMO
				SCATTER NAME this.pOldValues MEMO
			CASE m.Mode = NEW_MODE
				SCATTER BLANK NAME this.DataCopy MEMO
				SCATTER BLANK NAME this.pOldValues MEMO
				this.DataCopy.pl_label = PADR(this.PickLCtrl.PickLLabel,10)
				IF m.PisckLCtrlClass = "PickLConfFeatCtrl"
					this.DataCopy.pl_numval = 1
				ENDIF
		ENDCASE
		
		this.txtCode.ControlSource = this.PickLCtrl.CodeCS
		this.txtCode.Format = this.PickLCtrl.CodeFormat
		this.txtCode.InputMask = this.PickLCtrl.CodeInputMask
		this.txtDesc1.ControlSource = this.PickLCtrl.Desc1CS
		this.txtDesc1.Format = this.PickLCtrl.Desc1Format
		this.txtDesc1.InputMask = this.PickLCtrl.Desc1InputMask
		
		IF this.PickLCtrl.Desc2
			IF ATC("pl_numcod",this.PickLCtrl.Desc2CS)>0
				this.pEnableAutoId = 2
			ENDIF
			this.lblDesc2.Caption = this.PickLCtrl.Desc2Capt
			this.lblDesc2.Visible = .T.
			IF this.PickLCtrl.Desc2IsEditBox
				this.edtDesc2.Visible = .T.
				this.edtDesc2.ControlSource = this.PickLCtrl.Desc2CS
				this.edtDesc2.Format = this.PickLCtrl.Desc2Format
			ELSE
				this.txtDesc2.Visible = .T.
				this.txtDesc2.ControlSource = this.PickLCtrl.Desc2CS
				this.txtDesc2.Format = this.PickLCtrl.Desc2Format
				this.txtDesc2.InputMask = this.PickLCtrl.Desc2InputMask
			ENDIF
		ENDIF
		
		IF this.PickLCtrl.Desc3
			DO CASE
				CASE this.PickLCtrl.Desc3Type = "chk"
					this.chkDesc3.Caption = this.PickLCtrl.Desc3Capt
					this.chkDesc3.Visible = .T.
					this.chkDesc3.ControlSource = this.PickLCtrl.Desc3CS
				CASE this.PickLCtrl.Desc3Type = "cbo"
					this.lblDesc3.Caption = this.PickLCtrl.Desc3Capt
					this.lblDesc3.Visible = .T.
					this.cboDesc3.Visible = .T.
					this.cboDesc3.RowSource = [thisform.PickLCtrl.Desc3RS]
					this.cboDesc3.ControlSource = this.PickLCtrl.Desc3CS
					this.cboDesc3.ColumnCount = ALEN(thisform.PickLCtrl.Desc3RS,2)
					this.cboDesc3.ColumnWidths = "120"+REPLICATE(",120",MAX(this.cboDesc3.ColumnCount-1,0))
					this.cboDesc3.Init()
				OTHERWISE
					this.lblDesc3.Caption = this.PickLCtrl.Desc3Capt
					this.lblDesc3.Visible = .T.
					this.txtDesc3.Visible = .T.
					this.txtDesc3.ControlSource = this.PickLCtrl.Desc3CS
					this.txtDesc3.Format = this.PickLCtrl.Desc3Format
					this.txtDesc3.InputMask = this.PickLCtrl.Desc3InputMask
			ENDCASE
		ENDIF
		
		IF this.PickLCtrl.Desc4
			this.lblDesc4.Caption = this.PickLCtrl.Desc4Capt
			this.lblDesc4.Visible = .T.
			this.txtDesc4.Visible = .T.
			this.txtDesc4.ControlSource = this.PickLCtrl.Desc4CS
			this.txtDesc4.Format = this.PickLCtrl.Desc4Format
			this.txtDesc4.InputMask = this.PickLCtrl.Desc4InputMask
		ENDIF
		
		IF this.PickLCtrl.Inactive
			this.chkInactive.Caption = this.PickLCtrl.InactiveCapt
			this.chkInactive.Visible = .T.
			this.chkInactive.ControlSource = this.PickLCtrl.InactiveCS
		ENDIF
		
		DODEFAULT()
		
		IF m.Mode = NEW_MODE
			IF this.pEnableAutoId = 1
				TRY
					this.pMaxValue = EVALUATE(this.txtCode.InputMask)
				CATCH
				ENDTRY
				this.txtCode.Value = this.mGetNewId()
			ENDIF
			IF this.pEnableAutoId = 2
				IF this.PickLCtrl.Desc2IsEditBox
					TRY
						this.pMaxValue = EVALUATE(this.edtDesc2.InputMask)
					CATCH
					ENDTRY
					this.edtDesc2.Value = this.mGetNewId()
				ELSE
					TRY
						this.pMaxValue = EVALUATE(this.txtDesc2.InputMask)
					CATCH
					ENDTRY
					this.txtDesc2.Value = this.mGetNewId()
				ENDIF
			ENDIF
		ENDIF
	ENDPROC

	PROCEDURE KeyPress
		LPARAMETERS nKeyCode, nShiftAltCtrl
		IF nKeyCode = 27 AND nShiftAltCtrl = 0
			NODEFAULT
			thisform.Result = 0
			thisform.Release()
		ENDIF
	ENDPROC

	PROCEDURE mcheckid
		LOCAL llSuccess, lcCurLastId, lnArea
		
		DO CASE
			CASE NOT BETWEEN(this.DataCopy.pl_numcod, 1, this.pMaxValue)
				Alert(Str2Msg(GetLangText("MGRPLIST", "TXT_ID_OUT_OF_RANGE"),"%s",TRANSFORM(this.pMaxValue)))
			CASE this.DataCopy.pl_numcod = this.pOldValues.pl_numcod
				llSuccess = .T.
			OTHERWISE
				lnArea = SELECT()
		
				lcCurLastId = SqlCursor("SELECT pl_numcod FROM picklist WHERE pl_label = " + ;
					SqlCnv(this.DataCopy.pl_label,.T.) + " AND pl_numcod = " + SqlCnv(this.DataCopy.pl_numcod,.T.))
				llSuccess = (RECCOUNT() = 0)
				DClose(lcCurLastId)
		
				IF NOT llSuccess
					Alert(GetLangText("MGRPLIST", "TXT_ID_ALREADY_EXISTS"))
				ENDIF
		
				SELECT (lnArea)
		ENDCASE
		
		RETURN llSuccess
	ENDPROC

	PROCEDURE mgetnewid
		LOCAL lnNextId, lnArea, lcCurLastId
		
		lnArea = SELECT()
		
		lcCurLastId = SqlCursor("SELECT pl_numcod FROM picklist" + ;
								" WHERE pl_label = " + SqlCnv(this.DataCopy.pl_label,.T.) + ;
								" ORDER BY pl_numcod")
		GO BOTTOM IN &lcCurLastId
		lnNextId = &lcCurLastId..pl_numcod + 1
		
		IF lnNextId > this.pMaxValue
			* if reached max number then search for available ID between 1 - <MaxValue>
			lnNextId = 0
			SELECT &lcCurLastId
			SCAN
				IF pl_numcod - lnNextId > 1
					EXIT
				ENDIF
				lnNextId = pl_numcod
			ENDSCAN
			lnNextId = lnNextId + 1
		ENDIF
		IF lnNextId > this.pMaxValue
			lnNextId = 0
		ENDIF
		
		DClose(lcCurLastId)
		
		SELECT (lnArea)
		
		RETURN lnNextId
	ENDPROC

	PROCEDURE Unload
		thisform.oParamData = .NULL.
		this.Visible = .F.
		ChildTitle("")
		
		return this.Result
	ENDPROC

	PROCEDURE cmdCancel.Click
		thisform.Result = 0
		thisform.Release()
	ENDPROC

	PROCEDURE cmdOK.Click
		LOCAL l_oCaPL AS cabase OF common\libs\cit_ca.vcx, l_nSelect
		
		IF thisform.pEnableAutoId = 1 AND NOT thisform.mCheckId()
			thisform.txtCode.Value = thisform.mGetNewId()
			thisform.txtCode.SetFocus()
			RETURN
		ENDIF
		IF thisform.pEnableAutoId = 2 AND NOT thisform.mCheckId()
			IF thisform.PickLCtrl.Desc2IsEditBox
				thisform.edtDesc2.Value = thisform.mGetNewId()
				thisform.edtDesc2.SetFocus()
			ELSE
				thisform.txtDesc2.Value = thisform.mGetNewId()
				thisform.txtDesc2.SetFocus()
			ENDIF
			RETURN
		ENDIF
		l_nSelect = SELECT()
		l_oCaPL = CREATEOBJECT("capicklist")
		IF thisform.nMode <> EDIT_MODE
			l_oCaPL.cfilterclause = "0=1"
		ELSE
			l_oCaPL.cfilterclause = "pl_label = " + sqlcnv(thisform.DataCopy.pl_label,.T.) + " AND " + ;
					"pl_charcod = " + sqlcnv(thisform.pOldValues.pl_charcod,.T.) + " AND " + ;
					"pl_numcod = " + sqlcnv(thisform.pOldValues.pl_numcod,.T.)
		ENDIF
		l_oCaPL.CursorFill()
		SELECT (l_oCaPL.Alias)
		if thisform.nMode <> EDIT_MODE
			Append Blank
		endif
		
		GATHER Name thisform.DataCopy MEMO
		
		l_oCaPL.DoTableUpdate()
		_screen.oGlobal.oGData.StaticTableRefresh("picklist")
		
		IF NOT ISNULL(thisform.oParamData)
			thisform.oParamData.pl_label = thisform.DataCopy.pl_label
			thisform.oParamData.pl_charcod = thisform.DataCopy.pl_charcod
			thisform.oParamData.pl_numcod = thisform.DataCopy.pl_numcod
		ENDIF
		thisform.Result = RecNo()
		SELECT (l_nSelect)
		thisform.Release()
	ENDPROC

	PROCEDURE txtCode.Valid
		RETURN thisform.PickLCtrl.CodeFieldValidation(this.Value)
	ENDPROC

	PROCEDURE txtDesc1.KeyPress
		LPARAMETERS nKeyCode, nShiftAltCtrl
		
		if (nKeyCode = 24) AND (nShiftAltCtrl = 0)
			if thisform.PickLCtrl.Desc1Desc
				Local m.cMacro
				m.cMacro = "thisform.DataCopy." + thisform.PickLCtrl.LangBase + g_Langnum
				&cMacro = this.Value
				do form "forms\DescForm" with thisform.PickLCtrl.LangBase, thisform.Caption, thisform.DataCopy
			endif
		endif
		
	ENDPROC

	PROCEDURE txtDesc2.KeyPress
		LPARAMETERS nKeyCode, nShiftAltCtrl
		
		if (nKeyCode = 24) AND (nShiftAltCtrl = 0)
			if NOT thisform.PickLCtrl.Desc1Desc
				Local m.cMacro
				m.cMacro = "thisform.DataCopy." + thisform.PickLCtrl.LangBase + g_Langnum
				&cMacro = this.Value
				do form "forms\DescForm" with thisform.PickLCtrl.LangBase, thisform.Caption, thisform.DataCopy
			endif
		endif
		
	ENDPROC

	PROCEDURE txtDesc4.KeyPress
		LPARAMETERS nKeyCode, nShiftAltCtrl
		
		if (nKeyCode = 24) AND (nShiftAltCtrl = 0)
			if NOT thisform.PickLCtrl.Desc1Desc
				Local m.cMacro
				m.cMacro = "thisform.DataCopy." + thisform.PickLCtrl.LangBase + g_Langnum
				&cMacro = this.Value
				do form "forms\DescForm" with thisform.PickLCtrl.LangBase, thisform.Caption, thisform.DataCopy
			endif
		endif
		
	ENDPROC

ENDDEFINE
