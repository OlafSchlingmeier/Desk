*--------------------------------------------------------------------------------------------------------------------------------------------------------
* (ES) AUTOGENERADO - ¡¡ATENCIÓN!! - ¡¡NO PENSADO PARA EJECUTAR!! USAR SOLAMENTE PARA INTEGRAR CAMBIOS Y ALMACENAR CON HERRAMIENTAS SCM!!
* (EN) AUTOGENERATED - ATTENTION!! - NOT INTENDED FOR EXECUTION!! USE ONLY FOR MERGING CHANGES AND STORING WITH SCM TOOLS!!
*--------------------------------------------------------------------------------------------------------------------------------------------------------
*< FOXBIN2PRG: Version="1.19" SourceFile="rates.scx" /> (Solo para binarios VFP 9 / Only for VFP 9 binaries)
*
*
#INCLUDE "..\include\constdefines.h"

DEFINE CLASS dataenvironment AS dataenvironment 
 	*< CLASSDATA: Baseclass="dataenvironment" Timestamp="" Scale="" Uniqueid="" ClassIcon="1" />

	DataSource = .NULL.
	Height = 200
	Left = 1
	Name = "Dataenvironment"
	Top = 220
	Width = 520

ENDDEFINE

DEFINE CLASS frsrates AS fs OF "..\libs\main.vcx" 
 	*< CLASSDATA: Baseclass="formset" Timestamp="" Scale="" Uniqueid="" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="frmRates" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="frmRates.cmdFocus" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="frmRates.grdRates" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="frmRates.grdRates.grcDate.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="frmRates.grdRates.grcDate.Tbgrid1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="frmRates.grdRates.grcStatus.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="frmRates.grdRates.grcStatus.Tbgrid1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="frmRates.grdRates.grcRatecode.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="frmRates.grdRates.grcRatecode.Tbgrid1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="frmRates.grdRates.grcRateAvg.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="frmRates.grdRates.grcRateAvg.Tbgrid1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="frmRates.grdRates.grcRatePG.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="frmRates.grdRates.grcRatePG.Tbgrid1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="frmRates.grdRates.grcRateEX.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="frmRates.grdRates.grcRateEX.Tbgrid1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="frmRates.grdRates.grcRateRF.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="frmRates.grdRates.grcRateRF.Tbgrid1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="frmRates.grdRates.grcRateFRC.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="frmRates.grdRates.grcRateFRC.Tbgrid1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="frmRates.grdRates.grcRateRD.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="frmRates.grdRates.grcRateRD.Tbgrid1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="frmRates.grdRates.grcAdults.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="frmRates.grdRates.grcAdults.Tbgrid1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="frmRates.grdRates.grcChilds1.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="frmRates.grdRates.grcChilds1.Tbgrid1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="frmRates.grdRates.grcChilds2.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="frmRates.grdRates.grcChilds2.Tbgrid1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="frmRates.grdRates.grcChilds3.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="frmRates.grdRates.grcChilds3.Tbgrid1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="frmRates.grdRates.grcRateRC.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="frmRates.grdRates.grcRateRC.Tbgrid1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="frmRates.grdRates.grcRoomType.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="frmRates.grdRates.grcRoomType.Tbgrid1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="frmRates.grdRates.grcRoomNum.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="frmRates.grdRates.grcRoomNum.Tbgrid1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="frmRates.grdRates.grcCustomSplits.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="frmRates.grdRates.grcCustomSplits.Tbgrid1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="frmRates.grdRates.grcArrTime.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="frmRates.grdRates.grcArrTime.Tbgrid1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="frmRates.grdRates.grcDepTime.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="frmRates.grdRates.grcDepTime.Tbgrid1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="frmRates.grdRates.grcRatePers.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="frmRates.grdRates.grcRatePers.Tbgrid1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="frmEditRates" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="frmEditRates.lblFrom" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="frmEditRates.dtxtFromDate" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="frmEditRates.lblTo" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="frmEditRates.dtxtToDate" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="frmEditRates.lblDepTime" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="frmEditRates.txtDepTime" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="frmEditRates.lblArrTime" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="frmEditRates.txtArrTime" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="frmEditRates.lblAdults" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="frmEditRates.txtAdults" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="frmEditRates.lblChilds1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="frmEditRates.txtChilds1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="frmEditRates.lblChilds2" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="frmEditRates.txtChilds2" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="frmEditRates.lblChilds3" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="frmEditRates.txtChilds3" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="frmEditRates.lblRoomType" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="frmEditRates.cboRoomTyp" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="frmEditRates.lblRoomNum" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="frmEditRates.cboRoomname" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="frmEditRates.lblRatecode" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="frmEditRates.cboRatecode" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="frmEditRates.lblRate" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="frmEditRates.txtRate" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="frmEditRates.cmdOK" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="frmEditRates.cmdCancel" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="frmColorDescription" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="frmColorDescription.Sh1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="frmColorDescription.Sh10" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="frmColorDescription.lblForeColor" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="frmColorDescription.lblX" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="frmColorDescription.lblOFF" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="frmColorDescription.lblORA" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="frmColorDescription.lblORU" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="frmColorDescription.lblORI" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="frmColorDescription.lblOAL" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="frmColorDescription.lblOUS" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="frmColorDescription.lblORADescription" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="frmColorDescription.lblOK" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="frmColorDescription.lblOFFDescription" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="frmColorDescription.lblOKDescription" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="frmColorDescription.lblXDescription" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="frmColorDescription.lblNotValid" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="frmColorDescription.lblOUSDescription" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="frmColorDescription.shpNotValid" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="frmColorDescription.lblOALDescription" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="frmColorDescription.lblSysDate" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="frmColorDescription.lblORIDescription" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="frmColorDescription.shpSysDate" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="frmColorDescription.lblORUDescription" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="frmColorDescription.lblPosted" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="frmColorDescription.shpPosted" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="frmColorDescription.lblLinked" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="frmColorDescription.shpLinked" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="frmColorDescription.lblEditable" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="frmColorDescription.shpEditable" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="frmColorDescription.cmdClose" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="frmColorDescription.lblAbbreviations" UniqueID="" Timestamp="" />

	*<DefinedPropArrayMethod>
		*m: backupreservat
		*m: checkpriceforsplitsum
		*m: getreservationdate
		*m: gettodate
		*m: lchanged_assign
		*m: makecursor
		*m: mrestoredataenviroment
		*m: msetdataenvironment
		*m: nmode_assign
		*m: oncolordescription
		*m: onresratearti
		*m: onupdate
		*m: pricelessthensplitsum
		*m: priceperpersonget
		*m: priceperpersonput
		*m: ratecalculate
		*m: resrategridrequery
		*m: restorebackup
		*m: rrsyncreser
		*m: setgriddynamiccolor
		*m: setratecoderate
		*p: carrtime
		*p: carrtimeold
		*p: cdeptime
		*p: cdeptimeold
		*p: cmode
		*p: cratecode
		*p: crcshort
		*p: crcshortold
		*p: creason
		*p: cresrateorder
		*p: croomnum
		*p: croomnumold
		*p: croomtype
		*p: croomtypeold
		*p: cstatusold
		*p: dfromdate
		*p: dfromdateold
		*p: dtodate
		*p: dtodateold
		*p: ladultsoldvalcheck
		*p: lchanged
		*p: nadults
		*p: nadultsold
		*p: nadultsoldval
		*p: nchilds1
		*p: nchilds1old
		*p: nchilds2
		*p: nchilds2old
		*p: nchilds3
		*p: nchilds3old
		*p: nmode		&& 1=Edit mode; 2=Reset mode; 3=Repair mode; 4=Only room edit mode
		*p: nrate
		*p: nrateold
		*p: ocallform
		*p: ocheckres
		*p: onewres
		*p: ooldres
		*p: otablesprop
		*a: aenvironmentdata[1,0]
		*a: aoldlinks[1,0]
	*</DefinedPropArrayMethod>

	AutoRelease = .T.
	carrtime = 
	carrtimeold = 
	cdeptime = 
	cdeptimeold = 
	cmode = 
	cratecode = 
	crcshort = 
	crcshortold = 
	creason = 
	cresrateorder = 
	croomnum = 
	croomnumold = 
	croomtype = 
	croomtypeold = 
	cstatusold = 
	dfromdate = {}
	dfromdateold = {}
	dtodate = {}
	dtodateold = {}
	ladultsoldvalcheck = .F.
	nadults = 0
	nadultsold = 0
	nadultsoldval = 0
	Name = "frsRates"
	nchilds1 = 0
	nchilds1old = 0
	nchilds2 = 0
	nchilds2old = 0
	nchilds3 = 0
	nchilds3old = 0
	nmode = 0		&& 1=Edit mode; 2=Reset mode; 3=Repair mode; 4=Only room edit mode
	nrate = 0.00
	nrateold = 0
	ocallform = .NULL.
	ocheckres = .NULL.
	onewres = .NULL.
	ooldres = .NULL.
	otablesprop = .NULL.
	Tform12.DoCreate = .T.
	Tform12.Height = 0
	Tform12.Name = "Tform12"
	Tform12.Width = 163
	Tform12.WindowState = 0

	ADD OBJECT 'frmColorDescription' AS tform WITH ;
		AlwaysOnTop = .F., ;
		BorderStyle = 2, ;
		Caption = "frmColorDescription", ;
		ControlBox = .T., ;
		DoCreate = .T., ;
		Height = 344, ;
		Icon = ..\bitmap\icons\font02.ico, ;
		MaxButton = .F., ;
		MinButton = .F., ;
		Name = "frmColorDescription", ;
		Width = 752
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="form" />

	ADD OBJECT 'frmColorDescription.cmdClose' AS tcommandbutton WITH ;
		Caption = "cmdClose", ;
		Height = 20, ;
		Left = 297, ;
		Name = "cmdClose", ;
		TabIndex = 7, ;
		Top = 10, ;
		Width = 83
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'frmColorDescription.lblAbbreviations' AS tlabel WITH ;
		AutoSize = .T., ;
		Caption = "lblAbbreviations", ;
		Height = 17, ;
		Left = 11, ;
		Name = "lblAbbreviations", ;
		TabIndex = 1, ;
		Top = 150, ;
		Width = 89
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'frmColorDescription.lblEditable' AS tlabel WITH ;
		Caption = "lblEditable", ;
		Height = 17, ;
		Left = 60, ;
		Name = "lblEditable", ;
		TabIndex = 6, ;
		Top = 120, ;
		Width = 315, ;
		ZOrderSet = 11
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'frmColorDescription.lblForeColor' AS tlabel WITH ;
		Caption = "lblForeColor", ;
		Height = 17, ;
		Left = 12, ;
		Name = "lblForeColor", ;
		TabIndex = 1, ;
		Top = 12, ;
		Width = 264
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'frmColorDescription.lblLinked' AS tlabel WITH ;
		Caption = "lblLinked", ;
		Height = 17, ;
		Left = 60, ;
		Name = "lblLinked", ;
		TabIndex = 5, ;
		Top = 100, ;
		Width = 315, ;
		ZOrderSet = 9
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'frmColorDescription.lblNotValid' AS tlabel WITH ;
		Caption = "lblNotValid", ;
		Height = 17, ;
		Left = 60, ;
		Name = "lblNotValid", ;
		TabIndex = 2, ;
		Top = 40, ;
		Width = 315, ;
		ZOrderSet = 3
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'frmColorDescription.lblOAL' AS tlabel WITH ;
		AutoSize = .T., ;
		Caption = "OAL", ;
		Height = 17, ;
		Left = 20, ;
		Name = "lblOAL", ;
		TabIndex = 2, ;
		Top = 218, ;
		Width = 25, ;
		ZOrderSet = 3
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'frmColorDescription.lblOALDescription' AS tlabel WITH ;
		AutoSize = .T., ;
		Caption = "lblOALDescription", ;
		Height = 17, ;
		Left = 59, ;
		Name = "lblOALDescription", ;
		TabIndex = 4, ;
		Top = 218, ;
		Width = 101, ;
		ZOrderSet = 7
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'frmColorDescription.lblOFF' AS tlabel WITH ;
		AutoSize = .T., ;
		Caption = "OFF", ;
		Height = 17, ;
		Left = 20, ;
		Name = "lblOFF", ;
		TabIndex = 2, ;
		Top = 298, ;
		Width = 25, ;
		ZOrderSet = 3
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'frmColorDescription.lblOFFDescription' AS tlabel WITH ;
		AutoSize = .T., ;
		Caption = "lblOFFDescription", ;
		Height = 17, ;
		Left = 59, ;
		Name = "lblOFFDescription", ;
		TabIndex = 5, ;
		Top = 298, ;
		Width = 101, ;
		ZOrderSet = 9
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'frmColorDescription.lblOK' AS tlabel WITH ;
		AutoSize = .T., ;
		Caption = "OK", ;
		Height = 17, ;
		Left = 20, ;
		Name = "lblOK", ;
		TabIndex = 2, ;
		Top = 178, ;
		Width = 19, ;
		ZOrderSet = 3
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'frmColorDescription.lblOKDescription' AS tlabel WITH ;
		AutoSize = .T., ;
		Caption = "lblOKDescription", ;
		Height = 17, ;
		Left = 59, ;
		Name = "lblOKDescription", ;
		TabIndex = 2, ;
		Top = 178, ;
		Width = 95, ;
		ZOrderSet = 3
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'frmColorDescription.lblORA' AS tlabel WITH ;
		AutoSize = .T., ;
		Caption = "ORA", ;
		Height = 17, ;
		Left = 20, ;
		Name = "lblORA", ;
		TabIndex = 2, ;
		Top = 278, ;
		Width = 27, ;
		ZOrderSet = 3
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'frmColorDescription.lblORADescription' AS tlabel WITH ;
		AutoSize = .T., ;
		Caption = "lblORADescription", ;
		Height = 17, ;
		Left = 59, ;
		Name = "lblORADescription", ;
		TabIndex = 4, ;
		Top = 278, ;
		Width = 103, ;
		ZOrderSet = 7
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'frmColorDescription.lblORI' AS tlabel WITH ;
		AutoSize = .T., ;
		Caption = "ORI", ;
		Height = 17, ;
		Left = 20, ;
		Name = "lblORI", ;
		TabIndex = 2, ;
		Top = 238, ;
		Width = 23, ;
		ZOrderSet = 3
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'frmColorDescription.lblORIDescription' AS tlabel WITH ;
		AutoSize = .T., ;
		Caption = "lblORIDescription", ;
		Height = 17, ;
		Left = 59, ;
		Name = "lblORIDescription", ;
		TabIndex = 5, ;
		Top = 238, ;
		Width = 99, ;
		ZOrderSet = 9
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'frmColorDescription.lblORU' AS tlabel WITH ;
		AutoSize = .T., ;
		Caption = "ORU", ;
		Height = 17, ;
		Left = 20, ;
		Name = "lblORU", ;
		TabIndex = 2, ;
		Top = 258, ;
		Width = 29, ;
		ZOrderSet = 3
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'frmColorDescription.lblORUDescription' AS tlabel WITH ;
		AutoSize = .T., ;
		Caption = "lblORUDescription", ;
		Height = 17, ;
		Left = 59, ;
		Name = "lblORUDescription", ;
		TabIndex = 6, ;
		Top = 258, ;
		Width = 105, ;
		ZOrderSet = 11
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'frmColorDescription.lblOUS' AS tlabel WITH ;
		AutoSize = .T., ;
		Caption = "OUS", ;
		Height = 17, ;
		Left = 20, ;
		Name = "lblOUS", ;
		TabIndex = 2, ;
		Top = 198, ;
		Width = 28, ;
		ZOrderSet = 3
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'frmColorDescription.lblOUSDescription' AS tlabel WITH ;
		AutoSize = .T., ;
		Caption = "lblOUSDescription", ;
		Height = 17, ;
		Left = 59, ;
		Name = "lblOUSDescription", ;
		TabIndex = 3, ;
		Top = 198, ;
		Width = 104, ;
		ZOrderSet = 5
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'frmColorDescription.lblPosted' AS tlabel WITH ;
		Caption = "lblPastOrPost", ;
		Height = 17, ;
		Left = 60, ;
		Name = "lblPosted", ;
		TabIndex = 4, ;
		Top = 80, ;
		Width = 315, ;
		ZOrderSet = 7
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'frmColorDescription.lblSysDate' AS tlabel WITH ;
		Caption = "lblSysDate", ;
		Height = 17, ;
		Left = 60, ;
		Name = "lblSysDate", ;
		TabIndex = 3, ;
		Top = 60, ;
		Width = 315, ;
		ZOrderSet = 5
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'frmColorDescription.lblX' AS tlabel WITH ;
		AutoSize = .T., ;
		Caption = "X", ;
		Height = 17, ;
		Left = 20, ;
		Name = "lblX", ;
		TabIndex = 2, ;
		Top = 318, ;
		Width = 9, ;
		ZOrderSet = 3
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'frmColorDescription.lblXDescription' AS tlabel WITH ;
		AutoSize = .T., ;
		Caption = "lblXDescription", ;
		Height = 17, ;
		Left = 59, ;
		Name = "lblXDescription", ;
		TabIndex = 6, ;
		Top = 318, ;
		Width = 85, ;
		ZOrderSet = 11
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'frmColorDescription.Sh1' AS sh WITH ;
		Height = 172, ;
		Left = 9, ;
		Name = "Sh1", ;
		Top = 170, ;
		Width = 735, ;
		ZOrderSet = 0
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="shape" />

	ADD OBJECT 'frmColorDescription.Sh10' AS sh WITH ;
		Height = 113, ;
		Left = 10, ;
		Name = "Sh10", ;
		Top = 32, ;
		Width = 370, ;
		ZOrderSet = 0
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="shape" />

	ADD OBJECT 'frmColorDescription.shpEditable' AS sh WITH ;
		BackStyle = 1, ;
		Height = 17, ;
		Left = 20, ;
		Name = "shpEditable", ;
		Top = 120, ;
		Width = 36, ;
		ZOrderSet = 12
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="shape" />

	ADD OBJECT 'frmColorDescription.shpLinked' AS sh WITH ;
		BackStyle = 1, ;
		Height = 17, ;
		Left = 20, ;
		Name = "shpLinked", ;
		Top = 100, ;
		Width = 36, ;
		ZOrderSet = 10
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="shape" />

	ADD OBJECT 'frmColorDescription.shpNotValid' AS sh WITH ;
		BackStyle = 1, ;
		Height = 17, ;
		Left = 20, ;
		Name = "shpNotValid", ;
		Top = 40, ;
		Width = 36, ;
		ZOrderSet = 4
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="shape" />

	ADD OBJECT 'frmColorDescription.shpPosted' AS sh WITH ;
		BackStyle = 1, ;
		Height = 17, ;
		Left = 20, ;
		Name = "shpPosted", ;
		Top = 80, ;
		Width = 36, ;
		ZOrderSet = 8
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="shape" />

	ADD OBJECT 'frmColorDescription.shpSysDate' AS sh WITH ;
		BackStyle = 1, ;
		Height = 17, ;
		Left = 20, ;
		Name = "shpSysDate", ;
		Top = 60, ;
		Width = 36, ;
		ZOrderSet = 6
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="shape" />

	ADD OBJECT 'frmEditRates' AS tform WITH ;
		AlwaysOnTop = .F., ;
		Caption = "frmEditRates", ;
		ControlBox = .T., ;
		DoCreate = .T., ;
		Height = 112, ;
		Icon = ..\bitmap\icons\pencil03.ico, ;
		MaxButton = .F., ;
		MinButton = .F., ;
		Name = "frmEditRates", ;
		Width = 800
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="form" />

	ADD OBJECT 'frmEditRates.cboRatecode' AS cbo_rs_ratecod WITH ;
		Left = 617, ;
		Name = "cboRatecode", ;
		TabIndex = 22, ;
		Top = 36, ;
		ZOrderSet = 17
		*< END OBJECT: ClassLib="..\libs\cit_ctrl.vcx" BaseClass="combobox" />

	ADD OBJECT 'frmEditRates.cboRoomname' AS cboroomname WITH ;
		Left = 516, ;
		Name = "cboRoomname", ;
		TabIndex = 20, ;
		Top = 36, ;
		ZOrderSet = 15
		*< END OBJECT: ClassLib="..\libs\cit_ctrl.vcx" BaseClass="combobox" />

	ADD OBJECT 'frmEditRates.cboRoomTyp' AS cbo_rs_roomtyp WITH ;
		Format = "", ;
		InputMask = "", ;
		Left = 392, ;
		Name = "cboRoomTyp", ;
		RowSourceType = 6, ;
		TabIndex = 18, ;
		Top = 36, ;
		ZOrderSet = 13
		*< END OBJECT: ClassLib="..\libs\cit_ctrl.vcx" BaseClass="combobox" />

	ADD OBJECT 'frmEditRates.cmdCancel' AS tcommandbutton WITH ;
		Cancel = .T., ;
		Caption = "cmdCancel", ;
		Left = 406, ;
		Name = "cmdCancel", ;
		TabIndex = 26, ;
		Top = 72, ;
		ZOrderSet = 21
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'frmEditRates.cmdOK' AS tcommandbutton WITH ;
		Caption = "cmdOK", ;
		Default = .T., ;
		Left = 310, ;
		Name = "cmdOK", ;
		TabIndex = 25, ;
		Top = 72, ;
		ZOrderSet = 20
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'frmEditRates.dtxtFromDate' AS tdatectrl WITH ;
		Format = "KR", ;
		Left = 2, ;
		Name = "dtxtFromDate", ;
		TabIndex = 2, ;
		Top = 36, ;
		Width = 90, ;
		ZOrderSet = 1
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />

	ADD OBJECT 'frmEditRates.dtxtToDate' AS tdatectrl WITH ;
		Format = "KR", ;
		Left = 93, ;
		Name = "dtxtToDate", ;
		TabIndex = 4, ;
		Top = 36, ;
		Width = 90, ;
		ZOrderSet = 3
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />

	ADD OBJECT 'frmEditRates.lblAdults' AS tlabel WITH ;
		Caption = "lblAdults", ;
		Left = 268, ;
		Name = "lblAdults", ;
		TabIndex = 9, ;
		Top = 15, ;
		Width = 30, ;
		ZOrderSet = 4
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'frmEditRates.lblArrTime' AS tlabel WITH ;
		Caption = "lblArrTime", ;
		Height = 17, ;
		Left = 184, ;
		Name = "lblArrTime", ;
		TabIndex = 5, ;
		Top = 15, ;
		Width = 40, ;
		ZOrderSet = 4
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'frmEditRates.lblChilds1' AS tlabel WITH ;
		Caption = "lblChilds1", ;
		Left = 299, ;
		Name = "lblChilds1", ;
		TabIndex = 11, ;
		Top = 15, ;
		Width = 30, ;
		ZOrderSet = 6
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'frmEditRates.lblChilds2' AS tlabel WITH ;
		Caption = "lblChilds2", ;
		Left = 330, ;
		Name = "lblChilds2", ;
		TabIndex = 13, ;
		Top = 15, ;
		Width = 30, ;
		ZOrderSet = 8
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'frmEditRates.lblChilds3' AS tlabel WITH ;
		Caption = "lblChilds3", ;
		Left = 361, ;
		Name = "lblChilds3", ;
		TabIndex = 15, ;
		Top = 15, ;
		Width = 30, ;
		ZOrderSet = 10
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'frmEditRates.lblDepTime' AS tlabel WITH ;
		Caption = "lblDepTime", ;
		Height = 17, ;
		Left = 226, ;
		Name = "lblDepTime", ;
		TabIndex = 7, ;
		Top = 15, ;
		Width = 40, ;
		ZOrderSet = 4
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'frmEditRates.lblFrom' AS tlabel WITH ;
		Caption = "lblFrom", ;
		Height = 17, ;
		Left = 2, ;
		Name = "lblFrom", ;
		TabIndex = 1, ;
		Top = 15, ;
		Width = 80, ;
		ZOrderSet = 0
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'frmEditRates.lblRate' AS tlabel WITH ;
		Caption = "lblRate", ;
		Height = 17, ;
		Left = 718, ;
		Name = "lblRate", ;
		TabIndex = 23, ;
		Top = 15, ;
		Width = 80, ;
		ZOrderSet = 18
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'frmEditRates.lblRatecode' AS tlabel WITH ;
		Caption = "lblRatecode", ;
		Left = 617, ;
		Name = "lblRatecode", ;
		TabIndex = 21, ;
		Top = 15, ;
		Width = 100, ;
		ZOrderSet = 16
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'frmEditRates.lblRoomNum' AS tlabel WITH ;
		Caption = "lblRoomNum", ;
		Left = 516, ;
		Name = "lblRoomNum", ;
		TabIndex = 19, ;
		Top = 15, ;
		Width = 100, ;
		ZOrderSet = 14
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'frmEditRates.lblRoomType' AS tlabel WITH ;
		Caption = "lblRoomType", ;
		Left = 392, ;
		Name = "lblRoomType", ;
		TabIndex = 17, ;
		Top = 15, ;
		Width = 123, ;
		ZOrderSet = 12
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'frmEditRates.lblTo' AS tlabel WITH ;
		Caption = "lblTo", ;
		Height = 17, ;
		Left = 93, ;
		Name = "lblTo", ;
		TabIndex = 3, ;
		Top = 15, ;
		Width = 80, ;
		ZOrderSet = 2
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'frmEditRates.txtAdults' AS ttext WITH ;
		InputMask = "999", ;
		Left = 268, ;
		Name = "txtAdults", ;
		TabIndex = 10, ;
		Top = 36, ;
		Width = 30, ;
		ZOrderSet = 5
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />

	ADD OBJECT 'frmEditRates.txtArrTime' AS ttext WITH ;
		Height = 23, ;
		InputMask = "99:99", ;
		Left = 184, ;
		Name = "txtArrTime", ;
		TabIndex = 6, ;
		Top = 36, ;
		Width = 41, ;
		ZOrderSet = 5
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />

	ADD OBJECT 'frmEditRates.txtChilds1' AS ttext WITH ;
		InputMask = "999", ;
		Left = 299, ;
		Name = "txtChilds1", ;
		TabIndex = 12, ;
		Top = 36, ;
		Width = 30, ;
		ZOrderSet = 7
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />

	ADD OBJECT 'frmEditRates.txtChilds2' AS ttext WITH ;
		InputMask = "9", ;
		Left = 330, ;
		Name = "txtChilds2", ;
		TabIndex = 14, ;
		Top = 36, ;
		Width = 30, ;
		ZOrderSet = 9
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />

	ADD OBJECT 'frmEditRates.txtChilds3' AS ttext WITH ;
		InputMask = "9", ;
		Left = 361, ;
		Name = "txtChilds3", ;
		TabIndex = 16, ;
		Top = 36, ;
		Width = 30, ;
		ZOrderSet = 11
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />

	ADD OBJECT 'frmEditRates.txtDepTime' AS ttext WITH ;
		Height = 23, ;
		InputMask = "99:99", ;
		Left = 226, ;
		Name = "txtDepTime", ;
		TabIndex = 8, ;
		Top = 36, ;
		Width = 41, ;
		ZOrderSet = 5
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />

	ADD OBJECT 'frmEditRates.txtRate' AS ttext WITH ;
		Format = "K", ;
		InputMask = "999999.99", ;
		Left = 718, ;
		Name = "txtRate", ;
		TabIndex = 24, ;
		Top = 36, ;
		Width = 80, ;
		ZOrderSet = 19
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />

	ADD OBJECT 'frmRates' AS tform WITH ;
		AlwaysOnTop = .F., ;
		Caption = "frmRates", ;
		ControlBox = .T., ;
		ctbrclass = ctbrResRate, ;
		DoCreate = .T., ;
		formname = Rates, ;
		Height = 400, ;
		Icon = ..\bitmap\icons\graph06.ico, ;
		KeyPreview = .T., ;
		Name = "frmRates", ;
		saveformsize = .T., ;
		savegridwidths = .T., ;
		ShowTips = .T., ;
		Width = 840
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="form" />

	ADD OBJECT 'frmRates.cmdFocus' AS tcommandbutton WITH ;
		Name = "cmdFocus", ;
		Top = -30, ;
		ZOrderSet = 0
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'frmRates.grdRates' AS tgrid WITH ;
		ColumnCount = 20, ;
		DeleteMark = .F., ;
		GridLineColor = 192,192,192, ;
		GridLines = 2, ;
		Height = 400, ;
		lresizecolumns = .F., ;
		Name = "grdRates", ;
		ReadOnly = .T., ;
		RecordMark = .F., ;
		ScrollBars = 2, ;
		setcolumns = .T., ;
		TabIndex = 6, ;
		Width = 840, ;
		ZOrderSet = 1, ;
		Column1.CurrentControl = "Tbgrid1", ;
		Column1.Name = "grcDate", ;
		Column1.ReadOnly = .T., ;
		Column1.Width = 72, ;
		Column10.ColumnOrder = 13, ;
		Column10.Name = "grcAdults", ;
		Column10.ReadOnly = .T., ;
		Column10.Width = 25, ;
		Column11.ColumnOrder = 14, ;
		Column11.Name = "grcChilds1", ;
		Column11.ReadOnly = .T., ;
		Column11.Width = 25, ;
		Column12.ColumnOrder = 15, ;
		Column12.Name = "grcChilds2", ;
		Column12.ReadOnly = .T., ;
		Column12.Width = 25, ;
		Column13.ColumnOrder = 16, ;
		Column13.Name = "grcChilds3", ;
		Column13.ReadOnly = .T., ;
		Column13.Width = 25, ;
		Column14.Alignment = 1, ;
		Column14.ColumnOrder = 6, ;
		Column14.Name = "grcRateRC", ;
		Column14.ReadOnly = .T., ;
		Column14.Width = 40, ;
		Column15.ColumnOrder = 18, ;
		Column15.Name = "grcRoomType", ;
		Column15.ReadOnly = .T., ;
		Column15.Width = 50, ;
		Column16.ColumnOrder = 19, ;
		Column16.Name = "grcRoomNum", ;
		Column16.ReadOnly = .T., ;
		Column16.Width = 50, ;
		Column17.Alignment = 2, ;
		Column17.ColumnOrder = 5, ;
		Column17.Name = "grcCustomSplits", ;
		Column17.ReadOnly = .T., ;
		Column17.Width = 32, ;
		Column18.ColumnOrder = 2, ;
		Column18.Name = "grcArrTime", ;
		Column18.ReadOnly = .T., ;
		Column18.Width = 35, ;
		Column19.ColumnOrder = 3, ;
		Column19.Name = "grcDepTime", ;
		Column19.ReadOnly = .T., ;
		Column19.Width = 35, ;
		Column2.ColumnOrder = 20, ;
		Column2.Name = "grcStatus", ;
		Column2.ReadOnly = .T., ;
		Column2.Width = 35, ;
		Column20.Alignment = 1, ;
		Column20.ColumnOrder = 17, ;
		Column20.Name = "grcRatePers", ;
		Column20.ReadOnly = .T., ;
		Column20.Width = 40, ;
		Column3.ColumnOrder = 4, ;
		Column3.Name = "grcRatecode", ;
		Column3.ReadOnly = .T., ;
		Column3.Width = 70, ;
		Column4.Alignment = 1, ;
		Column4.ColumnOrder = 7, ;
		Column4.Name = "grcRateAvg", ;
		Column4.ReadOnly = .T., ;
		Column4.Width = 40, ;
		Column5.Alignment = 1, ;
		Column5.ColumnOrder = 8, ;
		Column5.Name = "grcRatePG", ;
		Column5.ReadOnly = .T., ;
		Column5.Width = 40, ;
		Column6.Alignment = 1, ;
		Column6.ColumnOrder = 9, ;
		Column6.Name = "grcRateEX", ;
		Column6.ReadOnly = .T., ;
		Column6.Width = 40, ;
		Column7.Alignment = 1, ;
		Column7.ColumnOrder = 10, ;
		Column7.Name = "grcRateRF", ;
		Column7.ReadOnly = .T., ;
		Column7.Width = 40, ;
		Column8.Alignment = 1, ;
		Column8.ColumnOrder = 11, ;
		Column8.Name = "grcRateFRC", ;
		Column8.ReadOnly = .T., ;
		Column8.Width = 40, ;
		Column9.Alignment = 1, ;
		Column9.ColumnOrder = 12, ;
		Column9.Name = "grcRateRD", ;
		Column9.ReadOnly = .T., ;
		Column9.Width = 40
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="grid" />

	ADD OBJECT 'frmRates.grdRates.grcAdults.Header1' AS header WITH ;
		Alignment = 2, ;
		Caption = "grcAdults", ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'frmRates.grdRates.grcAdults.Tbgrid1' AS tbgrid WITH ;
		Left = 29, ;
		Name = "Tbgrid1", ;
		ReadOnly = .T., ;
		Top = 47
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />

	ADD OBJECT 'frmRates.grdRates.grcArrTime.Header1' AS header WITH ;
		Alignment = 2, ;
		Caption = "grcArrTime", ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'frmRates.grdRates.grcArrTime.Tbgrid1' AS tbgrid WITH ;
		Left = 36, ;
		Name = "Tbgrid1", ;
		ReadOnly = .T., ;
		Top = 47, ;
		Visible = .T.
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />

	ADD OBJECT 'frmRates.grdRates.grcChilds1.Header1' AS header WITH ;
		Alignment = 2, ;
		Caption = "grcChilds1", ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'frmRates.grdRates.grcChilds1.Tbgrid1' AS tbgrid WITH ;
		Left = 24, ;
		Name = "Tbgrid1", ;
		ReadOnly = .T., ;
		Top = 47, ;
		Visible = .T.
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />

	ADD OBJECT 'frmRates.grdRates.grcChilds2.Header1' AS header WITH ;
		Alignment = 2, ;
		Caption = "grcChilds2", ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'frmRates.grdRates.grcChilds2.Tbgrid1' AS tbgrid WITH ;
		Left = 19, ;
		Name = "Tbgrid1", ;
		ReadOnly = .T., ;
		Top = 59
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />

	ADD OBJECT 'frmRates.grdRates.grcChilds3.Header1' AS header WITH ;
		Alignment = 2, ;
		Caption = "grcChilds3", ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'frmRates.grdRates.grcChilds3.Tbgrid1' AS tbgrid WITH ;
		Left = 14, ;
		Name = "Tbgrid1", ;
		ReadOnly = .T., ;
		Top = 47
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />

	ADD OBJECT 'frmRates.grdRates.grcCustomSplits.Header1' AS header WITH ;
		Alignment = 2, ;
		Caption = "grcCustomSplits", ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'frmRates.grdRates.grcCustomSplits.Tbgrid1' AS tbgrid WITH ;
		Alignment = 2, ;
		Left = 25, ;
		Name = "Tbgrid1", ;
		ReadOnly = .T., ;
		Top = 23
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />

	ADD OBJECT 'frmRates.grdRates.grcDate.Header1' AS header WITH ;
		Alignment = 2, ;
		Caption = "grcDate", ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'frmRates.grdRates.grcDate.Tbgrid1' AS tbgrid WITH ;
		Left = 34, ;
		Name = "Tbgrid1", ;
		ReadOnly = .T., ;
		Top = 35
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />

	ADD OBJECT 'frmRates.grdRates.grcDepTime.Header1' AS header WITH ;
		Alignment = 2, ;
		Caption = "grcDepTime", ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'frmRates.grdRates.grcDepTime.Tbgrid1' AS tbgrid WITH ;
		Left = 32, ;
		Name = "Tbgrid1", ;
		ReadOnly = .T., ;
		Top = 35, ;
		Visible = .T.
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />

	ADD OBJECT 'frmRates.grdRates.grcRateAvg.Header1' AS header WITH ;
		Alignment = 2, ;
		Caption = "grcRateRC", ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'frmRates.grdRates.grcRateAvg.Tbgrid1' AS tbgrid WITH ;
		Alignment = 1, ;
		Left = 23, ;
		Name = "Tbgrid1", ;
		ReadOnly = .T., ;
		Top = 47
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />

	ADD OBJECT 'frmRates.grdRates.grcRatecode.Header1' AS header WITH ;
		Alignment = 2, ;
		Caption = "grcRatecode", ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'frmRates.grdRates.grcRatecode.Tbgrid1' AS tbgrid WITH ;
		Left = 51, ;
		Name = "Tbgrid1", ;
		ReadOnly = .T., ;
		Top = 71
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />

	ADD OBJECT 'frmRates.grdRates.grcRateEX.Header1' AS header WITH ;
		Alignment = 2, ;
		Caption = "grcRateEX", ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'frmRates.grdRates.grcRateEX.Tbgrid1' AS tbgrid WITH ;
		Alignment = 1, ;
		Left = 41, ;
		Name = "Tbgrid1", ;
		ReadOnly = .T., ;
		Top = 59
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />

	ADD OBJECT 'frmRates.grdRates.grcRateFRC.Header1' AS header WITH ;
		Alignment = 2, ;
		Caption = "grcRateFRC", ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'frmRates.grdRates.grcRateFRC.Tbgrid1' AS tbgrid WITH ;
		Alignment = 1, ;
		Left = 35, ;
		Name = "Tbgrid1", ;
		ReadOnly = .T., ;
		Top = 47
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />

	ADD OBJECT 'frmRates.grdRates.grcRatePers.Header1' AS header WITH ;
		Alignment = 2, ;
		Caption = "grcRatePers", ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'frmRates.grdRates.grcRatePers.Tbgrid1' AS tbgrid WITH ;
		Alignment = 1, ;
		Left = 25, ;
		Name = "Tbgrid1", ;
		Top = 23
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />

	ADD OBJECT 'frmRates.grdRates.grcRatePG.Header1' AS header WITH ;
		Alignment = 2, ;
		Caption = "grcRatePG", ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'frmRates.grdRates.grcRatePG.Tbgrid1' AS tbgrid WITH ;
		Alignment = 1, ;
		Left = 32, ;
		Name = "Tbgrid1", ;
		ReadOnly = .T., ;
		Top = 59
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />

	ADD OBJECT 'frmRates.grdRates.grcRateRC.Header1' AS header WITH ;
		Alignment = 2, ;
		Caption = "grcRateSum", ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'frmRates.grdRates.grcRateRC.Tbgrid1' AS tbgrid WITH ;
		Alignment = 1, ;
		Left = 15, ;
		Name = "Tbgrid1", ;
		ReadOnly = .T., ;
		Top = 47
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />

	ADD OBJECT 'frmRates.grdRates.grcRateRD.Header1' AS header WITH ;
		Alignment = 2, ;
		Caption = "grcRateRD", ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'frmRates.grdRates.grcRateRD.Tbgrid1' AS tbgrid WITH ;
		Alignment = 1, ;
		Left = 20, ;
		Name = "Tbgrid1", ;
		ReadOnly = .T., ;
		Top = 47
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />

	ADD OBJECT 'frmRates.grdRates.grcRateRF.Header1' AS header WITH ;
		Alignment = 2, ;
		Caption = "grcRateRF", ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'frmRates.grdRates.grcRateRF.Tbgrid1' AS tbgrid WITH ;
		Alignment = 1, ;
		Left = 26, ;
		Name = "Tbgrid1", ;
		ReadOnly = .T., ;
		Top = 47
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />

	ADD OBJECT 'frmRates.grdRates.grcRoomNum.Header1' AS header WITH ;
		Alignment = 2, ;
		Caption = "grcRoomNum", ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'frmRates.grdRates.grcRoomNum.Tbgrid1' AS tbgrid WITH ;
		Left = 13, ;
		Name = "Tbgrid1", ;
		ReadOnly = .T., ;
		Top = 47
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />

	ADD OBJECT 'frmRates.grdRates.grcRoomType.Header1' AS header WITH ;
		Alignment = 2, ;
		Caption = "grcRoomType", ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'frmRates.grdRates.grcRoomType.Tbgrid1' AS tbgrid WITH ;
		Left = 11, ;
		Name = "Tbgrid1", ;
		ReadOnly = .T., ;
		Top = 35
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />

	ADD OBJECT 'frmRates.grdRates.grcStatus.Header1' AS header WITH ;
		Alignment = 2, ;
		Caption = "grcStatus", ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'frmRates.grdRates.grcStatus.Tbgrid1' AS tbgrid WITH ;
		Left = 30, ;
		Name = "Tbgrid1", ;
		ReadOnly = .T., ;
		Top = 47
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />
	
	PROCEDURE backupreservat
		SELECT * FROM resrate WITH (BUFFERING = .T.) WHERE rr_reserid = this.oNewRes.rs_reserid INTO CURSOR bckResrate READWRITE
		SELECT * FROM resrooms WITH (BUFFERING = .T.) WHERE ri_reserid = this.oNewRes.rs_reserid INTO CURSOR bckResrooms READWRITE
		INDEX ON ri_rroomid TAG tag1
		SELECT * FROM ressplit WITH (BUFFERING = .T.) WHERE rl_rsid = this.oNewRes.rs_rsid INTO CURSOR bckRessplit READWRITE
		INDEX ON PADL(rl_rsid,10)+DTOS(rl_date)+PADL(rl_raid,10)+PADL(rl_rfid,10)+PADL(rl_bqid,10) TAG tag1
		SELECT * FROM resrart WITH (BUFFERING = .T.) WHERE ra_rsid = this.oNewRes.rs_rsid INTO CURSOR bckResrart READWRITE
		INDEX ON ra_raid TAG ra_raid
	ENDPROC

	PROCEDURE checkpriceforsplitsum
		LPARAMETERS lp_cRaAlias, lp_lInit
		LOCAL i, l_nArea, l_lValid, l_lChangeRate, l_nSplitSum, l_oResRate, l_nMaximalSplitSumFound, l_dReservatDate, l_dFoundDate, l_cRatecode, l_lContinue, l_nPriceDifference
		LOCAL ARRAY l_aLinks(1)
		
		l_dFoundDate = {}
		l_lValid = .T.
		IF NOT EMPTY(this.oNewRes.rs_reserid)
			l_nArea = SELECT()
		
			SELECT curResRate
			SCATTER NAME l_oResRate MEMO
			l_cRatecode = rr_ratecod
			IF lp_lInit
				SELECT rr_link, MIN(rr_date), MAX(rr_date), SUM(rr_raterc), 0, 0 FROM curResRate ;
					WHERE rr_date > this.oNewRes.rs_ratedat AND rr_ratecod = l_cRatecode ;
					GROUP BY rr_link ;
					INTO ARRAY l_aLinks
			ELSE
				ACOPY(this.aOldLinks,l_aLinks)
			ENDIF
			l_nMaximalSplitSumFound = thisformset.oCheckRes.CalcSplitSum(this.oNewRes, l_oResRate, @l_dFoundDate, .T., @l_aLinks, lp_cRaAlias)
			DO CASE
				CASE lp_lInit
					DIMENSION this.aOldLinks(1)
					STORE .F. TO this.aOldLinks
					ACOPY(l_aLinks,this.aOldLinks)
					IF NOT EMPTY(this.aOldLinks(1))
						FOR i = 1 TO ALEN(this.aOldLinks,1)
							this.aOldLinks(i,5) = this.aOldLinks(i,6)
							this.aOldLinks(i,6) = 0
						ENDFOR
					ENDIF
				CASE EMPTY(l_dFoundDate)
					l_nPriceDifference = 0
					FOR i = 1 TO ALEN(l_aLinks,1)
						IF l_aLinks(i,6) <> l_aLinks(i,5)
							l_nPriceDifference = l_aLinks(i,6) - l_aLinks(i,5)
							EXIT
						ENDIF
					ENDFOR
					IF l_nPriceDifference <> 0
						IF l_nPriceDifference > 0
							l_lContinue = YesNo(Str2Msg(GetLangText("RESERVAT","TXT_PRICE_WOULD_BE_INCREASED"), "%s", ALLTRIM(STR(l_nPriceDifference,10,2)), GetLangText("AUDIT","TXT_CONTINUE")))
						ELSE
							l_lContinue = YesNo(Str2Msg(GetLangText("RESERVAT","TXT_PRICE_WOULD_BE_DECREASED"), "%s", ALLTRIM(STR(ABS(l_nPriceDifference),10,2)), GetLangText("AUDIT","TXT_CONTINUE")))
						ENDIF
						IF l_lContinue
							l_lChangeRate = .T.
							IF _screen.oGlobal.oParam.pa_askreas
								DO FORM forms\resreasonform WITH 1 TO this.cReason
								IF EMPTY(this.cReason)
									l_lValid = .F.
									l_lChangeRate = .F.
								ENDIF
							ENDIF
							IF l_lChangeRate
								l_dReservatDate = this.GetReservationDate()
								IF NOT EMPTY(this.aOldLinks(1))
									FOR i = 1 TO ALEN(this.aOldLinks,1)
										this.aOldLinks(i,4) = this.aOldLinks(i,4) + l_aLinks(i,6) - l_aLinks(i,5)
										this.aOldLinks(i,5) = l_aLinks(i,6)
									ENDFOR
								ENDIF
								FOR i = 1 TO ALEN(l_aLinks,1)
									IF l_aLinks(i,6) <> l_aLinks(i,5)
										IF BETWEEN(l_dReservatDate, l_aLinks(i,2), l_aLinks(i,3))
											this.oNewRes.rs_rate = this.oNewRes.rs_rate + l_aLinks(i,6) - l_aLinks(i,5)
										ENDIF
										REPLACE rr_raterc WITH rr_raterc + (l_aLinks(i,6)-l_aLinks(i,5))/(l_aLinks(i,3)-l_aLinks(i,2)+1), rr_status WITH IIF(INLIST(rr_status, "OK", "ORI", "OUS"), "ORU", rr_status) ;
											FOR rr_reserid = this.oNewRes.rs_reserid AND BETWEEN(rr_date, l_aLinks(i,2), l_aLinks(i,3)) AND rr_ratecod = l_cRatecode ;
											IN resrate
									ENDIF
								ENDFOR
							ENDIF
						ENDIF
					ENDIF
				CASE YesNo(Str2Msg(GetLangText("RESERVAT","TXT_PRICE_WOULD_BE_CHANGED")+"!;%s2?", "%s", ;
						ALLTRIM(STR(l_nMaximalSplitSumFound,10,2))+" "+DTOC(l_dFoundDate), GetLangText("AUDIT","TXT_CONTINUE")))
					l_lChangeRate = .T.
					IF _screen.oGlobal.oParam.pa_askreas
						DO FORM forms\resreasonform WITH 1 TO this.cReason
						IF EMPTY(this.cReason)
							l_lValid = .F.
							l_lChangeRate = .F.
						ENDIF
					ENDIF
					IF l_lChangeRate
						l_dReservatDate = this.GetReservationDate()
						FOR i = 1 TO ALEN(l_aLinks,1)
							IF BETWEEN(l_dReservatDate, l_aLinks(i,2), l_aLinks(i,3))
								this.oNewRes.rs_rate = l_nMaximalSplitSumFound
							ENDIF
							REPLACE rr_raterc WITH l_nMaximalSplitSumFound/(l_aLinks(i,3)-l_aLinks(i,2)+1), rr_status WITH IIF(INLIST(rr_status, "OK", "ORI", "OUS"), "ORU", rr_status) ;
								FOR rr_reserid = this.oNewRes.rs_reserid AND BETWEEN(rr_date, l_aLinks(i,2), l_aLinks(i,3)) AND rr_ratecod = l_cRatecode ;
								IN resrate
							IF NOT EMPTY(this.aOldLinks(1))
								this.aOldLinks(i,4) = l_nMaximalSplitSumFound
							ENDIF
						ENDFOR
					ENDIF
				OTHERWISE
					l_lValid = .F.
			ENDCASE
		
			SELECT (l_nArea)
		ENDIF
		
		RETURN l_lValid
	ENDPROC

	PROCEDURE getreservationdate
		LOCAL l_dReservatDate
		
		DO CASE
			CASE this.oNewRes.rs_arrdate = this.oNewRes.rs_depdate
				l_dReservatDate = this.oNewRes.rs_arrdate
			CASE g_sysdate < this.oNewRes.rs_arrdate
				l_dReservatDate = this.oNewRes.rs_arrdate
			CASE BETWEEN(g_sysdate, this.oNewRes.rs_arrdate, this.GetToDate())
				l_dReservatDate = g_sysdate
			OTHERWISE &&CASE g_sysdate > this.oNewRes.rs_depdate - 1
				l_dReservatDate = this.GetToDate()
		ENDCASE
		
		RETURN l_dReservatDate
	ENDPROC

	PROCEDURE gettodate
		RETURN RrGetRsDepDate(this.oNewRes)
	ENDPROC

	PROCEDURE Init
		LPARAMETERS lp_oOldRes, lp_oNewRes, lp_oCheckRes, lp_oCallForm, lp_cMode
		
		IF PCOUNT() < 3
			this.Release()
			RETURN .F.
		ENDIF
		
		this.oTablesProp = CREATEOBJECT("Collection")
		this.oOldRes = lp_oOldRes
		this.oNewRes = lp_oNewRes
		this.oCheckRes = lp_oCheckRes
		IF PCOUNT() >= 4
			this.oCallForm = lp_oCallForm
			this.oCallForm.Enabled = .F.
			IF PCOUNT() >= 5
				this.cMode = lp_cMode
			ENDIF
		ENDIF
		
		this.frmEditRates.Visible = .F.
		this.frmColorDescription.Visible = .F.
		
		this.mSetDataEnvironment()
		
		= SEEK(this.oNewRes.rs_reserid,"reservat","tag1")
		this.RrSyncReser(reservat.rs_rsid)
		this.BackupReservat()
		this.oCheckRes.CheckResrooms()
		this.SetCaption()
		this.ResrateGridRequery()
		this.SetGridDynamicColor()
		this.Refresh()
		
		IF this.oNewRes.rs_status # 'OUT'
			= SEEK(MAX(g_sysdate, this.oNewRes.rs_arrdate), "curResrate", "Tag1")
		ENDIF 
		
		this.lChanged = .F.
		this.Refresh()
	ENDPROC

	PROCEDURE lchanged_assign
		LPARAMETERS lp_lNewVal
		
		this.lChanged = lp_lNewVal
		
		this.frmRates.ActivateToolbar()
	ENDPROC

	PROCEDURE makecursor
		LOCAL lcurDates
		
		this.frmRates.grdRates.RecordSource = ""
		
		lcurDates = MakeDatesCursor(this.oNewRes.rs_arrdate, this.GetToDate())	&&c_date
		SELECT c_date AS rr_date, ;
			   c_date AS rr_link, ;
			   CAST(NVL(rr_reserid,0) AS N(12,3)) AS rr_reserid, ;
			   CAST(NVL(rr_rrid,0) AS N(8)) AS rr_rrid, ;
			   CAST(NVL(rr_ratecod,"") AS C(23)) AS rr_ratecod, ;
			   CAST(NVL(rr_arrtime,0) AS C(5)) AS rr_arrtime, ;
			   CAST(NVL(rr_deptime,0) AS C(5)) AS rr_deptime, ;
			   CAST(NVL(rr_adults,0) AS N(3)) AS rr_adults, ;
			   CAST(NVL(rr_childs,0) AS N(3)) AS rr_childs, ;
			   CAST(NVL(rr_childs2,0) AS N(1)) AS rr_childs2, ;
			   CAST(NVL(rr_childs3,0) AS N(1)) AS rr_childs3, ;
			   CAST(NVL(rr_raterc,0) AS B(8)) AS rr_rateavg, ;
			   CAST(NVL(rr_curcoef,0) AS B(8)) AS rr_curcoef, ;
			   CAST(NVL(rr_ratcoef,0) AS B(8)) AS rr_ratcoef, ;
			   CAST(NVL(rr_raterc,0) AS B(8)) AS rr_raterc, ;
			   CAST(NVL(rr_rateex,0) AS B(8)) AS rr_rateex, ;
			   CAST(NVL(rr_ratefrc,0) AS B(8)) AS rr_ratefrc, ;
			   CAST(NVL(rr_ratepg,0) AS B(8)) AS rr_ratepg, ;
			   CAST(NVL(rr_raterd,0) AS B(8)) AS rr_raterd, ;
			   CAST(NVL(rr_raterf,0) AS B(8)) AS rr_raterf, ;
			   CAST(NVL(rr_status,"") AS C(3)) AS rr_status, ;
			   CAST(NVL(ri_roomtyp,"") AS C(4)) AS ri_roomtyp, ;
			   CAST(NVL(ri_roomnum,"") AS C(4)) AS ri_roomnum, ;
			   CAST(NVL(ri_shareid,0) AS N(8)) AS ri_shareid, ;
			   CAST(NVL(rc_period,0) AS N(1)) AS rr_period, ;
			   CAST(NVL(rc_rhytm,0) AS N(1)) AS rr_rhytm, ;
			   0=1 AS rr_resrart ;
			FROM &lcurDates ;
			LEFT JOIN resrate WITH (BUFFERING = .T.) ON rr_date = c_date ;
			LEFT JOIN resrooms WITH (BUFFERING = .T.) ON ri_reserid = rr_reserid AND BETWEEN(c_date, ri_date, ri_todate) ;
			LEFT JOIN ratecode ON rc_key = rr_ratecod AND BETWEEN(rc_period, 4, 7) ;
			WHERE rr_reserid = this.oNewRes.rs_reserid ;
			ORDER BY rr_date ;
			INTO CURSOR curResrate READWRITE
		REPLACE rr_resrart WITH .T. FOR NOT EMPTY(rr_ratecod) AND SEEK(PADL(this.oNewRes.rs_rsid,10)+rr_ratecod, "resrart", "tag1")
		INDEX ON rr_date TAG Tag1
		INDEX ON STR(rr_reserid,12,3)+DTOS(rr_date) TAG Tag2
		SET ORDER TO
		
		this.SetControlSource()
	ENDPROC

	PROCEDURE mrestoredataenviroment
		LOCAL ARRAY l_aEnvironmentData(1)
		
		IF this.cMode <> "STANDALONE"
			SET ORDER TO (this.cResRateOrder) IN resrate
			RETURN .T.
		ENDIF
		
		ACOPY(this.aEnvironmentData, l_aEnvironmentData)
		this.oCheckRes.mRestoreEnvironment(@l_aEnvironmentData)
		
		RETURN .T.
	ENDPROC

	PROCEDURE msetdataenvironment
		LOCAL l_cTable
		LOCAL ARRAY l_aEnvironmentData(1)
		* Here prepare tables, when formset not called from reservat.scx
		
		IF this.cMode <> "STANDALONE"
			this.cResRateOrder = ORDER("resrate")
			SET ORDER TO "" IN resrate
			RETURN .T.
		ENDIF
		
		ACOPY(this.oCheckRes.aEnvironmentData, l_aEnvironmentData)
		this.oCheckRes.mAdjustEnvironment(@l_aEnvironmentData)
		ACOPY(l_aEnvironmentData, this.aEnvironmentData)
		
		RETURN .T.
	ENDPROC

	PROCEDURE nmode_assign
		LPARAMETERS lp_nMode
		
		this.nMode = lp_nMode
		
		this.frmEditRates.txtArrTime.Enabled = (this.nMode <> REVERT_TO_NON_MANUAL_STATE)
		this.frmEditRates.txtDepTime.Enabled = (this.nMode <> REVERT_TO_NON_MANUAL_STATE)
		this.frmEditRates.txtAdults.Enabled = (this.nMode <> REVERT_TO_NON_MANUAL_STATE)
		this.frmEditRates.txtChilds1.Enabled = (this.nMode <> REVERT_TO_NON_MANUAL_STATE)
		this.frmEditRates.txtChilds2.Enabled = (this.nMode <> REVERT_TO_NON_MANUAL_STATE)
		this.frmEditRates.txtChilds3.Enabled = (this.nMode <> REVERT_TO_NON_MANUAL_STATE)
		this.frmEditRates.cboRoomTyp.Enabled = (this.nMode <> REVERT_TO_NON_MANUAL_STATE)
		this.frmEditRates.cboRoomname.Enabled = (this.nMode <> REVERT_TO_NON_MANUAL_STATE) AND (this.oNewRes.rs_rooms = 1)
		this.frmEditRates.cboRatecode.Enabled = (this.nMode = STANDARD_RESRATE)
		this.frmEditRates.txtRate.Enabled = (this.nMode = STANDARD_RESRATE)
	ENDPROC

	PROCEDURE oncolordescription
		this.frmColorDescription.Show()
		this.frmRates.Enabled = .F.
	ENDPROC

	PROCEDURE onresratearti
		LOCAL l_lOK, l_nRecno
		
		* Cursor curResRate ist used in RateSplits.scx !
		
		DO FORM "forms\RateSplits" WITH this.frmRates TO l_lOK
		
		IF l_lOK
			l_nRecno = RECNO("curResRate")
			DO RrUpdate IN ProcResRate WITH this.oOldRes, this.oNewRes, .T.
			this.ResrateGridRequery()
			GO l_nRecno IN curResRate
			this.lChanged = .T.
			this.Refresh()
		ENDIF
		
		RETURN .T.
	ENDPROC

	PROCEDURE onupdate
		LOCAL l_nRecno, l_nError, l_cStatus, l_dReservatDate, l_dFromDate
		LOCAL ARRAY l_aInterval(1)
		
		l_nRecno = RECNO("curResRate")
		
		this.oCheckRes.mResRoomsOldValue(this.oNewRes.rs_reserid, "reservat")
		
		l_dReservatDate = this.GetReservationDate()
		IF BETWEEN(l_dReservatDate, this.dFromdate, this.dToDate)
			* Set roomtyp and room number for reservation, because changed properties for reservation date.
			REPLACE rs_roomtyp WITH this.cRoomType ;
					rs_roomnum WITH this.cRoomNum IN reservat
		ENDIF
		
		IF this.dToDate >= g_sysdate
			* Don't change room in past
			l_dFromDate = MAX(g_sysdate, this.oNewRes.rs_arrdate, this.dFromDate)
			RiPutRoom(this.oNewRes.rs_reserid, l_dFromDate, this.dToDate, this.cRoomType, this.cRoomNum)
		ENDIF
		
		l_nError = this.oCheckRes.Checkreser("reservat", .T., this.dFromDate, this.dToDate, this.nAdults, ;
			this.nChilds1, this.nChilds2, this.nChilds3, this.cRoomType, this.cRcShort, this.nRate)
		
		IF l_nError < 0
			IF this.ooldres.rs_yoid>0 AND reservat.rs_yoid=0 AND this.cStatusOld = "OFF" && Offer deleted
				REPLACE rr_status WITH "X" FOR rr_reserid = this.oNewRes.rs_reserid AND rr_status = "OFF" IN resrate
				this.oNewRes.rs_ratecod = STRTRAN(this.oNewRes.rs_ratecod,"*","")
				this.oNewRes.rs_yoid = 0
				DO RrUpdate IN ProcResRate WITH this.oOldRes, this.oNewRes, .T.
				this.ResrateGridRequery()
				GO l_nRecno IN curResRate
				this.Refresh()
		
				RETURN .T.
			ENDIF
			DO CASE
				CASE l_nError == -1	&&rs_adults
					this.frmEditRates.txtAdults.SetFocus()
				CASE l_nError == -18	&&rs_roomnum
					this.frmEditRates.cboroomname.SetFocus()
				CASE l_nError == -19	&&rs_roomtyp
					this.frmEditRates.cboRoomTyp.SetFocus()
				CASE l_nError == -23	&&rs_ratecod
					this.frmEditRates.cboRatecode.SetFocus()
				OTHERWISE
					this.frmEditRates.dtxtFromDate.SetFocus()
			ENDCASE
			this.oCheckRes.mResRoomsOldValue(this.oNewRes.rs_reserid, "reservat", .T.)
			this.frmEditRates.Refresh()
			RETURN .F.
		ENDIF
		
		PRIVATE p_oRates
		p_oRates = MakeStructure("rs_ratecod,rs_rate,rs_adults,rs_childs,rs_childs2,rs_childs3,rs_arrtime,rs_deptime")
		p_oRates.rs_ratecod = this.cRcShort
		p_oRates.rs_rate = this.nRate
		p_oRates.rs_adults = this.nAdults
		p_oRates.rs_childs = this.nChilds1
		p_oRates.rs_childs2 = this.nChilds2
		p_oRates.rs_childs3 = this.nChilds3
		p_oRates.rs_arrtime = this.cArrTime
		p_oRates.rs_deptime = this.cDepTime
		
		SELECT curResRate
		SCAN FOR BETWEEN(rr_date, this.dFromdate, this.dToDate) AND SEEK(STR(this.oNewRes.rs_reserid,12,3)+DTOS(curResrate.rr_date), "resrate", "tag2")
			IF this.nMode <> REVERT_TO_NON_MANUAL_STATE OR UPPER(LEFT(curResRate.rr_status,2)) = "OR"
				IF this.nMode = REVERT_TO_NON_MANUAL_STATE
					l_cStatus = ICASE(LEFT(this.oNewRes.rs_ratecod,1) = "*", "OUS", LEFT(this.oNewRes.rs_ratecod,1) = "!", "OAL", "OK")
				ELSE
					l_cStatus = ICASE(LEFT(this.oNewRes.rs_ratecod,1) = "*", "ORU", LEFT(this.oNewRes.rs_ratecod,1) = "!", "ORA", "ORI")
				ENDIF
				REPLACE rr_status WITH l_cStatus IN resrate
			ENDIF
		ENDSCAN
		
		DO RrUpdate IN ProcResRate WITH this.oOldRes, this.oNewRes, .T., this.dFromdate, this.dToDate
		
		this.ResrateGridRequery()
		GO l_nRecno IN curResRate
		this.Refresh()
		
		RETURN .T.
	ENDPROC

	PROCEDURE pricelessthensplitsum
		LOCAL l_lForbiden, l_nSelect, l_oResRate, l_oNewRes, l_dFoundDate, l_nMaximalSplitSumFound
		LOCAL ARRAY l_aLinks(1,6)
		
		IF NOT EMPTY(thisformset.oNewRes.rs_reserid)
			l_nSelect = SELECT()
			SELECT curResRate
			SCATTER NAME l_oResRate MEMO
			l_oResRate.rr_date = thisformset.dFromDate
			l_oResRate.rr_adults = thisformset.nAdults
			l_oResRate.rr_childs = thisformset.nChilds1
			l_oResRate.rr_childs2 = thisformset.nChilds2
			l_oResRate.rr_childs3 = thisformset.nChilds3
			l_oResRate.rr_ratecod = thisformset.cratecode
			l_aLinks(1,1) = thisformset.dFromDate
			l_aLinks(1,2) = thisformset.dFromDate
			l_aLinks(1,3) = thisformset.dToDate
			l_aLinks(1,4) = thisformset.nRate
			l_aLinks(1,5) = 0
			l_aLinks(1,6) = 0
			l_oNewRes = RecordCopyObj(thisformset.oNewRes)
			l_oNewRes.rs_rate = thisformset.nRate
			l_nMaximalSplitSumFound = thisformset.oCheckRes.CalcSplitSum(l_oNewRes, l_oResRate, @l_dFoundDate,,@l_aLinks)
			SELECT (l_nSelect)
			IF thisformset.nRate < l_nMaximalSplitSumFound
				alert(stRfmt(GetLangText("RESERVAT","TXT_PRICE_LOWER_THEN_SPLIT_SUM"), ALLTRIM(STR(l_nMaximalSplitSumFound,10,2))+" "+DTOC(l_dFoundDate)))
				l_lForbiden = .T.
			ENDIF
		ENDIF
		
		RETURN l_lForbiden
	ENDPROC

	PROCEDURE priceperpersonget
		IF NOT thisformset.ladultsoldvalcheck
			RETURN .T.
		ENDIF
		
		IF thisformset.nadultsoldval = thisformset.nAdults
			RETURN .T.
		ENDIF
		
		thisformset.nRate = ROUND((thisformset.nRate / EVL(thisformset.nadultsoldval,1))*thisformset.nAdults,2)
		
		RETURN .T.
	ENDPROC

	PROCEDURE priceperpersonput
		IF NOT _screen.oGlobal.lbdarticleactive
			RETURN .T.
		ENDIF
		
		IF NOT dlookup("resrart","ra_rsid = " + TRANSFORM(this.oNewRes.rs_rsid),"ra_rsid")>0
			RETURN .T.
		ENDIF
		
		&& Has bd art articles
		
		IF NOT LEFT(thisformset.cRcShort,1) = "*"
			RETURN .T.
		ENDIF
		
		* Has manually changed price
		
		thisformset.ladultsoldvalcheck  = .T.
		thisformset.nadultsoldval = thisformset.nAdults
		
		RETURN .T.
	ENDPROC

	PROCEDURE ratecalculate
		LOCAL l_nAltId, l_dArrDate, l_dDepDate
		
		l_nAltId = this.oNewRes.rs_altid
		l_dArrDate = this.oNewRes.rs_arrdate
		l_dDepDate = this.oNewRes.rs_depdate
		this.nRate = RateCalculate(,this.cRcShort, this.cRoomType, l_nAltId, this.nRate, this.nAdults, this.nChilds1, this.nChilds2, this.nChilds3, l_dArrDate, l_dDepDate)
		this.frmEditRates.txtRate.Refresh()
	ENDPROC

	PROCEDURE resrategridrequery
		LOCAL l_dDate
		
		IF USED("curResrate")
			l_dDate = curResrate.rr_date
		ENDIF
		this.MakeCursor()
		RrSetLinks(this.oNewRes.rs_reserid, this.oNewRes.rs_arrdate)
		
		IF EMPTY(l_dDate) OR NOT SEEK(l_dDate,"curResrate","Tag1")
			LOCATE
		ENDIF
	ENDPROC

	PROCEDURE restorebackup
		LOCAL l_oRecord
		SELECT reservat
		= SEEK(this.oNewRes.rs_reserid,"reservat","tag1")
		GATHER NAME this.oOldRes FIELDS rs_roomtyp, rs_roomnum, rs_adults, rs_childs, rs_childs2, rs_childs3, rs_ratecod, rs_rate
		SELECT bckResrate
		SCAN
			IF SEEK(bckResrate.rr_date,"curResrate","Tag1") AND ;
					DLocate("resrate", "STR(rr_reserid,12,3)+DTOS(rr_date) = " + ;
					SqlCnv(STR(this.oNewRes.rs_reserid,12,3)+DTOS(bckResrate.rr_date)))
				SCATTER NAME l_oRecord
				SELECT resrate
				GATHER NAME l_oRecord
				SELECT bckResrate
			ENDIF
		ENDSCAN
		AppendFrom("bckResrooms",,"resrooms", "ri_rroomid")
		SELECT resrooms
		SCAN FOR ri_reserid = this.oNewRes.rs_reserid
			IF NOT SEEK(resrooms.ri_rroomid, "bckResrooms", "tag1")
				DELETE
			ENDIF
		ENDSCAN
		SELECT bckRessplit
		SCAN
			SCATTER NAME l_oRecord
			SELECT ressplit
			IF NOT DLocate("ressplit", "rl_rsid = bckRessplit.rl_rsid AND rl_date = bckRessplit.rl_date AND rl_raid = bckRessplit.rl_raid AND rl_rfid = bckRessplit.rl_rfid AND rl_bqid = bckRessplit.rl_bqid")
				APPEND BLANK
			ENDIF
			GATHER NAME l_oRecord
			SELECT bckRessplit
		ENDSCAN
		SELECT ressplit
		SCAN FOR rl_rsid = this.oNewRes.rs_rsid
			IF NOT SEEK(PADL(ressplit.rl_rsid,10)+DTOS(ressplit.rl_date)+PADL(ressplit.rl_raid,10)+PADL(ressplit.rl_rfid,10)+PADL(ressplit.rl_bqid,10), "bckRessplit", "tag1")
				DELETE
			ENDIF
		ENDSCAN
		SELECT bckResrart
		SCAN
			SCATTER NAME l_oRecord
			SELECT resrart
			IF NOT DLocate("resrart", "ra_rsid = bckResrart.ra_rsid AND ra_raid = bckResrart.ra_raid")
				APPEND BLANK
			ENDIF
			GATHER NAME l_oRecord
			SELECT bckResrart
		ENDSCAN
		SELECT resrart
		SCAN FOR ra_rsid = this.oNewRes.rs_rsid
			IF NOT SEEK(resrart.ra_raid, "bckResrart", "ra_raid")
				DELETE
			ENDIF
		ENDSCAN
		SELECT resrate
	ENDPROC

	PROCEDURE rrsyncreser
		LPARAMETERS lp_nRsId
		IF this.cMode <> "STANDALONE"
			RETURN .T.
		ENDIF
		IF NOT EMPTY(lp_nRsId)
			= rrsyncreser(lp_nRsId)
		ENDIF
		
		RETURN .T.
	ENDPROC

	PROCEDURE setcaption
		this.frmRates.AssignCaption()
		this.frmEditRates.AssignCaption()
		this.frmColorDescription.AssignCaption()
	ENDPROC

	PROCEDURE setcontrolsource
		this.frmRates.grdRates.RecordSource = "curResrate"
		this.frmRates.grdRates.grcDate.ControlSource = "MakeShorDateString(rr_date)+' '+LEFT(MyCDoW(rr_date),2)"
		this.frmRates.grdRates.grcArrTime.ControlSource = "rr_arrtime"
		this.frmRates.grdRates.grcDepTime.ControlSource = "rr_deptime"
		this.frmRates.grdRates.grcRatecode.ControlSource = "ICASE(INLIST(rr_status,'OUS','ORU','OFF'),'*',INLIST(rr_status,'OAL','ORA'),'!','')+LEFT(rr_ratecod,10)"
		this.frmRates.grdRates.grcCustomSplits.ControlSource = "IIF(rr_resrart, '" + GetLangText("AR", "T_YES") + "','" + GetLangText("AR", "T_NO") + "')"
		this.frmRates.grdRates.grcRateAvg.ControlSource = "TRANSFORM(rr_rateavg*rr_ratcoef*rr_curcoef,'999,999.99')"
		this.frmRates.grdRates.grcRateEX.ControlSource = "TRANSFORM(rr_rateex*rr_curcoef,'999,999.99')"
		this.frmRates.grdRates.grcRateFRC.ControlSource = "TRANSFORM(rr_ratefrc,'999,999.99')"
		this.frmRates.grdRates.grcRatePG.ControlSource = "TRANSFORM(rr_ratepg,'999,999.99')"
		this.frmRates.grdRates.grcRateRC.ControlSource = "TRANSFORM(rr_raterc*rr_ratcoef*rr_curcoef,'999,999.99')"
		this.frmRates.grdRates.grcRateRD.ControlSource = "TRANSFORM(rr_raterd,'999,999.99')"
		this.frmRates.grdRates.grcRateRF.ControlSource = "TRANSFORM(rr_raterf,'999,999.99')"
		this.frmRates.grdRates.grcAdults.ControlSource = "rr_adults"
		this.frmRates.grdRates.grcChilds1.ControlSource = "rr_childs"
		this.frmRates.grdRates.grcChilds2.ControlSource = "rr_childs2"
		this.frmRates.grdRates.grcChilds3.ControlSource = "rr_childs3"
		this.frmRates.grdRates.grcRatePers.ControlSource = "TRANSFORM(rr_rateavg*rr_ratcoef*rr_curcoef/EVL(rr_adults+rr_childs+rr_childs2+rr_childs3,1),'999,999.99')"
		this.frmRates.grdRates.grcStatus.ControlSource = "rr_status"
		this.frmRates.grdRates.grcRoomType.ControlSource = "Get_rt_roomtyp(ri_roomtyp)"
		this.frmRates.grdRates.grcRoomNum.ControlSource = "Get_rm_rmname(ri_roomnum)+IIF(EMPTY(ri_shareid),'','S')"
	ENDPROC

	PROCEDURE setgriddynamiccolor
		LOCAL l_cDynamicForeColor, l_dRateDate
		
		l_dRateDate = SqlCnv(MAX(this.oNewRes.rs_ratedat+1, this.oNewRes.rs_arrdate))
		l_cDynamicForeColor = "ICASE(rr_date="+SqlCnv(SysDate())+","+TRANSFORM(COLOR_SYSDATE)+ ;
								",rr_status='X',"+TRANSFORM(COLOR_INVALID)+ ;
								",rr_date<"+l_dRateDate+","+TRANSFORM(COLOR_POSTED)+ ;
								",rr_date=rr_link,"+TRANSFORM(COLOR_DEFAULT)+","+TRANSFORM(COLOR_LINKED)+")"
		
		thisformset.frmRates.grdRates.SetAll("DynamicForeColor", l_cDynamicForeColor, "Column")
	ENDPROC

	PROCEDURE setratecoderate
		LPARAMETERS lp_oResrate, lp_dFirstDate
		LOCAL l_lReplaced, l_dFirstDate, l_dFromDate, l_nRecno, l_nRatecodePeriod
		
		l_nRatecodePeriod = ratecode.rc_period
		l_nRecno = RECNO("resrate")
		RrRatecodeInterval(lp_oResrate.rr_reserid, lp_oResrate.rr_date, @l_dFromDate)
		DO CASE
			CASE l_nRatecodePeriod = 4
				l_dFirstDate = l_dFromDate + INT((lp_dFirstDate-l_dFromDate) / 7) * 7
			CASE l_nRatecodePeriod = 5
				IF MONTH(lp_dFirstDate) = MONTH(l_dFromDate)
					l_dFirstDate = l_dFromDate
				ELSE
					l_dFirstDate = DATE(YEAR(lp_dFirstDate), MONTH(lp_dFirstDate), 1)
				ENDIF
			CASE l_nRatecodePeriod = 6
				l_dFirstDate = l_dFromDate
			CASE l_nRatecodePeriod = 7
				l_dFirstDate = l_dFromDate + INT((lp_dFirstDate-l_dFromDate) / ratecode.rc_prcdur) * ratecode.rc_prcdur
			OTHERWISE
				l_dFirstDate = {}
		ENDCASE
		
		IF NOT EMPTY(l_dFirstDate) AND l_dFirstDate > this.oNewRes.rs_ratedat AND ;
				DLocate("resrate", "STR(rr_reserid,12,3)+DTOS(rr_date) = " + SqlCnv(STR(lp_oResrate.rr_reserid,12,3)+DTOS(l_dFirstDate)))
			REPLACE rr_raterc WITH lp_oResrate.rr_raterc, ;
					rr_status WITH lp_oResrate.rr_status IN resrate
			l_lReplaced = .T.
			lp_dFirstDate = l_dFirstDate
		ENDIF
		GO l_nRecno IN resrate
		
		RETURN l_lReplaced
	ENDPROC

	PROCEDURE Unload
		this.mRestoreDataEnviroment()
		
		IF NOT ISNULL(this.oCallForm)
			this.oCallForm.Enabled = .T.
			DO CASE
				CASE this.oCallForm.FormName = "reservat"
					this.oCallForm.Parent.cReason = this.cReason
					this.oCallForm.Parent.OnCalcPrice()
				CASE TYPE("this.oCallForm.Class") = "C" AND LOWER(this.oCallForm.Class) = "roomplanform"
					this.oCallForm.Enabled = .T.
					this.oCallForm.activate()
					roomplanactive = .F.
					this.oCallForm.RefreshSignal()
					this.oCallForm.RefreshTimer.Enabled = .T.
					this.oCallForm.DisplayContent()
				CASE INLIST(LOWER(this.oCallForm.FormName), "conferenceform", "conferencedayform")
					this.oCallForm.onRefresh()
			ENDCASE
		ENDIF
		dclose("curResRate")
		dclose("bckResrate")
		dclose("bckRessplit")
		dclose("bckResrart")
		dclose("bckResrooms")
	ENDPROC

	PROCEDURE frmColorDescription.assigncaption
		this.Caption = GetLangText("RESRATE","TXT_RESRATE_COLORS")
		this.lblForeColor.Caption = GetLangText("SETCOLOR","TXT_FONTCOLOR")
		this.lblSysDate.Caption = GetLangText("RESRATE","TXT_SYSDATE")
		this.lblNotValid.Caption = GetLangText("RESRATE","TXT_NOTVALID")
		this.lblPosted.Caption = GetLangText("RESRATE","TXT_POSTED")
		this.lblLinked.Caption = GetLangText("RESRATE","TXT_LINKED")
		this.lblEditable.Caption = GetLangText("RESRATE","TXT_EDITABLE")
		this.cmdClose.Caption = GetLangText("COMMON","TXT_CLOSE")
		this.lblAbbreviations.Caption = GetLangText("COMMON","TXT_ABBREVIATIONS")
		this.lblOKDescription.Caption = GetLangText("RESRATE","TXT_OK_DESCRIPTION") + " (OK)"
		this.lblOUSDescription.Caption = GetLangText("RESRATE","TXT_OUS_DESCRIPTION") + " (O = OK, US = USER)"
		this.lblOALDescription.Caption = GetLangText("RESRATE","TXT_OAL_DESCRIPTION") + " (O = OK, AL = ALLOTMENT)"
		this.lblORIDescription.Caption = GetLangText("RESRATE","TXT_ORI_DESCRIPTION") + " (O = OK, R = RATE OR ROOM, I = INTERVAL)"
		this.lblORUDescription.Caption = GetLangText("RESRATE","TXT_ORU_DESCRIPTION") + " (O = OK, R = RATE OR ROOM, U = UPDATED)"
		this.lblORADescription.Caption = GetLangText("RESRATE","TXT_ORA_DESCRIPTION") + " (O = OK, R = RATE OR ROOM, A = ALLOTMENT)"
		this.lblOFFDescription.Caption = GetLangText("RESRATE","TXT_OFF_DESCRIPTION") + " (OFF = OFFER)"
		this.lblXDescription.Caption = GetLangText("RESRATE","TXT_X_DESCRIPTION") + " (X = NOT VALID)"
	ENDPROC

	PROCEDURE frmColorDescription.cmdClose.Click
		thisform.OnClose()
	ENDPROC

	PROCEDURE frmColorDescription.Init
		DODEFAULT()
		
		this.shpSysDate.BackColor = COLOR_SYSDATE
		this.shpNotValid.BackColor = COLOR_INVALID
		this.shpPosted.BackColor = COLOR_POSTED
		this.shpLinked.BackColor = COLOR_LINKED
		this.shpEditable.BackColor = COLOR_DEFAULT
	ENDPROC

	PROCEDURE frmColorDescription.KeyPress
		LPARAMETERS nKeyCode, nShiftAltCtrl
		
		DO CASE
			CASE nKeyCode = 27 && Esc Cancel
				this.OnClose()
				NODEFAULT
		ENDCASE
	ENDPROC

	PROCEDURE frmColorDescription.onclose
		thisformset.frmRates.Enabled = .T.
		this.Visible = .F.
	ENDPROC

	PROCEDURE frmColorDescription.QueryUnload
		NODEFAULT
		this.OnClose()
	ENDPROC

	PROCEDURE frmColorDescription.Show
		LPARAMETERS nStyle
		
		this.ZOrder()
	ENDPROC

	PROCEDURE frmEditRates.assigncaption
		this.Caption = GetLangText("RESERVAT","T_INTERVALFORM")
		this.lblFrom.Caption = GetLangText("RESERVAT","T_FROM")
		this.lblTo.Caption = GetLangText("RESERVAT","T_TO")
		this.lblArrTime.Caption = GetLangText("RESERVAT","T_FROM")
		this.lblDepTime.Caption = GetLangText("RESERVAT","T_TO")
		this.lblAdults.Caption = GetLangText("RESERVAT","T_ADULTS")
		this.lblChilds1.Caption = LstItem(_screen.oGlobal.oParam.pa_childs, 1)
		this.lblChilds2.Caption = LstItem(_screen.oGlobal.oParam.pa_childs, 2)
		this.lblChilds3.Caption = LstItem(_screen.oGlobal.oParam.pa_childs, 3)
		this.lblRateCode.Caption = GetLangText("RESERVAT","T_RATECODE")
		this.lblRate.Caption = GetLangText("RESERVAT","T_RATE")
		this.lblRoomType.Caption = GetLangText("RESERVAT","T_ROOMTYPE")
		this.lblRoomNum.Caption = GetLangText("RESERVAT","T_ROOMNUM")
		this.cmdCancel.Caption = GetLangText("COMMON","TXT_CANCEL")
		this.cmdOK.Caption = GetLangText("COMMON","TXT_OK")
	ENDPROC

	PROCEDURE frmEditRates.cboRatecode.initsqlproperties
		LOCAL l_nArea
		
		l_nArea = SELECT()
		
		DODEFAULT()
		
		SELECT (this.cReservatAlias)
		
		TEXT TO this.cWhere TEXTMERGE NOSHOW PRETEXT 2 + 8
			INLIST(rc_roomtyp, [*], <<SqlCnv(thisformset.cRoomType)>>) AND 
			rc_fromdat <= <<SqlCnv(thisform.dtxtFromDate.Value)>> AND rc_todat > <<SqlCnv(thisform.dtxtToDate.Value)>> AND 
			<<SqlCnv(DLookUp("season", "se_date = " + SqlCnv(thisform.dtxtFromDate.Value), "se_season"))>> = ALLTRIM(rc_season) AND 
			rc_minstay <= <<SqlCnv(rs_depdate - rs_arrdate)>> AND 
			NOT rc_inactiv
		ENDTEXT
		this.cWhere = STRTRAN(this.cWhere, ";", "")
		
		SELECT (l_nArea)
	ENDPROC

	PROCEDURE frmEditRates.cboRatecode.LostFocus
		thisformset.cRatecode = PADR(ratecode.rc_ratecod, 10) + PADR(ratecode.rc_roomtyp, 4) + DTOS(ratecode.rc_fromdat) + ratecode.rc_season
		
		thisformset.RateCalculate()
	ENDPROC

	PROCEDURE frmEditRates.cboRatecode.Valid
		DO CASE
			CASE EMPTY(DODEFAULT())
				RETURN 0
			CASE NOT (SEEK(EVALUATE(this.cCursor+".rc_rckey"), "ratecode", "tag1") AND ;
					thisformset.oCheckRes.rs_ratecod_valid( thisformset.oNewRes.rs_ratecod, "reservat", thisformset.dFromDate, ;
					thisformset.dToDate, thisformset.nAdults, thisformset.nChilds1, thisformset.nChilds2, ;
					thisformset.nChilds3, thisformset.cRoomType, thisformset.cRcShort, thisformset.nRate))
				this.Value = this.cOldVal
				KEYBOARD '{ALT+DNARROW}'
				RETURN 0
			OTHERWISE
				RETURN .T.
		ENDCASE
	ENDPROC

	PROCEDURE frmEditRates.cboRoomname.LostFocus
		this.Parent.cboRoomTyp.Refresh()
		RETURN .T.
	ENDPROC

	PROCEDURE frmEditRates.cboRoomname.requerycursor
		DODEFAULT(thisformset.croomtype)
		RETURN .T.
	ENDPROC

	PROCEDURE frmEditRates.cboRoomname.Valid
		LOCAL l_lSetValue, l_lnCheckResult, l_lValid, l_NewRoomName
		
		l_lnCheckResult = DODEFAULT()
		l_lValid = NOT EMPTY(l_lnCheckResult)
		
		IF NOT l_lValid
			l_NewRoomName = UPPER(PADR(TRIM(this.DisplayValue),10))
			l_lValid = dbLookup("Room","Tag5",l_NewRoomName,"FOUND()")
			IF l_lValid
				* when entered roomname is not found in combolist, that means a diffrent roomtype is selected
				thisformset.croomtype = dbLookup("Room","Tag5",l_NewRoomName,"rm_roomtyp")
			ENDIF
		ENDIF
		IF l_lValid
			this.Requery()
		ENDIF
		
		RETURN l_lnCheckResult
	ENDPROC

	PROCEDURE frmEditRates.cboRoomTyp.LostFocus
		LOCAL l_cRoomTypeForCurrentRoom
		l_cRoomTypeForCurrentRoom = dbLookup("Room","Tag1",ALLTRIM(thisformset.cRoomNum),"rm_roomtyp")
		IF ALLTRIM(this.Value) <> ALLTRIM(l_cRoomTypeForCurrentRoom)
			thisformset.cRoomNum = ""
		ENDIF
		
		this.Parent.cboroomname.Refresh()
		
		RETURN .T.
	ENDPROC

	PROCEDURE frmEditRates.cboRoomTyp.Valid
		DO CASE
			CASE EMPTY(DODEFAULT())
			CASE NOT thisformset.oCheckRes.CheckRoomType(thisformset.oNewRes.rs_roomtyp, "reservat", .T., ;
					thisformset.dFromDate, thisformset.dToDate, thisformset.cRoomType)
				this.Value = this.cOldVal
				KEYBOARD '{ALT+DNARROW}'
			OTHERWISE
				RETURN .T.
		ENDCASE
		
		RETURN 0
	ENDPROC

	PROCEDURE frmEditRates.cmdCancel.Click
		thisform.OnClose()
	ENDPROC

	PROCEDURE frmEditRates.cmdOK.Click
		thisform.OnSave()
	ENDPROC

	PROCEDURE frmEditRates.dtxtFromDate.GotFocus
		this.OldFromDate = this.Value
	ENDPROC

	PROCEDURE frmEditRates.dtxtFromDate.Init
		DODEFAULT()
		this.AddProperty("OldFromDate")
	ENDPROC

	PROCEDURE frmEditRates.dtxtFromDate.Valid
		IF EMPTY(this.Value)
			this.Value = this.OldFromDate
			RETURN .F.
		ELSE
			RETURN .T.
		ENDIF
	ENDPROC

	PROCEDURE frmEditRates.dtxtToDate.GotFocus
		this.OldToDate = this.Value
	ENDPROC

	PROCEDURE frmEditRates.dtxtToDate.Init
		DODEFAULT()
		this.AddProperty("OldToDate")
	ENDPROC

	PROCEDURE frmEditRates.dtxtToDate.Valid
		IF EMPTY(this.Value)
			this.Value = this.OldToDate
			RETURN .F.
		ELSE
			RETURN .T.
		ENDIF
	ENDPROC

	PROCEDURE frmEditRates.Init
		LOCAL l_nChildCats, l_nCorrectionWidth, l_oControl
		
		DODEFAULT()
		
		l_nChildCats = LstCount(_screen.oGlobal.oParam.pa_childs)
		IF l_nChildCats < 1
			this.lblChilds1.Visible = .F.
			this.txtChilds1.Visible = .F.
		ENDIF
		IF l_nChildCats < 2
			this.lblChilds2.Visible = .F.
			this.txtChilds2.Visible = .F.
		ENDIF
		IF l_nChildCats < 3
			this.lblChilds3.Visible = .F.
			this.txtChilds3.Visible = .F.
		ENDIF
		
		DO CASE
			CASE l_nChildCats < 1
				this.txtAdults.Width = this.txtChilds3.Left + this.txtChilds3.Width - this.txtAdults.Left
			CASE l_nChildCats < 2
				this.txtChilds1.Width = this.txtChilds3.Left + this.txtChilds3.Width - this.txtChilds1.Left
			CASE l_nChildCats < 3
				this.txtChilds2.Width = this.txtChilds3.Left + this.txtChilds3.Width - this.txtChilds2.Left
			OTHERWISE
		ENDCASE
		this.txtAdults.w = this.txtAdults.Width
		this.txtChilds1.w = this.txtChilds1.Width
		this.txtChilds2.w = this.txtChilds2.Width
		this.lblAdults.Width = this.txtAdults.Width
		this.lblChilds1.Width = this.txtChilds1.Width
		this.lblChilds2.Width = this.txtChilds2.Width
		this.lblAdults.w = this.txtAdults.Width
		this.lblChilds1.w = this.txtChilds1.Width
		this.lblChilds2.w = this.txtChilds2.Width
		
		IF NOT _screen.oGlobal.oParam2.pa_connew
			* Dont show arrival and departure time controls
			STORE .F. TO ;
					this.lblArrTime.Visible, ;
					this.lblDepTime.Visible, ;
					this.txtArrTime.Visible, ;
					this.txtDepTime.Visible
			l_nCorrectionWidth = this.txtArrTime.Width + this.txtDepTime.Width
			FOR EACH l_oControl IN this.Controls
				IF NOT INLIST(LOWER(l_oControl.Name), "lblfrom", "dtxtfromdate", "lblto", "dtxttodate", "lblarrtime", "lbldeptime", "txtarrtime", "txtdeptime", "cmdok", "cmdcancel")
					l_oControl.Left = l_oControl.Left - l_nCorrectionWidth
					l_oControl.l = l_oControl.Left
				ENDIF
			ENDFOR
			this.Width = this.Width - l_nCorrectionWidth
			this.w = this.Width
			l_nHalf = INT(this.Width / 2)
			this.cmdOK.Left = l_nHalf - this.cmdOK.Width - 5
			this.cmdOK.l = this.cmdOK.Left
			this.cmdCancel.Left = l_nHalf + 5
			this.cmdCancel.l = this.cmdCancel.Left
		ENDIF
		
		this.dtxtFromDate.ControlSource = "thisformset.dFromDate"
		this.dtxtToDate.ControlSource = "thisformset.dToDate"
		this.txtArrTime.ControlSource = "thisformset.cArrTime"
		this.txtDepTime.ControlSource = "thisformset.cDepTime"
		this.txtAdults.ControlSource = "thisformset.nAdults"
		this.txtChilds1.ControlSource = "thisformset.nChilds1"
		this.txtChilds2.ControlSource = "thisformset.nChilds2"
		this.txtChilds3.ControlSource = "thisformset.nChilds3"
		this.cboRateCode.ControlSource = "thisformset.cRcShort"
		this.txtRate.ControlSource = "thisformset.nRate"
		this.cboRoomTyp.ControlSource = "thisformset.cRoomType"
		this.cboRoomname.cControlSource = "thisformset.cRoomNum"
	ENDPROC

	PROCEDURE frmEditRates.KeyPress
		LPARAMETERS nKeyCode, nShiftAltCtrl
		
		DO CASE
			CASE nKeyCode = 27 && Esc Cancel
				this.OnClose()
				NODEFAULT
		ENDCASE
	ENDPROC

	PROCEDURE frmEditRates.onclose
		thisformset.frmRates.Enabled = .T.
		this.Visible = .F.
	ENDPROC

	PROCEDURE frmEditRates.onsave
		LOCAL l_dFromDate, l_dToDate
		
		l_dFromDate = MAX(thisformset.oNewRes.rs_arrdate, MIN(thisformset.oNewRes.rs_ratedat+1, SysDate()))
		l_dToDate = thisformset.GetToDate()
		
		IF NOT BETWEEN(thisformset.dFromdate, l_dFromDate, l_dToDate)
			Alert(Str2Msg(GetLangText("RESERVAT","TA_INVALIDFROMDATE"),"%s",DTOC(l_dFromDate),DTOC(l_dToDate)))
			this.dtxtFromDate.SetFocus()
			RETURN
		ENDIF
		IF NOT BETWEEN(thisformset.dToDate, thisformset.dFromdate, l_dToDate)
			Alert(Str2Msg(GetLangText("RESERVAT","TA_INVALIDTODATE"),"%s",DTOC(thisformset.dFromdate),DTOC(l_dToDate)))
			this.dtxtToDate.SetFocus()
			RETURN
		ENDIF
		
		IF thisformset.nMode = REVERT_TO_NON_MANUAL_STATE OR ;
				thisformset.dFromDate <> thisformset.dFromDateOld OR ;
				thisformset.dToDate <> thisformset.dToDateOld OR ;
				thisformset.nAdults <> thisformset.nAdultsOld OR ;
				thisformset.nChilds1 <> thisformset.nChilds1Old OR ;
				thisformset.nChilds2 <> thisformset.nChilds2Old OR ;
				thisformset.nChilds3 <> thisformset.nChilds3Old OR ;
				thisformset.cRcShort <> thisformset.cRcShortOld OR ;
				thisformset.nRate <> thisformset.nRateOld OR ;
				thisformset.cRoomType <> thisformset.cRoomTypeOld OR ;
				thisformset.cRoomNum <> thisformset.cRoomNumOld OR ;
				thisformset.cArrTime <> thisformset.cArrTimeOld OR ;
				thisformset.cDepTime <> thisformset.cDepTimeOld
			IF thisformset.OnUpdate()
				thisformset.lChanged = .T.
			ELSE
				RETURN
			ENDIF
		ENDIF
		
		this.OnClose()
		thisformset.frmRates.ActivateToolbar()
	ENDPROC

	PROCEDURE frmEditRates.QueryUnload
		NODEFAULT
		this.OnClose()
	ENDPROC

	PROCEDURE frmEditRates.Show
		LPARAMETERS nStyle
		
		this.ZOrder()
	ENDPROC

	PROCEDURE frmEditRates.txtAdults.GotFocus
		thisformset.priceperpersonput()
	ENDPROC

	PROCEDURE frmEditRates.txtAdults.LostFocus
		thisformset.priceperpersonget()
		thisformset.RateCalculate()
	ENDPROC

	PROCEDURE frmEditRates.txtAdults.Valid
		IF this.Value > 0 OR (this.Value = 0 AND (NOT _screen.oGlobal.oParam.pa_chkadts))
			RETURN .T.
		ELSE
			IF LASTKEY() = 27
				RETURN .F.
			ELSE
				??CHR(7)
				WAIT WINDOW GetLangText("RESERVAT","TXT_ENTERNUMBEROFPERSONS")
				RETURN 0
			ENDIF
		ENDIF
	ENDPROC

	PROCEDURE frmEditRates.txtArrTime.Valid
		IF EMPTY(STRTRAN(this.Value, ":", ""))
			this.Value = ""
			RETURN .T.
		ENDIF
		
		this.Value = checktime(this.Value)
		
		RETURN .T.
	ENDPROC

	PROCEDURE frmEditRates.txtChilds1.LostFocus
		thisformset.RateCalculate()
	ENDPROC

	PROCEDURE frmEditRates.txtChilds2.LostFocus
		thisformset.RateCalculate()
	ENDPROC

	PROCEDURE frmEditRates.txtChilds3.LostFocus
		thisformset.RateCalculate()
	ENDPROC

	PROCEDURE frmEditRates.txtDepTime.Valid
		IF EMPTY(STRTRAN(this.Value, ":", ""))
			this.Value = ""
			RETURN .T.
		ENDIF
		
		this.Value = checktime(this.Value)
		
		RETURN .T.
	ENDPROC

	PROCEDURE frmEditRates.txtRate.GotFocus
		this.OldRate = thisformset.nRate
	ENDPROC

	PROCEDURE frmEditRates.txtRate.Init
		DODEFAULT()
		this.AddProperty("OldRate")
	ENDPROC

	PROCEDURE frmEditRates.txtRate.LostFocus
		IF this.Value <> this.OldRate AND LEFT(thisformset.cRcShort,1) <> "*"
			IF NOT paRights(39)
				Alert(Str2Msg(GetLangText("RESERVAT","TA_NORIGHTS"), "%s", GetLangText("RESERVAT","T_RATEOVERRIDE")))
				this.Value = this.OldRate
			ELSE
				IF NOT thisformset.PriceLessThenSplitSum()
					IF _screen.oGlobal.oParam.pa_askreas
						DO FORM forms\resreasonform WITH 1 TO thisformset.cReason
						IF NOT EMPTY(thisformset.cReason)
							thisform.cboRateCode.Value = "*" + thisform.cboRateCode.Value
							thisform.cboRateCode.DisplayValue = thisform.cboRateCode.Value
						ELSE
							this.Value = this.OldRate
						ENDIF
					ELSE
						thisform.cboRateCode.Value = "*" + thisform.cboRateCode.Value
						thisform.cboRateCode.DisplayValue = thisform.cboRateCode.Value
					ENDIF
				ELSE
					this.Value = this.OldRate
				ENDIF
			ENDIF
		ENDIF
	ENDPROC

	PROCEDURE frmRates.activatetoolbar
		IF TYPE("this.TbrCtrl") = "O"
			DODEFAULT()
		ENDIF
	ENDPROC

	PROCEDURE frmRates.assigncaption
		this.Caption = GetLangText("RESERVAT","T_INTERVALFORM") + " - [" + ;
			GetLangText("RESERVAT","T_ARRDATE") + ": " + DTOC(thisformset.oNewRes.rs_arrdate) + "  " + ;
			GetLangText("RESERVAT","T_DEPDATE") + ": " + DTOC(thisformset.oNewRes.rs_depdate) + "]"
		
		this.grdRates.grcDate.Header1.Caption = GetLangText("MGRRESER","TXT_DATE")
		this.grdRates.grcArrTime.Header1.Caption = GetLangText("RESERVAT","T_FROM")
		this.grdRates.grcDepTime.Header1.Caption = GetLangText("RESERVAT","T_TO")
		this.grdRates.grcRatecode.Header1.Caption = GetLangText("RESERVAT","T_RATECODE")
		this.grdRates.grcCustomSplits.Header1.Caption = LEFT(GetLangText("RESERVAT","T_RESRART"),4)+"."
		this.grdRates.grcRateRC.Header1.Caption = GetLangText("RESERVAT","TH_RATESUM")
		this.grdRates.grcRateAvg.Header1.Caption = GetLangText("RESERVAT","TH_RATERC")
		this.grdRates.grcRatePG.Header1.Caption = GetLangText("RESERVAT","TH_RATEPG")
		this.grdRates.grcRateEX.Header1.Caption = GetLangText("RESERVAT","TH_RATEEX")
		this.grdRates.grcRateRF.Header1.Caption = GetLangText("RESERVAT","TH_RATERF")
		this.grdRates.grcRateFRC.Header1.Caption = GetLangText("RESERVAT","TH_RATEFRC")
		this.grdRates.grcRateRD.Header1.Caption = GetLangText("RESERVAT","TH_RATERD")
		this.grdRates.grcAdults.Header1.Caption = LEFT(GetLangText("RESERVAT","T_ADULTS"), 1)+"."
		this.grdRates.grcChilds1.Header1.Caption = LEFT(GetLangText("RESERVAT","T_CHILDS"),1)+"."+LstItem(_screen.oGlobal.oParam.pa_childs,1)
		this.grdRates.grcChilds2.Header1.Caption = LEFT(GetLangText("RESERVAT","T_CHILDS"),1)+"."+LstItem(_screen.oGlobal.oParam.pa_childs,2)
		this.grdRates.grcChilds3.Header1.Caption = LEFT(GetLangText("RESERVAT","T_CHILDS"),1)+"."+LstItem(_screen.oGlobal.oParam.pa_childs,3)
		this.grdRates.grcRatePers.Header1.Caption = GetLangText("RESERVAT","TH_RATEPRS")
		this.grdRates.grcRoomType.Header1.Caption = GetLangText("RESERVAT","T_ROOMTYPE")
		this.grdRates.grcRoomNum.Header1.Caption = GetLangText("RESERVAT","T_ROOMNUM")
		this.grdRates.grcStatus.Header1.Caption = GetLangText("RESERVAT","TH_STATUS")
		
		this.grdRates.grcRateRC.Tbgrid1.ToolTipText = GetLangText("RESERVAT","TT_RATESUM")
		this.grdRates.grcRateAvg.Tbgrid1.ToolTipText = GetLangText("RESERVAT","TT_RATERC")
		this.grdRates.grcRatePG.Tbgrid1.ToolTipText = GetLangText("RESERVAT","TT_RATEPG")
		this.grdRates.grcRateEX.Tbgrid1.ToolTipText = GetLangText("RESERVAT","TT_RATEEX")
		this.grdRates.grcRateRF.Tbgrid1.ToolTipText = GetLangText("RESERVAT","TT_RATERF")
		this.grdRates.grcRateFRC.Tbgrid1.ToolTipText = GetLangText("RESERVAT","TT_RATEFRC")
		this.grdRates.grcRateRD.Tbgrid1.ToolTipText = GetLangText("RESERVAT","TT_RATERD")
		this.grdRates.grcRatePers.Tbgrid1.ToolTipText = GetLangText("RESERVAT","TT_RATEPRS")
	ENDPROC

	PROCEDURE frmRates.Destroy
		DODEFAULT()
		thisformset.Release()
	ENDPROC

	PROCEDURE frmRates.grdRates.AfterRowColChange
		LPARAMETERS nColIndex
		
		thisform.ActivateToolbar()
	ENDPROC

	PROCEDURE frmRates.grdRates.DblClick
		_screen.oProcessHandler(ALLTRIM(STR(P_EDIT))).Execute(thisform, "GridDblClick")
	ENDPROC

	PROCEDURE frmRates.grdRates.Init
		LOCAL l_nChildCats
		
		this.SetAll("Movable",.F.,"Column")
		
		l_nChildCats = LstCount(_screen.oGlobal.oParam.pa_childs)
		IF l_nChildCats < 1
			this.DefaultPropertiesSet(11, "gr_activ", .F.)
			this.DefaultPropertiesSet(11, "gr_show", .F.)
		ENDIF
		IF l_nChildCats < 2
			this.DefaultPropertiesSet(12, "gr_activ", .F.)
			this.DefaultPropertiesSet(12, "gr_show", .F.)
		ENDIF
		IF l_nChildCats < 3
			this.DefaultPropertiesSet(13, "gr_activ", .F.)
			this.DefaultPropertiesSet(13, "gr_show", .F.)
		ENDIF
		
		IF NOT _screen.oGlobal.oParam2.pa_connew
			this.DefaultPropertiesSet(18, "gr_activ", .F.)
			this.DefaultPropertiesSet(18, "gr_show", .F.)
			this.DefaultPropertiesSet(19, "gr_activ", .F.)
			this.DefaultPropertiesSet(19, "gr_show", .F.)
		ENDIF
		
		DODEFAULT()
	ENDPROC

	PROCEDURE frmRates.onclose
		IF thisformset.lChanged
			IF YesNo(GetLangText("RESERVAT","TXT_LOSECHANGES"))
				thisformset.RestoreBackup()
			ELSE
				RETURN
			ENDIF
		ENDIF
		
		this.Release()
	ENDPROC

	PROCEDURE frmRates.ondelete
		LOCAL l_dReservatDate
		
		thisformset.nMode = REVERT_TO_NON_MANUAL_STATE
		
		thisformset.dFromDate = curResRate.rr_date
		thisformset.dToDate = curResRate.rr_date
		
		l_dReservatDate = thisformset.GetReservationDate()
		SELECT TOP 1 * FROM curResrate ;
				WHERE rr_date <= l_dReservatDate AND UPPER(LEFT(rr_status,2)) # "OR" ;
				ORDER BY rr_date DESC ;
				INTO CURSOR curTemp
		
		IF EMPTY(curTemp.rr_date)
			RatecodeLocate(MAX(g_sysdate,thisformset.oNewRes.rs_arrdate), thisformset.oNewRes.rs_ratecod, thisformset.oNewRes.rs_roomtyp, thisformset.oNewRes.rs_arrdate)
			thisformset.cRatecode = PADR(ratecode.rc_ratecod, 10) + PADR(ratecode.rc_roomtyp, 4) + DTOS(ratecode.rc_fromdat) + ratecode.rc_season
			thisformset.nAdults = thisformset.oNewRes.rs_adults
			thisformset.nChilds1 = thisformset.oNewRes.rs_childs
			thisformset.nChilds2 = thisformset.oNewRes.rs_childs2
			thisformset.nChilds3 = thisformset.oNewRes.rs_childs3
			thisformset.carrtime = thisformset.oNewRes.rs_arrtime
			thisformset.cdeptime = thisformset.oNewRes.rs_deptime
			thisformset.cRcShort = ALLTRIM(thisformset.oNewRes.rs_ratecod)
			thisformset.cRoomType = ALLTRIM(thisformset.oNewRes.rs_roomtyp)
			thisformset.cRoomNum = thisformset.oNewRes.rs_roomnum
			thisformset.nRate = thisformset.oNewRes.rs_rate
		ELSE
			* Last standard record without "OR" status
			thisformset.cRatecode = curTemp.rr_ratecod
			thisformset.nAdults = curTemp.rr_adults
			thisformset.nChilds1 = curTemp.rr_childs
			thisformset.nChilds2 = curTemp.rr_childs2
			thisformset.nChilds3 = curTemp.rr_childs3
			thisformset.carrtime = curTemp.rr_arrtime
			thisformset.cdeptime = curTemp.rr_deptime
			thisformset.cRcShort = ALLTRIM(ICASE(INLIST(curTemp.rr_status,"OUS","ORU","OFF"),"*",INLIST(curTemp.rr_status,"OAL","ORA"),"!","")+LEFT(curTemp.rr_ratecod,10))
			thisformset.cRoomType = ALLTRIM(curTemp.ri_roomtyp)
			thisformset.cRoomNum = curTemp.ri_roomnum
			thisformset.nRate = ProcResRate("RrDayPrice", thisformset.oNewRes, curTemp.rr_date)
		ENDIF
		USE IN curTemp
		
		thisformset.dFromDateOld = thisformset.dFromDate
		thisformset.dToDateOld = thisformset.dToDate
		thisformset.nAdultsOld = thisformset.nAdults
		thisformset.nChilds1Old = thisformset.nChilds1
		thisformset.nChilds2Old = thisformset.nChilds2
		thisformset.nChilds3Old = thisformset.nChilds3
		thisformset.cRcShortOld = thisformset.cRcShort
		thisformset.nRateOld = thisformset.nRate
		thisformset.cRoomTypeOld = thisformset.cRoomType
		thisformset.cRoomNumOld = thisformset.cRoomNum
		
		thisformset.frmEditRates.Show()
		thisformset.frmEditRates.Refresh()
		thisformset.frmEditRates.cboRatecode.DisplayValue = thisformset.cRcShort
		this.Enabled = .F.
		
	ENDPROC

	PROCEDURE frmRates.onedit
		thisformset.nMode = IIF(curResRate.rr_date <= thisformset.oNewRes.rs_ratedat AND thisformset.oNewRes.rs_rooms = 1, ONLY_CHANGE_PAID_ROOM, STANDARD_RESRATE)
		
		thisformset.dFromDate = curResRate.rr_date
		thisformset.dToDate = curResRate.rr_date
		thisformset.cArrTime = curResRate.rr_arrtime
		thisformset.cDepTime = curResRate.rr_deptime
		thisformset.nAdults = curResRate.rr_adults
		thisformset.nChilds1 = curResRate.rr_childs
		thisformset.nChilds2 = curResRate.rr_childs2
		thisformset.nChilds3 = curResRate.rr_childs3
		thisformset.cRcShort = ALLTRIM(ICASE(INLIST(curResRate.rr_status,"OUS","ORU","OFF"),"*",INLIST(curResRate.rr_status,"OAL","ORA"),"!","")+LEFT(curResRate.rr_ratecod,10))
		thisformset.cRatecode = curResRate.rr_ratecod
		thisformset.nRate = ProcResRate("RrDayPrice", thisformset.oNewRes, curResRate.rr_date)
		thisformset.cRoomType = ALLTRIM(curResRate.ri_roomtyp)
		thisformset.cRoomNum = IIF(thisformset.oNewRes.rs_rooms = 1, curResRate.ri_roomnum, "")
		
		thisformset.dFromDateOld = thisformset.dFromDate
		thisformset.dToDateOld = thisformset.dToDate
		thisformset.cArrTimeOld = thisformset.cArrTime
		thisformset.cDepTimeOld = thisformset.cDepTime
		thisformset.nAdultsOld = thisformset.nAdults
		thisformset.nChilds1Old = thisformset.nChilds1
		thisformset.nChilds2Old = thisformset.nChilds2
		thisformset.nChilds3Old = thisformset.nChilds3
		thisformset.cRcShortOld = thisformset.cRcShort
		thisformset.nRateOld = thisformset.nRate
		thisformset.cRoomTypeOld = thisformset.cRoomType
		thisformset.cRoomNumOld = thisformset.cRoomNum
		thisformset.cStatusOld = curResRate.rr_status
		
		thisformset.frmEditRates.Show()
		thisformset.frmEditRates.Refresh()
		thisformset.frmEditRates.cboRatecode.DisplayValue = thisformset.cRcShort
		this.Enabled = .F.
	ENDPROC

	PROCEDURE frmRates.onsave
		LOCAL l_dReservatDate, l_nPrice, l_cResAlias, l_cRatecode
		
		l_dReservatDate = thisformset.GetReservationDate()
		
		IF SEEK(l_dReservatDate, "curResrate", "tag1")
			l_cRatecode = ALLTRIM(ICASE(INLIST(curResrate.rr_status,"OUS","ORU","OFF"),"*",INLIST(curResrate.rr_status,"OAL","ORA"),"!","")+LEFT(curResrate.rr_ratecod,10))
			l_nPrice = ProcResRate("RrDayPrice", thisformset.oNewRes, l_dReservatDate)
			DO CASE
				CASE TYPE("thisformset.oCallForm.Parent.Name") = "C" AND LOWER(thisformset.oCallForm.Parent.Name) = "fsreservat"
					IF DLocate("tblResGrid", "rs_reserid = " + SqlCnv(thisformset.oNewRes.rs_reserid))
						REPLACE rs_roomtyp WITH curResrate.ri_roomtyp ;
								rs_roomnum WITH curResrate.ri_roomnum ;
								rs_adults WITH curResrate.rr_adults ;
								rs_childs WITH curResrate.rr_childs ;
								rs_childs2 WITH curResrate.rr_childs2 ;
								rs_childs3 WITH curResrate.rr_childs3 ;
								rs_arrtime WITH curResrate.rr_arrtime ;
								rs_deptime WITH curResrate.rr_deptime ;
								rs_ratecod WITH l_cRatecode ;
								rs_rate WITH l_nPrice IN tblResGrid
					ENDIF
					IF DLocate("reservat", "rs_reserid = " + SqlCnv(thisformset.oNewRes.rs_reserid))
						REPLACE rs_roomtyp WITH curResrate.ri_roomtyp ;
								rs_roomnum WITH curResrate.ri_roomnum ;
								rs_adults WITH curResrate.rr_adults ;
								rs_childs WITH curResrate.rr_childs ;
								rs_childs2 WITH curResrate.rr_childs2 ;
								rs_childs3 WITH curResrate.rr_childs3 ;
								rs_arrtime WITH curResrate.rr_arrtime ;
								rs_deptime WITH curResrate.rr_deptime ;
								rs_ratecod WITH l_cRatecode ;
								rs_rate WITH l_nPrice IN reservat
					ENDIF
					thisformset.oCallForm.Refresh()
					thisformset.oCallForm.Parent.Formeditres.cbRatecode.cOldVal = reservat.rs_ratecod
					thisformset.oCallForm.Parent.Formeditres.tbRate.OldValue = reservat.rs_rate
					thisformset.oCallForm.Parent.Formeditres.cbRatecode.Value = reservat.rs_ratecod
					thisformset.oCallForm.Parent.Formeditres.cbRatecode.DisplayValue = reservat.rs_ratecod
				CASE thisformset.cMode = "STANDALONE"
					IF DLocate("reservat", "rs_reserid = " + SqlCnv(thisformset.oNewRes.rs_reserid))
						REPLACE rs_roomtyp WITH curResrate.ri_roomtyp ;
								rs_roomnum WITH curResrate.ri_roomnum ;
								rs_adults WITH curResrate.rr_adults ;
								rs_childs WITH curResrate.rr_childs ;
								rs_childs2 WITH curResrate.rr_childs2 ;
								rs_childs3 WITH curResrate.rr_childs3 ;
								rs_arrtime WITH curResrate.rr_arrtime ;
								rs_deptime WITH curResrate.rr_deptime ;
								rs_ratecod WITH l_cRatecode ;
								rs_rate WITH l_nPrice IN reservat
					ENDIF
					thisformset.ocheckres.lResrateUpdateFromReservat = .T.
					thisformset.ocheckres.CheckAndSave()
					thisformset.ocheckres.lResrateUpdateFromReservat = .F.
			ENDCASE
		ENDIF
		
		this.Release()
	ENDPROC

	PROCEDURE frmRates.QueryUnload
		NODEFAULT
		this.OnClose()
	ENDPROC

ENDDEFINE
