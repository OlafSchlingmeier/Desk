*--------------------------------------------------------------------------------------------------------------------------------------------------------
* (ES) AUTOGENERADO - ¡¡ATENCIÓN!! - ¡¡NO PENSADO PARA EJECUTAR!! USAR SOLAMENTE PARA INTEGRAR CAMBIOS Y ALMACENAR CON HERRAMIENTAS SCM!!
* (EN) AUTOGENERATED - ATTENTION!! - NOT INTENDED FOR EXECUTION!! USE ONLY FOR MERGING CHANGES AND STORING WITH SCM TOOLS!!
*--------------------------------------------------------------------------------------------------------------------------------------------------------
*< FOXBIN2PRG: Version="1.19" SourceFile="phonecalls.scx" /> (Solo para binarios VFP 9 / Only for VFP 9 binaries)
*
*
#INCLUDE "..\include\constdefines.h"

DEFINE CLASS dataenvironment AS dataenvironment 
 	*< CLASSDATA: Baseclass="dataenvironment" Timestamp="" Scale="" Uniqueid="" ClassIcon="2" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="Cursor3" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor4" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor5" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor6" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor8" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor11" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor13" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor14" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor1" UniqueID="" Timestamp="" />

	AutoOpenTables = .F.
	DataSource = .NULL.
	Height = 452
	Left = 0
	Name = "Dataenvironment"
	Top = 0
	Width = 637

	ADD OBJECT 'Cursor1' AS cursor WITH ;
		Alias = "ratecode", ;
		CursorSource = ..\data\ratecode.dbf, ;
		Height = 90, ;
		Left = 10, ;
		Name = "Cursor1", ;
		Top = 20, ;
		Width = 90
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor11' AS cursor WITH ;
		Alias = "address", ;
		CursorSource = ..\data\address.dbf, ;
		Height = 90, ;
		Left = 290, ;
		Name = "Cursor11", ;
		Order = "tag1", ;
		Top = 260, ;
		Width = 90
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor13' AS cursor WITH ;
		Alias = "billnum", ;
		BufferModeOverride = 5, ;
		CursorSource = ..\data\billnum.dbf, ;
		Height = 90, ;
		Left = 10, ;
		Name = "Cursor13", ;
		Top = 380, ;
		Width = 91
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor14' AS cursor WITH ;
		Alias = "postchng", ;
		BufferModeOverride = 5, ;
		CursorSource = ..\data\postchng.dbf, ;
		Height = 90, ;
		Left = 150, ;
		Name = "Cursor14", ;
		Top = 380, ;
		Width = 91
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor3' AS cursor WITH ;
		Alias = "post", ;
		BufferModeOverride = 5, ;
		CursorSource = ..\data\post.dbf, ;
		Height = 90, ;
		Left = 290, ;
		Name = "Cursor3", ;
		Top = 20, ;
		Width = 90
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor4' AS cursor WITH ;
		Alias = "ifclost", ;
		BufferModeOverride = 5, ;
		CursorSource = ..\data\ifclost.dbf, ;
		Height = 90, ;
		Left = 430, ;
		Name = "Cursor4", ;
		Top = 20, ;
		Width = 90
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor5' AS cursor WITH ;
		Alias = "reservat", ;
		CursorSource = ..\data\reservat.dbf, ;
		Height = 90, ;
		Left = 10, ;
		Name = "Cursor5", ;
		Order = "tag1", ;
		Top = 140, ;
		Width = 90
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor6' AS cursor WITH ;
		Alias = "paymetho", ;
		CursorSource = ..\data\paymetho.dbf, ;
		Height = 90, ;
		Left = 150, ;
		Name = "Cursor6", ;
		Order = "tag1", ;
		Top = 141, ;
		Width = 90
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor8' AS cursor WITH ;
		Alias = "article", ;
		CursorSource = ..\data\article.dbf, ;
		Height = 90, ;
		Left = 430, ;
		Name = "Cursor8", ;
		Order = "tag1", ;
		Top = 140, ;
		Width = 90
		*< END OBJECT: BaseClass="cursor" />
	
	PROCEDURE BeforeOpenTables
		SetDataPath(this)
	ENDPROC

ENDDEFINE

DEFINE CLASS frmphonecalls AS tform OF "..\libs\main.vcx" 
 	*< CLASSDATA: Baseclass="form" Timestamp="" Scale="" Uniqueid="" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="grdPhoneCalls" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grdPhoneCalls.grcMark.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grdPhoneCalls.grcMark.Tcheckbox1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grdPhoneCalls.grcExtension.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grdPhoneCalls.grcExtension.Tbgrid1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grdPhoneCalls.grcDate.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grdPhoneCalls.grcDate.Tbgrid1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grdPhoneCalls.grcTime.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grdPhoneCalls.grcTime.Tbgrid1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grdPhoneCalls.grcUnits.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grdPhoneCalls.grcUnits.Tbgrid1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grdPhoneCalls.grcAmount.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grdPhoneCalls.grcAmount.Tbgrid1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grdPhoneCalls.grcifc.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grdPhoneCalls.grcifc.Tbgrid1" UniqueID="" Timestamp="" />

	*<DefinedPropArrayMethod>
		*m: allmarked_assign
		*m: boothnum
		*m: currmarked_assign
		*m: oninfo
		*m: onmark
		*m: onmarkall
		*m: onpay
		*m: onredirect
		*m: postprepare
		*m: postrevert
		*m: redirection
		*m: refreshcursor
		*p: allmarked
		*p: currmarked
		*p: forclause
		*p: orderpost
	*</DefinedPropArrayMethod>

	AlwaysOnTop = .F.
	Caption = "frmPhoneCalls"
	ControlBox = .T.
	ctbrclass = ctbrPhoneBooth
	DataSession = 2
	DoCreate = .T.
	doini = .T.
	doiniopencommontables = .T.
	forclause = post.ps_reserid <= -10
	formname = phonebooth
	Height = 290
	Icon = ..\bitmap\icons\phone01.ico
	KeyPreview = .T.
	Name = "frmPhoneCalls"
	resizeheaderfont = .F.
	saveformsize = .T.
	savegridwidths = .T.
	Width = 750

	ADD OBJECT 'grdPhoneCalls' AS tgrid WITH ;
		AllowHeaderSizing = .F., ;
		AllowRowSizing = .F., ;
		ColumnCount = 7, ;
		DeleteMark = .F., ;
		GridLineColor = 192,192,192, ;
		GridLines = 2, ;
		Height = 290, ;
		HighlightRow = .F., ;
		Left = 0, ;
		lresizecolumns = .F., ;
		Name = "grdPhoneCalls", ;
		ReadOnly = .T., ;
		RecordMark = .F., ;
		resizefontsize = .F., ;
		ScrollBars = 2, ;
		setcolumns = .T., ;
		TabIndex = 1, ;
		Top = 0, ;
		Width = 750, ;
		Column1.Movable = .F., ;
		Column1.Name = "grcMark", ;
		Column1.ReadOnly = .F., ;
		Column1.Sparse = .F., ;
		Column1.Width = 31, ;
		Column2.Movable = .F., ;
		Column2.Name = "grcExtension", ;
		Column2.ReadOnly = .T., ;
		Column2.Width = 89, ;
		Column3.Movable = .F., ;
		Column3.Name = "grcDate", ;
		Column3.ReadOnly = .T., ;
		Column3.Width = 89, ;
		Column4.Movable = .F., ;
		Column4.Name = "grcTime", ;
		Column4.ReadOnly = .T., ;
		Column4.Width = 89, ;
		Column5.Movable = .F., ;
		Column5.Name = "grcUnits", ;
		Column5.ReadOnly = .T., ;
		Column5.Width = 89, ;
		Column6.Movable = .F., ;
		Column6.Name = "grcAmount", ;
		Column6.ReadOnly = .T., ;
		Column6.Width = 89, ;
		Column7.Name = "grcifc", ;
		Column7.ReadOnly = .T., ;
		Column7.Width = 245
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="grid" />

	ADD OBJECT 'grdPhoneCalls.grcAmount.Header1' AS header WITH ;
		Caption = "Header1", ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'grdPhoneCalls.grcAmount.Tbgrid1' AS tbgrid WITH ;
		Left = 40, ;
		Name = "Tbgrid1", ;
		ReadOnly = .T., ;
		Top = 23
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />

	ADD OBJECT 'grdPhoneCalls.grcDate.Header1' AS header WITH ;
		Caption = "Header1", ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'grdPhoneCalls.grcDate.Tbgrid1' AS tbgrid WITH ;
		Left = 49, ;
		Name = "Tbgrid1", ;
		ReadOnly = .T., ;
		Top = 35
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />

	ADD OBJECT 'grdPhoneCalls.grcExtension.Header1' AS header WITH ;
		Caption = "Header1", ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'grdPhoneCalls.grcExtension.Tbgrid1' AS tbgrid WITH ;
		Left = 32, ;
		Name = "Tbgrid1", ;
		ReadOnly = .T., ;
		Top = 23
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />

	ADD OBJECT 'grdPhoneCalls.grcifc.Header1' AS header WITH ;
		Caption = "Header1", ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'grdPhoneCalls.grcifc.Tbgrid1' AS tbgrid WITH ;
		Left = 117, ;
		Name = "Tbgrid1", ;
		ReadOnly = .T., ;
		Top = 83
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />

	ADD OBJECT 'grdPhoneCalls.grcMark.Header1' AS header WITH ;
		Caption = "Header1", ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'grdPhoneCalls.grcMark.Tcheckbox1' AS tcheckbox WITH ;
		Alignment = 0, ;
		Caption = "", ;
		Left = -1, ;
		Name = "Tcheckbox1", ;
		ReadOnly = .F., ;
		Top = 23
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="checkbox" />

	ADD OBJECT 'grdPhoneCalls.grcTime.Header1' AS header WITH ;
		Caption = "Header1", ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'grdPhoneCalls.grcTime.Tbgrid1' AS tbgrid WITH ;
		Left = 42, ;
		Name = "Tbgrid1", ;
		ReadOnly = .T., ;
		Top = 35
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />

	ADD OBJECT 'grdPhoneCalls.grcUnits.Header1' AS header WITH ;
		Caption = "Header1", ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'grdPhoneCalls.grcUnits.Tbgrid1' AS tbgrid WITH ;
		Left = 35, ;
		Name = "Tbgrid1", ;
		ReadOnly = .T., ;
		Top = 35
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />
	
	PROCEDURE allmarked_assign
		LPARAMETERS vNewVal
		
		this.allmarked = m.vNewVal
		
		this.TbrCtrl.ChangeCaption(P_MARK_ALL, IIF(this.AllMarked, [GetText("BOOTH","TT_UNMARK_ALL")], [GetText("BOOTH","TT_MARK_ALL")]))
	ENDPROC

	PROCEDURE assigncaption
		this.Caption = GetLangText("BOOTH","TXT_BOOTHDATA")
		this.grdPhoneCalls.grcMark.Header1.Caption = GetLangText("BOOTH","TXT_MARKER")
		this.grdPhoneCalls.grcExtension.Header1.Caption = GetLangText("BOOTH","TXT_EXTENSION")
		this.grdPhoneCalls.grcDate.Header1.Caption = GetLangText("BOOTH","TXT_DATE")
		this.grdPhoneCalls.grcTime.Header1.Caption = GetLangText("BOOTH","TXT_TIME")
		this.grdPhoneCalls.grcUnits.Header1.Caption = GetLangText("BOOTH","TXT_UNITS")
		this.grdPhoneCalls.grcAmount.Header1.Caption = GetLangText("BOOTH","TXT_AMOUNT")
		this.grdPhoneCalls.grcifc.Header1.Caption = "Info"
	ENDPROC

	PROCEDURE boothnum
		LPARAMETERS lp_nReserid
		LOCAL l_nExtens
		
		DO BoothNum IN Booth WITH lp_nReserid, l_nExtens
		l_nExtens = INT(l_nExtens)
		
		RETURN l_nExtens
	ENDPROC

	PROCEDURE currmarked_assign
		LPARAMETERS vNewVal
		*To do: Modify this routine for the Assign method
		this.currmarked = m.vNewVal
		
		this.TbrCtrl.ChangeCaption(P_MARK, IIF(this.currMarked, [GetText("BOOTH","TT_UNMARK")], [GetText("BOOTH","TT_MARK")]))
	ENDPROC

	PROCEDURE Init
		DODEFAULT()
		this.assigncaption()
		this.refreshcursor()
		this.SetAll("DynamicForeColor", "IIF(curBooth.ps_marker, RGB(255,0,0), RGB(0,0,0))", "Column")
		GO TOP IN curBooth
	ENDPROC

	PROCEDURE Load
		DODEFAULT()
		
		CREATE CURSOR curBooth (ps_marker l, ps_extens n(5), ps_date d, ps_time c(5), ;
			ps_units b(2), ps_amount b(2), ps_ifc c(250), ps_reserid n(12,3), ps_postid n(8))
		CREATE CURSOR curMarkers (ps_postid n(8), ps_extens n(5), ps_marker l)
		INDEX ON ps_postid TAG tag1
		
	ENDPROC

	PROCEDURE onclose
		this.Release()
	ENDPROC

	PROCEDURE ondelete
		LPARAMETERS lp_lDontAsk
		LOCAL l_nRecno
		SELECT curBooth
		l_nRecno = RECNO()
		LOCATE FOR ps_marker
		GO l_nRecno
		IF FOUND()
			IF lp_lDontAsk OR yesno(GetLangText("BOOTH","TXT_DEL_ALL_MARKED_RECORDS"))
				ZAP IN curMarkers
				SELECT curBooth
				SCAN FOR ps_marker
					IF SEEK(curBooth.ps_postid,"post","tag3")
						IF EVALUATE(this.forclause)
							SELECT post
							SCATTER MEMO MEMVAR
							m.ps_phone = ALLTRIM(STR(curBooth.ps_extens))
							m.ps_room = m.ps_phone
							INSERT INTO ifclost FROM MEMVAR
							DELETE
							DoTableUpdate(.T.,.T.,"post")
							DoTableUpdate(.T.,.T.,"ifclost")
							= EndTransaction()
							SELECT curBooth
						ELSE
							INSERT INTO curMarkers (ps_postid, ps_extens) VALUES (curBooth.ps_postid, curBooth.ps_extens)
							REPLACE ps_marker WITH .F. IN curBooth
						ENDIF
					ELSE
						DELETE
					ENDIF
				ENDSCAN
				IF RECCOUNT("curMarkers") > 0
					LOCAL l_cMessage
					l_cMessage = ""
					SELECT curMarkers
					SCAN
						l_cMessage = l_cMessage + "   " + GetLangText("BOOTH","TXT_BOOTH_NO") + ALLTRIM(STR(ps_extens)) + ;
							"  " + GetLangText("BOOTH","TXT_POST_ID") + " " + ALLTRIM(STR(ps_postid)) + ";"
					ENDSCAN
					Alert(Str2Msg(GetLangText("BOOTH","TXT_CANT_BE_PROCEED1"),"%s",l_cMessage)+GetLangText("BOOTH","TXT_CANT_BE_PROCEED2"))
				ENDIF
				this.refreshcursor()
				GO l_nRecno
				SKIP
				this.grdPhoneCalls.grcMark.Tcheckbox1.Value = curBooth.ps_marker
				this.Refresh()
				SKIP -1
				IF RECCOUNT("curBooth") = 0
					this.ActivateToolbar()
				ENDIF
				this.currmarked = .F.
			ENDIF
		ELSE
			= Alert(GetLangText("BOOTH","TXT_MARK_RECORDS_FIRST"))
		ENDIF
	ENDPROC

	PROCEDURE oninfo
		IF SEEK(curBooth.ps_postid,"post","tag3")
			Alert(post.ps_ifc,GetLangText("BOOTH","TXT_DIALED_NUMBER"))
		ELSE
			Alert(GetLangText("BOOTH","TA_DELETED_REC"))
		ENDIF
	ENDPROC

	PROCEDURE onmark
		LPARAMETERS l_lValue
		IF PCOUNT() = 0
			REPLACE ps_marker WITH NOT curBooth.ps_marker IN curBooth
			this.grdPhoneCalls.grcMark.Tcheckbox1.Value = curBooth.ps_marker
		ELSE
			REPLACE ps_marker WITH l_lValue IN curBooth
		ENDIF
		IF curBooth.ps_marker
			LOCAL l_nRecno
			SELECT curBooth
			l_nRecno = RECNO()
			LOCATE FOR NOT ps_marker
			GO l_nRecno
			this.allmarked = NOT FOUND()
		ELSE
			this.allmarked = .F.
		ENDIF
		this.currmarked = curBooth.ps_marker
		
	ENDPROC

	PROCEDURE onmarkall
		LOCAL l_nRecno
		this.allmarked = NOT this.allmarked
		l_nRecno = RECNO("curBooth")
		REPLACE ps_marker WITH this.allmarked ALL IN curBooth
		GO l_nRecno IN curBooth
		this.grdPhoneCalls.grcMark.Tcheckbox1.Value = curBooth.ps_marker
		this.currmarked = curBooth.ps_marker
		
	ENDPROC

	PROCEDURE onpay
		LOCAL l_nBalance, l_nRecno, l_nPostRecNo, l_nResult, l_oPayMeth, l_lPrint
		SELECT curBooth
		l_nRecno = RECNO()
		LOCATE FOR ps_marker
		GO l_nRecno
		IF FOUND()
			IF NOT this.postprepare()
				RETURN
			ENDIF
			SUM ps_amount FOR ps_marker TO l_nBalance
			GO l_nRecno
			IF l_nBalance <> 0
				SELECT curMarkers
				ZAP
				APPEND FROM DBF("curBooth") FIELDS ps_postid FOR ps_marker
				DO FORM "forms/postpay" WITH "BOOTH_PAY", 1, 0, curBooth.ps_reserid, l_nBalance TO l_nResult
				IF l_nResult
					_screen.oGlobal.oBill.nAddrId = 0
					SELECT paymetho
					SCATTER MEMO NAME l_oPayMeth
					SELECT * FROM post WITH (BUFFERING = .T.) WHERE SEEK(post.ps_postid,"curMarkers","tag1") INTO CURSOR Query1 READWRITE
					DO CursorPrintBillCreate IN ProcBill WITH "query"
					APPEND FROM DBF("query1")
					DClose("query1")
					SET RELATION TO ps_artinum INTO article
					SET RELATION ADDITIVE TO ps_paynum INTO paymetho
					IF FPBillPrinted("PHONECALLS")
						g_Billnum = GetBill(.F.,.F.,.F.,.F.,0.1,Query.ps_addrid,l_nBalance,"BOOTH",1)
					ELSE
						g_Billnum = ""
					ENDIF
					IF NOT EMPTY(g_Billnum)
						g_dBillDate = SysDate()
						SELECT Query
						l_nPostRecNo = RECNO("post")
						SCAN
							IF SEEK(Query.ps_postid, "post", "tag3")
								REPLACE ps_billnum WITH g_Billnum, ;
										ps_window WITH 1 ;
										IN post
							ENDIF
						ENDSCAN
						IF YesNo(GetLangText("BOOTH","TXT_PRINTBILL")+"?")
							l_lPrint = .T.
							= BillNumChange(g_Billnum, "CHKOUT", "Print", l_oPayMeth.pm_paynum)
						ELSE
							= BillNumChange(g_Billnum, "CHKOUT", "No Print", l_oPayMeth.pm_paynum)
						ENDIF
						FNNextIdTempWriteRealId("post", "ps_postid", "POST")
						DoTableUpdate(.T.,.T.,"post")
						DoTableUpdate(.T.,.T.,"postchng")
						DoTableUpdate(.T.,.T.,"billnum")
						= EndTransaction()
						IF l_lPrint
							g_Billname = ""
							DO prIntpassbill IN PasserBy WITH MAX(l_oPayMeth.pm_copy, 1)
						ENDIF
						GO l_nPostRecNo IN post
					ELSE
						this.postrevert()
					ENDIF
					SELECT Query
			 		SET RELATION TO
					dclose("query")
					DELETE FOR ps_marker IN curBooth
					this.refreshcursor()
					IF RECCOUNT("curBooth") = 0
						this.ActivateToolbar()
					ENDIF
				ELSE
					this.postrevert()
				ENDIF
				SELECT curBooth
				GO l_nRecno
				this.grdPhoneCalls.SetFocus()
			ELSE
				this.postrevert()
				IF YesNo(GetLangText("BOOTH","TXT_ZERO_BALANCE"))
					this.ondelete(.T.)
				ENDIF
			ENDIF
		ELSE
			= Alert(GetLangText("BOOTH","TXT_MARK_RECORDS_FIRST"))
		ENDIF
	ENDPROC

	PROCEDURE onredirect
		LOCAL l_nRecno
		SELECT curBooth
		l_nRecno = RECNO()
		LOCATE FOR ps_marker
		GO l_nRecno
		IF FOUND()
			IF this.postprepare()
				DO FORM forms\PostRedirect WITH curBooth.ps_reserid, this
				this.Enabled = .F.
			ENDIF
		ELSE
			= alert(GetLangText("BOOTH","TXT_MARK_RECORDS_FIRST"))
		ENDIF
	ENDPROC

	PROCEDURE onrefresh
		LOCAL l_oPost, l_nRecno
		WAIT WINDOW NOWAIT GetLangText("BOOTH","TXT_READING_INTERFACES")
		DO boOthread IN Interfac
		WAIT CLEAR
		l_nRecno = RECNO("curBooth")
		this.refreshcursor()
		GO l_nRecno
		IF l_nRecno > 1
			this.grdPhoneCalls.grcMark.Tcheckbox1.Value = curBooth.ps_marker
			this.Refresh()
		ELSE
			SKIP
			this.grdPhoneCalls.grcMark.Tcheckbox1.Value = curBooth.ps_marker
			this.Refresh()
			SKIP -1
		ENDIF
		this.ActivateToolbar()
	ENDPROC

	PROCEDURE postprepare
		LOCAL l_lRetVal, l_nRecno
		ZAP IN curMarkers
		SELECT curBooth
		l_nRecno = RECNO()
		SCAN FOR ps_marker
			IF SEEK(curBooth.ps_postid,"post","tag3") AND EVALUATE(this.forclause)
				REPLACE ps_reserid WITH 0.1 IN post
				l_lRetVal = .T.
			ELSE
				INSERT INTO curMarkers (ps_postid, ps_extens) VALUES (curBooth.ps_postid, curBooth.ps_extens)
				REPLACE ps_marker WITH .F. IN curBooth
			ENDIF
		ENDSCAN
		LOCATE FOR NOT ps_marker
		this.allmarked = NOT FOUND()
		GO l_nRecno
		IF EOF()
			GO BOTTOM
		ENDIF
		this.currmarked = curBooth.ps_marker
		SKIP
		this.grdPhoneCalls.grcMark.Tcheckbox1.Value = curBooth.ps_marker
		this.Refresh()
		SKIP -1
		IF RECCOUNT("curMarkers") > 0
			LOCAL l_cMessage
			l_cMessage = ""
			SELECT curMarkers
			SCAN
				l_cMessage = l_cMessage + "   " + GetLangText("BOOTH","TXT_BOOTH_NO") + ALLTRIM(STR(ps_extens)) + ;
					"  " + GetLangText("BOOTH","TXT_POST_ID") + " " + ALLTRIM(STR(ps_postid)) + ";"
			ENDSCAN
			Alert(Str2Msg(GetLangText("BOOTH","TXT_CANT_BE_PROCEED1"),"%s",l_cMessage)+GetLangText("BOOTH","TXT_CANT_BE_PROCEED2"))
		ENDIF
		SELECT curBooth
		RETURN l_lRetVal
	ENDPROC

	PROCEDURE postrevert
		LOCAL l_nRecno
		SELECT curBooth
		l_nRecno = RECNO()
		SCAN FOR ps_marker
			IF SEEK(curBooth.ps_postid,"post","tag3")
				TABLEREVERT(.F.,"post")
				*REPLACE ps_reserid WITH curBooth.ps_reserid IN post
			ENDIF
		ENDSCAN
		GO l_nRecno
	ENDPROC

	PROCEDURE QueryUnload
		this.OnClose()
		NODEFAULT
	ENDPROC

	PROCEDURE redirection
		LPARAMETERS lp_nNewReserId
		LOCAL l_oOldPost, l_oNewPost, l_nRecno, l_nWindow
		l_nWindow = PBGetFreeWindow(lp_nNewReserId)
		
		SELECT curBooth
		l_nRecno = RECNO()
		SCAN FOR ps_marker
			IF SEEK(curBooth.ps_postid,"post","tag3")
				SELECT post
				SCATTER NAME l_oOldPost
				REPLACE ps_reserid WITH lp_nNewReserId, ;
						ps_touched WITH .T., ;
						ps_supplem WITH GetLangText("CHKOUT2","TXT_PHONE_BOOTH") + ;
						" " + LTRIM(STR(curBooth.ps_extens)), ;
						ps_window WITH l_nWindow ;
						IN post
				SCATTER NAME l_oNewPost
				PostHistory(l_oOldPost, l_oNewPost, "CHANGED")
				DoTableUpdate(.T.,.T.,"post")
				DoTableUpdate(.T.,.T.,"postchng")
				= EndTransaction()
				SELECT curBooth
			ENDIF
			DELETE
		ENDSCAN
		this.refreshcursor()
		GO l_nRecno
		this.Refresh()
		IF RECCOUNT("curBooth") = 0
			this.ActivateToolbar()
		ENDIF
		GO l_nRecno IN curBooth
		this.currmarked = .F.
		
	ENDPROC

	PROCEDURE refreshcursor
		LOCAL l_oPost
		SELECT curMarkers
		ZAP
		APPEND FROM DBF("curBooth") FIELDS ps_postid FOR ps_marker
		this.grdPhoneCalls.RecordSource = ""
		ZAP IN curBooth
		SELECT post
		SCAN FOR EVALUATE(this.forclause)
			SCATTER NAME l_oPost MEMO
			l_oPost.ps_marker = SEEK(l_oPost.ps_postid, "curMarkers", "tag1")
			l_oPost.ps_ifc = STRTRAN(l_oPost.ps_ifc,CHR(13)," ; ")
			l_oPost.ps_ifc = STRTRAN(l_oPost.ps_ifc,CHR(10),"")
			SELECT curBooth
			APPEND BLANK
			GATHER NAME l_oPost
			REPLACE ps_extens WITH this.boothnum(l_oPost.ps_reserid)
			SELECT post
		ENDSCAN
		this.grdPhoneCalls.RecordSource = "curBooth"
		this.grdPhoneCalls.grcMark.ControlSource = "curBooth.ps_marker"
		this.grdPhoneCalls.grcExtension.ControlSource = "curBooth.ps_extens"
		this.grdPhoneCalls.grcDate.ControlSource = "curBooth.ps_date"
		this.grdPhoneCalls.grcTime.ControlSource = "curBooth.ps_time"
		this.grdPhoneCalls.grcUnits.ControlSource = "curBooth.ps_units"
		this.grdPhoneCalls.grcAmount.ControlSource = "curBooth.ps_amount"
		this.grdPhoneCalls.grcifc.ControlSource = "curBooth.ps_ifc"
		SELECT curBooth
		LOCATE FOR NOT ps_marker
		this.allmarked = NOT FOUND()
	ENDPROC

	PROCEDURE grdPhoneCalls.AfterRowColChange
		LPARAMETERS nColIndex
		
		thisform.currmarked = curBooth.ps_marker
		
	ENDPROC

	PROCEDURE grdPhoneCalls.grcMark.Tcheckbox1.InteractiveChange
		thisform.onmark(this.Value)
		
	ENDPROC

	PROCEDURE grdPhoneCalls.grcMark.Tcheckbox1.When
		DODEFAULT()
		
		this.BackColor = this.Parent.Parent.grcExtension.Tbgrid1.SelectedBackColor
		this.ForeColor = this.Parent.Parent.grcExtension.Tbgrid1.SelectedForeColor
		this.Parent.Parent.nRecNo = RECNO(this.Parent.Parent.RecordSource)
		
	ENDPROC

ENDDEFINE
