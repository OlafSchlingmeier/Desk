*--------------------------------------------------------------------------------------------------------------------------------------------------------
* (ES) AUTOGENERADO - ¡¡ATENCIÓN!! - ¡¡NO PENSADO PARA EJECUTAR!! USAR SOLAMENTE PARA INTEGRAR CAMBIOS Y ALMACENAR CON HERRAMIENTAS SCM!!
* (EN) AUTOGENERATED - ATTENTION!! - NOT INTENDED FOR EXECUTION!! USE ONLY FOR MERGING CHANGES AND STORING WITH SCM TOOLS!!
*--------------------------------------------------------------------------------------------------------------------------------------------------------
*< FOXBIN2PRG: Version="1.19" SourceFile="rentavailability.scx" /> (Solo para binarios VFP 9 / Only for VFP 9 binaries)
*
*
#INCLUDE "..\include\constdefines.h"

DEFINE CLASS dataenvironment AS dataenvironment 
 	*< CLASSDATA: Baseclass="dataenvironment" Timestamp="" Scale="" Uniqueid="" ClassIcon="2" />

	DataSource = .NULL.
	Height = 315
	Left = 0
	Name = "Dataenvironment"
	Top = 0
	Width = 616

ENDDEFINE

DEFINE CLASS frmrentavailab AS tform OF "..\libs\main.vcx" 
 	*< CLASSDATA: Baseclass="form" Timestamp="" Scale="" Uniqueid="" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="grdRentAvailab" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grdRentAvailab.grcName.GRDRAVHeader1" UniqueID="" Timestamp="" />

	*<DefinedPropArrayMethod>
		*m: getallotdata
		*m: oncellopen
		*m: ondetails
		*m: onroomplan
		*m: putsummaryrecord
		*m: setcaption
		*m: setgriddynamiccolor
		*p: denddate
		*p: dstartdate
		*p: oevent
		*p: oparams
	*</DefinedPropArrayMethod>

	AlwaysOnTop = .F.
	Caption = "frmRentAvailab"
	ControlBox = .T.
	DataSession = 2
	denddate = {}
	DoCreate = .T.
	doini = .T.
	dstartdate = {}
	formname = rentavailability
	Height = 265
	KeyPreview = .T.
	Name = "frmRentAvailab"
	ocallingobj = .NULL.
	oevent = .NULL.
	oparams = .NULL.
	resizeheaderfont = .F.
	saveformsize = .T.
	savegridwidths = .T.
	ShowTips = .T.
	Width = 540

	ADD OBJECT 'grdRentAvailab' AS grdrentavail WITH ;
		ColumnCount = 1, ;
		DeleteMark = .F., ;
		GridLineColor = 192,192,192, ;
		GridLines = 2, ;
		HeaderHeight = 20, ;
		Height = 265, ;
		HighlightRowLineWidth = 3, ;
		Left = 0, ;
		lresizecolumns = .F., ;
		Name = "grdRentAvailab", ;
		ReadOnly = .T., ;
		RecordMark = .F., ;
		resizefontsize = .F., ;
		setcolumns = .T., ;
		Top = 0, ;
		Width = 540, ;
		ZOrderSet = 1, ;
		Grdravcolumn1.FontName = "Arial", ;
		Grdravcolumn1.GRDRAVCNTGRIDCELL1.Line1.Name = "Line1", ;
		Grdravcolumn1.GRDRAVCNTGRIDCELL1.Line2.Name = "Line2", ;
		Grdravcolumn1.GRDRAVCNTGRIDCELL1.Name = "GRDRAVCNTGRIDCELL1", ;
		Grdravcolumn1.GRDRAVCNTGRIDCELL1.TXTDEF.Name = "TXTDEF", ;
		Grdravcolumn1.GRDRAVCNTGRIDCELL1.TXTFREE.Name = "TXTFREE", ;
		Grdravcolumn1.GRDRAVCNTGRIDCELL1.txtmax.Name = "txtmax", ;
		Grdravcolumn1.HeaderClassLibrary = ..\commonclasses.prg, ;
		Grdravcolumn1.Name = "grcName", ;
		Grdravcolumn1.ReadOnly = .T.
		*< END OBJECT: ClassLib="..\libs\cit_rentavail.vcx" BaseClass="grid" />

	ADD OBJECT 'grdRentAvailab.grcName.GRDRAVHeader1' AS grdravheader WITH ;
		Caption = "Grdravheader1", ;
		Name = "GRDRAVHeader1"
		*< END OBJECT: BaseClass="header" />
	
	PROCEDURE Activate
		IF RECNO("tblAvailab")=1
			SKIP 1 IN tblAvailab
		ENDIF
		
		DODEFAULT()
	ENDPROC

	PROCEDURE getallotdata
		LOCAL l_nSelect, l_nRecno, l_cIndex, l_cMaxrooms, l_cFreerooms, l_cDefrooms
		
		l_nSelect = SELECT()
		l_nRecno = RECNO("tmptblAvailab")
		
		SELECT curAllotData
		SCAN ALL
			l_cIndex = PADL(as_date - this.dStartDate + 1, 2, "0")
			l_cMaxrooms = "max" + l_cIndex
			IF TYPE("tmptblAvailab."+l_cMaxrooms) <> "U"
				l_cFreerooms = "free" + l_cIndex
				l_cDefrooms = "def" + l_cIndex
				REPLACE &l_cMaxrooms WITH curAllotData.maxrooms, ;
						&l_cFreerooms WITH curAllotData.freerooms, ;
						&l_cDefrooms WITH curAllotData.pickrooms ;
						FOR cBuildId = curAllotData.al_buildng ;
						IN tmptblAvailab
			ENDIF
		ENDSCAN
		
		GO l_nRecno IN tmptblAvailab
		SELECT (l_nSelect)
		
		RETURN .T.
	ENDPROC

	PROCEDURE Init
		LPARAMETERS lp_oCallingObj, lp_oParams
		LOCAL l_cSqlSelect, l_oParams
		
		this.oCallingObj = lp_oCallingObj
		this.oParams = lp_oParams
		
		l_oParams = gosqlwrapper.GetParamsObj(this.oParams.Item("EventIntId"), this.oParams.Item("RoomType"), this.oParams.Item("Company"), this.oParams.Item("Guest"))
		l_cSqlSelect = goSqlWrapper.GetSqlStatment("getallotmentdata_sql", l_oParams)
		
		SqlCursor(l_cSqlSelect, "curAllotData")
		IF NOT USED("curAllotData") OR RECCOUNT("curAllotData") = 0
			* no data found
			Alert(GetLangText("EXACT","TXT_NO_DATA_FOUND"))
			RETURN .F.
		ENDIF
		
		SELECT curAllotData
		SCATTER MEMO NAME this.oEvent
		
		this.grdRentAvailab.grcName.Resizable = .T.
		
		DODEFAULT()
		
		this.OnRefresh(.T.)
		this.SetGridDynamicColor()
		
		RETURN .T.
	ENDPROC

	PROCEDURE KeyPress
		LPARAMETERS nKeyCode, nShiftAltCtrl
		
		DO CASE
			CASE (nKeyCode = 20) AND (nShiftAltCtrl = 2)
				* Allott details
				this.OnDetails()
				NODEFAULT
			CASE (nKeyCode = 127) AND (nShiftAltCtrl = 2)
				* Free allott
				this.OnEdit()
				NODEFAULT
			CASE (nKeyCode = 7) AND (nShiftAltCtrl = 2)
				* Room plan for allotment
				this.OnRoomPlan()
				NODEFAULT
			CASE (nKeyCode = 6) AND (nShiftAltCtrl = 2)
				* Search
				this.OnSearch()
				NODEFAULT
			CASE nKeyCode = 27
				* Close
				this.OnClose()
				NODEFAULT
		ENDCASE
	ENDPROC

	PROCEDURE Load
		DODEFAULT()
		
		OpenFile(.F., "param")
		OpenFile(.F., "picklist")
		OpenFile(.F., "althead")
		OpenFile(.F., "altsplit")
		OpenFile(.F., "reservat")
		OpenFile(.F., "roomtype")
		OpenFile(.F., "rtypedef")
		OpenFile(.F., "events")
		OpenFile(.F., "evint")
		OpenFile(.F., "altev")
		OpenFile(.F., "building")
	ENDPROC

	PROCEDURE oncellopen
		LPARAMETERS lp_nColIndex
		LOCAL l_dDate
		
		IF VARTYPE(lp_nColIndex) == "N" AND lp_nColIndex > 0
			l_dDate = this.dStartDate + lp_nColIndex - 2
			this.OnEdit(l_dDate)
		ENDIF
		
		RETURN .T.
	ENDPROC

	PROCEDURE onclose
		this.grdRentAvailab.AllowWidthSync = .F.
		this.Release()
	ENDPROC

	PROCEDURE ondetails
		LOCAL l_nAllotId
		
		IF NOT dlocate("curAllotData", "al_buildng = " + SqlCnv(tblAvailab.cBuildId))
			RETURN .F.
		ENDIF
		
		l_nAllotId = curAllotData.al_altid
		
		DO FORM "forms\MngForm" WITH "MngAltsplitCtrl", l_nAllotId
		
		RETURN .T.
	ENDPROC

	PROCEDURE onedit
		LPARAMETERS lp_dDate
		LOCAL l_cRentObjectId, l_dDate, l_oAvailParam
		
		l_cRentObjectId = tblAvailab.cBuildId
		IF EMPTY(lp_dDate)
			l_dDate = this.dStartDate
		ELSE
			l_dDate = lp_dDate
		ENDIF
		
		SELECT al_altid, al_fromdat, al_todat ;
			FROM althead ;
			WHERE BETWEEN(l_dDate, al_fromdat, al_todat) AND al_buildng = l_cRentObjectId ;
			INTO CURSOR curSelectedAllotment
		
		IF curSelectedAllotment.al_altid > 0
			l_oAvailParam = CREATEOBJECT("Collection")
			l_oAvailParam.Add(curSelectedAllotment.al_altid, "AllotId")
			l_oAvailParam.Add(curSelectedAllotment.al_fromdat, "FromDate")
			l_oAvailParam.Add(curSelectedAllotment.al_todat, "ToDate")
			l_oAvailParam.Add(.T., "AllDates")
			BrwAvailab("brwallottavail",.F.,.F.,.F.,l_oAvailParam,this)
		ENDIF
		
		USE IN curSelectedAllotment
		
		RETURN .T.
	ENDPROC

	PROCEDURE onrefresh
		LPARAMETERS lp_lFirstTime
		LOCAL l_cSqlSelect, l_oParams, l_cMacro, l_nDay, l_cIndex, l_cMaxrooms, l_cFreerooms, l_cDefrooms
		LOCAL l_nMaxDaysToShowAllowed, l_nShowDays, l_nFirstCol, l_nLastDay, l_nColRef, l_nColumnsPerDay
		LOCAL l_nTblAvailabRecNo, l_oData
		
		* Constants
		l_nFirstCol = 1
		l_nLastDay = 1
		l_nMaxDaysToShowAllowed = 27
		l_nColumnsPerDay = 3
		
		IF NOT lp_lFirstTime
		* In refresh get fresh data.
			USE IN curAllotData
			l_oParams = gosqlwrapper.GetParamsObj(this.oParams.Item("EventIntId"), this.oParams.Item("RoomType"), this.oParams.Item("Company"), this.oParams.Item("Guest"))
			l_cSqlSelect = goSqlWrapper.GetSqlStatment("getallotmentdata_sql", l_oParams)
			SqlCursor(l_cSqlSelect, "curAllotData")
		ENDIF
		* Make a grid with columns from this.dStartDate to this.dEndDate.
		CALCULATE MIN(al_fromdat), MAX(al_todat) ALL TO this.dStartDate, this.dEndDate IN curAllotData
		
		* Cursor can take maximal 255 fields, so limit it here
		*
		* CHECK max columns!
		*
		l_nShowDays = this.dEndDate-this.dStartDate+l_nLastDay
		IF l_nShowDays > l_nMaxDaysToShowAllowed
			l_nShowDays = l_nMaxDaysToShowAllowed
			this.dEndDate = this.dStartDate + (l_nShowDays - l_nLastDay)
		ENDIF
		
		this.grdRentAvailab.RecordSource = []
		this.grdRentAvailab.ColumnCount = l_nShowDays + l_nFirstCol
		
		* Make record source cursor
		IF USED("tblAvailab")
			l_nTblAvailabRecNo = RECNO("tblAvailab")
			USE IN tblAvailab
		ENDIF
		l_cMacro = "CREATE CURSOR tmptblAvailab (cBuildId c(3), cBuilding C(25), cNote M(4)"
		FOR l_nDay = 1 TO l_nShowDays
			l_cIndex = PADL(l_nDay, 2, "0")
			l_cMacro = l_cMacro + ", max" + l_cIndex + " I, free" + l_cIndex + " I, def" + l_cIndex + " I"
		NEXT
		l_cMacro = l_cMacro + ")"
		&l_cMacro
		INDEX ON UPPER(cBuilding) TAG TAG1
		* Fill a cursor.
		INSERT INTO tmptblAvailab (cBuildId, cBuilding) ;
			VALUES ("0", "HEADER")
		
		INSERT INTO tmptblAvailab (cBuildId, cBuilding, cNote) ;
			SELECT DISTINCT al_buildng, bu_lang, al_note FROM curAllotData
		this.GetAllotData()
		this.PutSummaryRecord(l_nShowDays)
		
		* Now copy data to grid cursor, sorted on UPPER(cBuilding).
		* First insert header data, then buildings, and on end summary data record.
		
		SELECT * FROM tmptblAvailab WHERE .F. INTO CURSOR tblAvailab READWRITE
		SELECT tmptblAvailab
		LOCATE FOR ALLTRIM(cBuildId) == "0"
		IF FOUND()
			SCATTER NAME l_oData MEMO
			INSERT INTO tblAvailab FROM NAME l_oData
		ENDIF
		SCAN FOR NOT INLIST(ALLTRIM(cBuildId),"0","1")
			SCATTER NAME l_oData MEMO
			INSERT INTO tblAvailab FROM NAME l_oData
		ENDSCAN
		LOCATE FOR ALLTRIM(cBuildId) == "1"
		IF FOUND()
			SCATTER NAME l_oData MEMO
			INSERT INTO tblAvailab FROM NAME l_oData
		ENDIF
		
		GO TOP IN tblAvailab
		
		this.grdRentAvailab.RecordSource = [tblAvailab]
		
		l_nColRef = 1 && First column
		FOR l_nDay = 1 TO l_nShowDays
			l_nColRef = l_nColRef + 1
			this.grdRentAvailab.Columns(l_nColRef).SetCaption(TRANSFORM(this.dStartDate+l_nDay-l_nLastDay))
		ENDFOR
		
		this.grdRentAvailab.ToolTipText = tblAvailab.cNote
		this.SetCaption()
		
		IF NOT EMPTY(l_nTblAvailabRecNo)
			GO l_nTblAvailabRecNo IN tblAvailab
		ENDIF
		
		RETURN .T.
	ENDPROC

	PROCEDURE onroomplan
		LOCAL l_cSql, l_cCur, l_nSelect, l_lFormFound, l_oForm
		LOCAL ARRAY l_aParams(2)
		
		IF DLocate("curAllotData", "al_buildng = " + SqlCnv(tblAvailab.cBuildId))
		
			* first check if we have this allotment
		
			l_nSelect = SELECT()
		
			TEXT TO l_cSql TEXTMERGE NOSHOW PRETEXT 15
			SELECT TOP 1 al_altid ;
				FROM althead ;
				WHERE al_altid = <<SqlCnv(curAllotData.al_altid,.T.)>> ;
				ORDER BY 1
			ENDTEXT
		
			l_cCur = sqlcursor(l_cSql,"",.F.,"",.NULL.,.T.)
		
			IF RECCOUNT(l_cCur)>0
				*l_aParams(1) = this
				*l_aParams(2) = curAllotData.al_altid
				*DoForm("fweekformrentmode", "forms\weekformrentmode", , .F., @l_aParams)
		
				* Allow form to be shown only once for any allotment
				FOR EACH l_oForm IN _screen.Forms
					IF TYPE("l_oForm.nAllotID")="N" AND l_oForm.nAllotID = curAllotData.al_altid
						l_lFormFound = .T.
						l_oForm.Show()
						EXIT
					ENDIF
				ENDFOR
				IF NOT l_lFormFound
					DO FORM forms\weekformrentmode WITH this, curAllotData.al_altid		
				ENDIF
			ELSE
				alert(GetLangText("RENT","TXT_ALLOTMENT_NOT_FOUND"))
			ENDIF
			
			dclose(l_cCur)
			SELECT (l_nSelect)
		ENDIF
		
		RETURN .T.
	ENDPROC

	PROCEDURE onsearch
		DO searchallott IN procallott WITH this
	ENDPROC

	PROCEDURE putsummaryrecord
		LPARAMETERS lp_nShowDays
		LOCAL l_nSelect, l_nRecno, l_nDay, l_cIndex, l_cMaxrooms, l_cFreerooms, l_cDefrooms, l_nMax, l_nFree, l_nDef
		
		l_nSelect = SELECT()
		
		INSERT INTO tmptblAvailab (cBuildId, cBuilding) ;
			VALUES ("1", GetLangText("MGRRESER", "TXT_TOTAL") + ":")
		l_nRecno = RECNO("tmptblAvailab")
		
		FOR l_nDay = 1 TO lp_nShowDays
			l_cIndex = PADL(l_nDay, 2, "0")
			l_cMaxrooms = "max" + l_cIndex
			IF TYPE("tmptblAvailab."+l_cMaxrooms) <> "U"
				l_cFreerooms = "free" + l_cIndex
				l_cDefrooms = "def" + l_cIndex
				CALCULATE SUM(&l_cMaxrooms), SUM(&l_cFreerooms), SUM(&l_cDefrooms) FOR cBuildId <> "0" AND ;
						NOT dlookup("building", "bu_buildng = " + sqlcnv(cBuildId, .T.),"bu_dontsum") ;
						TO l_nMax, l_nFree, l_nDef IN tmptblAvailab
				GO l_nRecno IN tmptblAvailab
				REPLACE &l_cMaxrooms WITH l_nMax, ;
						&l_cFreerooms WITH l_nFree, ;
						&l_cDefrooms WITH l_nDef ;
						IN tmptblAvailab
			ENDIF
		NEXT
		
		SELECT (l_nSelect)
	ENDPROC

	PROCEDURE setcaption
		LOCAL lcRT, lcComp, lcGuest
		
		lcRT = DLookUp("rtypedef", "rd_rdid = " + SqlCnv(this.oParams.Item("RoomType")), "rd_roomtyp")
		lcComp = this.oParams.Item("Company")
		lcGuest = this.oParams.Item("Guest")
		
		this.Caption = Str2Msg(GetLangText("RENT","TW_AVAILAB"), "%s", ;
				ALLTRIM(this.oEvent.ev_name)+" "+ALLTRIM(this.oEvent.ev_city), DTOC(this.oEvent.ei_from), DTOC(this.oEvent.ei_to)) + ;
				IIF(EMPTY(lcRT),""," "+GetLangText("RECURRES","TXT_RTYPE")+": "+lcRT) + ;
				IIF(EMPTY(lcComp),""," "+GetLangText("RESERVAT","T_COMPANY")+": "+lcComp) + ;
				IIF(EMPTY(lcGuest),""," "+GetLangText("RESERVAT","T_LNAME")+": "+lcGuest)
		
		this.grdRentAvailab.grcName.grdravheader1.Caption = ""
	ENDPROC

	PROCEDURE setgriddynamiccolor
	ENDPROC

	PROCEDURE grdRentAvailab.AfterRowColChange
		LPARAMETERS nColIndex
		IF USED("tblAvailab") AND RECNO("tblAvailab")=1
			SKIP 1 IN tblAvailab
		ENDIF
		this.ToolTipText = ALLTRIM(tblAvailab.cNote)
	ENDPROC

	PROCEDURE grdRentAvailab.columncount_assign
		LPARAMETERS vNewVal
		this.ColumnCount = vNewVal
	ENDPROC

	PROCEDURE grdRentAvailab.DblClick
		LOCAL l_nColIndex
		
		l_nColIndex = this.LeftColumn + this.RelativeColumn - 1
		thisform.OnCellOpen(l_nColIndex)
	ENDPROC

ENDDEFINE
