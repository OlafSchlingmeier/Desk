*--------------------------------------------------------------------------------------------------------------------------------------------------------
* (ES) AUTOGENERADO - ¡¡ATENCIÓN!! - ¡¡NO PENSADO PARA EJECUTAR!! USAR SOLAMENTE PARA INTEGRAR CAMBIOS Y ALMACENAR CON HERRAMIENTAS SCM!!
* (EN) AUTOGENERATED - ATTENTION!! - NOT INTENDED FOR EXECUTION!! USE ONLY FOR MERGING CHANGES AND STORING WITH SCM TOOLS!!
*--------------------------------------------------------------------------------------------------------------------------------------------------------
*< FOXBIN2PRG: Version="1.19" SourceFile="interfaceawaform.scx" /> (Solo para binarios VFP 9 / Only for VFP 9 binaries)
*
*
#INCLUDE "..\include\constdefines.h"

DEFINE CLASS dataenvironment AS dataenvironment 
 	*< CLASSDATA: Baseclass="dataenvironment" Timestamp="" Scale="" Uniqueid="" ClassIcon="2" />

	DataSource = .NULL.
	Height = 0
	Left = 0
	Name = "Dataenvironment"
	Top = 0
	Width = 0

ENDDEFINE

DEFINE CLASS frminterfaceawa AS tform OF "..\libs\main.vcx" 
 	*< CLASSDATA: Baseclass="form" Timestamp="" Scale="" Uniqueid="" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="Sh1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblPTT" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Sh2" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblPTV" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Sh3" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblINT" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="rn_pttcls1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblPttDescript" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="rn_ptvcls1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="rn_ptvcls2" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="rn_ptvcls3" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="rn_ptvcls4" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="rn_ptvcls5" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblPtvDescript" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chkGC" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chkGI" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="rn_intcls1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblIntPin" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdIntPin" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="rn_pin" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblIntDescript" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdsync" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdCancel" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdOK" UniqueID="" Timestamp="" />

	*<DefinedPropArrayMethod>
		*m: onsync
		*m: setifccaption
		*p: ccurresname
		*p: lgc
		*p: lgi
		*p: oresifcin
	*</DefinedPropArrayMethod>

	Caption = "frmInterfaceAWA"
	ccurresname = 
	ControlBox = .T.
	DataSession = 2
	DoCreate = .T.
	doini = .T.
	Height = 474
	Icon = ..\bitmap\icons\screwdriver.ico
	lgc = .F.
	lgi = .F.
	MaxButton = .F.
	MinButton = .F.
	Name = "frmInterfaceAWA"
	oresifcin = .NULL.
	Width = 406
	WindowType = 1

	ADD OBJECT 'chkGC' AS tcheckbox WITH ;
		Alignment = 0, ;
		AutoSize = .T., ;
		Caption = "GC", ;
		ControlSource = "thisform.lgc", ;
		Left = 336, ;
		Name = "chkGC", ;
		TabIndex = 51, ;
		Top = 29, ;
		ZOrderSet = 14
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="checkbox" />

	ADD OBJECT 'chkGI' AS tcheckbox WITH ;
		Alignment = 0, ;
		AutoSize = .T., ;
		Caption = "GI", ;
		ControlSource = "thisform.lgi", ;
		Left = 336, ;
		Name = "chkGI", ;
		TabIndex = 50, ;
		Top = 11, ;
		ZOrderSet = 14
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="checkbox" />

	ADD OBJECT 'cmdCancel' AS tcommandbutton WITH ;
		Cancel = .T., ;
		Caption = "cmdCancel", ;
		Left = 209, ;
		Name = "cmdCancel", ;
		TabIndex = 20, ;
		Top = 440, ;
		ZOrderSet = 20
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'cmdIntPin' AS tcommandbutton WITH ;
		Caption = "cmdIntPin", ;
		Height = 24, ;
		Left = 84, ;
		Name = "cmdIntPin", ;
		TabIndex = 13, ;
		Top = 336, ;
		Width = 60, ;
		ZOrderSet = 16
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'cmdOK' AS tcommandbutton WITH ;
		Caption = "cmdOK", ;
		Default = .F., ;
		Left = 113, ;
		Name = "cmdOK", ;
		TabIndex = 19, ;
		Top = 440, ;
		ZOrderSet = 19
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'cmdsync' AS tcommandbutton WITH ;
		Caption = "Sync.", ;
		Default = .T., ;
		Height = 24, ;
		Left = 336, ;
		Name = "cmdsync", ;
		TabIndex = 52, ;
		Top = 50, ;
		Width = 60, ;
		ZOrderSet = 19
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'lblINT' AS tlabel WITH ;
		Alignment = 1, ;
		Caption = "lblINT", ;
		FontBold = .T., ;
		FontSize = 14, ;
		ForeColor = 0,128,128, ;
		Height = 25, ;
		Left = 144, ;
		Name = "lblINT", ;
		TabIndex = 17, ;
		Top = 305, ;
		Width = 168, ;
		ZOrderSet = 5
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'lblIntDescript' AS tlabel WITH ;
		Caption = "lblIntDescript", ;
		FontBold = .T., ;
		Height = 60, ;
		Left = 24, ;
		Name = "lblIntDescript", ;
		TabIndex = 15, ;
		Top = 372, ;
		Width = 288, ;
		WordWrap = .T., ;
		ZOrderSet = 18
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'lblIntPin' AS tlabel WITH ;
		AutoSize = .T., ;
		Caption = "lblIntPin", ;
		Left = 24, ;
		Name = "lblIntPin", ;
		TabIndex = 12, ;
		Top = 339, ;
		ZOrderSet = 15
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'lblPTT' AS tlabel WITH ;
		Alignment = 1, ;
		Caption = "lblPTT", ;
		FontBold = .T., ;
		FontSize = 14, ;
		ForeColor = 0,128,128, ;
		Height = 25, ;
		Left = 144, ;
		Name = "lblPTT", ;
		TabIndex = 2, ;
		Top = 24, ;
		Width = 168, ;
		ZOrderSet = 1
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'lblPttDescript' AS tlabel WITH ;
		Caption = "lblPttDescript", ;
		FontBold = .T., ;
		Height = 60, ;
		Left = 24, ;
		Name = "lblPttDescript", ;
		TabIndex = 3, ;
		Top = 48, ;
		Width = 288, ;
		WordWrap = .T., ;
		ZOrderSet = 7
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'lblPTV' AS tlabel WITH ;
		Alignment = 1, ;
		Caption = "lblPTV", ;
		FontBold = .T., ;
		FontSize = 14, ;
		ForeColor = 0,128,128, ;
		Height = 25, ;
		Left = 144, ;
		Name = "lblPTV", ;
		TabIndex = 9, ;
		Top = 120, ;
		Width = 168, ;
		ZOrderSet = 3
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'lblPtvDescript' AS tlabel WITH ;
		Caption = "lblPtvDescript", ;
		FontBold = .T., ;
		Height = 60, ;
		Left = 24, ;
		Name = "lblPtvDescript", ;
		TabIndex = 10, ;
		Top = 240, ;
		Width = 288, ;
		WordWrap = .T., ;
		ZOrderSet = 13
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'rn_intcls1' AS tcheckbox WITH ;
		Alignment = 0, ;
		AutoSize = .T., ;
		Caption = "rn_intcls1", ;
		Left = 24, ;
		Name = "rn_intcls1", ;
		TabIndex = 11, ;
		Top = 303, ;
		ZOrderSet = 14
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="checkbox" />

	ADD OBJECT 'rn_pin' AS ttext WITH ;
		Format = "KR", ;
		Height = 23, ;
		InputMask = (REPLICATE("X",12)), ;
		Left = 144, ;
		Name = "rn_pin", ;
		TabIndex = 14, ;
		Top = 336, ;
		Width = 168, ;
		ZOrderSet = 17
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />

	ADD OBJECT 'rn_pttcls1' AS tcheckbox WITH ;
		Alignment = 0, ;
		AutoSize = .T., ;
		Caption = "rn_pttcls1", ;
		Left = 24, ;
		Name = "rn_pttcls1", ;
		TabIndex = 1, ;
		Top = 15, ;
		ZOrderSet = 6
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="checkbox" />

	ADD OBJECT 'rn_ptvcls1' AS tcheckbox WITH ;
		Alignment = 0, ;
		AutoSize = .T., ;
		Caption = "rn_ptvcls1", ;
		Left = 24, ;
		Name = "rn_ptvcls1", ;
		TabIndex = 4, ;
		Top = 111, ;
		ZOrderSet = 8
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="checkbox" />

	ADD OBJECT 'rn_ptvcls2' AS tcheckbox WITH ;
		Alignment = 0, ;
		AutoSize = .T., ;
		Caption = "rn_ptvcls2", ;
		Left = 24, ;
		Name = "rn_ptvcls2", ;
		TabIndex = 5, ;
		Top = 135, ;
		ZOrderSet = 9
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="checkbox" />

	ADD OBJECT 'rn_ptvcls3' AS tcheckbox WITH ;
		Alignment = 0, ;
		AutoSize = .T., ;
		Caption = "rn_ptvcls3", ;
		Left = 24, ;
		Name = "rn_ptvcls3", ;
		TabIndex = 6, ;
		Top = 159, ;
		ZOrderSet = 10
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="checkbox" />

	ADD OBJECT 'rn_ptvcls4' AS tcheckbox WITH ;
		Alignment = 0, ;
		AutoSize = .T., ;
		Caption = "rn_ptvcls4", ;
		Left = 24, ;
		Name = "rn_ptvcls4", ;
		TabIndex = 7, ;
		Top = 183, ;
		ZOrderSet = 11
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="checkbox" />

	ADD OBJECT 'rn_ptvcls5' AS tcheckbox WITH ;
		Alignment = 0, ;
		AutoSize = .T., ;
		Caption = "rn_ptvcls5", ;
		Left = 24, ;
		Name = "rn_ptvcls5", ;
		TabIndex = 8, ;
		Top = 207, ;
		ZOrderSet = 12
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="checkbox" />

	ADD OBJECT 'Sh1' AS sh WITH ;
		Height = 96, ;
		Left = 12, ;
		Name = "Sh1", ;
		Top = 12, ;
		Width = 312, ;
		ZOrderSet = 0
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="shape" />

	ADD OBJECT 'Sh2' AS sh WITH ;
		Height = 192, ;
		Left = 12, ;
		Name = "Sh2", ;
		Top = 108, ;
		Width = 312, ;
		ZOrderSet = 2
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="shape" />

	ADD OBJECT 'Sh3' AS sh WITH ;
		Height = 132, ;
		Left = 12, ;
		Name = "Sh3", ;
		Top = 300, ;
		Width = 312, ;
		ZOrderSet = 4
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="shape" />
	
	PROCEDURE Init
		LPARAMETERS tnRsId
		LOCAL i, lcCtrlName, lcWhere, lcurRpostIfc, lcurResName, lcSqlSelect
		
		DODEFAULT()
		
		TEXT TO lcSqlSelect TEXTMERGE NOSHOW PRETEXT 2 + 8
		SELECT rs_addrid, rs_compid, rs_noaddr, rs_lname, rs_fname, rs_apname, rs_sname, rs_status, rs_rsid, 
		     NVL(ad_lname,'') AS ad_lname, NVL(ad_fname,'') AS ad_fname, NVL(ap_lname,'') AS ap_lname, NVL(ap_fname,'') AS ap_fname
		     FROM reservat
		     LEFT JOIN address ON rs_addrid = ad_addrid
		     LEFT JOIN apartner ON rs_apid = ap_apid
		     WHERE rs_rsid = <<SqlCnv(tnRsId,.T.)>>
		ENDTEXT
		lcurResName = SqlCursor(lcSqlSelect)
		this.ccurresname = lcurResName
		this.Caption = GetLangText("KEYCARD1","T_CAPTION") + " " + GetReservatName(lcurResName, lcurResName, lcurResName)
		
		this.rn_pttcls1.Caption = GetLangText("INTERFAC", "TXT_PTT")
		this.rn_ptvcls1.Caption = GetLangText("INTERFAC", "TXT_PTV_CABLE")
		this.rn_ptvcls2.Caption = GetLangText("INTERFAC", "TXT_PTV_ADULT")
		this.rn_ptvcls3.Caption = GetLangText("INTERFAC", "TXT_PTV_VOD")
		this.rn_ptvcls4.Caption = GetLangText("INTERFAC", "TXT_PTV_INTERNET")
		this.rn_ptvcls5.Caption = GetLangText("INTERFAC", "TXT_PTV_MOVIE")
		this.rn_intcls1.Caption = GetLangText("INTERFAC", "TXT_INTERNET")
		this.lblPTT.Caption = GetLangText("MESSAGE","TXT_PTT")
		this.lblPTV.Caption = GetLangText("KEYCARD1","T_PAYTV")
		this.lblINT.Caption = GetLangText("KEYCARD1","TXT_STAT_INTERNET")
		this.lblIntPin.Caption = "PIN"
		this.cmdOK.Caption = GetLangText("COMMON", "TXT_OK")
		this.cmdCancel.Caption = GetLangText("COMMON", "TXT_CANCEL")
		this.cmdIntPin.Caption = STRTRAN(GetLangText("MANAGER","TXT_CREATE_IT"),"?")
		
		TEXT TO lcWhere TEXTMERGE NOSHOW PRETEXT 2 + 8
		rn_rsid = <<SqlCnv(tnRsId, .T.)>> AND rk_from <= <<SqlCnv(SysDate(), .T.)>> AND rk_to >= <<SqlCnv(SysDate(), .T.)>> AND NOT rk_deleted AND EMPTY(rk_dsetid)
		ENDTEXT
		
		TEXT TO cSqlSelect TEXTMERGE NOSHOW PRETEXT 2 + 8
		SELECT rk_setid, rk_from, rk_to, rk_pttcls, rk_ptvcls, rk_intcls, rn_rsid, rn_pin, rn_pttcls, rn_ptvcls, rn_intcls, ps_ratecod, rc_ratecod, rc_lang<<g_langnum>> AS rc_lang
		     FROM resifcin
		     INNER JOIN rpostifc ON rk_rsid = rn_rsid
		     LEFT JOIN post ON ps_setid = rk_setid
		     LEFT JOIN ratecode ON rc_ratecod+rc_roomtyp+DTOS(rc_fromdat)+rc_season = ps_ratecod
		     WHERE <<lcWhere>>
		     GROUP BY 1
		ENDTEXT
		lcurRpostIfc = SqlCursor(cSqlSelect)
		SCATTER MEMO NAME this.oResifcin
		SCAN
		     IF "1" $ rk_pttcls
		          FOR i = 1 TO 10
		               IF "1" = SUBSTR(rk_pttcls,i,1)
		                    this.oResifcin.rk_pttcls = STUFF(this.oResifcin.rk_pttcls,i,1,"1")
		               ENDIF
		          ENDFOR
		     ENDIF
		     IF "1" $ rk_ptvcls
		          FOR i = 1 TO 10
		               IF "1" = SUBSTR(rk_ptvcls,i,1)
		                    this.oResifcin.rk_ptvcls = STUFF(this.oResifcin.rk_ptvcls,i,1,"1")
		               ENDIF
		          ENDFOR
		     ENDIF
		     IF "1" $ rk_intcls
		          FOR i = 1 TO 10
		               IF "1" = SUBSTR(rk_intcls,i,1)
		                    this.oResifcin.rk_intcls = STUFF(this.oResifcin.rk_intcls,i,1,"1")
		               ENDIF
		          ENDFOR
		     ENDIF
		ENDSCAN
		IF RECCOUNT() = 0
		     this.SetAll("Enabled", .F.)
		     this.SetAll("Enabled", .T., "tLabel")
		     this.cmdCancel.Enabled = .T.
		     this.cmdsync.Enabled = .T.
		     this.chkGI.Enabled = .T.
		     this.chkGC.Enabled = .T.
		ELSE
		     FOR i = 1 TO 1
		          lcCtrlName = "rn_pttcls" + TRANSFORM(i)
		          IF "1" <> SUBSTR(this.oResifcin.rk_pttcls,i,1)
		               this.&lcCtrlName..Enabled = .F.
		          ENDIF
		          this.&lcCtrlName..Value = INT(VAL(SUBSTR(this.oResifcin.rn_pttcls,i,1)))
		     ENDFOR
		     FOR i = 1 TO 5
		          lcCtrlName = "rn_ptvcls" + TRANSFORM(i)
		          IF "1" <> SUBSTR(this.oResifcin.rk_ptvcls,i,1)
		               this.&lcCtrlName..Enabled = .F.
		          ENDIF
		          this.&lcCtrlName..Value = INT(VAL(SUBSTR(this.oResifcin.rn_ptvcls,i,1)))
		     ENDFOR
		     FOR i = 1 TO 1
		          lcCtrlName = "rn_intcls" + TRANSFORM(i)
		          IF "1" <> SUBSTR(this.oResifcin.rk_intcls,i,1)
		               this.&lcCtrlName..Enabled = .F.
		          ENDIF
		          this.&lcCtrlName..Value = INT(VAL(SUBSTR(this.oResifcin.rn_intcls,i,1)))
		     ENDFOR
		     IF NOT "1" $ this.oResifcin.rk_intcls
		          this.rn_pin.Enabled = .F.
		          this.cmdIntPin.Enabled = .F.
		     ENDIF
		ENDIF
		this.rn_pin.ControlSource = [thisform.oResifcin.rn_pin]
		this.SetIfcCaption("ptt")
		this.SetIfcCaption("ptv")
		this.SetIfcCaption("int")
	ENDPROC

	PROCEDURE KeyPress
		LPARAMETERS nKeyCode, nShiftAltCtrl
		
		IF nKeyCode = 27
		     this.OnClose()
		ENDIF
	ENDPROC

	PROCEDURE onclose
		this.Release()
	ENDPROC

	PROCEDURE onsave
		LOCAL i, lcCtrlName, loCaResifcin
		
		FOR i = 1 TO 1
		     lcCtrlName = "rn_pttcls" + TRANSFORM(i)
		     IF this.&lcCtrlName..Enabled
		          this.oResifcin.rn_pttcls = STUFF(this.oResifcin.rn_pttcls,i,1,TRANSFORM(this.&lcCtrlName..Value))
		     ENDIF
		ENDFOR
		this.rn_pttcls1.Enabled = .F.
		FOR i = 1 TO 5
		     lcCtrlName = "rn_ptvcls" + TRANSFORM(i)
		     IF this.&lcCtrlName..Enabled
		          this.oResifcin.rn_ptvcls = STUFF(this.oResifcin.rn_ptvcls,i,1,TRANSFORM(this.&lcCtrlName..Value))
		     ENDIF
		ENDFOR
		FOR i = 1 TO 1
		     lcCtrlName = "rn_intcls" + TRANSFORM(i)
		     IF this.&lcCtrlName..Enabled
		          this.oResifcin.rn_intcls = STUFF(this.oResifcin.rn_intcls,i,1,TRANSFORM(this.&lcCtrlName..Value))
		     ENDIF
		ENDFOR
		
		OpenFile(,"resifcin",,,5)
		loCaResifcin = CREATEOBJECT("caResifcin")
		loCaResifcin.cFilterClause = "rn_rsid = " + SqlCnv(this.oResifcin.rn_rsid, .T.)
		loCaResifcin.CursorFill()
		
		SELECT (loCaResifcin.Alias)
		GATHER NAME this.oResifcin FIELDS rn_pttcls, rn_ptvcls, rn_intcls, rn_pin MEMO
		loCaResifcin.DoTableUpdate(.T.)
	ENDPROC

	PROCEDURE onsync
		LOCAL l_nNewVal, l_nRsId
		l_nRsId = EVALUATE(this.ccurresname+".rs_rsid")
		
		DO CASE
			CASE this.lgi AND this.lgc
				l_nNewVal = 3
			CASE this.lgi
				l_nNewVal = 1
			CASE this.lgc
				l_nNewVal = 2
			OTHERWISE
				l_nNewVal = 0
		ENDCASE
		
		IF l_nNewVal <> 0
			sqlupdate("resifcin","rn_rsid = " + sqlcnv(l_nRsId,.T.),"rn_sync = " + TRANSFORM(l_nNewVal))
			alert("OK!")
		ENDIF
		
		RETURN .T.
	ENDPROC

	PROCEDURE QueryUnload
		this.OnClose()
		NODEFAULT
	ENDPROC

	PROCEDURE setifccaption
		LPARAMETERS tcType
		LOCAL i, lcLabel, llIfcOn, llIfcActive, lcRkClass, lcRnClass
		
		lcLabel = "lbl" + tcType + "Descript"
		lcRkClass = "rk_" + tcType + "cls"
		lcRnClass = "rn_" + tcType + "cls"
		llIfcOn = ("1" $ this.oResifcin.&lcRkClass)
		
		FOR i = 1 TO IIF(UPPER(tcType) = "PTV",5,1)
		     IF "1" = SUBSTR(this.oResifcin.&lcRkClass,i,1) AND "1" = SUBSTR(this.oResifcin.&lcRnClass,i,1)
		          llIfcActive = .T.
		          EXIT
		     ENDIF
		ENDFOR
		
		this.&lcLabel..Caption = Str2Msg(IIF(NOT llIfcOn, GetLangText("INTERFAC", "TXT_NOT_ACTIVE"), ;
		     GetLangText("INTERFAC", IIF(llIfcActive, "TXT_ACTIVE", "TXT_BLOCKED")) + ;
		     GetLangText("INTERFAC", "TXT_ACTIVE_PACK")), "%s", ALLTRIM(NVL(this.oResifcin.rc_lang,this.oResifcin.ps_ratecod)), DTOC(this.oResifcin.rk_from), DTOC(this.oResifcin.rk_to))
		this.&lcLabel..ForeColor = ICASE(NOT llIfcOn, RGB(0,0,255), llIfcActive, RGB(0,192,0), RGB(255,0,0))
	ENDPROC

	PROCEDURE cmdCancel.Click
		thisform.OnClose()
	ENDPROC

	PROCEDURE cmdIntPin.Click
		this.Parent.rn_pin.Value = GeneratePin(this.Parent.rn_pin.Value)
		this.Parent.rn_pin.Refresh()
	ENDPROC

	PROCEDURE cmdOK.Click
		thisform.OnSave()
		thisform.OnClose()
	ENDPROC

	PROCEDURE cmdsync.Click
		thisform.OnSync()
	ENDPROC

ENDDEFINE
