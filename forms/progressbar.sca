*--------------------------------------------------------------------------------------------------------------------------------------------------------
* (ES) AUTOGENERADO - ¡¡ATENCIÓN!! - ¡¡NO PENSADO PARA EJECUTAR!! USAR SOLAMENTE PARA INTEGRAR CAMBIOS Y ALMACENAR CON HERRAMIENTAS SCM!!
* (EN) AUTOGENERATED - ATTENTION!! - NOT INTENDED FOR EXECUTION!! USE ONLY FOR MERGING CHANGES AND STORING WITH SCM TOOLS!!
*--------------------------------------------------------------------------------------------------------------------------------------------------------
*< FOXBIN2PRG: Version="1.19" SourceFile="progressbar.scx" /> (Solo para binarios VFP 9 / Only for VFP 9 binaries)
*
*
DEFINE CLASS dataenvironment AS dataenvironment 
 	*< CLASSDATA: Baseclass="dataenvironment" Timestamp="" Scale="" Uniqueid="" ClassIcon="1" />

	DataSource = .NULL.
	Height = 0
	Left = 0
	Name = "Dataenvironment"
	Top = 0
	Width = 0

ENDDEFINE

DEFINE CLASS form1 AS form 
 	*< CLASSDATA: Baseclass="form" Timestamp="" Scale="" Uniqueid="" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="pbProgressBar1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblComment" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pbProgressBar2" UniqueID="" Timestamp="" />

	*<DefinedPropArrayMethod>
		*m: complete
		*m: update
		*p: ccaption
		*p: lautoyieldwasoff
		*p: lmultiple
		*p: nbasis
		*p: ncurrtask
		*p: ninterval
		*p: nlasttask
		*a: atasks[1,3]
	*</DefinedPropArrayMethod>

	AutoCenter = .T.
	BorderStyle = 2
	Caption = "ProgressBar"
	DoCreate = .T.
	Height = 90
	MaxButton = .F.
	MinButton = .F.
	Name = "Form1"
	Width = 357

	ADD OBJECT 'lblComment' AS label WITH ;
		Caption = "", ;
		Left = 12, ;
		Name = "lblComment", ;
		Top = 12, ;
		Width = 333
		*< END OBJECT: BaseClass="label" />

	ADD OBJECT 'pbProgressBar1' AS _progressbar WITH ;
		Left = 12, ;
		Name = "pbProgressBar1", ;
		Top = 36, ;
		lblPercentage.Name = "lblPercentage", ;
		lblPercentage2.Name = "lblPercentage2", ;
		Shape1.Name = "Shape1", ;
		Shape2.Name = "Shape2", ;
		Shape3.Name = "Shape3", ;
		Shape4.Name = "Shape4", ;
		Shape5.Name = "Shape5", ;
		shpThermBar.Name = "shpThermBar"
		*< END OBJECT: ClassLib="..\common\ffc\_therm.vcx" BaseClass="container" />

	ADD OBJECT 'pbProgressBar2' AS _progressbar WITH ;
		Left = 12, ;
		Name = "pbProgressBar2", ;
		Top = 60, ;
		lblPercentage.Name = "lblPercentage", ;
		lblPercentage2.Name = "lblPercentage2", ;
		shape1.Name = "shape1", ;
		shape2.Name = "shape2", ;
		Shape3.Name = "Shape3", ;
		Shape4.Name = "Shape4", ;
		Shape5.Name = "Shape5", ;
		shpThermBar.Name = "shpThermBar"
		*< END OBJECT: ClassLib="..\common\ffc\_therm.vcx" BaseClass="container" />
	
	PROCEDURE complete
		LPARAMETERS lp_nBar
		
		this.pbProgressBar2.Complete()
		this.Release()
		
	ENDPROC

	PROCEDURE Init
		LPARAMETERS lp_cCaption, lp_aTasks
		LOCAL l_nBasis
		EXTERNAL ARRAY lp_aTasks
		this.cCaption = lp_cCaption
		this.nLastTask = ALEN(lp_aTasks,1)
		DIMENSION this.aTasks(this.nLastTask, 3)
		l_nBasis = 0
		FOR i = 1 TO this.nLastTask
			this.aTasks[i,1] = lp_aTasks[i,1]
			this.aTasks[i,2] = lp_aTasks[i,2]
			this.aTasks[i,3] = l_nBasis
			l_nBasis = l_nBasis + this.aTasks[i,1]
		ENDFOR
		IF this.nLastTask > 1
			this.lMultiple = .T.
		ENDIF
		this.nCurrTask = 1
		this.lblComment.Caption = this.aTasks[this.nCurrTask,2]
		IF this.lMultiple
			this.pbProgressBar1.Reset(this.aTasks[this.nCurrTask,1])
		ELSE
			this.pbProgressBar1.Visible = .F.
			this.pbProgressBar2.Top = this.pbProgressBar2.Top - 24
			this.Height = this.Height - 24
		ENDIF
		this.pbProgressBar2.Reset(l_nBasis)
		this.Caption = this.cCaption + " " + this.pbProgressBar2.lblPercentage.Caption
		
	ENDPROC

	PROCEDURE Load
		IF NOT _vfp.AutoYield
			this.lautoyieldwasoff = .T.
			_vfp.AutoYield = .T.
		ENDIF
	ENDPROC

	PROCEDURE QueryUnload
		NODEFAULT
		this.Complete()
	ENDPROC

	PROCEDURE Unload
		IF this.lautoyieldwasoff
			_vfp.AutoYield = .F.
		ENDIF
	ENDPROC

	PROCEDURE update
		LPARAMETERS lp_nProgress, lp_nTask
		IF EMPTY(lp_nTask) OR (TYPE("lp_nTask") <> "N")
			lp_nTask = 1
		ELSE
			lp_nTask = MAX(lp_nTask,1)
			lp_nTask = MIN(lp_nTask,this.nLastTask)
		ENDIF
		this.pbProgressBar2.Update(this.aTasks[lp_nTask,3]+lp_nProgress)
		this.Caption = this.cCaption + " " + this.pbProgressBar2.lblPercentage.Caption
		IF this.lMultiple
			IF this.nCurrTask <> lp_nTask
				this.pbProgressBar1.Complete(.T.)
				this.nCurrTask = lp_nTask
				this.lblComment.Caption = this.aTasks[this.nCurrTask,2]
				this.pbProgressBar1.Reset(this.aTasks[this.nCurrTask,1])
			ENDIF
			this.pbProgressBar1.Update(lp_nProgress)
		ENDIF
		
	ENDPROC

	PROCEDURE pbProgressBar1.complete
		LPARAMETERS tlNoWait
		local iSeconds
		this.Update(iif(this.iBasis <> 0, this.iBasis, 100))
		IF NOT tlNoWait
			m.iSeconds=seconds() + .5
			do while seconds() < m.iSeconds
				&& wait half a sec
			enddo
		ENDIF
	ENDPROC

ENDDEFINE
