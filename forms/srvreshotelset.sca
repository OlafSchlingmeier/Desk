*--------------------------------------------------------------------------------------------------------------------------------------------------------
* (ES) AUTOGENERADO - ¡¡ATENCIÓN!! - ¡¡NO PENSADO PARA EJECUTAR!! USAR SOLAMENTE PARA INTEGRAR CAMBIOS Y ALMACENAR CON HERRAMIENTAS SCM!!
* (EN) AUTOGENERATED - ATTENTION!! - NOT INTENDED FOR EXECUTION!! USE ONLY FOR MERGING CHANGES AND STORING WITH SCM TOOLS!!
*--------------------------------------------------------------------------------------------------------------------------------------------------------
*< FOXBIN2PRG: Version="1.19" SourceFile="srvreshotelset.scx" /> (Solo para binarios VFP 9 / Only for VFP 9 binaries)
*
*
#INCLUDE "..\include\constdefines.h"

DEFINE CLASS dataenvironment AS dataenvironment 
 	*< CLASSDATA: Baseclass="dataenvironment" Timestamp="" Scale="" Uniqueid="" ClassIcon="1" />

	DataSource = .NULL.
	Height = 200
	Left = 1
	Name = "Dataenvironment"
	Top = 220
	Width = 520

ENDDEFINE

DEFINE CLASS frmreshotelset AS tform OF "..\libs\main.vcx" 
 	*< CLASSDATA: Baseclass="form" Timestamp="" Scale="" Uniqueid="" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="lblRoomname" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblRoomtype" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cboRoomtype" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cboRoomname" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdOK" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdCancel" UniqueID="" Timestamp="" />

	*<DefinedPropArrayMethod>
		*p: oparam
	*</DefinedPropArrayMethod>

	aligntopedges = .T.
	Caption = "Set room type to moved reservation"
	ControlBox = .T.
	DoCreate = .T.
	Height = 112
	Icon = ..\bitmap\icons\binoculr.ico
	MaxButton = .F.
	MinButton = .F.
	Name = "frmResHotelSet"
	oparam = .NULL.
	Width = 312
	WindowType = 1

	ADD OBJECT 'cboRoomname' AS cboroomname WITH ;
		ColumnWidths = "100,70,150", ;
		corder = c_hotcode+rm_rmname, ;
		Left = 132, ;
		Name = "cboRoomname", ;
		RowSourceType = 6, ;
		Top = 36, ;
		Width = 168, ;
		ZOrderSet = 7
		*< END OBJECT: ClassLib="..\libs\cit_ctrl.vcx" BaseClass="combobox" />

	ADD OBJECT 'cboRoomtype' AS cboroomtypehot WITH ;
		lappendblank = .F., ;
		Left = 132, ;
		Name = "cboRoomtype", ;
		Top = 12, ;
		Width = 168, ;
		ZOrderSet = 3
		*< END OBJECT: ClassLib="..\libs\cit_ctrl.vcx" BaseClass="combobox" />

	ADD OBJECT 'cmdCancel' AS tcommandbutton WITH ;
		Cancel = .T., ;
		Caption = "cmdCancel", ;
		Left = 162, ;
		Name = "cmdCancel", ;
		Top = 72, ;
		ZOrderSet = 17
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'cmdOK' AS tcommandbutton WITH ;
		Caption = "cmdOK", ;
		Left = 66, ;
		Name = "cmdOK", ;
		Top = 72, ;
		ZOrderSet = 16
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'lblRoomname' AS tlabel WITH ;
		AutoSize = .T., ;
		Caption = "lblRoomname", ;
		Left = 12, ;
		Name = "lblRoomname", ;
		Top = 39, ;
		Width = 81, ;
		ZOrderSet = 6
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'lblRoomtype' AS tlabel WITH ;
		AutoSize = .T., ;
		Caption = "lblRoomtype", ;
		Left = 12, ;
		Name = "lblRoomtype", ;
		Top = 15, ;
		Width = 71, ;
		ZOrderSet = 2
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />
	
	PROCEDURE assigncaption
		this.Caption = GetLangText("RESERVAT","TW_RESHOTELSET")
		this.lblRoomname.Caption = GetLangText("PLAN","T_ROOMNUM")
		this.lblRoomtype.Caption = GetLangText("PLAN","T_ROOMTYPE")
		this.cmdOK.Caption = GetLangText("COMMON","TXT_OK")
		this.cmdCancel.Caption = GetLangText("COMMON","TXT_CANCEL")
	ENDPROC

	PROCEDURE Init
		LPARAMETERS toParam
		
		this.oParam = toParam
		this.oParam.cRoomtype = ""
		IF EMPTY(thisform.oParam.cRoomnum)
			this.lblRoomname.Visible = .F.
			this.cboRoomname.Visible = .F.
			this.cboRoomtype.ZOrder(1)
		ELSE
			this.oParam.cRoomnum = ""
		ENDIF
		
		this.cboRoomtype.cHotel = this.oParam.cHotel
		this.cboRoomtype.ControlSource = [thisform.oParam.cRoomtype]
		this.cboRoomname.ControlSource = [thisform.oParam.cRoomnum]
		
		this.AssignCaption()
		DODEFAULT()
	ENDPROC

	PROCEDURE KeyPress
		LPARAMETERS nKeyCode, nShiftAltCtrl
		
		IF nKeyCode = 27
			NODEFAULT
			this.OnClose()
		ENDIF
	ENDPROC

	PROCEDURE onclose
		this.Release()
	ENDPROC

	PROCEDURE QueryUnload
		NODEFAULT
		this.OnClose()
	ENDPROC

	PROCEDURE cboRoomname.Destroy
		*
	ENDPROC

	PROCEDURE cboRoomname.GotFocus
		LOCAL lcFilter
		
		DO CASE
			CASE NOT EMPTY(thisform.oParam.cRoomtype)
				lcFilter = "EMPTY(rm_rmname) OR c_hotcode = " + SqlCnv(PADR(thisform.cboRoomtype.cHotel,10),.T.) + " AND rm_roomtyp = " + SqlCnv(PADR(thisform.oParam.cRoomtype,4),.T.)
			CASE NOT EMPTY(thisform.cboRoomtype.cHotel)
				lcFilter = "EMPTY(rm_rmname) OR c_hotcode = " + SqlCnv(PADR(thisform.cboRoomtype.cHotel,10),.T.)
			OTHERWISE
				lcFilter = ""
		ENDCASE
		SET FILTER TO &lcFilter IN (this.cCursorName)
		
		this.Requery()
	ENDPROC

	PROCEDURE cboRoomname.Init
		this.AddProperty("cHotel", "")
		this.cCursorName = SYS(2015)
		
		TEXT TO this.cSql TEXTMERGE NOSHOW PRETEXT 2 + 8
		SELECT room_hot.*, rm_lang<<g_langnum>> AS rm_lang, rt_group, rd_roomtyp, CAST('' AS Char(21)) AS rm_rmtype, CAST('' AS Char(10)) AS c_hotcode FROM room_hot
			INNER JOIN roomtype_hot ON rt_roomtyp = rm_roomtyp
			INNER JOIN rtypedef_hot ON rd_rdid = rt_rdid
			ORDER BY rm_rmname
		ENDTEXT
		
		this.cRowSource = "rm_rmname,rm_rmtype,rm_lang,rm_roomnum"
		
		tCombobox::Init()
		
		this.RequeryCursor()
		
		RETURN .T.
	ENDPROC

	PROCEDURE cboRoomname.InteractiveChange
		this.cHotel = IIF(EMPTY(this.Value), "", EVALUATE(this.cCursorName + ".c_hotcode"))
	ENDPROC

	PROCEDURE cboRoomname.Requery
		*
	ENDPROC

	PROCEDURE cboRoomname.requerycursor
		LPARAMETERS lp_cRoomType
		LOCAL lcCursor, lnSelect, lcSql, lcTag, lcTablePath, llSourceCursorUsed
		
		lnSelect = SELECT()
		
		this.RowSource = ""
		
		llSourceCursorUsed = USED(this.cCursorName)
		IF llSourceCursorUsed
			ZAP IN (this.cCursorName)
		ENDIF
		
		lcSql = this.cSql + IIF(EMPTY(this.cWhere), "", " WHERE " + this.cWhere)
		SELECT hotel
		SCAN FOR NOT ho_mainsrv
			lcTablePath = FNGetMPDataPath(ho_path)
			OpenFileDirect(,"room","room_hot",lcTablePath)
			OpenFileDirect(,"roomtype","roomtype_hot",lcTablePath)
			OpenFileDirect(,"rtypedef","rtypedef_hot",lcTablePath)
			IF USED(this.cCursorName)
				lcCursor = SqlCursor(lcSql, lcCursor,,,,,,.T.)
				REPLACE c_hotcode WITH hotel.ho_hotcode ALL
				SELECT (this.cCursorName)
				APPEND FROM DBF(lcCursor)
			ELSE
				SqlCursor(lcSql, this.cCursorName,,,,,,.T.)
				REPLACE c_hotcode WITH hotel.ho_hotcode ALL
			ENDIF
			DClose("room_hot")
			DClose("roomtype_hot")
			DClose("rtypedef_hot")
			SELECT hotel
		ENDSCAN
		DClose(lcCursor)
		
		SELECT (this.cCursorName)
		REPLACE rm_rmtype WITH ALLTRIM(rd_roomtyp) + " " + ALLTRIM(c_hotcode) ALL
		IF this.lAppendBlank
			APPEND BLANK
		ENDIF
		IF NOT EMPTY(this.cOrder) AND NOT llSourceCursorUsed
			lcTag = this.cOrder
			INDEX ON &lcTag TAG TAG1
		ENDIF
		
		this.RowSource = this.cCursorName + "." + this.cRowSource
		
		SELECT (lnSelect)
		
		RETURN .T.
	ENDPROC

	PROCEDURE cmdCancel.Click
		thisform.OnClose()
	ENDPROC

	PROCEDURE cmdOK.Click
		thisform.oParam.cHotel = UPPER(ALLTRIM(thisform.cboRoomtype.cHotel))
		thisform.oParam.lOK = .T.
		thisform.OnClose()
	ENDPROC

ENDDEFINE
