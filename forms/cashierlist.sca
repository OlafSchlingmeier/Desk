*--------------------------------------------------------------------------------------------------------------------------------------------------------
* (ES) AUTOGENERADO - ¡¡ATENCIÓN!! - ¡¡NO PENSADO PARA EJECUTAR!! USAR SOLAMENTE PARA INTEGRAR CAMBIOS Y ALMACENAR CON HERRAMIENTAS SCM!!
* (EN) AUTOGENERATED - ATTENTION!! - NOT INTENDED FOR EXECUTION!! USE ONLY FOR MERGING CHANGES AND STORING WITH SCM TOOLS!!
*--------------------------------------------------------------------------------------------------------------------------------------------------------
*< FOXBIN2PRG: Version="1.19" SourceFile="cashierlist.scx" /> (Solo para binarios VFP 9 / Only for VFP 9 binaries)
*
*
DEFINE CLASS dataenvironment AS dataenvironment 
 	*< CLASSDATA: Baseclass="dataenvironment" Timestamp="" Scale="" Uniqueid="" ClassIcon="2" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="Cursor1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor4" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor5" UniqueID="" Timestamp="" />

	AutoOpenTables = .F.
	DataSource = .NULL.
	Height = 284
	Left = 1
	Name = "Dataenvironment"
	Top = 220
	Width = 577

	ADD OBJECT 'Cursor1' AS cursor WITH ;
		Alias = "paymetho", ;
		CursorSource = ..\data\paymetho.dbf, ;
		Height = 90, ;
		Left = 3, ;
		Name = "Cursor1", ;
		Top = 4, ;
		Width = 110
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor4' AS cursor WITH ;
		Alias = "post", ;
		CursorSource = ..\data\post.dbf, ;
		Height = 90, ;
		Left = 387, ;
		Name = "Cursor4", ;
		Top = 6, ;
		Width = 110
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor5' AS cursor WITH ;
		Alias = "cashier", ;
		CursorSource = ..\data\cashier.dbf, ;
		Height = 90, ;
		Left = 10, ;
		Name = "Cursor5", ;
		Top = 140, ;
		Width = 110
		*< END OBJECT: BaseClass="cursor" />

ENDDEFINE

DEFINE CLASS frmcashierlist AS tform OF "..\libs\main.vcx" 
 	*< CLASSDATA: Baseclass="form" Timestamp="" Scale="" Uniqueid="" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="grdList" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grdList.Column1.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grdList.Column1.Tbgrid1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grdList.Column2.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grdList.Column2.Tbgrid1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdClose" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdToIn" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdFromOut" UniqueID="" Timestamp="" />

	*<DefinedPropArrayMethod>
		*m: cashinout
		*m: createpostcursor
		*m: printbill
		*m: tofrombank
		*p: ccurprintpost
		*p: creason
		*p: ctype
		*p: lok
		*p: namount
		*p: nkontonr
	*</DefinedPropArrayMethod>

	Caption = "frmcashierList"
	ControlBox = .T.
	DataSession = 2
	DoCreate = .T.
	doini = .T.
	doiniopencommontables = .T.
	formname = frmcashierList
	Height = 252
	Icon = ..\bitmap\icons\note01.ico
	MaxButton = .F.
	Name = "frmcashierList"
	nkontonr = 0
	Width = 372

	ADD OBJECT 'cmdClose' AS tcommandbutton WITH ;
		Caption = "cmdClose", ;
		Left = 48, ;
		Name = "cmdClose", ;
		Top = 216
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'cmdFromOut' AS tcommandbutton WITH ;
		Caption = "cmdFromOut", ;
		Left = 240, ;
		Name = "cmdFromOut", ;
		Top = 216
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'cmdToIn' AS tcommandbutton WITH ;
		Caption = "cmdToIn", ;
		Left = 144, ;
		Name = "cmdToIn", ;
		Top = 216
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'grdList' AS tgrid WITH ;
		ColumnCount = 2, ;
		DeleteMark = .F., ;
		GridLines = 2, ;
		Height = 204, ;
		Name = "grdList", ;
		Panel = 1, ;
		RecordMark = .F., ;
		ScrollBars = 2, ;
		Width = 372, ;
		Column1.Name = "Column1", ;
		Column1.Width = 114, ;
		Column2.Name = "Column2", ;
		Column2.Width = 234
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="grid" />

	ADD OBJECT 'grdList.Column1.Header1' AS header WITH ;
		Caption = "Header1", ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'grdList.Column1.Tbgrid1' AS tbgrid WITH ;
		Left = 35, ;
		Name = "Tbgrid1", ;
		Top = 47
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />

	ADD OBJECT 'grdList.Column2.Header1' AS header WITH ;
		Caption = "Header1", ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'grdList.Column2.Tbgrid1' AS tbgrid WITH ;
		Left = 99, ;
		Name = "Tbgrid1", ;
		Top = 35
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />
	
	PROCEDURE Activate
		DO childtitle WITH this.Caption
	ENDPROC

	PROCEDURE assigncaption
		WITH this
			.cmdClose.Caption = GetLangText("COMMON","TXT_CLOSE")
			DO CASE
			CASE .cType == "BANK"
				.Caption = GetLangText("CASHIER","TW_TOFROMBANK")
				.cmdToIn.Caption = GetLangText("CASHIER","TXT_TOBANK")
				.cmdFromOut.Caption = GetLangText("CASHIER","TXT_FROMBANK")
			CASE .cType == "CASH"
				.Caption = GetLangText("CASHIER","TW_CASHINOUT")
				.cmdToIn.Caption = GetLangText("CASHIER","TXT_CASHIN")
				.cmdFromOut.Caption = GetLangText("CASHIER","TXT_CASHOUT")
			ENDCASE
		ENDWITH
	ENDPROC

	PROCEDURE cashinout
		LPARAMETERS lp_nSign, lp_cTitle
		LOCAL l_ncarec
		LOCAL l_nAmount, l_cReason
		DO FORM "forms\cashierDlg" WITH lp_cTitle, thisform
		IF thisform.lOK
			l_nAmount = thisform.nAmount
			l_cReason = thisform.cReason
			this.CreatePostCursor()
			SELECT poSt
			SCATTER BLANK MEMVAR
			M.ps_paynum = paYmetho.pm_paynum
			M.ps_units = -lp_nSign*l_nAmount
			M.ps_price = IIF(EMPTY(paymetho.pm_rate), 1.00, paymetho.pm_rate)
			M.ps_supplem = l_cReason
			M.ps_reserid = 0.300
			M.ps_origid = 0.300
			M.ps_date = sySdate()
			M.ps_time = TIME()
			M.ps_amount = lp_nSign*ROUND(l_nAmount*paYmetho.pm_calcrat, 2)
			M.ps_userid = cUserid
			M.ps_cashier = g_Cashier
			M.ps_currtxt = ''
			= cuRrcnv(M.ps_paynum,M.ps_units,0,0,@M.ps_currtxt)
			M.ps_postid = nextid('Post')
			M.ps_finacct = this.nkontonr
			INSERT INTO Post FROM MEMVAR
			FLUSH
			INSERT INTO (this.cCurprintpost) FROM MEMVAR
			IF lp_nSign < 0
				this.printbill("CASHIN")
			ELSE
				this.printbill("CASHOUT")
			ENDIF
			DO alert WITH GetLangText("CASHIER","TA_CASHINOUTDONE")
		ENDIF
		RETURN .T.
	ENDPROC

	PROCEDURE createpostcursor
		IF USED(this.cCurprintpost)
			USE IN (this.cCurprintpost)
		ENDIF
		SELECT * FROM post WHERE .F. INTO CURSOR (this.cCurprintpost) READWRITE
		RETURN .T.
	ENDPROC

	PROCEDURE Destroy
		DODEFAULT()
		this.Visible = .F.
		DO childtitle WITH ""
	ENDPROC

	PROCEDURE Init
		LPARAMETERS lp_cType
		DODEFAULT()
		
		this.ctype = lp_cType
		this.assigncaption()
		this.cCurprintpost = SYS(2015)
	ENDPROC

	PROCEDURE KeyPress
		LPARAMETERS nKeyCode, nShiftAltCtrl
		IF nKeyCode == 27
			NODEFAULT
			this.Release()
		ENDIF
	ENDPROC

	PROCEDURE printbill
		LPARAMETERS lp_cTitle
		PBCashierListPrintBill(lp_cTitle, this.cCurPrintPost)
		
		RETURN .T.
	ENDPROC

	PROCEDURE tofrombank
		LPARAMETERS lp_nSign, lp_cTitle
		LOCAL l_ncarec
		LOCAL l_nAmount, l_cReason
		DO FORM "forms\cashierDlg" WITH lp_cTitle, thisform
		IF thisform.lOK
			l_nAmount = thisform.nAmount
			l_cReason = thisform.cReason
			this.Createpostcursor()
			SELECT poSt
			SCATTER BLANK MEMVAR
			M.ps_paynum = paYmetho.pm_paynum
			M.ps_units = -lp_nSign*l_nAmount
			M.ps_price = IIF(EMPTY(paYmetho.pm_rate), 1.00, paYmetho.pm_rate)
			M.ps_supplem = l_cReason
			M.ps_reserid = 0.400
			M.ps_origid = 0.400
			M.ps_date = sySdate()
			M.ps_time = TIME()
			M.ps_amount = lp_nSign*ROUND(l_nAmount*paYmetho.pm_calcrat, 2)
			M.ps_userid = cuSerid
			M.ps_cashier = g_Cashier
			M.ps_currtxt = ''
			= currcnv(M.ps_paynum,M.ps_units,0,0,@M.ps_currtxt)
			M.ps_postid = nextid('Post')
			INSERT INTO Post FROM MEMVAR
			FLUSH
			INSERT INTO (this.cCurprintpost) FROM MEMVAR
			M.ps_amount = -M.ps_amount
			M.ps_units = -M.ps_units
			M.ps_supplem = l_cReason
			M.ps_cashier = 99
			M.ps_postid = nextid('Post')
			INSERT INTO Post FROM MEMVAR
			FLUSH
			INSERT INTO (this.cCurprintpost) FROM MEMVAR
			SELECT caShier
			l_ncarec = RECNO()
			LOCATE ALL FOR ca_number=99
			IF NOT FOUND()
				APPEND BLANK
				REPLACE ca_number WITH 99, ca_name WITH "Housebank", ca_opmax  ;
					WITH 99
				FLUSH
			ENDIF
			IF NOT ca_isopen
				REPLACE ca_isopen WITH .T., ca_opdate WITH sySdate(),  ;
					ca_optime WITH TIME()
				FLUSH
			ENDIF
			GOTO l_ncarec
			IF lp_nSign > 0
				this.printbill("TOBANK")
			ELSE
				this.printbill("FROMBANK")
			ENDIF
			alErt(GetLangText("CASHIER","TA_TOFROMBANKDONE"))
		ENDIF
		RETURN .T.
	ENDPROC

	PROCEDURE Unload
		SELECT paymetho
		GOTO TblCashList.nRecNO
		IF paymetho.pm_opendrw = .T.
			=drwopen()
		ENDIF
		DODEFAULT()
	ENDPROC

	PROCEDURE cmdClose.Click
		thisForm.release()
	ENDPROC

	PROCEDURE cmdFromOut.Click
		GOTO tblCashList.nRecNo IN paymetho
		DO CASE
		CASE thisform.ctype == "BANK"
			thisform.tofrombank(-1, GetLangText("CASHIER","TW_FROMBANK"))
		CASE thisform.ctype == "CASH"
			thisform.cashinout(1, GetLangText("CASHIER","TW_CASHOUT"))
		ENDCASE
	ENDPROC

	PROCEDURE cmdToIn.Click
		GOTO tblCashList.nRecNo IN paymetho
		DO CASE
		CASE thisform.ctype == "BANK"
			thisform.tofrombank(1, GetLangText("CASHIER","TW_TOBANK"))
		CASE thisform.ctype == "CASH"
			thisform.cashinout(-1, GetLangText("CASHIER","TW_CASHIN"))
		ENDCASE
	ENDPROC

	PROCEDURE grdList.Init
		DODEFAULT()
		SELECT *, RECNO() as nRecNo FROM paymetho WHERE ;
			InList(pm_paytyp, 1, 2) AND  NOT Inlist(pm_paynum, Param.pa_payonld, Param.pa_rndpay) AND NOT pm_inactiv ;
			INTO CURSOR TblCashList READWRITE ;
			ORDER BY pm_paynum
		GOTO TOP IN TblCashList
		WITH this
			.Column1.Header1.Caption = GetLangText("CASHIER","TH_PAYNUM")
			.Column2.Header1.Caption = GetLangText("CASHIER","TH_DESCRIPT")
			.RecordSource = "TblCashList"
			.column1.ControlSource = "TblCashList.pm_paynum"
			.column2.ControlSource = "TblCashList.pm_lang"+g_Langnum
		ENDWITH
	ENDPROC

ENDDEFINE
