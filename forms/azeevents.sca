*--------------------------------------------------------------------------------------------------------------------------------------------------------
* (ES) AUTOGENERADO - ¡¡ATENCIÓN!! - ¡¡NO PENSADO PARA EJECUTAR!! USAR SOLAMENTE PARA INTEGRAR CAMBIOS Y ALMACENAR CON HERRAMIENTAS SCM!!
* (EN) AUTOGENERATED - ATTENTION!! - NOT INTENDED FOR EXECUTION!! USE ONLY FOR MERGING CHANGES AND STORING WITH SCM TOOLS!!
*--------------------------------------------------------------------------------------------------------------------------------------------------------
*< FOXBIN2PRG: Version="1.19" SourceFile="azeevents.scx" /> (Solo para binarios VFP 9 / Only for VFP 9 binaries)
*
*
#INCLUDE "..\include\constdefines.h"

DEFINE CLASS dataenvironment AS dataenvironment 
 	*< CLASSDATA: Baseclass="dataenvironment" Timestamp="" Scale="" Uniqueid="" ClassIcon="1" />

	DataSource = .NULL.
	Height = 0
	Left = 0
	Name = "Dataenvironment"
	Top = 0
	Width = 0

ENDDEFINE

DEFINE CLASS frmazeevents AS tform OF "..\libs\main.vcx" 
 	*< CLASSDATA: Baseclass="form" Timestamp="" Scale="" Uniqueid="" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="lblCode" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtCode" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblDescription" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtDescription" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblYear" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cboYear" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdNew" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdEdit" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdDelete" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdApply" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="dtxtFrom" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="dtxtTo" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grdIntervals" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grdIntervals.grcFrom.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grdIntervals.grcFrom.Tbgrid1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grdIntervals.grcTo.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grdIntervals.grcTo.Tbgrid1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdOK" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdCancel" UniqueID="" Timestamp="" />

	*<DefinedPropArrayMethod>
		*m: checkcode
		*m: getnextnr
		*m: onapply
		*m: oncancel
		*p: cmode
		*p: lnewinterval
		*p: ocaazepick
		*p: odata
	*</DefinedPropArrayMethod>

	Caption = "frmAzeEvents"
	ControlBox = .T.
	DoCreate = .T.
	Height = 292
	Icon = ..\bitmap\icons\pencil03.ico
	MaxButton = .F.
	MinButton = .F.
	Name = "frmAzeEvents"
	ocaazepick = .NULL.
	ShowTips = .T.
	Width = 384
	WindowType = 1

	ADD OBJECT 'cboYear' AS tcombobox WITH ;
		BoundColumn = 2, ;
		BoundTo = .T., ;
		ColumnCount = 2, ;
		ColumnLines = .F., ;
		ColumnWidths = "50,0", ;
		Left = 12, ;
		Name = "cboYear", ;
		RowSourceType = 1, ;
		Style = 2, ;
		Top = 96, ;
		Value = 0, ;
		Width = 96, ;
		ZOrderSet = 5
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="combobox" />

	ADD OBJECT 'cmdApply' AS tcommandbutton WITH ;
		Caption = "cmdApply", ;
		Enabled = .F., ;
		Height = 25, ;
		Left = 84, ;
		Name = "cmdApply", ;
		Picture = ..\bitmap\toolbar\mark.png, ;
		PicturePosition = 14, ;
		Top = 132, ;
		Width = 25, ;
		ZOrderSet = 9
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'cmdCancel' AS tcommandbutton WITH ;
		Caption = "cmdCancel", ;
		Left = 198, ;
		Name = "cmdCancel", ;
		Top = 252, ;
		ZOrderSet = 14
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'cmdDelete' AS tcommandbutton WITH ;
		Caption = "cmdDelete", ;
		Height = 25, ;
		Left = 60, ;
		Name = "cmdDelete", ;
		Picture = ..\bitmap\toolbar\delete.png, ;
		PicturePosition = 14, ;
		Top = 132, ;
		Width = 25, ;
		ZOrderSet = 8
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'cmdEdit' AS tcommandbutton WITH ;
		Caption = "cmdEdit", ;
		Height = 25, ;
		Left = 36, ;
		Name = "cmdEdit", ;
		Picture = ..\bitmap\toolbar\edit.png, ;
		PicturePosition = 14, ;
		Top = 132, ;
		Width = 25, ;
		ZOrderSet = 7
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'cmdNew' AS tcommandbutton WITH ;
		Caption = "cmdNew", ;
		Height = 25, ;
		Left = 12, ;
		Name = "cmdNew", ;
		Picture = ..\bitmap\toolbar\new.png, ;
		PicturePosition = 14, ;
		Top = 132, ;
		Width = 25, ;
		ZOrderSet = 6
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'cmdOK' AS tcommandbutton WITH ;
		Caption = "cmdOK", ;
		Left = 102, ;
		Name = "cmdOK", ;
		Top = 252, ;
		ZOrderSet = 13
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'dtxtFrom' AS tdatectrl WITH ;
		DisabledForeColor = 0,0,0, ;
		Enabled = .F., ;
		Format = "K", ;
		Left = 12, ;
		Name = "dtxtFrom", ;
		Top = 168, ;
		Width = 96, ;
		ZOrderSet = 10
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />

	ADD OBJECT 'dtxtTo' AS tdatectrl WITH ;
		DisabledForeColor = 0,0,0, ;
		Enabled = .F., ;
		Format = "K", ;
		Left = 12, ;
		Name = "dtxtTo", ;
		Top = 192, ;
		Width = 96, ;
		ZOrderSet = 11
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />

	ADD OBJECT 'grdIntervals' AS tgrid WITH ;
		AllowCellSelection = .F., ;
		ColumnCount = 2, ;
		DeleteMark = .F., ;
		Height = 168, ;
		HighlightRow = .F., ;
		Left = 120, ;
		Name = "grdIntervals", ;
		ReadOnly = .T., ;
		RecordMark = .F., ;
		ScrollBars = 2, ;
		Top = 72, ;
		Width = 252, ;
		ZOrderSet = 12, ;
		Column1.Alignment = 2, ;
		Column1.Name = "grcFrom", ;
		Column1.ReadOnly = .T., ;
		Column1.Width = 120, ;
		Column2.Alignment = 2, ;
		Column2.Name = "grcTo", ;
		Column2.ReadOnly = .T., ;
		Column2.Width = 120
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="grid" />

	ADD OBJECT 'grdIntervals.grcFrom.Header1' AS header WITH ;
		Alignment = 2, ;
		Caption = "grcFrom", ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'grdIntervals.grcFrom.Tbgrid1' AS tbgrid WITH ;
		Alignment = 2, ;
		Left = 71, ;
		Name = "Tbgrid1", ;
		ReadOnly = .T., ;
		Top = 23
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />

	ADD OBJECT 'grdIntervals.grcTo.Header1' AS header WITH ;
		Alignment = 2, ;
		Caption = "grcTo", ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'grdIntervals.grcTo.Tbgrid1' AS tbgrid WITH ;
		Alignment = 2, ;
		Left = 12, ;
		Name = "Tbgrid1", ;
		ReadOnly = .T., ;
		Top = 23
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />

	ADD OBJECT 'lblCode' AS tlabel WITH ;
		Caption = "lblCode", ;
		Left = 12, ;
		Name = "lblCode", ;
		Top = 15, ;
		Width = 96, ;
		ZOrderSet = 0
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'lblDescription' AS tlabel WITH ;
		Caption = "lblDescription", ;
		Left = 12, ;
		Name = "lblDescription", ;
		Top = 39, ;
		Width = 96, ;
		ZOrderSet = 2
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'lblYear' AS tlabel WITH ;
		Caption = "lblYear", ;
		Left = 12, ;
		Name = "lblYear", ;
		Top = 75, ;
		Width = 96, ;
		ZOrderSet = 4
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'txtCode' AS ttext WITH ;
		Format = "K", ;
		InputMask = "!!!", ;
		Left = 120, ;
		Name = "txtCode", ;
		Top = 12, ;
		ZOrderSet = 1
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtDescription' AS ttext WITH ;
		Format = "K", ;
		InputMask = (REPLICATE("X",25)), ;
		Left = 120, ;
		Name = "txtDescription", ;
		Top = 36, ;
		Width = 252, ;
		ZOrderSet = 3
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />
	
	PROCEDURE checkcode
		LOCAL ARRAY l_aCode(1)
		
		l_aCode(1) = .T.
		SqlCursor("SELECT aq_charcod FROM AzePick WHERE aq_label = 'HOLIDAY   ' AND aq_charcod = " + SqlCnv(PADR(this.oData.aq_charcod,3), .T.),,,,,,@l_aCode)
		
		RETURN EMPTY(l_aCode(1))
	ENDPROC

	PROCEDURE getnextnr
		LOCAL l_nRecno, l_nNextNr
		
		l_nRecno = RECNO("curIntervals")
		l_nNextNr = 0
		CALCULATE MAX(aq_numcod) TO l_nNextNr IN curIntervals
		GO l_nRecno IN curIntervals
		
		RETURN l_nNextNr + 1
	ENDPROC

	PROCEDURE Init
		LPARAMETERS lp_cMode, lp_cCode
		LOCAL l_nYear, l_nSysYear, l_cRecordSource, l_cAzePick
		
		this.cMode = lp_cMode
		
		this.Caption = GetLangText("EVENT","TXT_EDIT_EVENTS")
		this.lblCode.Caption = GetLangText("MGRPLIST","TXT_CCCODE")
		this.lblDescription.Caption = GetLangText("MGRPLIST","TXT_MGLANG")
		this.lblYear.Caption = GetLangText("EVENT","TXT_YEAR")
		this.grdIntervals.grcFrom.Header1.Caption = GetLangText("EVENT","TXT_FROM")
		this.grdIntervals.grcTo.Header1.Caption = GetLangText("EVENT","TXT_TO")
		this.cmdOK.Caption = GetLangText("COMMON","TXT_OK")
		this.cmdCancel.Caption = GetLangText("COMMON","TXT_CANCEL")
		this.cmdNew.ToolTipText = GetLangText("COMMON","TXT_NEW",,.T.)
		this.cmdEdit.ToolTipText = GetLangText("COMMON","TXT_EDIT",,.T.)
		this.cmdDelete.ToolTipText = GetLangText("COMMON","TXT_DELETE",,.T.)
		this.cmdApply.ToolTipText = GetLangText("BILL","T_APPLY",,.T.)
		
		this.ocaAzePick = CREATEOBJECT("caAzePick")
		this.ocaAzePick.Alias = "curAzePick"
		DO CASE
			CASE this.cMode = NEW_MODE
				this.ocaAzePick.CursorQuery(.T., "0=1")
				INSERT INTO curAzePick (aq_label) VALUES ('HOLIDAY   ')
			CASE this.cMode = COPY_MODE
				this.ocaAzePick.CursorQuery(.T., "0=1")
				l_cAzePick = SqlCursor("SELECT * FROM AzePick WHERE aq_label = 'HOLIDAY   ' AND aq_charcod = " + SqlCnv(lp_cCode, .T.))
				SELECT curAzePick
				APPEND FROM DBF(l_cAzePick)
				DClose(l_cAzePick)
				BLANK FIELDS aq_charcod ALL
				LOCATE
			OTHERWISE
				this.ocaAzePick.CursorQuery(.T., "aq_label = 'HOLIDAY   ' AND aq_charcod = " + SqlCnv(lp_cCode, .T.))
		ENDCASE
		SELECT curAzePick
		SCATTER MEMO NAME this.oData
		
		this.txtCode.ControlSource = "thisform.oData.aq_charcod"
		this.txtDescription.ControlSource = "thisform.oData.aq_lang" + g_Langnum
		SELECT aq_numcod, aq_dval1, aq_dval2 FROM curAzePick WITH (Buffering = .T.) WHERE NOT EMPTY(aq_dval1) INTO CURSOR curIntervals READWRITE
		INDEX ON aq_numcod TAG aq_numcod
		SET ORDER TO
		this.grdIntervals.RecordSource = "curIntervals"
		this.grdIntervals.grcFrom.ControlSource = "aq_dval1"
		this.grdIntervals.grcTo.ControlSource = "aq_dval2"
		
		l_nSysYear = YEAR(SysDate())
		l_cRecordSource = GetLangText("COMMON","TXT_ALL") + ",0"
		FOR l_nYear = l_nSysYear - 2 TO l_nSysYear + 2
			l_cRecordSource = l_cRecordSource + REPLICATE(","+TRANSFORM(l_nYear),2)
		NEXT 
		this.cboYear.RowSource = l_cRecordSource
		this.cboYear.Value = 0
		
		DODEFAULT()
	ENDPROC

	PROCEDURE onapply
		IF EMPTY(this.dtxtFrom.Value) OR EMPTY(this.dtxtTo.Value) OR this.dtxtFrom.Value > this.dtxtTo.Value
			this.dtxtFrom.SetFocus()
		ELSE
			IF this.lNewInterval
				this.lNewInterval = .F.
				APPEND BLANK IN curIntervals
			ENDIF
			REPLACE aq_dval1 WITH this.dtxtFrom.Value, aq_dval2 WITH this.dtxtTo.Value IN curIntervals
		
			STORE .F. TO this.cmdApply.Enabled, this.dtxtFrom.Enabled, this.dtxtTo.Enabled, this.cmdApply.Enabled
			STORE .T. TO this.cmdOK.Enabled, this.cmdNew.Enabled, this.cmdEdit.Enabled, this.cmdDelete.Enabled
			this.grdIntervals.SetFocus()
		ENDIF
		
		RETURN .T.
	ENDPROC

	PROCEDURE oncancel
		this.oData.aq_charcod = ""
		this.Release()
	ENDPROC

	PROCEDURE ondelete
		DELETE IN curIntervals
		
		this.grdIntervals.Refresh()
		
		RETURN .T.
	ENDPROC

	PROCEDURE onedit
		this.lNewInterval = .F.
		STORE .T. TO this.cmdApply.Enabled, this.dtxtFrom.Enabled, this.dtxtTo.Enabled, this.cmdApply.Enabled
		STORE .F. TO this.cmdOK.Enabled, this.cmdNew.Enabled, this.cmdEdit.Enabled, this.cmdDelete.Enabled
		this.dtxtFrom.Value = curIntervals.aq_dval1
		this.dtxtTo.Value = curIntervals.aq_dval2
		this.dtxtFrom.SetFocus()
		
		RETURN .T.
	ENDPROC

	PROCEDURE onnew
		this.lNewInterval = .T.
		STORE .T. TO this.cmdApply.Enabled, this.dtxtFrom.Enabled, this.dtxtTo.Enabled, this.cmdApply.Enabled
		STORE .F. TO this.cmdOK.Enabled, this.cmdNew.Enabled, this.cmdEdit.Enabled, this.cmdDelete.Enabled
		this.dtxtFrom.Value = {}
		this.dtxtTo.Value = {}
		this.dtxtFrom.SetFocus()
		
		RETURN .T.
	ENDPROC

	PROCEDURE onsave
		LOCAL l_nIntervalsCnt
		
		IF EMPTY(this.oData.aq_charcod) OR this.cMode <> EDIT_MODE AND NOT this.CheckCode()
			Alert(GetLangText("MGRPLIST","TXT_INVALID_CODE"))
			this.txtCode.SetFocus()
			RETURN .F.
		ENDIF
		
		l_nIntervalsCnt = 0
		CALCULATE CNT() ALL TO l_nIntervalsCnt IN curIntervals
		SELECT curAzePick
		LOCATE
		GATHER NAME this.oData FIELDS EXCEPT aq_numcod, aq_dval1, aq_dval2 MEMO
		IF EMPTY(l_nIntervalsCnt)
			BLANK FIELDS aq_numcod, aq_dval1, aq_dval2
			SKIP
			IF NOT EOF()
				DELETE REST
			ENDIF
		ELSE
			SELECT curIntervals
			SET FILTER TO
			REPLACE aq_numcod WITH this.GetNextNr() FOR EMPTY(aq_numcod)
			LOCATE
			SELECT curAzePick
			SCAN
				IF SEEK(curAzePick.aq_numcod, "curIntervals", "aq_numcod")
					this.oData.aq_numcod = curIntervals.aq_numcod
					this.oData.aq_dval1 = curIntervals.aq_dval1
					this.oData.aq_dval2 = curIntervals.aq_dval2
					GATHER NAME this.oData MEMO
					BLANK FIELDS aq_numcod IN curIntervals
				ELSE
					DELETE
				ENDIF
			ENDSCAN
			SELECT curIntervals
			SCAN FOR NOT EMPTY(aq_numcod)
				this.oData.aq_numcod = curIntervals.aq_numcod
				this.oData.aq_dval1 = curIntervals.aq_dval1
				this.oData.aq_dval2 = curIntervals.aq_dval2
				INSERT INTO curAzePick FROM NAME this.oData
			ENDSCAN
		ENDIF
		
		this.ocaAzePick.DoTableUpdate(.T.,,.T.)
		
		this.Release()
	ENDPROC

	PROCEDURE QueryUnload
		NODEFAULT
		this.OnCancel()
	ENDPROC

	PROCEDURE Unload
		DClose("curIntervals")
		RETURN this.oData.aq_charcod
	ENDPROC

	PROCEDURE cboYear.Valid
		LOCAL l_cFilter
		
		IF this.Value = 0
			l_cFilter = ""
		ELSE
			l_cFilter = "YEAR(aq_dval1) = " + TRANSFORM(this.Value)
		ENDIF
		
		SET FILTER TO &l_cFilter IN curIntervals
		
		thisform.grdIntervals.Refresh()
	ENDPROC

	PROCEDURE cmdApply.Click
		thisform.OnApply()
	ENDPROC

	PROCEDURE cmdCancel.Click
		thisform.OnCancel()
	ENDPROC

	PROCEDURE cmdDelete.Click
		thisform.OnDelete()
	ENDPROC

	PROCEDURE cmdEdit.Click
		thisform.OnEdit()
	ENDPROC

	PROCEDURE cmdNew.Click
		thisform.OnNew()
	ENDPROC

	PROCEDURE cmdOK.Click
		thisform.OnSave()
	ENDPROC

	PROCEDURE grdIntervals.DblClick
		thisform.OnEdit()
	ENDPROC

	PROCEDURE txtDescription.KeyPress
		LPARAMETERS nKeyCode, nShiftAltCtrl
		
		IF nKeyCode = 24 AND nShiftAltCtrl = 0
			LOCAL l_cMacro
			l_cMacro = "thisform.oData.aq_lang" + g_Langnum
			&l_cMacro = this.Value
			DO FORM "forms\DescForm" WITH "aq_lang", thisform.Caption, thisform.oData
		ENDIF
	ENDPROC

ENDDEFINE
