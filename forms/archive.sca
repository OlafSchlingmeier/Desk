*--------------------------------------------------------------------------------------------------------------------------------------------------------
* (ES) AUTOGENERADO - ¡¡ATENCIÓN!! - ¡¡NO PENSADO PARA EJECUTAR!! USAR SOLAMENTE PARA INTEGRAR CAMBIOS Y ALMACENAR CON HERRAMIENTAS SCM!!
* (EN) AUTOGENERATED - ATTENTION!! - NOT INTENDED FOR EXECUTION!! USE ONLY FOR MERGING CHANGES AND STORING WITH SCM TOOLS!!
*--------------------------------------------------------------------------------------------------------------------------------------------------------
*< FOXBIN2PRG: Version="1.19" SourceFile="archive.scx" /> (Solo para binarios VFP 9 / Only for VFP 9 binaries)
*
*
DEFINE CLASS dataenvironment AS dataenvironment 
 	*< CLASSDATA: Baseclass="dataenvironment" Timestamp="" Scale="" Uniqueid="" ClassIcon="1" />

	DataSource = .NULL.
	Height = 0
	Left = 0
	Name = "Dataenvironment"
	Top = 0
	Width = 0

ENDDEFINE

DEFINE CLASS frmarchive AS tform OF "..\libs\main.vcx" 
 	*< CLASSDATA: Baseclass="form" Timestamp="" Scale="" Uniqueid="" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="Sh1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblArchive" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdInstallODBC" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chkArchive" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chkPack" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdGo" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdArchive" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdPackArchive" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblPackArchive" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="edtLog" UniqueID="" Timestamp="" />

	*<DefinedPropArrayMethod>
		*m: dependsonarchive
		*m: log
		*m: onarchive
		*m: ongo
		*m: oninstallodbc
		*m: onpackarchive
		*p: clog
	*</DefinedPropArrayMethod>

	Caption = "Archive"
	clog = 
	ControlBox = .T.
	DoCreate = .T.
	Height = 290
	Icon = ..\bitmap\icons\archive.ico
	Name = "frmArchive"
	Width = 768
	WindowType = 1

	ADD OBJECT 'chkArchive' AS tcheckbox WITH ;
		Alignment = 0, ;
		AutoSize = .T., ;
		Caption = "Archive", ;
		Left = 24, ;
		Name = "chkArchive", ;
		Top = 96, ;
		Value = .F., ;
		ZOrderSet = 3
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="checkbox" />

	ADD OBJECT 'chkPack' AS tcheckbox WITH ;
		Alignment = 0, ;
		AutoSize = .T., ;
		Caption = "Pack Archive", ;
		Left = 24, ;
		Name = "chkPack", ;
		Top = 120, ;
		Value = .F., ;
		ZOrderSet = 4
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="checkbox" />

	ADD OBJECT 'cmdArchive' AS tcommandbutton WITH ;
		Caption = "Archive", ;
		Height = 27, ;
		Left = 12, ;
		Name = "cmdArchive", ;
		Top = 192, ;
		Width = 252, ;
		ZOrderSet = 6
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'cmdGo' AS tcommandbutton WITH ;
		Caption = "Go", ;
		Height = 27, ;
		Left = 36, ;
		Name = "cmdGo", ;
		Top = 144, ;
		ZOrderSet = 5
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'cmdInstallODBC' AS tcommandbutton WITH ;
		Caption = "Install ODBC", ;
		Height = 27, ;
		Left = 12, ;
		Name = "cmdInstallODBC", ;
		Top = 48, ;
		Width = 252, ;
		ZOrderSet = 2
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'cmdPackArchive' AS tcommandbutton WITH ;
		Caption = "Pack Archive", ;
		Height = 27, ;
		Left = 12, ;
		Name = "cmdPackArchive", ;
		Top = 228, ;
		Width = 252, ;
		ZOrderSet = 7
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'edtLog' AS teditbox WITH ;
		DisabledBackColor = 255,255,255, ;
		Height = 204, ;
		Left = 276, ;
		Name = "edtLog", ;
		ReadOnly = .T., ;
		Top = 48, ;
		Width = 480, ;
		ZOrderSet = 9
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="editbox" />

	ADD OBJECT 'lblArchive' AS tlabel WITH ;
		Caption = "Archive", ;
		ForeColor = 0,0,255, ;
		Height = 36, ;
		Left = 12, ;
		Name = "lblArchive", ;
		Top = 12, ;
		Width = 744, ;
		WordWrap = .T., ;
		ZOrderSet = 1
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'lblPackArchive' AS tlabel WITH ;
		AutoSize = .T., ;
		Caption = "Pack archive", ;
		ForeColor = 0,0,255, ;
		Height = 17, ;
		Left = 12, ;
		Name = "lblPackArchive", ;
		Top = 264, ;
		Width = 71, ;
		ZOrderSet = 8
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'Sh1' AS sh WITH ;
		Height = 96, ;
		Left = 12, ;
		Name = "Sh1", ;
		Top = 84, ;
		Width = 252, ;
		ZOrderSet = 0
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="shape" />
	
	PROCEDURE dependsonarchive
		LOCAL llArchiveDone, llODBCReady, llRestoreArchiveAllowed
		
		llArchiveDone = NOT EMPTY(_screen.oGlobal.oParam2.pa_arhdate)
		llODBCReady = NOT Odbc() AND NOT EMPTY(_screen.oGlobal.cODBCDriverName) AND NOT EMPTY(_screen.oGlobal.cODBCServer) AND NOT EMPTY(_screen.oGlobal.cODBCPort)
		llRestoreArchiveAllowed = .F.
		
		this.cmdArchive.Caption = IIF(llArchiveDone AND llRestoreArchiveAllowed, GetLangText("ARCHIVE","TXT_RESTORE_ARCHIVE"), GetLangText("MENU","MNT_ARCHIVE_TO_POSTGRESQL"))
		STORE NOT llArchiveDone AND llODBCReady TO this.chkArchive.Enabled, this.chkPack.Enabled, this.cmdGo.Enabled
		this.cmdArchive.Enabled = IIF(llArchiveDone, llRestoreArchiveAllowed, llODBCReady)
		this.cmdPackArchive.Enabled = llArchiveDone
	ENDPROC

	PROCEDURE Init
		this.Caption = GetLangText("MENU","MNT_ARCHIVE")
		this.lblArchive.Caption = GetLangText("ARCHIVE","TXT_LABEL_ARCHIVE1")+CHR(13)+CHR(10)+GetLangText("ARCHIVE","TXT_LABEL_ARCHIVE2")
		this.cmdInstallODBC.Caption = GetLangText("MENU","MNT_INSTALL_PGODBC_DRIVER")
		this.chkArchive.Caption = GetLangText("MENU","MNT_ARCHIVE_TO_POSTGRESQL")
		this.chkPack.Caption = GetLangText("MENU","MNT_PACK_ARCHIVED_TABLES")
		this.cmdGo.Caption = GetLangText("COMMON","TXT_GO")
		this.cmdPackArchive.Caption = GetLangText("MENU","MNT_PACK_ARCHIVED_TABLES")
		this.lblPackArchive.Caption = GetLangText("ARCHIVE","TXT_LABEL_PACK_ARCHIVE")
		this.DependsOnArchive()
		
		DODEFAULT()
	ENDPROC

	PROCEDURE log
		LPARAMETERS tcNewText, tlNoCrlf
		LOCAL lcText
		
		lcText = IIF(EMPTY(this.cLog) OR RIGHT(this.cLog,2) = CHR(13) + CHR(10), "[" + TIME() + "] ", "") + tcNewText + IIF(tlNoCrlf, "", CHR(13) + CHR(10))
		this.cLog = this.cLog + lcText
		this.edtLog.Value = this.cLog
		this.edtLog.SelStart = LEN(this.edtLog.Value)
		this.Refresh()
		
		STRTOFILE(lcText,"archive_log.txt",1)
		
		RETURN .T.
	ENDPROC

	PROCEDURE onarchive
		LOCAL llSuccess
		
		llSuccess = .T.
		IF EMPTY(_screen.oGlobal.oParam2.pa_arhdate)
			* Make archive
			LogMenu("FILE|MAINTENANCE|ARCHIVE|MAKE_ARCHIVE", "DoArchive IN ProcArchive")
			llSuccess = NOT EMPTY(_screen.oGlobal.oParam2.pa_arhdate)
		ELSE
			* Restore archive
			LogMenu("FILE|MAINTENANCE|ARCHIVE|RESTORE_ARCHIVE", "DoRestore IN ProcArchive")
			llSuccess = EMPTY(_screen.oGlobal.oParam2.pa_arhdate)
		ENDIF
		this.DependsOnArchive()
		
		RETURN llSuccess
	ENDPROC

	PROCEDURE ongo
		LOCAL llSuccess
		
		llSuccess = .T.
		IF this.chkArchive.Value AND llSuccess
			llSuccess = this.OnArchive()
		ENDIF
		IF this.chkPack.Value AND llSuccess
			llSuccess = this.OnPackArchive()
		ENDIF
		
		this.Log(IIF(llSuccess, "Finished.", "NOT completed."))
		
		RETURN llSuccess
	ENDPROC

	PROCEDURE oninstallodbc
		LogMenu("FILE|MAINTENANCE|SUPERVISOR|INSTALLODBCDRIVER", "InstallDriver IN Odbc")
	ENDPROC

	PROCEDURE onpackarchive
		LOCAL llSuccess
		
		LogMenu("FILE|MAINTENANCE|SUPERVISOR|PACK_ARCHIVED", "PackArchived IN ProcArchive")
		llSuccess = NOT EMPTY(_screen.oGlobal.oParam2.pa_arhdate)
		
		RETURN llSuccess
	ENDPROC

	PROCEDURE cmdArchive.Click
		thisform.OnArchive()
	ENDPROC

	PROCEDURE cmdGo.Click
		thisform.OnGo()
	ENDPROC

	PROCEDURE cmdInstallODBC.Click
		thisform.OnInstallODBC()
	ENDPROC

	PROCEDURE cmdPackArchive.Click
		thisform.OnPackArchive()
	ENDPROC

ENDDEFINE
