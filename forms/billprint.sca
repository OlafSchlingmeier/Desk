*--------------------------------------------------------------------------------------------------------------------------------------------------------
* (ES) AUTOGENERADO - ¡¡ATENCIÓN!! - ¡¡NO PENSADO PARA EJECUTAR!! USAR SOLAMENTE PARA INTEGRAR CAMBIOS Y ALMACENAR CON HERRAMIENTAS SCM!!
* (EN) AUTOGENERATED - ATTENTION!! - NOT INTENDED FOR EXECUTION!! USE ONLY FOR MERGING CHANGES AND STORING WITH SCM TOOLS!!
*--------------------------------------------------------------------------------------------------------------------------------------------------------
*< FOXBIN2PRG: Version="1.19" SourceFile="billprint.scx" /> (Solo para binarios VFP 9 / Only for VFP 9 binaries)
*
*
DEFINE CLASS billprint AS tform OF "..\libs\main.vcx" 
 	*< CLASSDATA: Baseclass="form" Timestamp="" Scale="" Uniqueid="" />

	Caption = "BillPrint"
	DataSession = 2
	DoCreate = .T.
	Height = 85
	Name = "BILLPRINT"
	Visible = .F.
	Width = 214
	
	PROCEDURE Init
		LPARAMETERS lp_nReserId, lp_nActiveWindow, lp_nCopies, lp_lCheckout, lp_frsBills, lp_lLock, lp_lPrivateDatasession
		* Parameter lp_lLock not used anymore!
		IF lp_lPrivateDatasession
			DO ini
			SET MULTILOCKS ON
			= openfile()
			= relations()
		ELSE
			SET DATASESSION TO 1
		ENDIF
		
		LOCAL ARRAY l_aWin(1), l_aWinCopy(1)
		LOCAL l_nPCount, l_nBillWin, l_oCboAyID, l_nPaynum, l_nNoOfCopy, l_nBillType, l_oBillType, l_cbillfrxname, l_oCmdBillIns
		
		l_nPCount = PCOUNT()
		l_aWin(1) = .T.
		sqlcursor("SELECT DISTINCT ps_window FROM post WHERE ps_reserid = " + sqlcnv(lp_nReserId) + " AND " + ;
			IIF(l_nPCount > 1 AND NOT EMPTY(lp_nActiveWindow), "ps_window = " + sqlcnv(lp_nActiveWindow), "ps_window > 0") + " ORDER BY 1",,,,,,@l_aWin)
		
		IF NOT EMPTY(l_aWin(1))
			ACOPY(l_aWin, l_aWinCopy)
			IF NOT ProcBill("BillsReserCheck", lp_nReserId, @l_aWinCopy, "PRINT")
				RETURN .F.
			ENDIF
			IF l_nPCount < 3
				lp_nCopies = 1
			ENDIF
		
			FOR EACH l_nBillWin IN l_aWin
				IF l_nBillWin <> 0
					IF SEEK(lp_nReserId, "reservat", "tag1")
						l_oCboAyID = FNGetWindowData(reservat.rs_rsid, l_nBillWin, "pw_blamid")
					ENDIF
				ELSE
					l_oCboAyID = 0
				ENDIF
				IF param2.pa_billpm
					l_nPaynum = procbill("BillPayNum",lp_nReserId, l_nBillWin)
					l_nNoOfCopy = dblookup("paymetho", "tag1", l_nPaynum, "pm_copy")
					l_nNoOfCopy = MAX(l_nNoOfCopy, 1)
				ELSE
					l_nNoOfCopy = lp_nCopies
				ENDIF
				l_nBillType = -1
				IF TYPE("lp_frsBills") == "O" AND NOT ISNULL(lp_frsBills)
					l_oBillType = lp_frsBills.getbillobject("BillTypeCbo", l_nBillWin)
					l_nBillType = INT(VAL(l_oBillType.cbilltype))
					l_oCmdBillIns = lp_frsBills.getbillobject("BillInsCmd", l_nBillWin)
					l_cbillfrxname = l_oCmdBillIns.cbillfrxname
				ENDIF
				= PrntBill(lp_nReserId,l_nBillWin,.F.,l_nNoOfCopy,lp_lCheckout, l_oCboAyID, l_nBillType,,l_cbillfrxname)
				IF l_nPCount > 4 AND TYPE("lp_frsBills") == "O" AND NOT ISNULL(lp_frsBills)
					lp_frsBills.BillNumRefresh(l_nBillWin)
				ENDIF
			ENDFOR
		ENDIF
		
		RETURN .T.
	ENDPROC

ENDDEFINE

DEFINE CLASS dataenvironment AS dataenvironment 
 	*< CLASSDATA: Baseclass="dataenvironment" Timestamp="" Scale="" Uniqueid="" ClassIcon="2" />

	DataSource = .NULL.
	Height = 0
	Left = 0
	Name = "Dataenvironment"
	Top = 0
	Width = 0

ENDDEFINE
