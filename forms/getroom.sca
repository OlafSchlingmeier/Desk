*--------------------------------------------------------------------------------------------------------------------------------------------------------
* (ES) AUTOGENERADO - ¡¡ATENCIÓN!! - ¡¡NO PENSADO PARA EJECUTAR!! USAR SOLAMENTE PARA INTEGRAR CAMBIOS Y ALMACENAR CON HERRAMIENTAS SCM!!
* (EN) AUTOGENERATED - ATTENTION!! - NOT INTENDED FOR EXECUTION!! USE ONLY FOR MERGING CHANGES AND STORING WITH SCM TOOLS!!
*--------------------------------------------------------------------------------------------------------------------------------------------------------
*< FOXBIN2PRG: Version="1.19" SourceFile="getroom.scx" /> (Solo para binarios VFP 9 / Only for VFP 9 binaries)
*
*
DEFINE CLASS dataenvironment AS dataenvironment 
 	*< CLASSDATA: Baseclass="dataenvironment" Timestamp="" Scale="" Uniqueid="" ClassIcon="2" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="Cursor5" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor6" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor9" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor7" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor8" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor10" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor11" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor12" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Relation1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor13" UniqueID="" Timestamp="" />

	AutoOpenTables = .F.
	DataSource = .NULL.
	Height = 500
	Left = 105
	Name = "Dataenvironment"
	Top = 121
	Width = 894

	ADD OBJECT 'Cursor10' AS cursor WITH ;
		Alias = "reservat", ;
		CursorSource = ..\data\reservat.dbf, ;
		Height = 1, ;
		Left = 168, ;
		Name = "Cursor10", ;
		Top = 19, ;
		Width = 118
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor11' AS cursor WITH ;
		Alias = "roomtype", ;
		CursorSource = ..\data\roomtype.dbf, ;
		Height = 1, ;
		Left = 14, ;
		Name = "Cursor11", ;
		Top = 247, ;
		Width = 116
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor12' AS cursor WITH ;
		Alias = "laststay", ;
		CursorSource = ..\data\laststay.dbf, ;
		Height = 1, ;
		Left = 334, ;
		Name = "Cursor12", ;
		Top = 19, ;
		Width = 90
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor13' AS cursor WITH ;
		Alias = "resroomsgetroom", ;
		CursorSource = ..\data\resrooms.dbf, ;
		Height = 1, ;
		Left = 168, ;
		Name = "Cursor13", ;
		Top = 218, ;
		Width = 120
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor5' AS cursor WITH ;
		Alias = "room", ;
		CursorSource = ..\data\room.dbf, ;
		Height = 1, ;
		Left = 14, ;
		Name = "Cursor5", ;
		Top = 158, ;
		Width = 119
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor6' AS cursor WITH ;
		Alias = "roomplan", ;
		CursorSource = ..\data\roomplan.dbf, ;
		Height = 1, ;
		Left = 167, ;
		Name = "Cursor6", ;
		Top = 187, ;
		Width = 119
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor7' AS cursor WITH ;
		Alias = "ratecode", ;
		CursorSource = ..\data\ratecode.dbf, ;
		Height = 1, ;
		Left = 13, ;
		Name = "Cursor7", ;
		Top = 217, ;
		Width = 119
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor8' AS cursor WITH ;
		Alias = "season", ;
		CursorSource = ..\data\season.dbf, ;
		Height = 1, ;
		Left = 167, ;
		Name = "Cursor8", ;
		Top = 157, ;
		Width = 119
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor9' AS cursor WITH ;
		Alias = "roomfeat", ;
		CursorSource = ..\data\roomfeat.dbf, ;
		Height = 1, ;
		Left = 14, ;
		Name = "Cursor9", ;
		Top = 188, ;
		Width = 119
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Relation1' AS relation WITH ;
		ChildAlias = "laststay", ;
		ChildOrder = "tag1", ;
		Name = "Relation1", ;
		ParentAlias = "reservat", ;
		RelationalExpr = "rs_addrid"
		*< END OBJECT: BaseClass="relation" />

ENDDEFINE

DEFINE CLASS formqegetroom AS tform OF "..\libs\main.vcx" 
 	*< CLASSDATA: Baseclass="form" Timestamp="" Scale="" Uniqueid="" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="lblLastRoomTypeAndRoom" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="larrival" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Datebox1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="ldeparture" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Datebox2" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lroomtype" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cbroomtype" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lfeature" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="stxtFeature" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chcleanfirst" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chcheckpersons" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lroom" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lbrooms" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lNote" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="edtNote" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdFind" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdOK" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdCancel" UniqueID="" Timestamp="" />

	*<DefinedPropArrayMethod>
		*m: checkpersons
		*m: m_fillroom		&& Fills room numbers for selection into listbox
		*m: m_getmydata		&& Returns padded string. Recives Arrival Date as Parameter. Selected record in room.dbf is expected.
		*m: setcontrolsource
		*m: setfeatures
		*m: showcheckpersonstoggle
		*p: cnote
		*p: lcheckpersons
		*p: lok
		*p: nadults
		*p: nchilds
		*p: nchilds2
		*p: nchilds3
		*p: nroomnamewidth
		*p: nroomtypewidth
		*p: plcancel
		*p: p_datasession		&& Datasession ID of this form
		*p: rooms
		*p: rooms1
		*p: rs_roomnum
		*p: rs_roomtyp
		*a: aroom[1,0]
	*</DefinedPropArrayMethod>

	AlwaysOnTop = .F.
	Caption = "formqegetroom"
	cnote = 
	ControlBox = .T.
	DataSession = 2
	DoCreate = .T.
	doini = .T.
	doiniopencommontables = .T.
	Height = 373
	Icon = ..\bitmap\icons\crdfle04.ico
	lcheckpersons = .T.
	nadults = 0
	Name = "formqegetroom"
	nchilds = 0
	nchilds2 = 0
	nchilds3 = 0
	nroomnamewidth = 30
	nroomtypewidth = 30
	rooms = 0
	ShowTips = .T.
	Width = 564
	WindowType = 1

	ADD OBJECT 'cbroomtype' AS cboroomtype WITH ;
		cnoroomtypechar = *, ;
		lappendblank = .T., ;
		Left = 108, ;
		Name = "cbroomtype", ;
		nbuildingpart = 0.4, ;
		Top = 84, ;
		ZOrderSet = 6
		*< END OBJECT: ClassLib="..\libs\cit_ctrl.vcx" BaseClass="combobox" />

	ADD OBJECT 'chcheckpersons' AS tcheckbox WITH ;
		Alignment = 0, ;
		Caption = "chcheckpersons", ;
		ControlSource = "thisform.lCheckPersons", ;
		Height = 17, ;
		Left = 240, ;
		Name = "chcheckpersons", ;
		Top = 87, ;
		Width = 216, ;
		ZOrderSet = 10
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="checkbox" />

	ADD OBJECT 'chcleanfirst' AS tcheckbox WITH ;
		Alignment = 0, ;
		Caption = "chcleanfirst", ;
		Height = 17, ;
		Left = 240, ;
		Name = "chcleanfirst", ;
		Top = 63, ;
		Width = 216, ;
		ZOrderSet = 9
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="checkbox" />

	ADD OBJECT 'cmdCancel' AS tcommandbutton WITH ;
		Cancel = .T., ;
		Caption = "cmdCancel", ;
		Left = 288, ;
		Name = "cmdCancel", ;
		Top = 333, ;
		ZOrderSet = 17
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'cmdFind' AS tcommandbutton WITH ;
		Caption = "cmdFind", ;
		Left = 468, ;
		Name = "cmdFind", ;
		Top = 24, ;
		ZOrderSet = 15
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'cmdOK' AS tcommandbutton WITH ;
		Caption = "cmdOk", ;
		Default = .T., ;
		Left = 192, ;
		Name = "cmdOK", ;
		Top = 333, ;
		ZOrderSet = 16
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'Datebox1' AS tdatectrl WITH ;
		Height = 23, ;
		Left = 108, ;
		Name = "Datebox1", ;
		Top = 36, ;
		Width = 123, ;
		ZOrderSet = 2
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />

	ADD OBJECT 'Datebox2' AS tdatectrl WITH ;
		Height = 23, ;
		Left = 108, ;
		Name = "Datebox2", ;
		Top = 60, ;
		Width = 123, ;
		ZOrderSet = 4
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />

	ADD OBJECT 'edtNote' AS teditbox WITH ;
		Height = 167, ;
		Left = 336, ;
		Name = "edtNote", ;
		nlineheight = 7, ;
		ReadOnly = .T., ;
		Top = 153, ;
		Width = 216, ;
		ZOrderSet = 14
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="editbox" />

	ADD OBJECT 'larrival' AS tlabel WITH ;
		Caption = "larrival", ;
		Left = 12, ;
		Name = "larrival", ;
		Top = 39, ;
		ZOrderSet = 1
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'lblLastRoomTypeAndRoom' AS tlabel WITH ;
		Caption = "", ;
		FontBold = .T., ;
		Height = 17, ;
		Left = 7, ;
		Name = "lblLastRoomTypeAndRoom", ;
		Top = 5, ;
		Width = 449, ;
		ZOrderSet = 0
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'lbrooms' AS tlistbox WITH ;
		ColumnCount = 4, ;
		ColumnLines = .F., ;
		ColumnWidths = "40,40,40,130", ;
		FontName = "Fixedsys", ;
		Height = 167, ;
		Left = 12, ;
		Name = "lbrooms", ;
		RowSource = "thisform.aroom", ;
		RowSourceType = 5, ;
		Top = 153, ;
		Width = 320, ;
		ZOrderSet = 12
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="listbox" />

	ADD OBJECT 'ldeparture' AS tlabel WITH ;
		Caption = "ldeparture", ;
		Left = 12, ;
		Name = "ldeparture", ;
		Top = 63, ;
		ZOrderSet = 3
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'lfeature' AS tlabel WITH ;
		Caption = "lfeature", ;
		Left = 12, ;
		Name = "lfeature", ;
		Top = 111, ;
		ZOrderSet = 7
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'lNote' AS tlabel WITH ;
		Caption = "lNote", ;
		Left = 336, ;
		Name = "lNote", ;
		Top = 132, ;
		ZOrderSet = 13
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'lroom' AS tlabel WITH ;
		Caption = "lroom", ;
		Left = 12, ;
		Name = "lroom", ;
		Top = 132, ;
		ZOrderSet = 11
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'lroomtype' AS tlabel WITH ;
		Caption = "lroomtype", ;
		Left = 12, ;
		Name = "lroomtype", ;
		Top = 87, ;
		ZOrderSet = 5
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'stxtFeature' AS tselectctrl WITH ;
		Height = 23, ;
		Left = 108, ;
		Name = "stxtFeature", ;
		Top = 108, ;
		Width = 123, ;
		ZOrderSet = 8
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />
	
	PROCEDURE assigncaption
		this.cmdCancel.Caption=GetLangText("COMMON","TXT_CANCEL")
		this.cmdoK.Caption=GetLangText("COMMON","TXT_OK")
		this.Caption=GetLangText("GETROOM","TW_GETROOM")
		this.larrival.Caption=GetLangText("GETROOM","T_ARRIVAL")
		this.ldeparture.Caption=GetLangText("GETROOM","T_DEPARTURE")
		this.lroomtype.Caption=GetLangText("GETROOM","T_ROOMTYPE")
		this.lfeature.Caption=GetLangText("GETROOM","TX_FEATURE")
		this.cmdFind.Caption=GetLangText("GETROOM","TB_FIND")
		this.chcleanfirst.Caption=GetLangText("RESERVAT","T_CLEANROOMFIRST")
		this.chcheckpersons.Caption=GetLangText("GETROOM","TXT_CHECK_NUMBER_OF_PERSONS")
		this.lroom.caption=GetLangText("GETROOM","TX_ROOM")
		this.lNote.Caption=GetLangText("CHKOUT2","TXT_NOTE")
	ENDPROC

	PROCEDURE checkpersons
		LOCAL lSuccess
		
		lSuccess = .F.
		
		IF this.lCheckPersons
			IF room.rm_maxpers >= (this.nAdults + this.nChilds + this.nChilds2 + this.nChilds3)
				lSuccess = .T.
			ENDIF
		ELSE
			lSuccess = .T.
		ENDIF
		
		RETURN lSuccess
	ENDPROC

	PROCEDURE Init
		LOCAL lnReserId, llexit, lcRoomtype
		LOCAL ARRAY laFeatures(1)
		laFeatures(1) = ""
		llexit = .F.
		lnReserId = 0
		This.nmode = 0
		this.p_datasession=this.DataSessionId
		this.m_getmydata(1)
			This.nmode=1
			This.datebox1.Value={}
			This.datebox2.Value={}
		Thisform.chcleanfirst.Value=1
		This.setcontrolsource
		this.SetFeatures()
		*WAIT WINDOW 'Frontmost window: ' + WONTOP( )
		External Array a_Data
		Do Case
		Case Wontop()="FORMEDITRES"
		*RESERVAT EDIT FORM
			IF TYPE("_Screen.ActiveForm.activecontrol")="O" AND ;
					UPPER(_Screen.ActiveForm.activecontrol.name) = "CBO_RS_ROOMNUM"
				SET DATASESSION TO _Screen.ActiveForm.DataSessionId
				This.nmode=5
				This.datebox1.Value=_SCREEN.ActiveForm.tbarrival.value
				This.datebox2.Value=_SCREEN.ActiveForm.tbdeparture.value
				This.cbroomtype.Value=_SCREEN.ActiveForm.cbroomtyp.Value
				This.cbroomtype.enabled=_SCREEN.ActiveForm.cbroomtyp.enabled
				SELECT c_feature FROM (_SCREEN.ActiveForm.parent.tform12.stxtFeature.curSelect) WHERE c_selected INTO ARRAY laFeatures
				this.nAdults = reservat.rs_adults
				this.nChilds = reservat.rs_childs
				this.nChilds2 = reservat.rs_childs2
				this.nChilds3 = reservat.rs_childs3
				this.cnote = reservat.rs_note
				SET DATASESSION TO this.p_datasession
				REPLACE c_selected WITH IIF(EMPTY(laFeatures(1)), EMPTY(c_feature), 0 < ASCAN(laFeatures, c_feature, 1, 0, 0, 3)) ALL IN (this.stxtFeature.curSelect)
			ENDIF
		Case Wontop()='RESBRW'
		*BROWSE RESERVATION
			SET DATASESSION TO _Screen.ActiveForm.DataSessionId
			If  !EMPTY(reServat3.rs_out) .Or. INLIST(reServat3.rs_status, "NS", "CXL", "ASG") .Or. reServat3.rs_rooms>1
				?? CHR(7)
				*Pop Key
				llexit = .T.
			ENDIF
			IF llexit
				SET DATASESSION TO this.p_datasession
				RETURN .F.
			ELSE
				This.nmode=2
				This.datebox1.Value=reServat3.rs_arrdate
				This.datebox2.Value=reServat3.rs_depdate
				This.cbroomtype.Value=reServat3.rs_roomtyp
				SELECT fr_feature FROM resfeat WHERE fr_rsid = reservat3.rs_rsid INTO ARRAY laFeatures
				this.nAdults = reservat3.rs_adults
				this.nChilds = reservat3.rs_childs
				this.nChilds2 = reservat3.rs_childs2
				this.nChilds3 = reservat3.rs_childs3
				this.cnote = reservat3.rs_note
				lnReserId = reservat3.rs_reserid
				SET DATASESSION TO this.p_datasession
				REPLACE c_selected WITH IIF(EMPTY(laFeatures(1)), EMPTY(c_feature), 0 < ASCAN(laFeatures, c_feature, 1, 0, 0, 3)) ALL IN (this.stxtFeature.curSelect)
			ENDIF
		CASE WONTOP() = 'FORMDETAIL' && quickedit
			FOR i = 1 TO _Screen.FormCount
				IF ALLTRIM(UPPER(_Screen.Forms(i).Name)) == 'FORMDETAIL'
					SET DATASESSION TO _Screen.forms(i).DataSessionId
					IF NOT EMPTY(reservat.rs_out) OR INLIST(reservat.rs_status, "NS", "CXL", "ASG") OR reservat.rs_rooms>1
						SET DATASESSION TO this.p_datasession
						RETURN .F.
					ENDIF
					this.nmode = 8
					this.datebox1.Value = _screen.forms(i).dbarrdate.Value
					this.datebox2.Value = _screen.forms(i).dbdepdate.Value
					this.cbroomtype.Value = _screen.forms(i).cbroomtyp.Value
					SELECT c_feature FROM (_screen.forms(i).stxtFeature.curSelect) WHERE c_selected INTO ARRAY laFeatures
					this.nAdults = reservat.rs_adults
					this.nChilds = reservat.rs_childs
					this.nChilds2 = reservat.rs_childs2
					this.nChilds3 = reservat.rs_childs3
					this.cnote = reservat.rs_note
					SET DATASESSION TO this.p_datasession
					REPLACE c_selected WITH IIF(EMPTY(laFeatures(1)), EMPTY(c_feature), 0 < ASCAN(laFeatures, c_feature, 1, 0, 0, 3)) ALL IN (this.stxtFeature.curSelect)
					EXIT
				ENDIF
			NEXT
		CASE WONTOP()='FORMEDIT' && roomlist
			FOR i=1 TO _Screen.FormCount
				IF ALLTRIM(UPPER(_Screen.Forms(i).Name))=='FORMEDIT'
					SET DataSession TO _Screen.forms(i).DataSessionId
					IF NOT EMPTY(reServat.rs_out) OR INLIST(reservat.rs_status, "NS", "CXL", "ASG") OR reServat.rs_rooms>1
						RETURN .F.
					ENDIF
					IF _Screen.Forms(i).Parent.cbroomnumgotfocus
						This.NMOde = 4
						This.datebox1.Value=_screen.forms(i).dbarrival.value
						This.datebox2.Value=_screen.forms(i).dbdeparture.value
						This.cbroomtype.Value=_screen.forms(i).cbroomtype.Value
					ENDIF
					this.nAdults = reservat.rs_adults
					this.nChilds = reservat.rs_childs
					this.nChilds2 = reservat.rs_childs2
					this.nChilds3 = reservat.rs_childs3
					this.cnote = reservat.rs_note
					SET DATASESSION TO this.p_datasession
				ENDIF
			NEXT
		CASE WONTOP() == "FRMQUICKRESER"
			IF TYPE("_Screen.ActiveForm.activecontrol")="O" AND ;
					UPPER(_Screen.ActiveForm.activecontrol.name) = "CBO_RS_ROOMNUM"
				SET DataSession TO _screen.ActiveForm.DataSessionID
				this.AddProperty("nolddatasessionid", _screen.ActiveForm.DataSessionID)
				This.NMOde = 9
				This.datebox1.Value = reservat.rs_arrdate
				This.datebox2.Value = reservat.rs_depdate
				This.cbroomtype.Value = reservat.rs_roomtyp
				this.nAdults = reservat.rs_adults
				this.nChilds = reservat.rs_childs
				this.nChilds2 = reservat.rs_childs2
				this.nChilds3 = reservat.rs_childs3
				this.cnote = reservat.rs_note
				SET DATASESSION TO this.p_datasession
			ENDIF
		OTHERWISE 
			This.nmode=1
			This.datebox1.Value={}
			This.datebox2.Value={}
		ENDCASE
		this.stxtFeature.RefreshValue()
		IF INLIST(this.nmode, 2, 3)&&When nmode=2 or 3 seek record in reservat
			= SEEK(lnReserId,'reservat','tag1')
			this.lblLastRoomTypeAndRoom.Caption = GetLangText("ADDRESS","T_LASTROOMTYPE")+": "+;
				Get_rt_roomtyp(laststay.ls_roomtyp) + ", " + ;
				GetLangText("ADDRESS","T_LASTROOM")+": "+;
				Get_rm_rmname(laststay.ls_roomnum)
		ELSE
			this.lblLastRoomTypeAndRoom.Visible = .F.
		ENDIF
		this.ShowCheckPersonsToggle()
		This.assigncaption()
		lcRoomtype = This.cbroomtype.Value
		This.cbroomtype.Requery()
		This.cbroomtype.Value = lcRoomtype
		DoDefault()
	ENDPROC

	PROCEDURE KeyPress
		LPARAMETERS nKeyCode, nShiftAltCtrl
		IF nkeycode=27
			this.cmdCancel.Click
		ENDIF
		
	ENDPROC

	PROCEDURE m_fillroom		&& Fills room numbers for selection into listbox
		LOCAL pcRoomtype, pdArrival, pdDeparture, LOrderRoomtype, l_nReservatRecNo, cfEat
		LOCAL l_oResRooms1, l_oResRooms2, l_cRoomplanOrder, l_cBuilding, l_cWhereBuilding
		
		LOrderRoomtype = ""
		pcRoomtype=thisform.cbroomtype.Value
		pdArrival=thisform.datebox1.Value
		
		IF EMPTY(pdArrival)
			Alert(GetLangText("RESERVAT","TXT_ARRDATE_GREATER_SYSDATE"))
			RETURN .F.
		ENDIF
		IF EMPTY(pcRoomtype)
			Alert(GetLangText("PLAN","T_ROOMTYPE")+"?")
			RETURN .F.
		ENDIF
		
		RiGetRoom(reservat.rs_reserid, MAX(SysDate(),pdArrival), @l_oResRooms1, @l_oResRooms2, "resroomsgetroom")
		IF NOT (ISNULL(l_oResRooms1) OR ISNULL(l_oResRooms2) OR (l_oResRooms1.ri_rroomid = l_oResRooms2.ri_rroomid))
			pdDeparture = l_oResRooms2.ri_date - 1
		ELSE
			IF thisform.datebox1.Value = thisform.Datebox2.Value
				pdDeparture = thisform.Datebox2.Value
			ELSE
				pdDeparture = thisform.Datebox2.Value - 1
			ENDIF
		ENDIF
		
		l_nReservatRecNo = RECNO("reservat")
		
		IF EMPTY(pdDeparture)
			Alert(GetLangText("RESERVAT","TXT_DEPDATE_LESS_SYSDATE"))
			RETURN .F.
		ELSE
			dCompareDep = pdDeparture
			IF SEEK(pcRoomtype,"roomtype","TAG1")
				IF (pdArrival == pdDeparture) .AND. (roomtype.rt_group == 3)
					dCompareDep = pdDeparture + 1
				ENDIF
			ENDIF
		ENDIF
		
		IF pdArrival > pdDeparture
			Alert(GetLangText("RESERVAT","TXT_DEPDATE_GREATER_SYSDATE"))
			RETURN .F.
		ENDIF
		
		l_cWhereBuilding = ".T."
		IF g_lShips
			l_cBuilding = DLookUp("althead", "al_altid = " + SqlCnv(reservat.rs_altid), "al_buildng")
			IF NOT EMPTY(l_cBuilding)
				l_cWhereBuilding = "roomtype.rt_buildng == [" + l_cBuilding + "]"
			ENDIF
		ENDIF
		cfEat = EVL(this.stxtFeature.Value,'***')
		this.nRoomNameWidth = 30
		this.nRoomTypeWidth = 30
		nsIze = 0
		ncUrarea = Select()
		SELECT roomplan
		l_cRoomplanOrder = ORDER()
		SET ORDER TO TAG Tag1
		lcurRfRooms = SYS(2015)
		* Get all rooms related with at least one feature.
		SELECT rf_roomnum FROM (this.stxtFeature.curSelect) ;
			INNER JOIN roomfeat ON rf_feature = c_feature ;
			WHERE c_selected ;
			GROUP BY 1 INTO CURSOR (lcurRfRooms) READWRITE
		INDEX ON rf_roomnum TAG rf_roomnum
		Select roOm
		noRd = Order()
		nrEc = Recno()
		Set Order In "room" To 2
		If Alltrim(pcRoomtype) = "*"&&Search all free rooms
			Set Order In "room" To 4
			LOrderRoomtype = Order('roomtype')
			Set Order To 1 In Roomtype
			Set Relation To rm_roomtyp Into Roomtype&& for rt_group check
			Go Top In 'room'
			If thisform.chcleanfirst.Value=1
				* clean room first, all roomtypes
				Do While !Eof('room')
					If &l_cWhereBuilding AND (cfEat=="***" OR SEEK(roOm.rm_roomnum, lcurRfRooms, 'rf_roomnum'))
						Select roOmplan
						Set Near On
						=SEEK(roOm.rm_roomnum+Dtos(pdArrival),'roomplan','tag1')
						Set Near Off
						LOCATE REST FOR (rp_nights > 0 OR (SEEK(rp_reserid, "reservat","Tag1") AND ;
								NOT INLIST(reservat.rs_status, "OUT", "NS", "CXL"))) ;
								WHILE rp_roomnum=roOm.rm_roomnum .And. rp_date<=dCompareDep
						If  !Found() And Upper(roOm.rm_status) = "CLN" And !Inlist(Roomtype.rt_group, 2, 3)
							Select roOm
							nsIze = nsIze+1
							this.m_getmydata(nsIze, rm_roomnum, pdArrival)
						Endif
					Endif
					Select roOm
					Skip 1
				ENDDO
				Go Top In 'room'
				Do While !Eof('room')
					If &l_cWhereBuilding AND (cfEat=="***" OR SEEK(roOm.rm_roomnum, lcurRfRooms, 'rf_roomnum'))
						Select roOmplan
						Set Near On
						=SEEK(roOm.rm_roomnum+Dtos(pdArrival),'roomplan','tag1')
						Set Near Off
						LOCATE REST FOR (rp_nights > 0 OR (SEEK(rp_reserid, "reservat","Tag1") AND ;
								NOT INLIST(reservat.rs_status, "OUT", "NS", "CXL"))) ;
								WHILE rp_roomnum=roOm.rm_roomnum .And. rp_date<=dCompareDep
						If  !Found() And Upper(roOm.rm_status) <> "CLN" And !Inlist(Roomtype.rt_group, 2, 3)
							Select roOm
							nsIze = nsIze+1
							this.m_getmydata(nsIze, rm_roomnum, pdArrival)
						Endif
					Endif
					Select roOm
					Skip 1
				ENDDO	
			ELSE
				* all room types
				Do While !Eof('room')
					If &l_cWhereBuilding AND (cfEat=="***" OR SEEK(roOm.rm_roomnum, lcurRfRooms, 'rf_roomnum'))
						Select roOmplan
						Set Near On
						=SEEK(roOm.rm_roomnum+Dtos(pdArrival),'roomplan','tag1')
						Set Near Off
						LOCATE REST FOR (rp_nights > 0 OR (SEEK(rp_reserid, "reservat","Tag1") AND ;
								NOT INLIST(reservat.rs_status, "OUT", "NS", "CXL"))) ;
								WHILE rp_roomnum=roOm.rm_roomnum .And. rp_date<=dCompareDep
						If  !Found() And Upper(roOm.rm_status) = "CLN" And !Inlist(Roomtype.rt_group, 2, 3)
							Select roOm
							nsIze = nsIze+1
							this.m_getmydata(nsIze, rm_roomnum, pdArrival)
						Endif
					Endif
					Select roOm
					Skip 1
				ENDDO
			endif
			Set Relation To && break relation
			Set Order To LOrderRoomtype In Roomtype
		ELSE
			=SEEK(pcRoomtype,'room','tag2')
			If thisform.chcleanfirst.Value=1
				Do While roOm.rm_roomtyp=pcRoomtype
					If &l_cWhereBuilding AND (cfEat=="***" OR SEEK(roOm.rm_roomnum, lcurRfRooms, 'rf_roomnum')) AND this.CheckPersons()
						Select roOmplan
						Set Near On
						=SEEK(roOm.rm_roomnum+Dtos(pdArrival),'roomplan','tag1')
						Set Near Off
						LOCATE REST FOR (rp_nights > 0 OR (SEEK(rp_reserid, "reservat","Tag1") AND ;
								NOT INLIST(reservat.rs_status, "OUT", "NS", "CXL"))) ;
								WHILE rp_roomnum=roOm.rm_roomnum .And. rp_date<=dCompareDep
						If !Found() And Upper(roOm.rm_status) = "CLN"
							Select roOm
							nsIze = nsIze+1
							this.m_getmydata(nsIze, rm_roomnum, pdArrival)
						Endif
					Endif
					Select roOm
					Skip 1
				Enddo
				Select roOm
				Seek pcRoomtype
				Do While roOm.rm_roomtyp=pcRoomtype
					If &l_cWhereBuilding AND (cfEat=="***" OR SEEK(roOm.rm_roomnum, lcurRfRooms, 'rf_roomnum')) AND this.CheckPersons()
						Select roOmplan
						Set Near On
						=SEEK(roOm.rm_roomnum+Dtos(pdArrival),'roomplan','tag1')
						Set Near Off
						LOCATE REST FOR (rp_nights > 0 OR (SEEK(rp_reserid, "reservat","Tag1") AND ;
								NOT INLIST(reservat.rs_status, "OUT", "NS", "CXL"))) ;
								WHILE rp_roomnum=roOm.rm_roomnum .And. rp_date<=dCompareDep
						If !Found() And Upper(roOm.rm_status) <> "CLN"
							Select roOm
							nsIze = nsIze+1
							this.m_getmydata(nsIze, rm_roomnum, pdArrival)
						Endif
					Endif
					Select roOm
					Skip 1
				Enddo
			Else
				Do While roOm.rm_roomtyp=pcRoomtype
					If &l_cWhereBuilding AND (cfEat=="***" OR SEEK(roOm.rm_roomnum, lcurRfRooms, 'rf_roomnum')) AND this.CheckPersons()
						Select roOmplan
						Set Near On
						=SEEK(roOm.rm_roomnum+Dtos(pdArrival),'roomplan','tag1')
						Set Near Off
						LOCATE REST FOR (rp_nights > 0 OR (SEEK(rp_reserid, "reservat","Tag1") AND ;
								NOT INLIST(reservat.rs_status, "OUT", "NS", "CXL"))) ;
								WHILE rp_roomnum=roOm.rm_roomnum .And. rp_date<=dCompareDep
						If !Found()
							Select roOm
							nsIze = nsIze+1
							this.m_getmydata(nsIze, rm_roomnum, pdArrival)
						Endif
					Endif
					Select roOm
					Skip 1
				Enddo
			Endif
		Endif
		DClose(lcurRfRooms)
		If nsIze=0
			this.m_getmydata(1)
		ENDIF
		Select roOm
		Set Order To noRd
		Goto nrEc
		GO l_nReservatRecNo IN reservat
		SELECT roomplan
		SET ORDER TO &l_cRoomplanOrder
		Select (ncUrarea)
		thisform.lbrooms.ColumnWidths = STRTRAN(STR(this.nRoomNameWidth+20)+","+STR(this.nRoomTypeWidth+20)," ")+",40,130"
		thisform.lbrooms.RowSource = 'thisform.aRoom'
		thisform.Refresh
		thisform.lbrooms.SetFocus
		KEYBOARD '{DNARROW}'
		
		RETURN .T.
	ENDPROC

	PROCEDURE m_getmydata		&& Returns padded string. Recives Arrival Date as Parameter. Selected record in room.dbf is expected.
		LPARAMETERS lp_nSize, lp_cRoomnum, lp_dArrival
		DIMENSION this.aRoom[lp_nSize,6]
		IF EMPTY(lp_cRoomnum)
			this.aRoom[lp_nSize, 1] = "*"
			this.aRoom[lp_nSize, 2] = "****"
			this.aRoom[lp_nSize, 3] = ""
			this.aRoom[lp_nSize, 4] = ""
			this.aRoom[lp_nSize, 5] = ""
			this.aRoom[lp_nSize, 6] = ""
		ELSE
			this.aRoom[lp_nSize, 1] = room.rm_rmname
			this.aRoom[lp_nSize, 2] = Get_rt_roomtyp(room.rm_roomtyp)
			this.aRoom[lp_nSize, 3] = IIF(lp_dArrival = SysDate(), room.rm_status, "")
			this.aRoom[lp_nSize, 4] = EVALUATE("room.rm_lang" + g_Langnum)
			this.aRoom[lp_nSize, 5] = lp_cRoomnum
			this.aRoom[lp_nSize, 6] = room.rm_roomtyp
			this.nRoomNameWidth = MAX(this.nRoomNameWidth, this.TextWidth(ALLTRIM(this.aRoom[lp_nSize, 1])))
			this.nRoomTypeWidth = MAX(this.nRoomTypeWidth, this.TextWidth(ALLTRIM(this.aRoom[lp_nSize, 2])))
		ENDIF
	ENDPROC

	PROCEDURE QueryUnload
		this.cmdCancel.Click
		
	ENDPROC

	PROCEDURE setcontrolsource
		*LOCAL ARRAY laFeatures(1)
		
		*SqlCursor("SELECT roomfeat.*, CAST('' AS Char(4)) AS rt_roomtyp, CAST('' AS Char(3)) AS rt_buildng, 0 AS rt_group, CAST('' AS Char(25)) AS pl_lang, CAST('' AS Char(10)) AS c_hotcode FROM roomfeat WHERE 0=1", ;
			"curRoomfeat",,,,,,.T.)
		*laFeatures(1) = .F.
		*RpGetFeatures(@laFeatures)
		*IF ALEN(laFeatures) > 1
		*	INSERT INTO curRoomfeat FROM ARRAY laFeatures
		*ENDIF
		thisform.edtNote.ControlSource = "thisform.cNote"
	ENDPROC

	PROCEDURE setfeatures
		LOCAL i, lcWhere, ltmpSelect, lcLang
		
		lcWhere = "rt_group = 1"
		
		DO CASE
			CASE NOT EMPTY(this.cbRoomtype.Value)
				lcWhere = "rt_roomtyp = " + SqlCnv(PADR(this.cbRoomtype.Value,4),.T.)
			CASE NOT EMPTY(this.cbRoomtype.cBuilding)
				lcWhere = lcWhere + " AND rt_buildng = " + SqlCnv(PADR(this.cbRoomtype.cBuilding,3),.T.)
			OTHERWISE
		ENDCASE
		
		ltmpSelect = SYS(2015)
		IF USED(this.stxtFeature.curSelect)
			SELECT c_selected, c_feature FROM (this.stxtFeature.curSelect) WHERE NOT EMPTY(c_feature) AND c_selected INTO CURSOR (ltmpSelect)
		ELSE
			CREATE CURSOR (ltmpSelect) (c_selected L, c_feature C(3))
		ENDIF
		
		*SELECT NVL(c_selected,0=1) AS c_selected, rf_feature AS c_feature, pl_lang, c_hotcode, 1 AS c_order FROM curRoomfeat ;
			LEFT JOIN &ltmpSelect ON rf_feature = c_feature ;
			WHERE &lcWhere ;
			GROUP BY 2 ;
			INTO CURSOR (ltmpSelect) READWRITE
		lcLang = "pl_lang"+g_Langnum
		SELECT NVL(c_selected,0=1) AS c_selected, pl_charcod AS c_feature, &lcLang AS pl_lang, "" AS c_hotcode, 1 AS c_order FROM picklist ;
			LEFT JOIN &ltmpSelect ON pl_charcod = c_feature ;
			WHERE pl_label = 'FEATURE   ' ;
			GROUP BY 2 ;
			INTO CURSOR (ltmpSelect) READWRITE
		LOCATE FOR c_selected
		INSERT INTO (ltmpSelect) (c_selected, pl_lang) VALUES (NOT FOUND(ltmpSelect), "<"+GetLangText("COMMON","TXT_ALL")+">")
		
		SELECT c_selected, c_feature, pl_lang FROM (ltmpSelect) ORDER BY c_order INTO CURSOR (this.stxtFeature.curSelect) READWRITE
		
		DClose(ltmpSelect)
	ENDPROC

	PROCEDURE showcheckpersonstoggle
		LOCAL nRoomGroup, cSelectedRoomType
		cSelectedRoomType = this.cbroomtype.Value
		nRoomGroup = dlookup('roomtype','rt_roomtyp = ' + sqlcnv(cSelectedRoomType),'rt_group')
		IF nRoomGroup = 2
			IF NOT thisform.chcheckpersons.Visible
				thisform.chcheckpersons.Visible = .T.
			ENDIF
		ELSE
			IF thisform.chcheckpersons.Visible
				thisform.lcheckpersons = .F.
				thisform.chcheckpersons.Visible = .F.
			ENDIF
		ENDIF
		
		RETURN .T.
	ENDPROC

	PROCEDURE Unload
		LOCAL i, j, l_oResBrw, l_nXPos, l_nYPos
		
		IF thisform.plcancel
			IF INLIST(thisform.nmode,6,7)
				POP KEY
			ENDIF
			RETURN
		endif
		
		Do Case
		Case This.NMOde=2 && RESBRW
			If This.lok .And. reservat.rs_rooms=1 .And. reservat.rs_roomnum<>Thisform.rs_roomnum
				l_oResBrw = .NULL.
				FOR j=1 To _Screen.FormCount
					IF ALLTRIM(UPPER(_Screen.Forms(j).Name))=='RESBRW'
						l_oResBrw = _Screen.Forms(j)
						EXIT
					ENDIF
				ENDFOR
				IF NOT ISNULL(l_oResBrw)
					Set DataSession To l_oResBrw.DataSessionId
					= SEEK(reservat3.rs_reserid, "reservat", "tag1")
					SELECT reservat
					REPLACE rs_roomtyp WITH This.rs_roomtyp IN reservat
					REPLACE rs_roomnum WITH This.rs_roomnum IN reservat
					l_nXPos = INT(this.Width/2)
					l_nYPos = INT(this.Height/2)
					l_oResBrw.checkreservat1.cAction = "CHANGEROOM" + ALLTRIM(STR(l_nXPos))+","+ALLTRIM(STR(l_nYPos))
					l_oResBrw.checkreservat1.lResrateUpdateFromReservat = .T.
					l_oResBrw.checkreservat1.plapplygroupchanges = .F.
					l_oResBrw.checkreservat1.CheckAndSave()
					l_oResBrw.checkreservat1.lResrateUpdateFromReservat = .F.
					l_oResBrw.checkreservat1.plapplygroupchanges = .T.
					SET DATASESSION TO this.p_datasession
					LOCAL l_lZapCursor, l_lBrowseFromSelected
					l_lZapCursor = .F.
					l_lBrowseFromSelected = .T.
					l_oResBrw.RsbGrid.RequeryCursor(l_lZapCursor, l_lBrowseFromSelected)
				ENDIF
			Endif
		
		Case This.NMOde=3 && RESERVAT
			If This.lok .And. reservat.rs_rooms=1 .And. reservat.rs_roomnum<>Thisform.rs_roomnum
				For i=1 To _Screen.FormCount
					IF TYPE("_Screen.Forms(i).formname") = "C"
						IF UPPER(_Screen.Forms(i).formname)="RESERVAT"					
							Set DataSession To _Screen.Forms(i).Parent.DataSessionId
							Replace rs_roomtyp With This.rs_roomtyp In reservat
							Replace rs_roomnum With This.rs_roomnum In reservat
							SET DATASESSION TO this.p_datasession
							EXIT
						Endif
					Endif
				Next
			Endif
		Case This.NMOde=4 && ROOMLIST
			For i=1 To _Screen.FormCount
				If Alltrim(Upper(_Screen.Forms(i).Name))=='FORMEDIT'
					If _Screen.Forms(i).Parent.cbroomnumgotfocus
						Set DataSession To _Screen.Forms(i).DataSessionId
						IF This.rs_roomtyp <> reservat.rs_roomtyp
							Replace rs_roomtyp With This.rs_roomtyp In reservat
							_Screen.Forms(i).cbroomtype.Refresh()
							_Screen.Forms(i).cbo_rs_roomnum.Requery()
						ENDIF
						Replace rs_roomnum With This.rs_roomnum In reservat
						_Screen.Forms(i).cbo_rs_roomnum.Refresh()
						SET DATASESSION TO this.p_datasession
					Endif
					EXIT
				Endif
			Next
		Case This.NMOde=5 && RESERVAT EDIT FORM
			For i=1 To _Screen.FormCount
				If Alltrim(Upper(_Screen.Forms(i).Name))=="FORMEDITRES"
					Set DataSession To _Screen.Forms(i).DataSessionId
					IF This.rs_roomtyp <> reservat.rs_roomtyp
						Replace rs_roomtyp With This.rs_roomtyp In reservat
						_Screen.Forms(i).cbroomtyp.Refresh()
						_Screen.Forms(i).cbo_rs_roomnum.Requery()
					ENDIF
					Replace rs_roomnum With This.rs_roomnum In reservat
					_Screen.Forms(i).cbo_rs_roomnum.Refresh()
					SET DATASESSION TO this.p_datasession
					EXIT
				Endif
			Next
		Case This.NMOde=6 && OLD RESERVATION
			POP key
			NCURROW=AGETROW()
			a_Data[ncUrrow, 8] = This.rs_roomnum
			Show Get a_Data[ncUrrow, 8]
			If a_Data(ncUrrow,7)<>This.rs_roomtyp
				a_Data[ncUrrow, 7] = This.rs_roomtyp
				Show Get a_Data[ncUrrow, 7]
			ENDIF
			SELECT RESERVAT
		Case This.NMOde=7 && OLD RESERVATION BROWSE
			POP KEY 
			If !(reservat.rs_roomnum==This.rs_roomnum) .And. reservat.rs_rooms=1
				lcAncel = .F.
				Do caNdrop In Plan With lcAncel
				If  !lcAncel
					If  !Empty(reservat.rs_in)
						Do ifCcheck In Interfac With reservat.rs_roomnum, "CHECKOUT"
						Do ifCcheck In Interfac With crOomnum,"CHECKIN"
					Endif
					= avLsave()
					Replace reservat.rs_roomnum With This.rs_roomnum,reservat.rs_roomtyp With This.rs_roomtyp
					= avLupdat()
		*					Select (naRea)
					Do Move In MyBrowse With 0
				Endif
			ENDIF
			SELECT reservat
		CASE this.NMOde = 8 && QUICKEDIT
			FOR i = 1 TO _Screen.FormCount
				IF ALLTRIM(UPPER(_Screen.Forms(i).Name)) == 'FORMDETAIL'
					SET DATASESSION TO _Screen.Forms(i).DataSessionId
					IF This.rs_roomtyp <> reservat.rs_roomtyp
						Replace rs_roomtyp With This.rs_roomtyp In reservat
						_Screen.Forms(i).cbroomtyp.Refresh()
						_Screen.Forms(i).cbo_rs_roomnum.Requery()
					ENDIF
					Replace rs_roomnum With This.rs_roomnum In reservat
					_Screen.Forms(i).cbo_rs_roomnum.Refresh()
					SET DATASESSION TO this.p_datasession
					EXIT
				ENDIF
			NEXT
		CASE this.NMOde = 9 &&QUICKRESER
			FOR i=1 To _Screen.FormCount
				IF Alltrim(Upper(_Screen.Forms(i).Name))=='FRMQUICKRESER'
					SET DATASESSION TO _Screen.Forms(i).DataSessionId
					IF This.rs_roomtyp <> reservat.rs_roomtyp
						Replace rs_roomtyp With This.rs_roomtyp In reservat
						_Screen.Forms(i).cboRoomTyp.Refresh()
						_Screen.Forms(i).Cbo_rs_roomnum.Requery()
					ENDIF
					Replace rs_roomnum With This.rs_roomnum In reservat
					_Screen.Forms(i).Cbo_rs_roomnum.Refresh()
					SET DATASESSION TO this.p_datasession
				ENDIF
			NEXT
		ENDCASE
		
	ENDPROC

	PROCEDURE cbroomtype.Init
		this.lBuildingExclusive = g_lShips
		
		DODEFAULT()
	ENDPROC

	PROCEDURE cbroomtype.LostFocus
		thisform.ShowCheckPersonsToggle()
		
		RETURN .T.
	ENDPROC

	PROCEDURE cmdCancel.Click
		thisform.plcancel=.t.
		thisform.release
		
	ENDPROC

	PROCEDURE cmdFind.Click
		thisform.m_fillroom()
		
	ENDPROC

	PROCEDURE cmdOK.Click
		If NOT EMPTY(Thisform.LBRooms.List(thisform.lbrooms.ListIndex))   &&Thisform.LBRooms.ListINDEX>0
			Thisform.lok=.T.
			Thisform.rs_roomnum=Thisform.aroom(Thisform.LBRooms.ListIndex,5)
			Thisform.rs_roomtyp=Thisform.aroom(Thisform.LBRooms.ListIndex,6)
			Thisform.Release()
		ELSE
			=Alert(GetLangText("GETROOM","TW_GETROOM"))
		Endif
		
	ENDPROC

	PROCEDURE stxtFeature.GotFocus
		thisform.SetFeatures()
	ENDPROC

ENDDEFINE
