*--------------------------------------------------------------------------------------------------------------------------------------------------------
* (ES) AUTOGENERADO - ¡¡ATENCIÓN!! - ¡¡NO PENSADO PARA EJECUTAR!! USAR SOLAMENTE PARA INTEGRAR CAMBIOS Y ALMACENAR CON HERRAMIENTAS SCM!!
* (EN) AUTOGENERATED - ATTENTION!! - NOT INTENDED FOR EXECUTION!! USE ONLY FOR MERGING CHANGES AND STORING WITH SCM TOOLS!!
*--------------------------------------------------------------------------------------------------------------------------------------------------------
*< FOXBIN2PRG: Version="1.19" SourceFile="phonenote.scx" /> (Solo para binarios VFP 9 / Only for VFP 9 binaries)
*
*
DEFINE CLASS dataenvironment AS dataenvironment 
 	*< CLASSDATA: Baseclass="dataenvironment" Timestamp="" Scale="" Uniqueid="" ClassIcon="2" />

	DataSource = .NULL.
	Height = 0
	Left = 0
	Name = "Dataenvironment"
	Top = 0
	Width = 0

ENDDEFINE

DEFINE CLASS phonenote AS tform OF "..\libs\main.vcx" 
 	*< CLASSDATA: Baseclass="form" Timestamp="" Scale="" Uniqueid="" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="TlDescription" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="TtDescription" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="TlPhoneDate" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="ttdate" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="TlStartTime" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="TtStartTime" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="TlEndTime" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="TtEndTime" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="tlApartner" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cboApartner" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="ChAction" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="TlMessage" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="TeditboxNote" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="TlUser" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="TlDate" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="TlUpdatedUser" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="TlUpdatedDate" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="TcbOK" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="TcbCancel" UniqueID="" Timestamp="" />

	*<DefinedPropArrayMethod>
		*p: capname
		*p: p_action		&& Logical value that shows should actions be called.
		*p: p_calling_form		&& Name of Form which called this form
	*</DefinedPropArrayMethod>

	Caption = "PhoneNote"
	ControlBox = .T.
	DataSession = 2
	DoCreate = .T.
	doini = .T.
	Height = 400
	Icon = ..\bitmap\icons\phone01.ico
	Name = "PHONENOTE"
	saveformsize = .T.
	Width = 396
	WindowType = 1

	ADD OBJECT 'cboApartner' AS tcombobox WITH ;
		ColumnCount = 2, ;
		ColumnLines = .F., ;
		ColumnWidths = "100,100", ;
		Left = 108, ;
		Name = "cboApartner", ;
		Style = 2, ;
		Top = 108, ;
		Width = 211, ;
		ZOrderSet = 9
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="combobox" />

	ADD OBJECT 'ChAction' AS tcheckbox WITH ;
		Alignment = 0, ;
		Caption = "ChAction", ;
		Left = 12, ;
		Name = "ChAction", ;
		Top = 135, ;
		Width = 372, ;
		ZOrderSet = 10
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="checkbox" />

	ADD OBJECT 'TcbCancel' AS tcommandbutton WITH ;
		Caption = "TcbCancel", ;
		Left = 204, ;
		Name = "TcbCancel", ;
		Top = 360, ;
		ZOrderSet = 18
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'TcbOK' AS tcommandbutton WITH ;
		Caption = "TcbOK", ;
		Left = 108, ;
		Name = "TcbOK", ;
		Top = 360, ;
		ZOrderSet = 17
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'TeditboxNote' AS teditbox WITH ;
		Height = 119, ;
		Left = 12, ;
		Name = "TeditboxNote", ;
		nlineheight = 5, ;
		Top = 180, ;
		Width = 372, ;
		ZOrderSet = 12
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="editbox" />

	ADD OBJECT 'tlApartner' AS tlabel WITH ;
		Caption = "tlApartner", ;
		Left = 12, ;
		Name = "tlApartner", ;
		Top = 111, ;
		Width = 96, ;
		ZOrderSet = 8
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'TlDate' AS tlabel WITH ;
		Caption = "TlDate", ;
		Left = 192, ;
		Name = "TlDate", ;
		Top = 303, ;
		Width = 192, ;
		ZOrderSet = 14
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'TlDescription' AS tlabel WITH ;
		Caption = "TlDescription", ;
		Left = 12, ;
		Name = "TlDescription", ;
		Top = 15, ;
		Width = 96, ;
		ZOrderSet = 0
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'TlEndTime' AS tlabel WITH ;
		Caption = "TlEndTime", ;
		Left = 12, ;
		Name = "TlEndTime", ;
		Top = 87, ;
		Width = 96, ;
		ZOrderSet = 6
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'TlMessage' AS tlabel WITH ;
		Caption = "TlMessage", ;
		Left = 12, ;
		Name = "TlMessage", ;
		Top = 159, ;
		Width = 108, ;
		ZOrderSet = 11
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'TlPhoneDate' AS tlabel WITH ;
		Caption = "TlPhoneDate", ;
		Left = 12, ;
		Name = "TlPhoneDate", ;
		Top = 39, ;
		Width = 96, ;
		ZOrderSet = 2
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'TlStartTime' AS tlabel WITH ;
		Caption = "TlStartTime", ;
		Left = 12, ;
		Name = "TlStartTime", ;
		Top = 63, ;
		Width = 96, ;
		ZOrderSet = 4
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'TlUpdatedDate' AS tlabel WITH ;
		Caption = "", ;
		Left = 192, ;
		Name = "TlUpdatedDate", ;
		Top = 327, ;
		Width = 192, ;
		ZOrderSet = 16
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'TlUpdatedUser' AS tlabel WITH ;
		Caption = "", ;
		Left = 12, ;
		Name = "TlUpdatedUser", ;
		Top = 327, ;
		Width = 175, ;
		ZOrderSet = 15
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'TlUser' AS tlabel WITH ;
		Caption = "TlUser", ;
		Left = 12, ;
		Name = "TlUser", ;
		Top = 303, ;
		Width = 175, ;
		ZOrderSet = 13
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'ttdate' AS tdatectrl WITH ;
		Left = 108, ;
		Name = "ttdate", ;
		resizefontsize = .T., ;
		Top = 36, ;
		ZOrderSet = 3
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />

	ADD OBJECT 'TtDescription' AS ttext WITH ;
		Left = 108, ;
		Name = "TtDescription", ;
		Top = 12, ;
		Width = 276, ;
		ZOrderSet = 1
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />

	ADD OBJECT 'TtEndTime' AS ttext WITH ;
		Alignment = 0, ;
		InputMask = "99:99", ;
		Left = 108, ;
		Name = "TtEndTime", ;
		Top = 84, ;
		ZOrderSet = 7
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />

	ADD OBJECT 'TtStartTime' AS ttext WITH ;
		Alignment = 0, ;
		InputMask = "99:99", ;
		Left = 108, ;
		Name = "TtStartTime", ;
		Top = 60, ;
		ZOrderSet = 5
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />
	
	PROCEDURE assigncaption
		this.Caption = GetLangText("ADDRESS","TXT_PHONENOTE")
		this.tlUser.Caption = GetLangText("MGRSYS","TXT_USBROW")+":"
		this.tldate.Caption = GetLangText("RESERVAT","T_CHANGED")+":"
		this.tldescription.Caption = GetLangText("DOC","T_DESCR")
		this.tlPhoneDate.Caption = GetLangText("PHONENOTE","TXT_NOTE_DATE")
		this.tlstartTime.Caption = GetLangText("PHONENOTE","TXT_START_TIME")
		this.tlendTime.Caption = GetLangText("PHONENOTE","TXT_END_TIME")
		this.tlMessage.Caption = GetLangText("PHONENOTE","TXT_NOTE")+":"
		this.tcbCancel.Caption = GetLangText("COMMON","TXT_CANCEL")
		this.tcbOK.Caption = GetLangText("COMMON","TXT_OK")
		this.chAction.Caption = GetLangText("PHONENOTE","TXT_ACTION")
		this.tlApartner.Caption = GetLangText("PHONENOTE","TXT_CONTACT_PARTNER")
		
	ENDPROC

	PROCEDURE Init
		LPARAMETERS PParamArray
		this.ttDescription.SetFocus()
		LOCAL ARRAY LParamArray(ALEN(PParamArray,1))
		ACOPY(PParamArray,LParamArray)
		
		* LParamArray[1] - Name of Form which called this form
		* LParamArray[2] - Datasession from calling Form
		* LParamArray[3] - Mode - "EDIT" or "NEW"
		* LParamArray[4] - If Mode "EDIT", value for this.TLUpdatedDate.Caption
		* LParamArray[5] - If Mode "EDIT", value for this.TLUpdatedUser.Caption
		LOCAL LTime
		this.p_calling_form = LParamArray[1]
		this.DataSessionId = LParamArray[2]
		this.assigncaption()
		this.Tag = LParamArray[3]
		this.p_action = .F.
		this.ttDate.ControlSource = [phnote.ph_date]
		this.ttStartTime.ControlSource = [phnote.ph_startt]
		this.ttEndTime.ControlSource = [phnote.ph_endt]
		this.teditboxNote.ControlSource = [phnote.ph_note]
		this.ttDescription.ControlSource = [document.dc_descr]
		
		* Initialize Apartner combo
		SELECT ap_lname, ap_fname, ap_apid, ap_addrid FROM apartner WHERE ap_addrid = address.ad_addrid ;
				INTO CURSOR cur_phoneapartner READWRITE
		IF NOT EMPTY(address.ad_lname)
			INSERT INTO cur_phoneapartner (ap_apid, ap_addrid, ap_lname) VALUES (0, address.ad_addrid, address.ad_lname)
		ENDIF
		APPEND BLANK
		thisform.capname = ""
		this.cboApartner.RowSourceType = 2
		this.cboApartner.RowSource = "cur_phoneapartner"
		this.cboApartner.ControlSource = "thisform.capname"
		*
		this.chAction.ControlSource = [thisform.p_action]
		DO CASE
			CASE LParamArray[3] = "EDIT"
				this.TLUpdatedDate.Caption = LParamArray[4]
				this.TLUpdatedUser.Caption = LParamArray[5]
			CASE LParamArray[3] = "NEW"
				APPEND BLANK IN phnote
				APPEND BLANK IN document
				LTime = TIME()
				this.ttdescription.Value = GetLangText("PHONENOTE","TXT_DESCRIPTION") + " " + TTOC(DATETIME())
				replace phnote.ph_date WITH DATE() IN phnote
				replace phnote.ph_startt WITH LTime IN phnote
				replace phnote.ph_endt WITH LTime IN phnote
		ENDCASE
		
		* position on right apartner in combobox
		SELECT cur_phoneapartner
		LOCATE FOR ap_apid = phnote.ph_apid AND ap_addrid = phnote.ph_addrid
		IF NOT FOUND()
			GO BOTTOM
		ENDIF
		thisform.capname = ap_lname
		
		this.Refresh()
		DODEFAULT()
		
	ENDPROC

	PROCEDURE KeyPress
		LPARAMETERS nKeyCode, nShiftAltCtrl
		IF nKeyCode = 27
			this.tcbCancel.Click()
			NODEFAULT
		ENDIF
	ENDPROC

	PROCEDURE QueryUnload
		this.tcbCancel.Click()
	ENDPROC

	PROCEDURE Unload
		IF USED("cur_phoneapartner")
			USE IN cur_phoneapartner
		ENDIF
		FOR i = 1 TO _screen.formCount
			DO CASE
				CASE this.p_calling_form = UPPER(_screen.forms(i).name)
					_screen.forms(i).MAINPAGE.PAGEADDRESS.SLAVEPAGE.PAGEDOKUMENT.DOKUMENTGRID.refresh
			ENDCASE
		NEXT i
		RETURN this.p_action
	ENDPROC

	PROCEDURE cboApartner.InteractiveChange
		REPLACE ph_apid WITH cur_phoneapartner.ap_apid, ph_addrid WITH cur_phoneapartner.ap_addrid IN phnote
		
		RETURN .T.
	ENDPROC

	PROCEDURE TcbCancel.Click
		IF thisform.Tag = "NEW"
			DELETE IN phnote
			DELETE IN document
		ENDIF
		=TABLEREVERT(.t.,'document')
		thisform.Tag = ""
		*thisform.Caption = ""
		*thisform.Visible = .F.
		thisform.p_action = .F.
		thisform.Release()
	ENDPROC

	PROCEDURE TcbOK.Click
		LOCAL LPNewId, LDNewId, LFilter
		IF thisform.Tag = "NEW"
			LPNewId = nextid("PHNOTE")
			LDNewId = nextid("DOCUMENT")
			replace phnote.ph_id WITH LPNewId ;
					phnote.ph_docid WITH LDNewId ;
				    phnote.ph_updated WITH DATETIME() ;
				    phnote.ph_upuser WITH g_userid ;
				    phnote.ph_user WITH g_userid ;
					IN phnote
			replace document.dc_file WITH ALLTRIM(STR(LDNewId)), ;
					document.dc_type WITH "TELENOTE" ;
					document.dc_date WITH DATE(), ;
					document.dc_time WITH TIME() ;
					document.dc_addrid WITH address.ad_addrid ;
					document.dc_userid WITH g_userid ;
					IN document
			=TABLEUPDATE(.t.,.t.,'document')
			LFilter = FILTER('document')
			IF !EMPTY(LFilter) AND AT("TELENOTE",LFilter)=0
				SET FILTER TO IN document
		*		_screen.fAddressMask.mainPage.pageAddress.slavePage.pageDokument.dokumentGrid.Refresh()
			ENDIF
		ELSE
			replace phnote.ph_updated WITH DATETIME() ;
					phnote.ph_upuser WITH g_userid ;
					IN phnote
		ENDIF
		thisform.tag = ""
		*thisform.Caption = ""
		*thisform.Visible = .F.
		thisform.Release()
	ENDPROC

	PROCEDURE TtEndTime.Valid
		LOCAL LTime
		LTime = checktime(this.Value)
		IF !EMPTY(LTime)
			replace phnote.ph_endt WITH LTime IN phnote
			RETURN .T.
		ELSE
			RETURN .f.
		ENDIF
		
	ENDPROC

	PROCEDURE TtStartTime.Valid
		LOCAL LTime
		LTime = checktime(this.Value)
		IF !EMPTY(LTime)
			replace phnote.ph_startt WITH LTime IN phnote
			RETURN .T.
		ELSE
			RETURN .f.
		ENDIF
		
	ENDPROC

ENDDEFINE
