*--------------------------------------------------------------------------------------------------------------------------------------------------------
* (ES) AUTOGENERADO - ¡¡ATENCIÓN!! - ¡¡NO PENSADO PARA EJECUTAR!! USAR SOLAMENTE PARA INTEGRAR CAMBIOS Y ALMACENAR CON HERRAMIENTAS SCM!!
* (EN) AUTOGENERATED - ATTENTION!! - NOT INTENDED FOR EXECUTION!! USE ONLY FOR MERGING CHANGES AND STORING WITH SCM TOOLS!!
*--------------------------------------------------------------------------------------------------------------------------------------------------------
*< FOXBIN2PRG: Version="1.19" SourceFile="selformset.scx" /> (Solo para binarios VFP 9 / Only for VFP 9 binaries)
*
*
#INCLUDE "..\include\constdefines.h"

DEFINE CLASS dataenvironment AS dataenvironment 
 	*< CLASSDATA: Baseclass="dataenvironment" Timestamp="" Scale="" Uniqueid="" ClassIcon="2" />

	DataSource = .NULL.
	Height = 294
	Left = 20
	Name = "Dataenvironment"
	Top = 172
	Width = 672

ENDDEFINE

DEFINE CLASS selformset AS formset 
 	*< CLASSDATA: Baseclass="formset" Timestamp="" Scale="" Uniqueid="" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="SelectForm" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="SelectForm.SelectGrid" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="SelectForm.SelectGrid.Column1.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="SelectForm.SelectGrid.Column1.Text1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="SelectForm.SelectGrid.Column2.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="SelectForm.SelectGrid.Column2.Text1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="SelectForm.SelectGrid.Column3.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="SelectForm.SelectGrid.Column3.Text1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="SelectForm.SelectGrid.Column4.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="SelectForm.SelectGrid.Column4.Text1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="SelectForm.SelectGrid.Column5.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="SelectForm.SelectGrid.Column5.Text1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="SelectForm.SelectGrid.Column6.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="SelectForm.SelectGrid.Column6.Text1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="SelectForm.SelectGrid.Column7.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="SelectForm.SelectGrid.Column7.Text1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="SelectForm.SelectGrid.Column8.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="SelectForm.SelectGrid.Column8.Text1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="SelectForm.SelectGrid.Column9.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="SelectForm.SelectGrid.Column9.Text1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="SelectForm.SelectGrid.Column10.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="SelectForm.SelectGrid.Column10.Text1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="SelectForm.SelectGrid.Column11.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="SelectForm.SelectGrid.Column11.Text1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="SelectForm.SelectGrid.Column12.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="SelectForm.SelectGrid.Column12.Text1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="SelectForm.SelectGrid.Column13.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="SelectForm.SelectGrid.Column13.Text1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="SelectForm.SelectGrid.Column14.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="SelectForm.SelectGrid.Column14.Text1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="SelectForm.SelectGrid.Column15.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="SelectForm.SelectGrid.Column15.Text1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="SelectForm.SelectGrid.Column16.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="SelectForm.SelectGrid.Column16.Text1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="SelectForm.SelectGrid.Column17.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="SelectForm.SelectGrid.Column17.Text1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="SelectForm.SelectGrid.Column18.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="SelectForm.SelectGrid.Column18.Text1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="SelectForm.SelectGrid.Column19.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="SelectForm.SelectGrid.Column19.Text1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="SelectForm.SelectGrid.Column20.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="SelectForm.SelectGrid.Column20.Text1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="UserForm" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="UserForm.lblName" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="UserForm.txtName" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="UserForm.lblUserID" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="UserForm.txtUserID" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="UserForm.lblLanguage" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="UserForm.cboLanguage" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="UserForm.lblUserGroup" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="UserForm.cboUserGroup" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="UserForm.lblCashier" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="UserForm.txtCashier" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="UserForm.lblDepartment" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="UserForm.txtDepartment" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="UserForm.lblPhone" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="UserForm.txtPhone" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="UserForm.lblFax" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="UserForm.txtFax" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="UserForm.lblEmail" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="UserForm.txtEmail" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="UserForm.cmdOK" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="UserForm.cmdCancel" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="UserForm.cmdPassword" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="UserForm.lblAllowWebServer" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="UserForm.chkAllowWebServer" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="AllottForm" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="AllottForm.LAllottID" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="AllottForm.TBAllottID" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="AllottForm.LBuilding" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="AllottForm.cboBuilding" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="AllottForm.LAllott" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="AllottForm.TBAllott" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="AllottForm.LEvent" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="AllottForm.SelectEventsCmd" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="AllottForm.cboevent" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="AllottForm.LComp" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="AllottForm.TBComp" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="AllottForm.LName" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="AllottForm.CBName" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="AllottForm.LDate" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="AllottForm.TBDate" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="AllottForm.LToDate" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="AllottForm.TBToDate" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="AllottForm.LCutDays" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="AllottForm.TBCutDays" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="AllottForm.LCutDate" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="AllottForm.TBCutDate" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="AllottForm.LNote" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="AllottForm.edtNote" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="AllottForm.LLocation" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="AllottForm.TBLocation" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="AllottForm.LWeekDays" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="AllottForm.CBMonday" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="AllottForm.CBTuesday" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="AllottForm.CBWednseday" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="AllottForm.CBThursday" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="AllottForm.CBFriday" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="AllottForm.CBSaturday" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="AllottForm.CBSunday" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="AllottForm.chkUnallocAllot" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="AllottForm.NextCmd" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="AllottForm.OKCmd" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="AllottForm.CancelCmd" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="AllottSearchForm" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="AllottSearchForm.lblAllottment" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="AllottSearchForm.txtAllottment" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="AllottSearchForm.lblCompany" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="AllottSearchForm.txtCompany" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="AllottSearchForm.lblName" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="AllottSearchForm.txtName" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="AllottSearchForm.lblDate" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="AllottSearchForm.dtxtFromDate" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="AllottSearchForm.dtxtToDate" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="AllottSearchForm.lblBuilding" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="AllottSearchForm.Cbobuilding" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="AllottSearchForm.lblEvent" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="AllottSearchForm.cboEvent" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="AllottSearchForm.chkIncludeHistory" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="AllottSearchForm.cmdOK" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="AllottSearchForm.cmdCancel" UniqueID="" Timestamp="" />

	*<DefinedPropArrayMethod>
		*m: allotdayname
		*m: allotfilllnamecombo
		*m: allotrealocav
		*m: allotupdatesplit
		*m: assigncaption
		*m: chkseason
		*m: dayname
		*m: m_changeallottname		&& Changing allottment name. Change must be done in reservat.dbf and histres.dbf
		*m: setcolors
		*m: ziadd2zoomtable
		*m: ziaddrt
		*m: zidateday
		*m: zidateinallot
		*m: zidbkcol
		*m: zideletert
		*m: zifindrt
		*m: zigetdyncolors
		*m: zipricerefresh
		*p: altsplitchanged
		*p: continuecheck
		*p: firsttime
		*p: formid
		*p: mode
		*p: result
		*p: seloldfilter
		*p: seloldorder
		*p: seloldrecno
	*</DefinedPropArrayMethod>

	AutoRelease = .T.
	DataSession = 2
	firsttime = .T.
	formid = 0
	Name = "SelFormset"
	WindowType = 1

	ADD OBJECT 'AllottForm' AS tform WITH ;
		aligntopedges = .T., ;
		AutoCenter = .T., ;
		Caption = "", ;
		ControlBox = .T., ;
		DoCreate = .T., ;
		Height = 468, ;
		Icon = ..\bitmap\icons\folder06.ico, ;
		MaxButton = .F., ;
		MinButton = .F., ;
		MinHeight = 40, ;
		MinWidth = 40, ;
		Name = "AllottForm", ;
		Visible = .F., ;
		Width = 432, ;
		WindowType = 1
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="form" />

	ADD OBJECT 'AllottForm.CancelCmd' AS tcommandbutton WITH ;
		Cancel = .T., ;
		Caption = "Cancel Cmd", ;
		Left = 222, ;
		Name = "CancelCmd", ;
		Top = 433, ;
		Width = 84, ;
		ZOrderSet = 36
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'AllottForm.CBFriday' AS tcheckbox WITH ;
		Alignment = 0, ;
		AutoSize = .T., ;
		Caption = "CBFriday", ;
		Left = 204, ;
		Name = "CBFriday", ;
		nlineheight = 0, ;
		Top = 376, ;
		Width = 68, ;
		ZOrderSet = 30
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="checkbox" />

	ADD OBJECT 'AllottForm.CBMonday' AS tcheckbox WITH ;
		Alignment = 0, ;
		AutoSize = .T., ;
		Caption = "CBMonday", ;
		Left = 12, ;
		Name = "CBMonday", ;
		Top = 376, ;
		Width = 77, ;
		ZOrderSet = 26
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="checkbox" />

	ADD OBJECT 'AllottForm.CBName' AS tcombobox WITH ;
		Left = 168, ;
		Name = "CBName", ;
		Style = 2, ;
		Top = 133, ;
		Width = 192, ;
		ZOrderSet = 12
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="combobox" />

	ADD OBJECT 'AllottForm.cboBuilding' AS cbobuilding WITH ;
		BoundColumn = 2, ;
		ColumnWidths = "150,50", ;
		crowsource = bu_lang, bu_buildng, ;
		Left = 168, ;
		lselectbuilding = .T., ;
		Name = "cboBuilding", ;
		Style = 2, ;
		Top = 37, ;
		Width = 192, ;
		ZOrderSet = 3
		*< END OBJECT: ClassLib="..\libs\cit_ctrl.vcx" BaseClass="combobox" />

	ADD OBJECT 'AllottForm.cboevent' AS jcombobox WITH ;
		BoundColumn = 2, ;
		Height = 23, ;
		jboundcolumn = 5, ;
		jcolumncount = 4, ;
		jcolumnwidths = 130,120,70,70, ;
		Left = 168, ;
		Name = "cboevent", ;
		Style = 2, ;
		Top = 85, ;
		Width = 252, ;
		ZOrderSet = 8
		*< END OBJECT: ClassLib="..\libs\jbase.vcx" BaseClass="combobox" />

	ADD OBJECT 'AllottForm.CBSaturday' AS tcheckbox WITH ;
		Alignment = 0, ;
		AutoSize = .T., ;
		Caption = "CBSaturday", ;
		Left = 252, ;
		Name = "CBSaturday", ;
		nlineheight = 0, ;
		Top = 376, ;
		Width = 83, ;
		ZOrderSet = 31
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="checkbox" />

	ADD OBJECT 'AllottForm.CBSunday' AS tcheckbox WITH ;
		Alignment = 0, ;
		AutoSize = .T., ;
		Caption = "CBSunday", ;
		Left = 300, ;
		Name = "CBSunday", ;
		nlineheight = 0, ;
		Top = 376, ;
		Width = 76, ;
		ZOrderSet = 32
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="checkbox" />

	ADD OBJECT 'AllottForm.CBThursday' AS tcheckbox WITH ;
		Alignment = 0, ;
		AutoSize = .T., ;
		Caption = "CBThursday", ;
		Left = 156, ;
		Name = "CBThursday", ;
		nlineheight = 0, ;
		Top = 376, ;
		Width = 86, ;
		ZOrderSet = 29
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="checkbox" />

	ADD OBJECT 'AllottForm.CBTuesday' AS tcheckbox WITH ;
		Alignment = 0, ;
		AutoSize = .T., ;
		Caption = "CBTuesday", ;
		Left = 60, ;
		Name = "CBTuesday", ;
		nlineheight = 0, ;
		Top = 376, ;
		Width = 82, ;
		ZOrderSet = 27
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="checkbox" />

	ADD OBJECT 'AllottForm.CBWednseday' AS tcheckbox WITH ;
		Alignment = 0, ;
		AutoSize = .T., ;
		Caption = "CBWednseday", ;
		Left = 108, ;
		Name = "CBWednseday", ;
		nlineheight = 0, ;
		Top = 376, ;
		Width = 100, ;
		ZOrderSet = 28
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="checkbox" />

	ADD OBJECT 'AllottForm.chkUnallocAllot' AS tcheckbox WITH ;
		Alignment = 0, ;
		AutoSize = .T., ;
		Caption = "chkUnallocAllot", ;
		Left = 12, ;
		Name = "chkUnallocAllot", ;
		Top = 400, ;
		Width = 102, ;
		ZOrderSet = 33
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="checkbox" />

	ADD OBJECT 'AllottForm.edtNote' AS teditbox WITH ;
		Height = 71, ;
		Left = 168, ;
		Name = "edtNote", ;
		Top = 253, ;
		Width = 252, ;
		ZOrderSet = 22
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="editbox" />

	ADD OBJECT 'AllottForm.LAllott' AS tlabel WITH ;
		AutoSize = .T., ;
		Caption = "LAllott", ;
		Left = 12, ;
		Name = "LAllott", ;
		Top = 64, ;
		Width = 35, ;
		ZOrderSet = 4
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'AllottForm.LAllottID' AS tlabel WITH ;
		AutoSize = .T., ;
		Caption = "LAllottID", ;
		Left = 12, ;
		Name = "LAllottID", ;
		Top = 16, ;
		Width = 47, ;
		ZOrderSet = 0
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'AllottForm.LBuilding' AS tlabel WITH ;
		AutoSize = .T., ;
		Caption = "LBuilding", ;
		Left = 12, ;
		Name = "LBuilding", ;
		Top = 40, ;
		Width = 54, ;
		ZOrderSet = 2
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'AllottForm.LComp' AS tlabel WITH ;
		AutoSize = .T., ;
		Caption = "LComp", ;
		Left = 12, ;
		Name = "LComp", ;
		Top = 112, ;
		Width = 43, ;
		ZOrderSet = 9
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'AllottForm.LCutDate' AS tlabel WITH ;
		AutoSize = .T., ;
		Caption = "LCutDate", ;
		Left = 12, ;
		Name = "LCutDate", ;
		Top = 232, ;
		Width = 54, ;
		ZOrderSet = 19
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'AllottForm.LCutDays' AS tlabel WITH ;
		AutoSize = .T., ;
		Caption = "LCutDays", ;
		Left = 12, ;
		Name = "LCutDays", ;
		Top = 208, ;
		Width = 56, ;
		ZOrderSet = 17
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'AllottForm.LDate' AS tlabel WITH ;
		AutoSize = .T., ;
		Caption = "LDate", ;
		Left = 12, ;
		Name = "LDate", ;
		Top = 160, ;
		Width = 35, ;
		ZOrderSet = 13
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'AllottForm.LEvent' AS tlabel WITH ;
		AutoSize = .T., ;
		Caption = "LEvent", ;
		Left = 12, ;
		Name = "LEvent", ;
		Top = 88, ;
		Width = 39, ;
		ZOrderSet = 6
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'AllottForm.LLocation' AS tlabel WITH ;
		AutoSize = .T., ;
		Caption = "LLocation", ;
		Left = 12, ;
		Name = "LLocation", ;
		Top = 328, ;
		Width = 56, ;
		ZOrderSet = 23
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'AllottForm.LName' AS tlabel WITH ;
		AutoSize = .T., ;
		Caption = "LName", ;
		Left = 12, ;
		Name = "LName", ;
		Top = 136, ;
		Width = 43, ;
		ZOrderSet = 11
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'AllottForm.LNote' AS tlabel WITH ;
		AutoSize = .T., ;
		Caption = "LNote", ;
		Left = 12, ;
		Name = "LNote", ;
		Top = 256, ;
		Width = 35, ;
		ZOrderSet = 21
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'AllottForm.LToDate' AS tlabel WITH ;
		AutoSize = .T., ;
		Caption = "LToDate", ;
		Left = 12, ;
		Name = "LToDate", ;
		Top = 184, ;
		Width = 49, ;
		ZOrderSet = 15
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'AllottForm.LWeekDays' AS tlabel WITH ;
		AutoSize = .T., ;
		Caption = "LWeekDays", ;
		Left = 12, ;
		Name = "LWeekDays", ;
		Top = 352, ;
		Width = 68, ;
		ZOrderSet = 25
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'AllottForm.NextCmd' AS tcommandbutton WITH ;
		Caption = "NextCmd", ;
		Left = 30, ;
		Name = "NextCmd", ;
		Top = 433, ;
		Visible = .F., ;
		Width = 84, ;
		ZOrderSet = 34
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'AllottForm.OKCmd' AS tcommandbutton WITH ;
		Caption = "OK Cmd", ;
		Default = .F., ;
		Left = 126, ;
		Name = "OKCmd", ;
		Top = 433, ;
		Width = 84, ;
		ZOrderSet = 35
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'AllottForm.SelectEventsCmd' AS tcommandbutton WITH ;
		Caption = "...", ;
		Height = 23, ;
		Left = 144, ;
		Name = "SelectEventsCmd", ;
		Top = 85, ;
		Width = 23, ;
		ZOrderSet = 7
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'AllottForm.TBAllott' AS ttext WITH ;
		Format = "KR!", ;
		Left = 168, ;
		Name = "TBAllott", ;
		Top = 61, ;
		Width = 192, ;
		ZOrderSet = 5
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />

	ADD OBJECT 'AllottForm.TBAllottID' AS ttext WITH ;
		Format = "KR", ;
		Left = 168, ;
		Name = "TBAllottID", ;
		ReadOnly = .T., ;
		TabStop = .F., ;
		Top = 13, ;
		Width = 72, ;
		ZOrderSet = 1
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />

	ADD OBJECT 'AllottForm.TBComp' AS ttext WITH ;
		Format = "KR", ;
		Left = 168, ;
		Name = "TBComp", ;
		Top = 109, ;
		Width = 192, ;
		ZOrderSet = 10
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />

	ADD OBJECT 'AllottForm.TBCutDate' AS ttext WITH ;
		Format = "K", ;
		Left = 168, ;
		Name = "TBCutDate", ;
		Top = 229, ;
		Width = 96, ;
		ZOrderSet = 20
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />

	ADD OBJECT 'AllottForm.TBCutDays' AS ttext WITH ;
		Format = "KR", ;
		Left = 168, ;
		Name = "TBCutDays", ;
		Top = 205, ;
		Width = 96, ;
		ZOrderSet = 18
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />

	ADD OBJECT 'AllottForm.TBDate' AS ttext WITH ;
		Format = "K", ;
		Left = 168, ;
		Name = "TBDate", ;
		Top = 157, ;
		Width = 96, ;
		ZOrderSet = 14
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />

	ADD OBJECT 'AllottForm.TBLocation' AS ttext WITH ;
		Format = "K", ;
		Height = 23, ;
		InputMask = (REPLICATE("X", 50)), ;
		Left = 168, ;
		Name = "TBLocation", ;
		Top = 325, ;
		Width = 252, ;
		ZOrderSet = 24
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />

	ADD OBJECT 'AllottForm.TBToDate' AS ttext WITH ;
		Format = "K", ;
		Left = 168, ;
		Name = "TBToDate", ;
		Top = 181, ;
		Width = 96, ;
		ZOrderSet = 16
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />

	ADD OBJECT 'AllottSearchForm' AS tform WITH ;
		aligntopedges = .T., ;
		AutoCenter = .T., ;
		Caption = "AllottSearchForm", ;
		Closable = .F., ;
		ControlBox = .T., ;
		DoCreate = .T., ;
		Height = 232, ;
		Icon = ..\bitmap\icons\binoculr.ico, ;
		MaxButton = .F., ;
		MinButton = .F., ;
		Name = "AllottSearchForm", ;
		Visible = .F., ;
		Width = 336, ;
		WindowType = 1
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="form" />

	ADD OBJECT 'AllottSearchForm.Cbobuilding' AS cbobuilding WITH ;
		BoundColumn = 2, ;
		ColumnCount = 1, ;
		ColumnWidths = "100", ;
		crowsource = bu_lang, bu_buildng, ;
		InputMask = "", ;
		Left = 120, ;
		lselectbuilding = .T., ;
		Name = "Cbobuilding", ;
		Top = 108, ;
		Width = 204, ;
		ZOrderSet = 10
		*< END OBJECT: ClassLib="..\libs\cit_ctrl.vcx" BaseClass="combobox" />

	ADD OBJECT 'AllottSearchForm.cboEvent' AS tcombobox WITH ;
		BoundColumn = 3, ;
		BoundTo = .T., ;
		ColumnCount = 2, ;
		ColumnLines = .F., ;
		ColumnWidths = "100,100", ;
		Left = 120, ;
		Name = "cboEvent", ;
		RowSourceType = 6, ;
		Top = 132, ;
		Width = 204, ;
		ZOrderSet = 12
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="combobox" />

	ADD OBJECT 'AllottSearchForm.chkIncludeHistory' AS tcheckbox WITH ;
		Alignment = 0, ;
		AutoSize = .T., ;
		Caption = "chkIncludeHistory", ;
		Left = 120, ;
		Name = "chkIncludeHistory", ;
		Top = 159, ;
		Width = 115, ;
		ZOrderSet = 13
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="checkbox" />

	ADD OBJECT 'AllottSearchForm.cmdCancel' AS tcommandbutton WITH ;
		Cancel = .T., ;
		Caption = "cmdCancel", ;
		Left = 174, ;
		Name = "cmdCancel", ;
		Top = 192, ;
		ZOrderSet = 15
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'AllottSearchForm.cmdOK' AS tcommandbutton WITH ;
		Caption = "cmdOK", ;
		Default = .F., ;
		Left = 78, ;
		Name = "cmdOK", ;
		Top = 192, ;
		ZOrderSet = 14
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'AllottSearchForm.dtxtFromDate' AS tdatectrl WITH ;
		Height = 23, ;
		Left = 120, ;
		Name = "dtxtFromDate", ;
		TabIndex = 7, ;
		Top = 84, ;
		Width = 100, ;
		ZOrderSet = 7
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />

	ADD OBJECT 'AllottSearchForm.dtxtToDate' AS tdatectrl WITH ;
		Height = 23, ;
		Left = 224, ;
		Name = "dtxtToDate", ;
		TabIndex = 8, ;
		Top = 84, ;
		Width = 100, ;
		ZOrderSet = 8
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />

	ADD OBJECT 'AllottSearchForm.lblAllottment' AS tlabel WITH ;
		AutoSize = .T., ;
		Caption = "lblAllottment", ;
		Left = 12, ;
		Name = "lblAllottment", ;
		Top = 15, ;
		ZOrderSet = 0
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'AllottSearchForm.lblBuilding' AS tlabel WITH ;
		AutoSize = .T., ;
		Caption = "lblBuilding", ;
		Left = 12, ;
		Name = "lblBuilding", ;
		Top = 111, ;
		ZOrderSet = 9
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'AllottSearchForm.lblCompany' AS tlabel WITH ;
		AutoSize = .T., ;
		Caption = "lblCompany", ;
		Left = 12, ;
		Name = "lblCompany", ;
		Top = 39, ;
		ZOrderSet = 2
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'AllottSearchForm.lblDate' AS tlabel WITH ;
		AutoSize = .T., ;
		Caption = "lblDate", ;
		Left = 12, ;
		Name = "lblDate", ;
		Top = 87, ;
		ZOrderSet = 6
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'AllottSearchForm.lblEvent' AS tlabel WITH ;
		AutoSize = .T., ;
		Caption = "lblEvent", ;
		Left = 12, ;
		Name = "lblEvent", ;
		Top = 135, ;
		ZOrderSet = 11
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'AllottSearchForm.lblName' AS tlabel WITH ;
		AutoSize = .T., ;
		Caption = "lblName", ;
		Left = 12, ;
		Name = "lblName", ;
		Top = 63, ;
		ZOrderSet = 4
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'AllottSearchForm.txtAllottment' AS ttext WITH ;
		Format = "K", ;
		InputMask = ( REPLICATE("!",30)), ;
		Left = 120, ;
		Name = "txtAllottment", ;
		Top = 12, ;
		Width = 204, ;
		ZOrderSet = 1
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />

	ADD OBJECT 'AllottSearchForm.txtCompany' AS ttext WITH ;
		Format = "K", ;
		Left = 120, ;
		Name = "txtCompany", ;
		Top = 36, ;
		Width = 204, ;
		ZOrderSet = 3
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />

	ADD OBJECT 'AllottSearchForm.txtName' AS ttext WITH ;
		Format = "K", ;
		Left = 120, ;
		Name = "txtName", ;
		Top = 60, ;
		Width = 204, ;
		ZOrderSet = 5
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />

	ADD OBJECT 'SelectForm' AS form WITH ;
		AlwaysOnTop = .T., ;
		BorderStyle = 2, ;
		Caption = "", ;
		Closable = .F., ;
		ControlBox = .F., ;
		DoCreate = .T., ;
		Height = 110, ;
		KeyPreview = .T., ;
		Left = 120, ;
		MaxButton = .F., ;
		MinButton = .F., ;
		Name = "SelectForm", ;
		TitleBar = 0, ;
		Top = 76, ;
		Visible = .F., ;
		Width = 320, ;
		WindowType = 1
		*< END OBJECT: BaseClass="form" />

	ADD OBJECT 'SelectForm.SelectGrid' AS grid WITH ;
		AllowRowSizing = .F., ;
		ColumnCount = 20, ;
		DeleteMark = .F., ;
		HeaderHeight = 0, ;
		Height = 110, ;
		Left = 0, ;
		Name = "SelectGrid", ;
		Panel = 1, ;
		ReadOnly = .T., ;
		ScrollBars = 2, ;
		SplitBar = .F., ;
		Top = 0, ;
		Width = 320, ;
		Column1.Name = "Column1", ;
		Column1.ReadOnly = .T., ;
		Column10.Name = "Column10", ;
		Column10.ReadOnly = .T., ;
		Column11.Name = "Column11", ;
		Column11.ReadOnly = .T., ;
		Column12.Name = "Column12", ;
		Column12.ReadOnly = .T., ;
		Column13.Name = "Column13", ;
		Column13.ReadOnly = .T., ;
		Column14.Name = "Column14", ;
		Column14.ReadOnly = .T., ;
		Column15.Name = "Column15", ;
		Column15.ReadOnly = .T., ;
		Column16.Name = "Column16", ;
		Column16.ReadOnly = .T., ;
		Column17.Name = "Column17", ;
		Column17.ReadOnly = .T., ;
		Column18.Name = "Column18", ;
		Column18.ReadOnly = .T., ;
		Column19.Name = "Column19", ;
		Column19.ReadOnly = .T., ;
		Column2.Name = "Column2", ;
		Column2.ReadOnly = .T., ;
		Column20.Name = "Column20", ;
		Column20.ReadOnly = .T., ;
		Column3.Name = "Column3", ;
		Column3.ReadOnly = .T., ;
		Column4.Name = "Column4", ;
		Column4.ReadOnly = .T., ;
		Column5.Name = "Column5", ;
		Column5.ReadOnly = .T., ;
		Column6.Name = "Column6", ;
		Column6.ReadOnly = .T., ;
		Column7.Name = "Column7", ;
		Column7.ReadOnly = .T., ;
		Column8.Name = "Column8", ;
		Column8.ReadOnly = .T., ;
		Column9.Name = "Column9", ;
		Column9.ReadOnly = .T.
		*< END OBJECT: BaseClass="grid" />

	ADD OBJECT 'SelectForm.SelectGrid.Column1.Header1' AS header WITH ;
		Caption = "Header1", ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'SelectForm.SelectGrid.Column1.Text1' AS textbox WITH ;
		BackColor = 255,255,255, ;
		BorderStyle = 0, ;
		ForeColor = 0,0,0, ;
		Margin = 0, ;
		Name = "Text1"
		*< END OBJECT: BaseClass="textbox" />

	ADD OBJECT 'SelectForm.SelectGrid.Column10.Header1' AS header WITH ;
		Caption = "Header1", ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'SelectForm.SelectGrid.Column10.Text1' AS textbox WITH ;
		BackColor = 255,255,255, ;
		BorderStyle = 0, ;
		ForeColor = 0,0,0, ;
		Margin = 0, ;
		Name = "Text1"
		*< END OBJECT: BaseClass="textbox" />

	ADD OBJECT 'SelectForm.SelectGrid.Column11.Header1' AS header WITH ;
		Caption = "Header1", ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'SelectForm.SelectGrid.Column11.Text1' AS textbox WITH ;
		BackColor = 255,255,255, ;
		BorderStyle = 0, ;
		ForeColor = 0,0,0, ;
		Margin = 0, ;
		Name = "Text1"
		*< END OBJECT: BaseClass="textbox" />

	ADD OBJECT 'SelectForm.SelectGrid.Column12.Header1' AS header WITH ;
		Caption = "Header1", ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'SelectForm.SelectGrid.Column12.Text1' AS textbox WITH ;
		BackColor = 255,255,255, ;
		BorderStyle = 0, ;
		ForeColor = 0,0,0, ;
		Margin = 0, ;
		Name = "Text1"
		*< END OBJECT: BaseClass="textbox" />

	ADD OBJECT 'SelectForm.SelectGrid.Column13.Header1' AS header WITH ;
		Caption = "Header1", ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'SelectForm.SelectGrid.Column13.Text1' AS textbox WITH ;
		BackColor = 255,255,255, ;
		BorderStyle = 0, ;
		ForeColor = 0,0,0, ;
		Margin = 0, ;
		Name = "Text1"
		*< END OBJECT: BaseClass="textbox" />

	ADD OBJECT 'SelectForm.SelectGrid.Column14.Header1' AS header WITH ;
		Caption = "Header1", ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'SelectForm.SelectGrid.Column14.Text1' AS textbox WITH ;
		BackColor = 255,255,255, ;
		BorderStyle = 0, ;
		ForeColor = 0,0,0, ;
		Margin = 0, ;
		Name = "Text1"
		*< END OBJECT: BaseClass="textbox" />

	ADD OBJECT 'SelectForm.SelectGrid.Column15.Header1' AS header WITH ;
		Caption = "Header1", ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'SelectForm.SelectGrid.Column15.Text1' AS textbox WITH ;
		BackColor = 255,255,255, ;
		BorderStyle = 0, ;
		ForeColor = 0,0,0, ;
		Margin = 0, ;
		Name = "Text1"
		*< END OBJECT: BaseClass="textbox" />

	ADD OBJECT 'SelectForm.SelectGrid.Column16.Header1' AS header WITH ;
		Caption = "Header1", ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'SelectForm.SelectGrid.Column16.Text1' AS textbox WITH ;
		BackColor = 255,255,255, ;
		BorderStyle = 0, ;
		ForeColor = 0,0,0, ;
		Margin = 0, ;
		Name = "Text1"
		*< END OBJECT: BaseClass="textbox" />

	ADD OBJECT 'SelectForm.SelectGrid.Column17.Header1' AS header WITH ;
		Caption = "Header1", ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'SelectForm.SelectGrid.Column17.Text1' AS textbox WITH ;
		BackColor = 255,255,255, ;
		BorderStyle = 0, ;
		ForeColor = 0,0,0, ;
		Margin = 0, ;
		Name = "Text1"
		*< END OBJECT: BaseClass="textbox" />

	ADD OBJECT 'SelectForm.SelectGrid.Column18.Header1' AS header WITH ;
		Caption = "Header1", ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'SelectForm.SelectGrid.Column18.Text1' AS textbox WITH ;
		BackColor = 255,255,255, ;
		BorderStyle = 0, ;
		ForeColor = 0,0,0, ;
		Margin = 0, ;
		Name = "Text1"
		*< END OBJECT: BaseClass="textbox" />

	ADD OBJECT 'SelectForm.SelectGrid.Column19.Header1' AS header WITH ;
		Caption = "Header1", ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'SelectForm.SelectGrid.Column19.Text1' AS textbox WITH ;
		BackColor = 255,255,255, ;
		BorderStyle = 0, ;
		ForeColor = 0,0,0, ;
		Margin = 0, ;
		Name = "Text1"
		*< END OBJECT: BaseClass="textbox" />

	ADD OBJECT 'SelectForm.SelectGrid.Column2.Header1' AS header WITH ;
		Caption = "Header1", ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'SelectForm.SelectGrid.Column2.Text1' AS textbox WITH ;
		BackColor = 255,255,255, ;
		BorderStyle = 0, ;
		ForeColor = 0,0,0, ;
		Margin = 0, ;
		Name = "Text1"
		*< END OBJECT: BaseClass="textbox" />

	ADD OBJECT 'SelectForm.SelectGrid.Column20.Header1' AS header WITH ;
		Caption = "Header1", ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'SelectForm.SelectGrid.Column20.Text1' AS textbox WITH ;
		BackColor = 255,255,255, ;
		BorderStyle = 0, ;
		ForeColor = 0,0,0, ;
		Margin = 0, ;
		Name = "Text1"
		*< END OBJECT: BaseClass="textbox" />

	ADD OBJECT 'SelectForm.SelectGrid.Column3.Header1' AS header WITH ;
		Caption = "Header1", ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'SelectForm.SelectGrid.Column3.Text1' AS textbox WITH ;
		BackColor = 255,255,255, ;
		BorderStyle = 0, ;
		ForeColor = 0,0,0, ;
		Margin = 0, ;
		Name = "Text1"
		*< END OBJECT: BaseClass="textbox" />

	ADD OBJECT 'SelectForm.SelectGrid.Column4.Header1' AS header WITH ;
		Caption = "Header1", ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'SelectForm.SelectGrid.Column4.Text1' AS textbox WITH ;
		BackColor = 255,255,255, ;
		BorderStyle = 0, ;
		ForeColor = 0,0,0, ;
		Margin = 0, ;
		Name = "Text1"
		*< END OBJECT: BaseClass="textbox" />

	ADD OBJECT 'SelectForm.SelectGrid.Column5.Header1' AS header WITH ;
		Caption = "Header1", ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'SelectForm.SelectGrid.Column5.Text1' AS textbox WITH ;
		BackColor = 255,255,255, ;
		BorderStyle = 0, ;
		ForeColor = 0,0,0, ;
		Margin = 0, ;
		Name = "Text1"
		*< END OBJECT: BaseClass="textbox" />

	ADD OBJECT 'SelectForm.SelectGrid.Column6.Header1' AS header WITH ;
		Caption = "Header1", ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'SelectForm.SelectGrid.Column6.Text1' AS textbox WITH ;
		BackColor = 255,255,255, ;
		BorderStyle = 0, ;
		ForeColor = 0,0,0, ;
		Margin = 0, ;
		Name = "Text1"
		*< END OBJECT: BaseClass="textbox" />

	ADD OBJECT 'SelectForm.SelectGrid.Column7.Header1' AS header WITH ;
		Caption = "Header1", ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'SelectForm.SelectGrid.Column7.Text1' AS textbox WITH ;
		BackColor = 255,255,255, ;
		BorderStyle = 0, ;
		ForeColor = 0,0,0, ;
		Margin = 0, ;
		Name = "Text1"
		*< END OBJECT: BaseClass="textbox" />

	ADD OBJECT 'SelectForm.SelectGrid.Column8.Header1' AS header WITH ;
		Caption = "Header1", ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'SelectForm.SelectGrid.Column8.Text1' AS textbox WITH ;
		BackColor = 255,255,255, ;
		BorderStyle = 0, ;
		ForeColor = 0,0,0, ;
		Margin = 0, ;
		Name = "Text1"
		*< END OBJECT: BaseClass="textbox" />

	ADD OBJECT 'SelectForm.SelectGrid.Column9.Header1' AS header WITH ;
		Caption = "Header1", ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'SelectForm.SelectGrid.Column9.Text1' AS textbox WITH ;
		BackColor = 255,255,255, ;
		BorderStyle = 0, ;
		ForeColor = 0,0,0, ;
		Margin = 0, ;
		Name = "Text1"
		*< END OBJECT: BaseClass="textbox" />

	ADD OBJECT 'UserForm' AS tform WITH ;
		Caption = "", ;
		ControlBox = .T., ;
		DoCreate = .T., ;
		Height = 296, ;
		Icon = ..\bitmap\icons\misc27.ico, ;
		MaxButton = .F., ;
		MinButton = .F., ;
		Name = "UserForm", ;
		Visible = .F., ;
		Width = 360, ;
		WindowType = 1
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="form" />

	ADD OBJECT 'UserForm.cboLanguage' AS tcombobox WITH ;
		BoundColumn = 2, ;
		BoundTo = .T., ;
		ColumnCount = 2, ;
		ColumnLines = .F., ;
		ColumnWidths = "100,30", ;
		Left = 144, ;
		Name = "cboLanguage", ;
		RowSourceType = 6, ;
		Style = 2, ;
		TabIndex = 3, ;
		Top = 60, ;
		Width = 204, ;
		ZOrderSet = 5
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="combobox" />

	ADD OBJECT 'UserForm.cboUserGroup' AS tcombobox WITH ;
		BoundTo = .T., ;
		Left = 144, ;
		Name = "cboUserGroup", ;
		RowSourceType = 6, ;
		Style = 2, ;
		TabIndex = 4, ;
		Top = 84, ;
		Width = 204, ;
		ZOrderSet = 7
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="combobox" />

	ADD OBJECT 'UserForm.chkAllowWebServer' AS tcheckbox WITH ;
		Alignment = 0, ;
		AutoSize = .T., ;
		Left = 144, ;
		Name = "chkAllowWebServer", ;
		TabIndex = 10, ;
		Top = 231, ;
		Value = .F.
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="checkbox" />

	ADD OBJECT 'UserForm.cmdCancel' AS tcommandbutton WITH ;
		Cancel = .T., ;
		Caption = "cmdCancel", ;
		Left = 132, ;
		Name = "cmdCancel", ;
		TabIndex = 12, ;
		Top = 258, ;
		ZOrderSet = 19
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'UserForm.cmdOK' AS tcommandbutton WITH ;
		Caption = "cmdOK", ;
		Default = .F., ;
		Left = 36, ;
		Name = "cmdOK", ;
		TabIndex = 11, ;
		Top = 258, ;
		ZOrderSet = 18
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'UserForm.cmdPassword' AS tcommandbutton WITH ;
		Caption = "cmdPassword", ;
		Left = 228, ;
		Name = "cmdPassword", ;
		TabIndex = 13, ;
		Top = 258, ;
		ZOrderSet = 20
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'UserForm.lblAllowWebServer' AS tlabel WITH ;
		AutoSize = .T., ;
		Caption = "lblAllowWebServer", ;
		Left = 12, ;
		Name = "lblAllowWebServer", ;
		TabIndex = 23, ;
		Top = 232, ;
		Width = 104, ;
		ZOrderSet = 16
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'UserForm.lblCashier' AS tlabel WITH ;
		AutoSize = .T., ;
		Caption = "lblCashier", ;
		Left = 12, ;
		Name = "lblCashier", ;
		TabIndex = 18, ;
		Top = 111, ;
		Width = 59, ;
		ZOrderSet = 8
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'UserForm.lblDepartment' AS tlabel WITH ;
		AutoSize = .T., ;
		Caption = "lblDepartment", ;
		Left = 12, ;
		Name = "lblDepartment", ;
		TabIndex = 19, ;
		Top = 135, ;
		Width = 80, ;
		ZOrderSet = 10
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'UserForm.lblEmail' AS tlabel WITH ;
		AutoSize = .T., ;
		Caption = "lblEmail", ;
		Left = 12, ;
		Name = "lblEmail", ;
		TabIndex = 22, ;
		Top = 207, ;
		Width = 47, ;
		ZOrderSet = 16
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'UserForm.lblFax' AS tlabel WITH ;
		AutoSize = .T., ;
		Caption = "lblFax", ;
		Left = 12, ;
		Name = "lblFax", ;
		TabIndex = 21, ;
		Top = 183, ;
		Width = 34, ;
		ZOrderSet = 14
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'UserForm.lblLanguage' AS tlabel WITH ;
		AutoSize = .T., ;
		Caption = "lblLanguage", ;
		Left = 12, ;
		Name = "lblLanguage", ;
		TabIndex = 16, ;
		Top = 63, ;
		Width = 71, ;
		ZOrderSet = 4
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'UserForm.lblName' AS tlabel WITH ;
		AutoSize = .T., ;
		Caption = "lblName", ;
		Left = 12, ;
		Name = "lblName", ;
		TabIndex = 14, ;
		Top = 15, ;
		Width = 49, ;
		ZOrderSet = 0
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'UserForm.lblPhone' AS tlabel WITH ;
		AutoSize = .T., ;
		Caption = "lblPhone", ;
		Left = 12, ;
		Name = "lblPhone", ;
		TabIndex = 20, ;
		Top = 159, ;
		Width = 51, ;
		ZOrderSet = 12
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'UserForm.lblUserGroup' AS tlabel WITH ;
		AutoSize = .T., ;
		Caption = "lblUserGroup", ;
		Left = 12, ;
		Name = "lblUserGroup", ;
		TabIndex = 17, ;
		Top = 87, ;
		Width = 76, ;
		ZOrderSet = 6
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'UserForm.lblUserID' AS tlabel WITH ;
		AutoSize = .T., ;
		Caption = "lblUserID", ;
		Left = 12, ;
		Name = "lblUserID", ;
		TabIndex = 15, ;
		Top = 39, ;
		Width = 54, ;
		ZOrderSet = 2
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'UserForm.txtCashier' AS ttext WITH ;
		Format = "KR", ;
		Left = 144, ;
		Name = "txtCashier", ;
		TabIndex = 5, ;
		Top = 108, ;
		Width = 204, ;
		ZOrderSet = 9
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />

	ADD OBJECT 'UserForm.txtDepartment' AS ttext WITH ;
		Format = "KR", ;
		Left = 144, ;
		Name = "txtDepartment", ;
		TabIndex = 6, ;
		Top = 132, ;
		Width = 204, ;
		ZOrderSet = 11
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />

	ADD OBJECT 'UserForm.txtEmail' AS ttext WITH ;
		Format = "KR", ;
		Left = 144, ;
		Name = "txtEmail", ;
		TabIndex = 9, ;
		Top = 204, ;
		Width = 204, ;
		ZOrderSet = 17
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />

	ADD OBJECT 'UserForm.txtFax' AS ttext WITH ;
		Format = "KR", ;
		Left = 144, ;
		Name = "txtFax", ;
		TabIndex = 8, ;
		Top = 180, ;
		Width = 204, ;
		ZOrderSet = 15
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />

	ADD OBJECT 'UserForm.txtName' AS ttext WITH ;
		Format = "KR", ;
		Left = 144, ;
		Name = "txtName", ;
		TabIndex = 1, ;
		Top = 12, ;
		Width = 204, ;
		ZOrderSet = 1
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />

	ADD OBJECT 'UserForm.txtPhone' AS ttext WITH ;
		Format = "KR", ;
		Left = 144, ;
		Name = "txtPhone", ;
		TabIndex = 7, ;
		Top = 156, ;
		Width = 204, ;
		ZOrderSet = 13
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />

	ADD OBJECT 'UserForm.txtUserID' AS ttext WITH ;
		Format = "KR!", ;
		Left = 144, ;
		Name = "txtUserID", ;
		TabIndex = 2, ;
		Top = 36, ;
		Width = 204, ;
		ZOrderSet = 3
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />
	
	PROCEDURE allotdayname
		LParameters m.TheDate
		
		if Type([m.TheDate]) = "D"
			do case
			case Dow(m.TheDate) = 1
				return GetLangText("FUNC", "TXT_SUNDAY")
			case Dow(m.TheDate) = 2
				return GetLangText("FUNC", "TXT_MONDAY")
			case Dow(m.TheDate) = 3
				return GetLangText("FUNC", "TXT_TUESDAY")
			case Dow(m.TheDate) = 4
				return GetLangText("FUNC", "TXT_WEDNESDAY")
			case Dow(m.TheDate) = 5
				return GetLangText("FUNC", "TXT_THURSDAY")
			case Dow(m.TheDate) = 6
				return GetLangText("FUNC", "TXT_FRIDAY")
			case Dow(m.TheDate) = 7
				return GetLangText("FUNC", "TXT_SATURDAY")
			endcase
		else
			return ""
		endif
		
	ENDPROC

	PROCEDURE allotfilllnamecombo
		LParameters m.AddrID
		
		Local m.CurrArea, m.OldRecNo&&, m.AddrIds, m.AddrIdsCount, i, k
		
		this.AllottForm.CBName.Clear()
		
		m.CurrArea = Select()
		
		m.AddrIdsCount = 0
		
		Select CompanyTAlias
		if NOT Eof()
			m.OldRecNo = RecNo()
		endif
		
		Seek m.AddrID order TAG1
		
		this.AllottForm.CBName.AddItem(AllTrim(ad_lname))
		this.AllottForm.CBName.ItemData(this.AllottForm.CBName.ListCount) = m.AddrID
		
		*scan rest while ad_company = m.Company
		*	if NOT Empty(ad_lname)
		*		this.AllottForm.CBName.AddItem(AllTrim(ad_lname))
		*		this.AllottForm.CBName.ItemData(this.AllottForm.CBName.ListCount) = ad_addrid
		*		m.AddrIdsCount = m.AddrIdsCount + 1
		*		Dimension m.AddrIds(m.AddrIdsCount)
		*		m.AddrIds[m.AddrIdsCount] = ad_addrid
		*	endif
		*endscan
		
		if Type([m.OldRecNo]) = "N"
			goto m.OldRecNo
		else
			goto bottom
			skip
		endif
		
		Select ApartnerTAlias
		Seek m.AddrID
		scan while ap_addrid = m.AddrID
			if NOT Empty(ap_lname)
				this.AllottForm.CBName.AddItem(AllTrim(ap_lname))
				this.AllottForm.CBName.ItemData(this.AllottForm.CBName.ListCount) = ap_addrid
			endif
		endscan
		
		Select (m.CurrArea)
		
	ENDPROC

	PROCEDURE allotrealocav
		LPArameters m.CurDate, m.RoomType, m.Rooms, m.MoreMsgExpect
		LOCAL l_lUpdateMaxAvail
		
		l_lUpdateMaxAvail = g_lShips AND DLookUp("building", "bu_buildng = althead.al_buildng", "bu_hired")
		IF m.RoomType = "*"
			seek DTOS(m.CurDate) + ALLTRIM(param.pa_lsallot) in AvailTAlias
			IF FOUND([AvailTAlias])
				replace AvailTAlias.av_altall with AvailTAlias.av_altall - m.Rooms in AvailTAlias
				IF l_lUpdateMaxAvail
					replace AvailTAlias.av_avail with AvailTAlias.av_avail - m.Rooms in AvailTAlias
				ENDIF
			ENDIF
		ELSE
			seek DTOS(m.CurDate) + m.RoomType in AvailTAlias
			if Found([AvailTAlias])
				replace AvailTAlias.av_allott with AvailTAlias.av_allott - m.Rooms in AvailTAlias
				IF l_lUpdateMaxAvail
					replace AvailTAlias.av_avail with AvailTAlias.av_avail - m.Rooms in AvailTAlias
				ENDIF
			ENDIF
		ENDIF
		if NOT Found([AvailTAlias]) AND m.MoreMsgExpect
			m.MoreMsgExpect = (MessageBox(StrTran(GetlangText("MGRRESER", "TXT_AVAILABNOT"), ";", Chr(10)), 52, "Error!") = 6)
		endif
		
		return m.MoreMsgExpect
		
	ENDPROC

	PROCEDURE allotupdatesplit
		LParameters m.FromToDat, m.NewToDat, m.NewDays
		
		Select AltSplitTAlias
		
		if m.FromToDat > AltHeadTAlias.al_fromdat
			goto top
		
			do while (as_date < m.FromToDat) AND !EOF()
				if NOT Empty(as_pick)
					MessageBox(StrTran(GetLangText("ALZOOMIN", "TXT_MAXSTARTDAT"), "%s", DTOS(as_date)), 48, GetLangText("FUNC", "TXT_MESSAGE"))
					return .F.
				endif
				skip
			enddo
		endif
		
		if m.NewToDat < AltHeadTAlias.al_todat
			goto bottom
		
			do while (as_date > m.NewToDat) AND !EOF()
				if NOT Empty(as_pick)
					MessageBox(StrTran(GetLangText("ALZOOMIN", "TXT_MINENDDAT"), "%s", DTOS(as_date)), 48, GetLangText("FUNC", "TXT_MESSAGE"))
					return .F.
				endif
				skip -1
			enddo
		endif
		
		if m.NewDays <> AltHeadTAlias.al_days
			for i = 1 to 7
				if (SubStr(AltHeadTAlias.al_days, i, 1) = "1") AND (NOT SubStr(m.NewDays, i, 1) = "1")
					exit
				endif
			endfor
		
			if i < 8
				goto top
				scan while (as_date <= m.NewToDat) AND !EOF()
					if !this.ZIDateInAllot(as_date, m.NewDays) AND NOT Empty(as_pick)
						MessageBox(GetLangText("ALZOOMIN", "TXT_DONTCHANGEDAY"), 48, GetLangText("FUNC", "TXT_MESSAGE"))
						return .F.
					endif
				endscan
			endif
		endif
		
		Local m.MoreMsgExpect
		
		m.MoreMsgExpect = .T.
		
		if m.FromToDat > AltHeadTAlias.al_fromdat
			goto top
		
			do while (as_date < m.FromToDat) AND !EOF()
				m.MoreMsgExpect = this.AllotRealocAv(as_date, as_roomtyp, as_rooms, m.MoreMsgExpect)
				skip
			enddo
		
			goto top
			delete while as_date < m.FromToDat
		endif
		
		if m.NewToDat < AltHeadTAlias.al_todat
			goto bottom
		
			do while (as_date > m.NewToDat) AND !EOF()
				m.MoreMsgExpect = this.AllotRealocAv(as_date, as_roomtyp, as_rooms, m.MoreMsgExpect)
				skip -1
			enddo
		
			skip
			delete rest
		endif
		
		if (m.NewDays <> AltHeadTAlias.al_days) AND (i < 8)
			goto top
			scan while (as_date <= m.NewToDat) AND !EOF()
				if NOT this.ZIDateInAllot(as_date, m.NewDays)
					m.MoreMsgExpect = this.AllotRealocAv(as_date, as_roomtyp, as_rooms, m.MoreMsgExpect)
					delete
				endif
			endscan
		endif
		
		return .T.
		
	ENDPROC

	PROCEDURE assigncaption
	ENDPROC

	PROCEDURE chkseason
		LPARAMETERS pcSeason, pdBegin, pdEnd
		
		IF EMPTY(pcSeason)
			RETURN .T.
		ELSE
			RETURN  .NOT. EMPTY(dlOokup('Season','se_date >= '+sqLcnv(pdBegin)+ ;
			  'and se_date < '+sqLcnv(pdEnd)+' and se_season = '+ ;
			  sqLcnv(pcSeason),'se_season'))
		ENDIF
		
	ENDPROC

	PROCEDURE dayname
		LParameters m.TheDate
		
		if Type([m.TheDate]) = "D"
			do case
			case Dow(m.TheDate) = 1
				return GetLangText("FUNC", "TXT_SUNDAY")
			case Dow(m.TheDate) = 2
				return GetLangText("FUNC", "TXT_MONDAY")
			case Dow(m.TheDate) = 3
				return GetLangText("FUNC", "TXT_TUESDAY")
			case Dow(m.TheDate) = 4
				return GetLangText("FUNC", "TXT_WEDNESDAY")
			case Dow(m.TheDate) = 5
				return GetLangText("FUNC", "TXT_THURSDAY")
			case Dow(m.TheDate) = 6
				return GetLangText("FUNC", "TXT_FRIDAY")
			case Dow(m.TheDate) = 7
				return GetLangText("FUNC", "TXT_SATURDAY")
			endcase
		else
			return ""
		endif
		
	ENDPROC

	PROCEDURE Destroy
		LOCAL i,a,b
		a= thisformset.formcount
		b= thisformset.forms(1).name
		*for i=1 to thisformset.formcount
		*	a= thisformset.formcount
		*	b= thisformset.forms(1).name
		*
		 *   thisformset.forms(1).release
		*NEXT
		
		POP KEY
	ENDPROC

	PROCEDURE Init
		LParameters m.Mode, m.FormIndex, m.TRecNo, m.oRatecode
		*m.FormIndex = ARTICLE_FORM
		*set sysmenu off
		this.Mode = m.Mode
		this.FormID = m.FormIndex
		
		ini()
		= openfile(.F.,"param")
		
		PUSH KEY CLEAR
		
		do case
			case m.FormIndex = RATEC_FORM
				this.RateCForm.Init(m.Mode, m.TRecNo)
			case m.FormIndex = USER_FORM
				this.UserForm.Init(m.Mode, m.TRecNo)
			case m.FormIndex = ALLOTT_FORM
				this.AllottForm.Init(m.Mode, m.TRecNo)
			case m.FormIndex = ALLOTT_SEARCH_FORM
				this.AllottSearchForm.Init(m.Mode)
			case m.FormIndex = ZOOM_IN_FORM
				this.ZoomInForm.Init(m.Mode, m.TRecNo)
		endcase
		
	ENDPROC

	PROCEDURE m_changeallottname		&& Changing allottment name. Change must be done in reservat.dbf and histres.dbf
		LPARAMETERS pOldAllotName, pNewAllottName
		RETURN .T.
		LOCAL LAlias, LMessage
		LAlias = ""
		LMessage = ""
		IF MESSAGEBOX(GetLangText("RESERVAT", "TXT_CHANGE_ALLOTT_NAME"),4+32,GetLangText("FUNC","TXT_QUESTION"))<>6
			RETURN .f.
		ENDIF
		LMessage = GetLangText("COMMON", "T_PLEASEWAIT")
		WAIT window nowait LMessage
		LAlias = ALIAS()
		select reservat
		WAIT window nowait LMessage+"."
		SCAN FOR rs_allott == pOldAllotName
			replace rs_allott WITH pNewAllottName
		ENDSCAN
		WAIT window nowait LMessage+".."
		select histres
		SCAN FOR hr_allott == pOldAllotName
			replace hr_allott WITH pNewAllottName
		ENDSCAN
		WAIT window nowait LMessage+"..."
		WAIT CLEAR	
		SELECT &LAlias
		RETURN .t.
		
	ENDPROC

	PROCEDURE setcolors
		LPARAMETERS lp_oControl, lp_nValue
		
		lp_oControl.ForeColor = lp_nValue
		lp_oControl.BackColor = lp_nValue
		lp_oControl.SelectedBackColor = lp_nValue
		lp_oControl.SelectedForeColor = lp_nValue
	ENDPROC

	PROCEDURE Unload
		
		*set sysmenu on
		
		return this.Result
		
		*for i=1 to _screen.formcount
		*    _screen.forms(1).release
		*NEXT
		
		
	ENDPROC

	PROCEDURE ziadd2zoomtable
		LParameters i, m.CurDate, m.RoomType, m.RateCode, m.Alloc, m.Picked
		
		Local m.cMacro
		
		m.cMacro = this.TempTableAlias
		
		Select &cMacro
		
		Append Blank
		
		if i = 1
			replace DateDay with DTOC(m.CurDate) + " " + Left(this.DayName(m.CurDate), 2)
		else
			replace DateDay with ""
		endif
		replace RoomType with m.RoomType
		replace RateCode with m.RateCode
		replace Alloc with m.Alloc
		replace Picked with m.Picked
		replace CurrDate with m.CurDate
		replace SplitIndex with i
		
		select AltSplitTAlias
		
	ENDPROC

	PROCEDURE ziaddrt
		LParameters m.FromDate, m.ToDate, m.DataCopy
		
		Local m.CurrDate, m.CurrRoomType, m.CurrRoomsCount, m.SplitFilter, m.MoreMsgRTExist, m.MoreMsgExpect, m.MoreMsgAvFull, m.MaxRCount
		m.CurrRoomType = ALLTRIM(m.DataCopy.as_roomtyp)
		m.CurrRoomsCount = m.DataCopy.as_rooms
		
		Local m.AvailRoomType
		
		if m.CurrRoomType = "*"
			Select RoomTypeTAlias
			set order to TAG1
		
			Locate for rt_group = 1
			if NOT Found()
				Alert(GetLangText("ALZOOMIN", "TXT_ROOMTYPENOTFOUND"))
				return
			endif
		
			m.MaxRCount = 0
		
			scan for rt_group = 1
				m.AvailRoomType = rt_roomtyp
				m.MaxRCount = m.MaxRCount + thisformset.ZoomInForm.RoomsObj.Rooms(AllTrim(m.AvailRoomType))
			endscan
		else
			m.AvailRoomType = m.CurrRoomType
			m.MaxRCount = thisformset.ZoomInForm.RoomsObj.Rooms(AllTrim(m.AvailRoomType))
		endif
		
		*m.MaxRCount = thisformset.ZoomInForm.RoomsObj.Rooms(AllTrim(m.AvailRoomType))
		
		m.MoreMsgRTExist = .T.
		m.MoreMsgAvFull = .T.
		m.MoreMsgExpect = .T.
		
		m.DataCopy.as_altid = AltHeadTAlias.al_altid
		*m.DataCopy.as_cutdate = AltHeadTAlias.al_cutdate
		
		*replace as_cutdate with as_date-thisform.DataCopy.al_cutday
		Select AltSplitTAlias
		m.SplitFilter = Filter()
		
		m.CurrDate = m.FromDate
		do while m.CurrDate <= m.ToDate
			if this.ZIDateInAllot(m.CurrDate, AltHeadTAlias.al_days)
				if this.ZIFindRT(m.CurrDate, m.CurrRoomType)
					if m.MoreMsgRTExist
						m.MoreMsgRTExist = (MessageBox(StrTran(StrTran(GetLangText("ALZOOMIN", "TXT_ALREADYDEF"), "%s", DTOC(m.CurrDate)), ";", chr(10)), 52, GetLangText("RECURRES","TXT_INFORMATION")) = 6)
					endif
				else
					seek DTOS(m.CurrDate) + m.AvailRoomType in AvailTAlias
					if Found([AvailTAlias])
						if AvailTAlias.av_allott + m.CurrRoomsCount > m.MaxRCount
							m.DataCopy.as_rooms = Max(m.MaxRCount - AvailTAlias.av_allott, 0)
							if m.MoreMsgAvFull
								if m.DataCopy.as_rooms > 0
									m.MoreMsgAvFull = (MessageBox(StrTran(StrTran(StrTran(GetLangText("ALZOOMIN", "TXT_AVAILABONLY"), "%s1", DTOC(m.CurrDate)), "%s2", AllTrim(Str(m.DataCopy.as_rooms))), ";", chr(10)), 52, GetLangText("RECURRES","TXT_INFORMATION")) = 6)
								else
									m.MoreMsgAvFull = (MessageBox(StrTran(StrTran(GetLangText("ALZOOMIN", "TXT_NOTAVAILAB"), "%s", DTOC(m.CurrDate)), ";", chr(10)), 52, GetLangText("RECURRES","TXT_INFORMATION")) = 6)
								endif
							endif
						endif
		
						replace AvailTAlias.av_allott with ;
							AvailTAlias.av_allott + m.DataCopy.as_rooms in AvailTAlias
					else
						if m.MoreMsgExpect
							m.MoreMsgExpect = (MessageBox(StrTran(GetlangText("MGRRESER", "TXT_AVAILABNOT"), ";", Chr(10)), 52, GetLangText("RECURRES","TXT_INFORMATION")) = 6)
						endif
					endif
					m.DataCopy.as_date = m.CurrDate
					m.DataCopy.as_cutdate = IIF(AltHeadTAlias.al_cutday = 0, AltHeadTAlias.al_cutdate, m.DataCopy.as_date - AltHeadTAlias.al_cutday)
					Set Filter To
					Append Blank
					Gather Name m.DataCopy
					Set Filter To &SplitFilter
				endif
			endif
		
			m.CurrDate = m.CurrDate + 1
		enddo
		
	ENDPROC

	PROCEDURE zidateday
		Local m.CurrDate
		
		if Eof([AltSplitTAlias])
			return ""
		else
			m.CurrDate = AltSplitTAlias.as_date
		*	IF m.CurrDate < sysdate()
		*		this.zoomInForm.zoomGrid.column1.DynamicBackColor 
			if thisformset.ZoomInForm.TopRecNo = RecNo()
				return DTOC(AltSplitTAlias.as_date) + Left(thisformset.DayName(AltSplitTAlias.as_date), 2)
			endif
		
			skip -1 in AltSplitTAlias
			if (m.CurrDate <> AltSplitTAlias.as_date)
				skip in AltSplitTAlias
				return DTOC(AltSplitTAlias.as_date) + Left(thisformset.DayName(AltSplitTAlias.as_date), 2)
			else
				skip
				return ""
			endif
		endif
		
	ENDPROC

	PROCEDURE zidateinallot
		LPArameters m.ForDate, m.Days
		
		Local m.DayOfWeek
		
		m.DayOfWeek = DOW(m.ForDate) - 1
		if m.DayOfWeek = 0
			m.DayOfWeek = 7
		endif
		
		return (SubStr(m.Days, m.DayOfWeek, 1) = "1")
		
	ENDPROC

	PROCEDURE zidbkcol
		if altsplit.as_cutdate < g_sysdate
			return RGB(255,0,0)
		else
			return RGB(255,255,255)
		endif
		
	ENDPROC

	PROCEDURE zideletert
		LParameters m.FromDate, m.ToDate, m.RoomType
		
		Local m.CurrDate, m.MoreMsgExpect, m.MoreMsgPicked
		
		m.MoreMsgExpect = .T.
		m.MoreMsgPicked = .T.
		
		Local m.AvailRoomType, m.MinSequ
		
		if m.RoomType = "*"
			Select RoomTypeTAlias
			set order to TAG1
		
			Locate for rt_group = 1
			if NOT Found()
				Alert("Room type for * not found!")
				return
			endif
		
			m.AvailRoomType = rt_roomtyp
			m.MinSequ = rt_sequenc
			skip
		
			scan rest
				if (rt_group = 1) AND (m.MinSequ > rt_sequenc)
					m.AvailRoomType = rt_roomtyp
					m.MinSequ = rt_sequenc
				endif
			endscan
		else
			m.AvailRoomType = m.RoomType
		endif
		
		m.CurrDate = m.FromDate
		do while m.CurrDate <= m.ToDate
			if this.ZIDateInAllot(m.CurrDate, AltHeadTAlias.al_days) AND this.ZIFindRT(m.CurrDate, m.RoomType)
				if AltSplitTAlias.as_pick > 0
					if m.MoreMsgPicked
						m.MoreMsgPicked = (MessageBox(StrTran(StrTran(GetLangText("ALZOOMIN", "TXT_ROOMCANTCHANGE"),;
						"%s", DTOC(m.CurrDate)), ";", chr(10)), 276, GetLangText("RECURRES","TXT_INFORMATION"))=6)
					endif
				else
					m.MoreMsgExpect = this.AllotRealocAv(m.CurrDate, m.AvailRoomType, AltSplitTAlias.as_rooms, m.MoreMsgExpect)
					delete in AltSplitTAlias
				endif
			endif
		
			m.CurrDate = m.CurrDate + 1
		enddo
		
	ENDPROC

	PROCEDURE zifindrt
		LParameters m.ForDate, m.RoomType
		
		Local m.CurrArea, m.OldRecNo, m.Result
		
		m.CurrArea = Select()
		
		Select AltSplitTAlias
		if NOT Eof()
			m.OldRecNo = RecNo()
		else
			m.OldRecNo = .T.
		endif
		
		Seek Str(AltHeadTAlias.al_altid, 8) + DTOS(m.ForDate)
		if Found()
			Locate For as_roomtyp = m.RoomType rest while as_date = m.ForDate
			m.Result = Found()
		else
			m.Result = .F.
		endif
		
		if NOT m.Result
			if Type([m.OldRecNo]) = "N"
				goto m.OldRecNo
			else
				goto bottom
				skip
			endif
		endif
		
		Select (m.CurrArea)
		
		return m.Result
		
	ENDPROC

	PROCEDURE zigetdyncolors
		LParameters m.nColor
		
		Local m.LineSelected, m.Textcontrol
		m.Textcontrol = .NULL.
		
		Local m.cMacro
		
		if this.ZoomInForm.SelectedRecNo = RecNo([AltSplitTAlias])
			m.LineSelected = .T.
		else
			m.LineSelected = .F.
		endif
		
		if thisformset.ZoomInForm.ZoomGrid.ActiveColumn <> 0
			m.Textcontrol = "thisformset.ZoomInForm.ZoomGrid.Column" + AllTrim(Str(this.ZoomInForm.ZoomGrid.ActiveColumn)) + ".Text1"
		else
			return RGB(255, 255, 255)
		endif
		
		if m.LineSelected
			do case
			case m.nColor = 1
				&Textcontrol..BackColor = RGB(0, 0, 128)
				return RGB(0, 0, 128)
			case m.nColor = 2
				&Textcontrol..ForeColor = RGB(255, 255, 255)
				return RGB(255, 255, 255)
			endcase
		else
			do case
			case m.nColor = 1
				&Textcontrol..ForeColor = RGB(255, 255, 255)
				return RGB(255, 255, 255)
			case m.nColor = 2
				&Textcontrol..BackColor = RGB(0, 0, 0)
				return RGB(0, 0, 0)
			endcase
		endif
		
		return RGB(255, 255, 255)
		
	ENDPROC

	PROCEDURE zipricerefresh
		this.AllottAddForm.DataCopy.as_rate1 = RatecodeTAlias.rc_amnt1
		this.AllottAddForm.TBAdult1.Refresh()
		this.AllottAddForm.DataCopy.as_rate2 = RatecodeTAlias.rc_amnt2
		this.AllottAddForm.TBAdult2.Refresh()
		this.AllottAddForm.DataCopy.as_rate3 = RatecodeTAlias.rc_amnt3
		this.AllottAddForm.TBAdult3.Refresh()
		this.AllottAddForm.DataCopy.as_rate4 = RatecodeTAlias.rc_amnt4
		this.AllottAddForm.TBAdult4.Refresh()
		this.AllottAddForm.DataCopy.as_rate5 = RatecodeTAlias.rc_amnt5
		this.AllottAddForm.TBAdult5.Refresh()
		
		if this.AllottAddForm.TBChild1.Visible
			this.AllottAddForm.DataCopy.as_crate1 = RatecodeTAlias.rc_camnt1
			this.AllottAddForm.TBChild1.Refresh()
		endif
		
		if this.AllottAddForm.TBChild2.Visible
			this.AllottAddForm.DataCopy.as_crate2 = RatecodeTAlias.rc_camnt2
			this.AllottAddForm.TBChild2.Refresh()
		endif
		
		if this.AllottAddForm.TBChild3.Visible
			this.AllottAddForm.DataCopy.as_crate3 = RatecodeTAlias.rc_camnt3
			this.AllottAddForm.TBChild3.Refresh()
		endif
		
	ENDPROC

	PROCEDURE AllottForm.CancelCmd.Click
		thisformset.Result = 0
		thisform.Release()
		
	ENDPROC

	PROCEDURE AllottForm.cboBuilding.GotFocus
		this.cOldVal = this.Value
	ENDPROC

	PROCEDURE AllottForm.cboBuilding.Init
		LPARAMETERS lp_oParent
		this.AddProperty("cOldVal")
		DODEFAULT(lp_oParent)
	ENDPROC

	PROCEDURE AllottForm.cboBuilding.LostFocus
		IF EMPTY(thisform.DataCopy.al_allott) OR this.cOldVal # this.Value
			thisform.DataCopy.al_allott = LEFT(UPPER(EVALUATE(this.cCursor+".bu_lang")),30)
			thisform.TBAllott.Refresh()
		ENDIF
	ENDPROC

	PROCEDURE AllottForm.cboevent.LostFocus
		IF EMPTY(thisform.DataCopy.al_fromdat) AND NOT EMPTY(EVALUATE(this.jcursor+".ei_from"))
			thisform.DataCopy.al_fromdat = EVALUATE(this.jcursor+".ei_from")
			thisform.TBDate.Refresh()
		ENDIF
		IF EMPTY(thisform.DataCopy.al_todat) AND NOT EMPTY(EVALUATE(this.jcursor+".ei_to"))
			thisform.DataCopy.al_todat = EVALUATE(this.jcursor+".ei_to")
			thisform.TBToDate.Refresh()
		ENDIF
	ENDPROC

	PROCEDURE AllottForm.Destroy
		if thisformset.FormID <> ALLOTT_FORM
			return
		endif
		
		if thisformset.Mode = EDIT_MODE
			UnLock
		endif
		*this.OldEnvir.Restore()
		
		thisformset.Release()
		
	ENDPROC

	PROCEDURE AllottForm.Init
		LParameter m.Mode, m.AllRecNo
		
		if thisformset.FormID <> ALLOTT_FORM
			return
		endif
		
		Select 0
		openfiledirect(.F., "id")
		
		Select 0
		openfiledirect(.F., "availab")
		Set order to TAG1
		
		Select 0
		openfiledirect(.F., "roomtype")
		Set order to TAG1
		
		Select 0
		openfiledirect(.F., "Apartner")
		Set order to TAG1
		
		Select 0
		openfiledirect(.F., "Address")
		Set order to TAG3
		
		Select 0
		openfiledirect(.F., "AltSplit")
		Set order to TAG1
		
		openfiledirect(.F., "histres")
		openfiledirect(.F., "reservat")
		
		openfile(.F.,"events")
		openfile(.F.,"evint")
		
		Select 0
		openfiledirect(.F., "AltHead")
		
		*SET MULTILOCKS ON
		*CURSORSETPROP("Buffering",5)
		*Set order to TAG2
		*Set Relation To Str(al_altid, 8) into AltSplitTAlias
		
		*this.OKCmd.Default = .T.
		this.CancelCmd.Cancel = .T.
		
		*this.AddObject("OldEnvir", "CEnvr")
		*this.OldEnvir.AddTable([RatecodeTAlias], [RatecodeTable])
		*this.OldEnvir.AddTable([RateartiTAlias], [RateartiTable])
		*this.OldEnvir.Save()
		
		*this.AddProperty("Company")
		*this.CutDays = 7
		
		this.AddProperty("DataCopy")
		this.AddProperty("Mode")
		this.Mode = m.Mode
		
		this.Caption = ChildTitle(GetLangText("MGRRESER", "TXT_ALWINDOW"))
		
		this.LAllottID.Caption = GetLangText("MGRRESER", "TXT_ALALLOTTID")
		this.LAllott.Caption = GetLangText("MGRRESER", "TXT_ALALLOTT")
		this.LBuilding.Caption = GetLangText("ALLOTT", "TXT_RENT_OBJECT")
		this.LEvent.Caption = GetLangText("EVENT", "TXT_EVENT")
		this.LComp.Caption = GetLangText("MGRRESER", "TXT_ALCOMPANY")
		this.LName.Caption = GetLangText("MGRRESER", "TXT_ALNAME")
		this.LDate.Caption = GetLangText("MGRRESER", "TXT_ALDATE")
		this.LToDate.Caption = GetLangText("MGRRESER", "TXT_ALENDDATE")
		this.LCutDays.Caption = GetLangText("MGRRESER", "TXT_ALCUT")
		this.LCutDate.Caption = GetLangText("MGRRESER", "TXT_ALCUTDATE")
		this.LNote.Caption = GetLangText("MGRFINAN", "TXT_NOTE")
		this.LLocation.Caption = GetLangText("MGRRESER", "TXT_LOCATION")
		this.LWeekDays.Caption = GetLangText("MGRRESER", "TXT_WEEKDAYS")
		
		this.CBMonday.Caption = Left(GetLangText("FUNC", "TXT_MONDAY"), 3)
		this.CBTuesday.Caption = Left(GetLangText("FUNC", "TXT_TUESDAY"), 3)
		this.CBWednseday.Caption = Left(GetLangText("FUNC", "TXT_WEDNESDAY"), 3)
		this.CBThursday.Caption = Left(GetLangText("FUNC", "TXT_THURSDAY"), 3)
		this.CBFriday.Caption = Left(GetLangText("FUNC", "TXT_FRIDAY"), 3)
		this.CBSaturday.Caption = Left(GetLangText("FUNC", "TXT_SATURDAY"), 3)
		this.CBSunday.Caption = Left(GetLangText("FUNC", "TXT_SUNDAY"), 3)
		
		this.OKCmd.Caption = GetLangText("COMMON", "TXT_OK")
		this.NextCmd.Caption = GetLangText("MGRRESER", "TXT_ALNEXT")
		this.CancelCmd.Caption = GetLangText("COMMON", "TXT_CANCEL")
		this.chkUnallocAllot.Caption = GetLangText("MGRRESER", "TXT_UNALLOC_ALLOT")
		
		this.LBuilding.Visible = g_lShips
		this.cboBuilding.Visible = g_lShips
		this.LComp.Visible = NOT g_lShips
		this.TBComp.Visible = NOT g_lShips
		this.LName.Visible = NOT g_lShips
		this.CBName.Visible = NOT g_lShips
		
		Local m.cMacro
		
		do case
			case m.Mode = EDIT_MODE
				goto m.AllRecNo
				if NOT Lock()
					thisform.Release()
					*return
				endif
		
				Scatter Memo Name this.DataCopy
		
				Local m.cMacro
				m.cMacro = "as_altid = " + Str(al_altid)
		
				Select AltSplitTAlias
				set filter to &cMacro
				goto top
		
				select AltHeadTAlias
		
				IF NOT g_lShips
					Local i, n
		
					thisformset.AllotFilllNameCombo(this.DataCopy.al_addrid)
		
					n = this.CBName.ListCount
					for i = 1 to n
						if this.DataCopy.al_lname = this.CBName.ListItem(i)
							this.CBName.ListIndex = i
							exit
						endif
					endfor
					if this.CBName.ListIndex = 0
						this.CBName.ListIndex = 1
					endif
				ENDIF
		
		*		this.TBAllott.ReadOnly = .T.
				if this.DataCopy.al_fromdat <= g_SysDate
					this.TBDate.ReadOnly = .T.
				endif
		*		this.TBToDate.ReadOnly = .T.
		*		this.TBCutDays.ReadOnly = .T.
		*		this.TBCutDate.ReadOnly = .T.
		
		*		this.CBMonday.Enabled = .F.
		*		this.CBTuesday.Enabled = .F.
		*		this.CBWednseday.Enabled = .F.
		*		this.CBThursday.Enabled = .F.
		*		this.CBFriday.Enabled = .F.
		*		this.CBSaturday.Enabled = .F.
		*		this.CBSunday.Enabled = .F.
				this.TBAllottID.ControlSource = [thisform.DataCopy.al_altid]
			case m.Mode = NEW_MODE
				Scatter Memo Name this.DataCopy Blank
				this.DataCopy.al_days = "1111111"
				thisform.DataCopy.al_altid = NextId("ALLOTT")
				select AltHeadTAlias
			case m.Mode = DELETE_MODE
			*case m.Mode = 3
		*		this.TBAllottID.ControlSource = [thisform.DataCopy.al_altid]
				goto m.AllRecNo
				thisformset.Result = thisformset.AllotUpdateSplit(al_todat, "0000000")
				thisformset.Release()
				return
		endcase
		
		this.Visible = .T.
		*this.show(1)
		
		*this.ZOrder()
		
		this.TBAllottID.ControlSource = [thisform.DataCopy.al_altid]
		this.TBAllott.ControlSource = [thisform.DataCopy.al_allott]
		this.TBAllott.InputMask = Replicate("X", 30)
		this.TBComp.ControlSource = [thisform.DataCopy.al_company]
		*this.CBName.ControlSource = [thisform.DataCopy.al_lname]
		this.TBDate.ControlSource = [thisform.DataCopy.al_fromdat]
		this.TBToDate.ControlSource = [thisform.DataCopy.al_todat]
		this.TBCutDays.InputMask = "999"
		this.TBCutDays.ControlSource = [thisform.DataCopy.al_cutday]
		this.TBCutDate.ControlSource = [thisform.DataCopy.al_cutdate]
		this.edtNote.ControlSource = [thisform.DataCopy.al_note]
		this.TBLocation.ControlSource = [thisform.DataCopy.al_locat]
		this.chkUnallocAllot.ControlSource = [thisform.DataCopy.al_unalloc]
		this.cboEvent.ControlSource = [thisform.DataCopy.al_eiid]
		
		TEXT TO this.cboEvent.jsql TEXTMERGE NOSHOW PRETEXT 15
			SELECT ev_name AS EventName, ev_city AS EventCity, ei_from, ei_to, ei_eiid, UPPER(ev_name) 
				FROM evint 
				INNER JOIN events ON ev_evid = ei_evid 
				UNION SELECT "" AS EventName, "" AS EventCity, {} AS ei_from, {} AS ei_to, 0 AS ei_eiid, "" FROM param 
				ORDER BY 6, ei_from
		ENDTEXT
		this.cboEvent.Init()
		
		this.cboBuilding.cWhere = "bu_active OR bu_buildng = " + SqlCnv(thisform.DataCopy.al_buildng)
		this.cboBuilding.RequeryCursor()
		this.cboBuilding.ControlSource = [thisform.DataCopy.al_buildng]
		
		if NOT Empty(this.DataCopy.al_cutday)
			this.TBCutDate.Enabled = .F.
		else
			if NOT Empty(this.DataCopy.al_cutdate)
				this.TBCutDays.Enabled = .F.
			endif
		endif
		
		this.CBMonday.Value = (SUBSTR(this.DataCopy.al_days, 1, 1)='1')
		this.CBTuesday.Value = (SUBSTR(this.DataCopy.al_days, 2, 1)='1')
		this.CBWednseday.Value = (SUBSTR(this.DataCopy.al_days, 3, 1)='1')
		this.CBThursday.Value = (SUBSTR(this.DataCopy.al_days, 4, 1)='1')
		this.CBFriday.Value = (SUBSTR(this.DataCopy.al_days, 5, 1)='1')
		this.CBSaturday.Value = (SUBSTR(this.DataCopy.al_days, 6, 1)='1')
		this.CBSunday.Value = (SUBSTR(this.DataCopy.al_days, 7, 1)='1')
		
		DODEFAULT()
	ENDPROC

	PROCEDURE AllottForm.NextCmd.Click
		Select AltHeadTAlias
		
		if Empty(al_allott)
			thisform.TBAllott.SetFocus()
			return
		endif
		
		if Empty(al_fromdat) OR ((thisform.Mode = NEW_MODE) AND (al_fromdat <= g_SysDate))
			thisform.TBDate.SetFocus()
			return
		endif
		
		if Empty(al_todat)
			thisform.TBToDate.SetFocus()
			return
		endif
		
		if al_todat < al_fromdat
			thisform.TBToDate.SetFocus()
			return
		endif
		
		if NOT (thisform.CBMonday.Value OR ;
				thisform.CBTuesday.Value OR ;
				thisform.CBWednseday.Value OR ;
				thisform.CBThursday.Value OR ;
				thisform.CBFriday.Value OR ;
				thisform.CBSaturday.Value OR ;
				thisform.CBSunday.Value)
			thisform.CBMonday.SetFocus()
			return
		endif
		
		
		Local l_Day1, l_Day2, l_Day3, l_Day4, l_Day5, l_Day6, l_Day7
		
		l_Day1 = thisform.CBMonday.Value
		l_Day2 = thisform.CBTuesday.Value
		l_Day3 = thisform.CBWednseday.Value
		l_Day4 = thisform.CBThursday.Value
		l_Day5 = thisform.CBFriday.Value
		l_Day6 = thisform.CBSaturday.Value
		l_Day7 = thisform.CBSunday.Value
		
		replace al_days with ;
			IIF(l_Day1, "1", "0") + ;
			IIF(l_Day2, "1", "0") + ;
			IIF(l_Day3, "1", "0") + ;
			IIF(l_Day4, "1", "0") + ;
			IIF(l_Day5, "1", "0") + ;
			IIF(l_Day6, "1", "0") + ;
			IIF(l_Day7, "1", "0")
		
		thisformset.ContinueCheck = .T.
		if Empty(al_cutdate)
			thisformset.AllotFillSplit(al_altid, al_fromdat, al_todat, al_fromdat - al_cutday)
		else
			thisformset.AllotFillSplit(al_altid, al_fromdat, al_todat, al_cutdate)
		endif
		
		thisform.Enabled = .F.
		thisformset.AllottSplitForm.Init(.T., thisform.Mode)
		
	ENDPROC

	PROCEDURE AllottForm.OKCmd.Click
		Select AltHeadTAlias
		
		*if Empty(thisform.DataCopy.al_allott)
			*thisform.TBAllott.SetFocus()
		*	return
		*endif
		
		Local m.CurRecNo, m.CurAlName, lcSqlSelect, lcCurResult, lnArea
		
		m.CurAlName = thisform.DataCopy.al_allott
		*m.CurRecNo = RecNo()
		
		*Locate for al_allott = m.CurAlName
		
		*if Found()
		*	if (thisform.Mode = NEW_MODE) OR (m.CurRecNo <> RecNo())
		*		thisform.TBAllott.SetFocus()
		*		return
		*	endif
		*endif
		
		*goto m.CurRecNo
		
		if g_lShips and Empty(thisform.DataCopy.al_buildng)
			thisform.cboBuilding.SetFocus()
			return
		endif
		
		IF g_lShips AND al_buildng <> PADR(thisform.DataCopy.al_buildng,3)
			lnArea = SELECT()
			lcCurResult = SqlCursor("SELECT rs_altid FROM reservat WHERE rs_altid = " + SqlCnv(thisform.DataCopy.al_altid,.T.))
			SELECT (lnArea)
			IF USED(lcCurResult) AND RECCOUNT(lcCurResult) > 0
				Alert(GetLangText("ALLOTT", "TXT_RESERVATIONS_ALREADY_EXISTS"))
				thisform.cboBuilding.SetFocus()
				USE IN &lcCurResult
				RETURN
			ENDIF
			USE IN &lcCurResult
		ENDIF
		
		if not g_lShips and Empty(thisform.DataCopy.al_company)
			thisform.TBComp.SetFocus()
			return
		endif
		
		IF g_lShips
			IF EMPTY(thisform.DataCopy.al_eiid)
				alert(GetLangText("ALLOTT", "TXT_MUST_SELECT_EVENT"))
				thisform.SelectEventsCmd.SetFocus()
				RETURN .F.
			ENDIF
		ENDIF
		
		if Empty(thisform.DataCopy.al_fromdat) OR (NOT thisform.TBDate.ReadOnly AND (thisform.DataCopy.al_fromdat <= g_SysDate))
			thisform.TBDate.SetFocus()
			return
		endif
		
		if Empty(thisform.DataCopy.al_todat)
			thisform.TBToDate.SetFocus()
			return
		endif
		
		if thisform.DataCopy.al_todat < thisform.DataCopy.al_fromdat
			thisform.TBToDate.SetFocus()
			return
		endif
		
		IF g_lShips
			TEXT TO lcSqlSelect TEXTMERGE NOSHOW PRETEXT 2 + 8
				SELECT al_altid, al_allott, al_fromdat, al_todat FROM althead 
					WHERE al_altid <> <<SqlCnv(thisform.DataCopy.al_altid,.T.)>> AND 
						al_buildng = <<SqlCnv(PADR(thisform.DataCopy.al_buildng,3),.T.)>> AND 
						al_eiid = <<SqlCnv(thisform.DataCopy.al_eiid,.T.)>> AND 
						al_fromdat <= <<SqlCnv(thisform.DataCopy.al_todat,.T.)>> AND 
						al_todat >= <<SqlCnv(thisform.DataCopy.al_fromdat,.T.)>>
			ENDTEXT
			lnArea = SELECT()
			lcCurResult = SqlCursor(lcSqlSelect)
			SELECT (lnArea)
			IF USED(lcCurResult) AND RECCOUNT(lcCurResult) > 0
				Alert(Str2Msg(GetLangText("ALLOTT", "TXT_ALLOTT_ALREADY_EXISTS"),"%s",;
					ALLTRIM(&lcCurResult..al_allott),DTOC(&lcCurResult..al_fromdat),DTOC(&lcCurResult..al_todat)))
				thisform.TBDate.SetFocus()
				USE IN &lcCurResult
				RETURN
			ENDIF
			USE IN &lcCurResult
		ENDIF
		
		if NOT (thisform.CBMonday.Value OR ;
		   thisform.CBTuesday.Value OR ;
		   thisform.CBWednseday.Value OR ;
		   thisform.CBThursday.Value OR ;
		   thisform.CBFriday.Value OR ;
		   thisform.CBSaturday.Value OR ;
		   thisform.CBSunday.Value)
			thisform.CBMonday.SetFocus()
			return
		endif
		LOCAL LCutCh
		LCutCh = .F.
		if thisform.DataCopy.al_cutday <> 0
			thisform.DataCopy.al_cutdate = thisform.DataCopy.al_fromdat - thisform.DataCopy.al_cutday
			LCutCh = .T.
		*	thisform.DataCopy.al_cutday = 0
		else
			if !EMPTY(thisform.DataCopy.al_cutdate) AND (thisform.DataCopy.al_cutdate > thisform.DataCopy.al_fromdat)
				thisform.TBCutDate.SetFocus()
				return
			endif
			if EMPTY(thisform.DataCopy.al_cutdate)
				LCutCh = .T.
			endif
		endif
		
		if not g_lShips
			thisform.DataCopy.al_lname = thisform.CBName.Value
			thisform.DataCopy.al_addrid = thisform.CBName.ItemData(thisform.CBName.ListIndex)
		endif
		
		Local l_Day1, l_Day2, l_Day3, l_Day4, l_Day5, l_Day6, l_Day7
		
		l_Day1 = thisform.CBMonday.Value
		l_Day2 = thisform.CBTuesday.Value
		l_Day3 = thisform.CBWednseday.Value
		l_Day4 = thisform.CBThursday.Value
		l_Day5 = thisform.CBFriday.Value
		l_Day6 = thisform.CBSaturday.Value
		l_Day7 = thisform.CBSunday.Value
		
		thisform.DataCopy.al_days = ;
			IIF(l_Day1, "1", "0") + ;
			IIF(l_Day2, "1", "0") + ;
			IIF(l_Day3, "1", "0") + ;
			IIF(l_Day4, "1", "0") + ;
			IIF(l_Day5, "1", "0") + ;
			IIF(l_Day6, "1", "0") + ;
			IIF(l_Day7, "1", "0")
		
		if (thisform.Mode = NEW_MODE)
			Append Blank
		else
			IF g_lShips AND al_buildng <> PADR(thisform.DataCopy.al_buildng,3)
				* Boat is changed. Delete all from altsplit.
				IF NOT thisformset.AllotUpdateSplit(al_fromdat, al_todat, "0000000")
					return
				ENDIF
			ELSE
				if NOT thisformset.AllotUpdateSplit(thisform.DataCopy.al_fromdat, thisform.DataCopy.al_todat, "1111111")
					return
				ENDIF
			ENDIF
			Select AltHeadTAlias
		
			if (thisform.DataCopy.al_cutdate <> al_cutdate) OR (thisform.DataCopy.al_cutday <> al_cutday)
				Select AltSplitTAlias
				scan
					IF LCutCh
						replace as_cutdate with as_date-thisform.DataCopy.al_cutday
					ELSE
						replace as_cutdate with thisform.DataCopy.al_cutdate
					ENDIF
					IF (as_cutdate < SysDate())
						IF (as_rooms > as_pick) AND EMPTY(as_orgroom)
							thisformset.AllotRealocAv(as_date, as_roomtyp, as_rooms - as_pick, .F.)
							REPLACE as_orgroom WITH as_rooms
							REPLACE as_rooms WITH as_pick
						ENDIF
					ELSE
						IF (as_rooms = as_pick) AND NOT EMPTY(as_orgroom)
							thisformset.AllotRealocAv(as_date, as_roomtyp, as_pick - as_orgroom, .F.)
							REPLACE as_rooms WITH as_orgroom
							REPLACE as_orgroom WITH 0
						ENDIF
					ENDIF
				endscan
			endif
		
			Select AltHeadTAlias
		ENDIF
		
		IF (thisform.Mode = EDIT_MODE) AND (althead.al_allott <> thisform.DataCopy.al_allott)
			IF !thisformset.m_changeallottname(althead.al_allott,thisform.DataCopy.al_allott)
				RETURN
			ENDIF
		ENDIF
		
		Gather Name thisform.DataCopy Memo
		
		IF NOT EMPTY(thisform.DataCopy.al_cutdate)
			DO ActInsertForAllotment IN procaction WITH thisform.DataCopy
		ENDIF
		
		thisformset.Result = RecNo()
		
		thisform.Release()
		
		RETURN
		
		****
		* multi user allottment
			fc_ = AFIELDS(addrfields,'AltHead') 
			ch_=.f.
			ow_=.t.
			FOR i = 1 TO fc_ 
				IF OLDVAL(addrfields(i,1),'AltHead')<>CURVAL(addrfields(i,1),'AltHead')
					ch_=.t.
					exit
				ELSE
					ch_=.f.
				endif
			ENDFOR
			IF ch_
				*IF MESSAGEBOX("Ovaj slog je menjao drugi user, prepisati promene? ",4)=6
				IF MESSAGEBOX(GetLangText("ADDRESS","T_CHANGEDETECTED"),276,GetLangText("FUNC","TXT_QUESTION"))=6
					ow_=.t.
				ELSE
					ow_=.f.
		*			nocont = .t.
					= TABLEREVERT(.T.)
					MESSAGEBOX(GetLangText("ADDRESS","T_SAVEFAILED"),48,GetLangText("RECURRES","TXT_INFORMATION"))
					*MESSAGEBOX("Upis nije uspeo",48)
		*			this.refreshaddressgrid()
					RETURN 0
				ENDIF
			ENDIF
		*	IF !nocont
				IF tableupdate(.f.,ow_,'AltHead')
					*MESSAGEBOX("Upis u adresar je uspeo!",48)
					IF thisform.DataCopy.al_altid<>thisform.TBAllottID.Value
						*MESSAGEBOX("Upis je uspeo, novi id je " +STR(this.datacopy.ad_addrid),48)
						WAIT WINDOW GetLangText("ADDRESS","T_SAVEDSUCCESS")+STR(thisform.DataCopy.al_altid) NOWAIT TIMEOUT 4
					endif
				else	
					thisform.DataCopy.al_altid=nextid('ALLOTT')
					replace al_altid WITH thisform.DataCopy.al_altid IN AltHead
					IF tableupdate(.f.,ow_,'AltHead')
						*MESSAGEBOX("Upis je uspeo, novi id je " +STR(m.ad_addrid),48)
						WAIT WINDOW GetLangText("ADDRESS","T_SAVEDSUCCESS")+STR(AltHeadTAlias.al_altid) NOWAIT TIMEOUT 4
					ELSE
						MESSAGEBOX(GetLangText("ADDRESS","T_SAVEFAILED"),48,GetLangText("RECURRES","TXT_INFORMATION"))
						RETURN 0
					endif
				ENDIF
		
		
		
		****
		
	ENDPROC

	PROCEDURE AllottForm.QueryUnload
		NODEFAULT
		thisform.CancelCmd.Click()
	ENDPROC

	PROCEDURE AllottForm.SelectEventsCmd.Click
		LOCAL l_nRet, l_nSelect, l_dFrom, l_dTo
		LOCAL ARRAY l_aDefs(4,5)
		
		l_nSelect = SELECT()
		
		SELECT UPPER(ev_name) AS EventName, ev_city AS EventCity, ei_from, ei_to, ei_eiid ;
				FROM evint ;
				INNER JOIN events ON ev_evid = ei_evid ;
				INTO CURSOR curChooseEvents READWRITE
		INDEX ON UPPER(EventName)+DTOS(ei_from) TAG EventName
		INDEX ON UPPER(EventCity)+DTOS(ei_from) TAG EventCity
		INDEX ON ei_from TAG ei_from
		INDEX ON ei_to TAG ei_to
		SET ORDER TO EventName
		* position on right event
		LOCATE FOR ei_eiid = thisform.DataCopy.al_eiid
		IF NOT FOUND()
			GO TOP
		ENDIF
		
		l_aDefs(1,1) = "EventName"
		l_aDefs(1,2) = 100
		l_aDefs(1,3) = GetLangText("EVENT", "TXT_EVENT")
		l_aDefs(1,4) = "TXT"
		l_aDefs(1,5) = "EventName"
		l_aDefs(2,1) = "EventCity"
		l_aDefs(2,2) = 100
		l_aDefs(2,3) = GetLangText("EVENT", "TXT_CITY")
		l_aDefs(2,4) = "TXT"
		l_aDefs(2,5) = "EventCity"
		l_aDefs(3,1) = "ei_from"
		l_aDefs(3,2) = 120
		l_aDefs(3,3) = GetLangText("EVENT", "TXT_FROM")
		l_aDefs(3,4) = "TXT"
		l_aDefs(3,5) = "ei_from"
		l_aDefs(4,1) = "ei_to"
		l_aDefs(4,2) = 120
		l_aDefs(4,3) = GetLangText("EVENT", "TXT_TO")
		l_aDefs(4,4) = "TXT"
		l_aDefs(4,5) = "ei_to"
		
		SELECT 0
		DO FORM forms\brwmulsel WITH "curChooseEvents", l_aDefs, GetLangText("ALLOTT", "TXT_SELECT_EVENTS"), ;
				.F., .T. TO l_nRet
		IF l_nRet = 1
			thisform.DataCopy.al_eiid = curChooseEvents.ei_eiid
			thisform.cboEvent.Refresh()
			thisform.cboEvent.LostFocus()
		ENDIF
		
		dclose("curChooseEvents")
		
		SELECT (l_nSelect)
		
		RETURN .T.
		
	ENDPROC

	PROCEDURE AllottForm.TBComp.GotFocus
		if NOT thisformset.SelectForm.InEdit
			Select CompanyTAlias
			Set Order To TAG3
		
			thisformset.SelectForm.TFilter = ""
			thisformset.SelectForm.TField = [ad_company]
			thisformset.SelectForm.SetFilter = .T.
			thisformset.SelectForm.NextObj1 = thisform.CBName
			thisformset.SelectForm.CurrObj = this
			thisformset.SelectForm.KeyField = "ad_addrid"
		
			thisformset.SelectForm.Width = 320
			thisformset.SelectForm.Height = 110
			thisformset.SelectForm.SelectGrid.Width = 320
			thisformset.SelectForm.SelectGrid.ColumnCount = 2
			thisformset.SelectForm.SelectGrid.Column1.Width = 116
			thisformset.SelectForm.SelectGrid.Column2.Width = 170
		
			thisformset.SelectForm.SelectGrid.RecordSource = [CompanyTAlias]
			thisformset.SelectForm.SelectGrid.Column1.ControlSource = [ad_company]
			thisformset.SelectForm.SelectGrid.Column2.ControlSource = [ad_lname]
		
			thisformset.SelectForm.Top = thisform.Top + this.Top + this.Height + SYSMETRIC(9) + 10
			thisformset.SelectForm.Left = thisform.Left + this.Left - Int(thisformset.SelectForm.Width / 2)
		endif
		
	ENDPROC

	PROCEDURE AllottForm.TBComp.InteractiveChange
		Local m.SStart
		
		thisform.AlwaysOnTop = .T.
		
		thisformset.SelectForm.InEdit = .T.
		m.SStart = this.SelStart
		thisformset.SelectForm.Visible = .T.
		
		Seek Upper(RTrim(this.Text))
		
		thisformset.SelectForm.SelectGrid.SetFocus()
		this.SetFocus()
		this.SelStart = m.SStart
		
		thisform.AlwaysOnTop = .F.
		
		thisformset.SelectForm.Refresh()
		
		thisformset.SelectForm.InEdit = .F.
		
	ENDPROC

	PROCEDURE AllottForm.TBComp.KeyPress
		LPARAMETERS nKeyCode, nShiftAltCtrl
		
		if (nKeyCode = ShKCChoose) AND (nShiftAltCtrl = ShSCAChoose)
			thisformset.SelectForm.Visible = .T.
			thisformset.SelectForm.SelectGrid.SetFocus()
			nodefault
		endif
		
	ENDPROC

	PROCEDURE AllottForm.TBComp.LostFocus
		LParameters m.AddrID
		
		if thisformset.SelectForm.InEdit
			return
		endif
		
		if Type([m.AddrID]) = "N"
			Seek m.AddrID order TAG1
			this.Value = RTrim(CompanyTAlias.ad_company)
			thisformset.AllotFilllNameCombo(m.AddrID)
			thisform.CBName.ListIndex = 1
		else
			if Empty(this.Text)
				thisformset.SelectForm.Visible = .F.
				thisform.CBName.Clear()
				thisform.CBName.ListIndex = 1
				return
			endif
		
			Seek Upper(RTrim(this.Text))
			if Found()
				this.Value = RTrim(CompanyTAlias.ad_company)
				thisformset.AllotFilllNameCombo(CompanyTAlias.ad_addrid)
				thisform.CBName.ListIndex = 1
			else
				this.Value = ""
				thisform.CBName.Clear()
			endif
		endif
		
		this.Refresh()
		thisformset.SelectForm.Visible = .F.
		Set filter to
		
	ENDPROC

	PROCEDURE AllottForm.TBCutDate.LostFocus
		if Empty(CTOD(this.Text))
			thisform.TBCutDays.Enabled = .T.
		else
			thisform.TBCutDays.Enabled = .F.
		endif
		
	ENDPROC

	PROCEDURE AllottForm.TBCutDays.LostFocus
		if Empty(Val(this.Text))
			thisform.TBCutDate.Enabled = .T.
		else
			thisform.TBCutDate.Enabled = .F.
		endif
		
	ENDPROC

	PROCEDURE AllottForm.Unload
		this.Visible = .F.
		ChildTitle("")
		*RETURN thisformset.result
	ENDPROC

	PROCEDURE AllottSearchForm.assigncaption
		this.Caption = ChildTitle(GetLangText("MGRRESER", "TXT_ALSEARCH"))
		
		this.lblAllottment.Caption = GetLangText("MGRRESER", "TXT_ALLOTMENT")
		this.lblCompany.Caption = GetLangText("MGRRESER", "TXT_ALCOMPANY")
		this.lblName.Caption = GetLangText("MGRRESER", "TXT_ALNAME")
		this.lblDate.Caption = GetLangText("MGRRESER", "TXT_ALDATE")
		this.lblBuilding.Caption = GetLangText("ALLOTT", "TXT_RENT_OBJECT")
		this.lblEvent.Caption = GetLangText("EVENT", "TXT_EVENT")
		this.chkIncludeHistory.Caption = GetLangText("MGRRESER", "TXT_INCLUDE_HISTORY")
		
		this.cmdOK.Caption = GetLangText("COMMON", "TXT_OK")
		this.cmdCancel.Caption = GetLangText("COMMON", "TXT_CLOSE")
	ENDPROC

	PROCEDURE AllottSearchForm.cboEvent.Valid
		thisform.nEvent = INT(this.Value)
		
		RETURN DODEFAULT()
	ENDPROC

	PROCEDURE AllottSearchForm.cmdCancel.Click
		thisform.Release()
	ENDPROC

	PROCEDURE AllottSearchForm.cmdOK.Click
		LOCAL l_cForClause, l_cJoinClause, l_cFilter
		LOCAL ARRAY l_aResult(1)
		
		l_cForClause = ""
		l_cJoinClause = ""
		l_cFilter = ""
		IF NOT EMPTY(thisform.cAllott)
			l_cForClause = "al_allott = " + SqlCnv(ALLTRIM(thisform.cAllott))
		ENDIF
		IF NOT EMPTY(thisform.nAddrId)
			l_cForClause = l_cForClause + IIF(EMPTY(l_cForClause), "", " AND ") + ;
				"al_addrid = " + SqlCnv(thisform.nAddrId)
		ENDIF
		IF NOT EMPTY(thisform.dFromDate)
			l_cForClause = l_cForClause + IIF(EMPTY(l_cForClause), "", " AND ") + ;
				"al_todat >= " + SqlCnv(thisform.dFromDate)
		ENDIF
		IF NOT EMPTY(thisform.dToDate)
			l_cForClause = l_cForClause + IIF(EMPTY(l_cForClause), "", " AND ") + ;
				"al_fromdat <= " + SqlCnv(thisform.dToDate)
		ENDIF
		IF NOT EMPTY(thisform.cBuilding)
			l_cForClause = l_cForClause + IIF(EMPTY(l_cForClause), "", " AND ") + ;
				"al_buildng = " + SqlCnv(ALLTRIM(thisform.cBuilding))
		ENDIF
		IF NOT EMPTY(thisform.nEvent)
			l_cForClause = l_cForClause + IIF(EMPTY(l_cForClause), "", " AND ") + ;
				"ei_evid = " + SqlCnv(thisform.nEvent)
			l_cJoinClause = l_cJoinClause + " INNER JOIN evint ON ei_eiid = al_eiid"
			l_cFilter = "aevint.ei_evid = " + SqlCnv(thisform.nEvent)
		ENDIF
		IF NOT thisformset.Result.lHistory
			l_cForClause = l_cForClause + IIF(EMPTY(l_cForClause), "", " AND ") + ;
				"al_todat >= g_SysDate"
		ENDIF
		IF EMPTY(l_cForClause)
			l_cForClause = ".T."
		ENDIF
		
		l_aResult(1) = 0
		SELECT al_altid FROM althead &l_cJoinClause ;
			WHERE &l_cForClause ;
			ORDER BY al_allott ;
			INTO ARRAY l_aResult
		
		IF l_aResult(1) > 0
			= SEEK(l_aResult(1), "althead", "tag1")
			thisformset.Result.nRecNo = RECNO("althead")
		ENDIF
		thisformset.Result.cFilter = l_cFilter
		thisformset.Result.lAnswer = .T.
		
		thisform.Release()
	ENDPROC

	PROCEDURE AllottSearchForm.Destroy
		if thisformset.FormID <> ALLOTT_SEARCH_FORM
			return
		endif
		
		*this.OldEnvir.Restore()
		
		thisformset.Release()
		
	ENDPROC

	PROCEDURE AllottSearchForm.Init
		LParameter m.Mode
		
		if thisformset.FormID <> ALLOTT_SEARCH_FORM
			return
		endif
		
		this.cmdOK.Default = .T.
		this.cmdCancel.Cancel = .T.
		
		Select 0
		openfiledirect(.F., "address")
		Set order to TAG1
		
		Select 0
		openfiledirect(.F., "AltHead")
		set order to TAG1
		
		SELECT ev_name, ev_city, ev_evid, UPPER(ev_name) ;
			FROM events ;
			UNION SELECT "", "", 0, "" FROM events ;
			ORDER BY 4 ;
			INTO CURSOR curEvents
		
		this.AssignCaption()
		
		this.AddProperty("cAllott", "")
		this.AddProperty("nAddrId", 0)
		this.AddProperty("dFromDate", {})
		this.AddProperty("dToDate", {})
		this.AddProperty("cBuilding", "")
		this.AddProperty("nEvent", 0)
		thisformset.Result = MakeStructure("lAnswer, nRecNo, lHistory, cFilter")
		thisformset.Result.nRecNo = 0
		
		this.txtAllottment.ControlSource = [thisform.cAllott]
		this.dtxtFromDate.ControlSource = [thisform.dFromDate]
		this.dtxtToDate.ControlSource = [thisform.dToDate]
		this.cboBuilding.ControlSource = [thisform.cBuilding]
		this.cboEvent.ControlSource = [thisform.nEvent]
		this.cboEvent.RowSource = [curEvents.ev_name, ev_city, ev_evid]
		this.chkIncludeHistory.ControlSource = [thisformset.Result.lHistory]
		
		this.lblBuilding.Visible = g_lShips
		this.cboBuilding.Visible = g_lShips
		this.lblCompany.Visible = NOT g_lShips
		this.txtCompany.Visible = NOT g_lShips
		this.lblName.Visible = NOT g_lShips
		this.txtName.Visible = NOT g_lShips
		
		this.Visible = .T.
		DODEFAULT()
	ENDPROC

	PROCEDURE AllottSearchForm.QueryUnload
		NODEFAULT
		thisform.cmdCancel.Click()
	ENDPROC

	PROCEDURE AllottSearchForm.txtAllottment.InteractiveChange
		IF EMPTY(this.Value)
			thisform.txtName.Enabled = .T.
			thisform.txtCompany.Enabled = .T.
		ELSE
			thisform.txtName.Enabled = .F.
			thisform.txtCompany.Enabled = .F.
		ENDIF
	ENDPROC

	PROCEDURE AllottSearchForm.txtCompany.GotFocus
		if NOT thisformset.SelectForm.InEdit
			this.cOldValue = this.Value
			Select CompanyTAlias
			Set Order To TAG3
		
			thisformset.SelectForm.TFilter = ""
			thisformset.SelectForm.TField = [ad_company]
			thisformset.SelectForm.SetFilter = .T.
			thisformset.SelectForm.NextObj1 = thisform.txtName
			thisformset.SelectForm.CurrObj = this
		
			thisformset.SelectForm.Width = 320
			thisformset.SelectForm.Height = 110
			thisformset.SelectForm.SelectGrid.Width = 320
			thisformset.SelectForm.SelectGrid.ColumnCount = 2
			thisformset.SelectForm.SelectGrid.Column1.Width = 116
			thisformset.SelectForm.SelectGrid.Column2.Width = 170
		
			thisformset.SelectForm.SelectGrid.RecordSource = [CompanyTAlias]
			thisformset.SelectForm.SelectGrid.Column1.ControlSource = [ad_company]
			thisformset.SelectForm.SelectGrid.Column2.ControlSource = [ad_lname]
		
			thisformset.SelectForm.Top = thisform.Top + this.Top + this.Height + SYSMETRIC(9) + 10
			thisformset.SelectForm.Left = thisform.Left + this.Left - Int(thisformset.SelectForm.Width / 2)
		endif
		
	ENDPROC

	PROCEDURE AllottSearchForm.txtCompany.Init
		this.AddProperty("cOldValue")
		DODEFAULT()
	ENDPROC

	PROCEDURE AllottSearchForm.txtCompany.InteractiveChange
		Local m.SStart
		
		thisform.AlwaysOnTop = .T.
		
		thisformset.SelectForm.InEdit = .T.
		m.SStart = this.SelStart
		thisformset.SelectForm.Visible = .T.
		
		Seek Upper(RTrim(this.Text))
		
		thisformset.SelectForm.SelectGrid.SetFocus()
		this.SetFocus()
		this.SelStart = m.SStart
		
		thisform.AlwaysOnTop = .F.
		
		thisformset.SelectForm.Refresh()
		
		thisformset.SelectForm.InEdit = .F.
		
	ENDPROC

	PROCEDURE AllottSearchForm.txtCompany.KeyPress
		LPARAMETERS nKeyCode, nShiftAltCtrl
		
		if (nKeyCode = ShKCChoose) AND (nShiftAltCtrl = ShSCAChoose)
			thisformset.SelectForm.Visible = .T.
			thisformset.SelectForm.SelectGrid.SetFocus()
			nodefault
		endif
		
	ENDPROC

	PROCEDURE AllottSearchForm.txtCompany.LostFocus
		if thisformset.SelectForm.InEdit OR NOT EMPTY(thisform.nAddrId) AND ALLTRIM(this.cOldValue) == ALLTRIM(this.Value)
			return
		endif
		
		if Empty(this.Text)
			thisformset.SelectForm.Visible = .F.
			thisform.txtName.Value = ""
			thisform.nAddrId = 0
			thisform.txtAllottment.Enabled = .T.
			return
		endif
		
		Seek Upper(RTrim(this.Text))
		if Found()
			this.Value = RTrim(ad_company)
			thisform.txtName.Value = RTrim(ad_lname)
			thisform.nAddrId = ad_addrid
			thisform.txtAllottment.Enabled = .F.
		else
			this.Value = ""
			thisform.txtName.Value = ""
			thisform.nAddrId = 0
			thisform.txtAllottment.Enabled = .T.
		endif
		
		this.Refresh()
		thisform.txtName.Refresh()
		thisformset.SelectForm.Visible = .F.
		Set filter to
		
	ENDPROC

	PROCEDURE AllottSearchForm.txtName.GotFocus
		if NOT thisformset.SelectForm.InEdit
			this.cOldValue = this.Value
			Select CompanyTAlias
			Set Order To TAG2
		
			thisformset.SelectForm.TFilter = ""
			thisformset.SelectForm.TField = [ad_lname]
			thisformset.SelectForm.SetFilter = .T.
			thisformset.SelectForm.NextObj1 = thisform.dtxtFromDate
			thisformset.SelectForm.CurrObj = this
		
			thisformset.SelectForm.Width = 320
			thisformset.SelectForm.Height = 110
			thisformset.SelectForm.SelectGrid.Width = 320
			thisformset.SelectForm.SelectGrid.ColumnCount = 2
			thisformset.SelectForm.SelectGrid.Column1.Width = 116
			thisformset.SelectForm.SelectGrid.Column2.Width = 170
		
			thisformset.SelectForm.SelectGrid.RecordSource = [CompanyTAlias]
			thisformset.SelectForm.SelectGrid.Column1.ControlSource = [ad_lname]
			thisformset.SelectForm.SelectGrid.Column2.ControlSource = [ad_company]
		
			thisformset.SelectForm.Top = thisform.Top + this.Top + this.Height + SYSMETRIC(9) + 10
			thisformset.SelectForm.Left = thisform.Left + this.Left - Int(thisformset.SelectForm.Width / 2)
		endif
		
	ENDPROC

	PROCEDURE AllottSearchForm.txtName.Init
		this.AddProperty("cOldValue")
		DODEFAULT()
	ENDPROC

	PROCEDURE AllottSearchForm.txtName.InteractiveChange
		Local m.SStart
		
		thisform.AlwaysOnTop = .T.
		
		thisformset.SelectForm.InEdit = .T.
		m.SStart = this.SelStart
		thisformset.SelectForm.Visible = .T.
		
		Seek Upper(RTrim(this.Text))
		
		thisformset.SelectForm.SelectGrid.SetFocus()
		this.SetFocus()
		this.SelStart = m.SStart
		
		thisform.AlwaysOnTop = .F.
		
		thisformset.SelectForm.Refresh()
		
		thisformset.SelectForm.InEdit = .F.
		
	ENDPROC

	PROCEDURE AllottSearchForm.txtName.KeyPress
		LPARAMETERS nKeyCode, nShiftAltCtrl
		
		if (nKeyCode = ShKCChoose) AND (nShiftAltCtrl = ShSCAChoose)
			thisformset.SelectForm.Visible = .T.
			thisformset.SelectForm.SelectGrid.SetFocus()
			nodefault
		endif
		
	ENDPROC

	PROCEDURE AllottSearchForm.txtName.LostFocus
		if thisformset.SelectForm.InEdit OR NOT EMPTY(thisform.nAddrId) AND ALLTRIM(this.cOldValue) == ALLTRIM(this.Value)
			return
		endif
		
		if Empty(this.Text)
			thisformset.SelectForm.Visible = .F.
			thisform.txtCompany.Value = ""
			thisform.nAddrId = 0
			thisform.txtAllottment.Enabled = .T.
			return
		endif
		
		Seek Upper(RTrim(this.Text))
		if Found()
			this.Value = RTrim(CompanyTAlias.ad_lname)
			thisform.txtCompany.Value = RTrim(CompanyTAlias.ad_company)
			thisform.nAddrId = ad_addrid
			thisform.txtAllottment.Enabled = .F.
		else
			this.Value = ""
			thisform.txtCompany.Value = ""
			thisform.nAddrId = 0
			thisform.txtAllottment.Enabled = .T.
		endif
		
		this.Refresh()
		thisform.txtCompany.Refresh()
		thisformset.SelectForm.Visible = .F.
		Set filter to
		
	ENDPROC

	PROCEDURE AllottSearchForm.Unload
		this.Visible = .F.
		ChildTitle("")
		
	ENDPROC

	PROCEDURE SelectForm.GotFocus
		this.SelectGrid.Width = this.Width
		this.SelectGrid.Height = this.Height
		
		if NOT this.InEdit AND this.SetFilter
			Local Flt
			Flt = this.TFilter
			Set Filter To &Flt
			this.SelectGrid.ReadOnly = .T.
		endif
		
	ENDPROC

	PROCEDURE SelectForm.Init
		this.AddProperty("InEdit", .F.)
		this.AddProperty("TField", .F.)
		this.AddProperty("TFilter", "")
		this.AddProperty("SetFilter", .F.)
		this.AddProperty("NextObj1", .NULL.)
		this.AddProperty("NextObj2", .NULL.)
		this.AddProperty("NextObj3", .NULL.)
		this.AddProperty("CurrObj", .NULL.)
		this.AddProperty("KeyField", .F.)
		this.AddProperty("w",.f.)
	ENDPROC

	PROCEDURE SelectForm.KeyPress
		LPARAMETERS nKeyCode, nShiftAltCtrl
		
		if (nKeyCode = 13) or (nKeyCode = 27)
			if NOT IsNull(this.NextObj1)
				if (this.NextObj1.Visible) AND (this.NextObj1.Enabled)
					this.NextObj1.SetFocus()
				else
					if NOT IsNull(this.NextObj2)
						if (this.NextObj2.Visible) AND (this.NextObj2.Enabled)
							this.NextObj2.SetFocus()
						else
							if NOT IsNull(this.NextObj3)
								this.NextObj3.SetFocus()
							endif
						endif
					endif
				endif
			endif
			nodefault
		endif
		
	ENDPROC

	PROCEDURE SelectForm.LostFocus
		if NOT this.InEdit AND NOT IsNull(this.CurrObj)
			if Type([this.KeyField]) = "C"
				this.CurrObj.LostFocus(Evaluate(this.KeyField))
			else
				this.CurrObj.LostFocus()
			endif
		endif
		
	ENDPROC

	PROCEDURE SelectForm.SelectGrid.AfterRowColChange
		LPARAMETERS nColIndex
		
		Local TField
		
		if NOT thisform.InEdit
			thisform.CurrObj.Value = Evaluate(thisform.TField)
		endif
		
	ENDPROC

	PROCEDURE SelectForm.SelectGrid.Column1.Text1.DblClick
		thisform.KeyPress(13, 0)
		
	ENDPROC

	PROCEDURE SelectForm.SelectGrid.Column10.Text1.DblClick
		thisform.KeyPress(13, 0)
		
	ENDPROC

	PROCEDURE SelectForm.SelectGrid.Column11.Text1.DblClick
		thisform.KeyPress(13, 0)
		
	ENDPROC

	PROCEDURE SelectForm.SelectGrid.Column12.Text1.DblClick
		thisform.KeyPress(13, 0)
		
	ENDPROC

	PROCEDURE SelectForm.SelectGrid.Column13.Text1.DblClick
		thisform.KeyPress(13, 0)
		
	ENDPROC

	PROCEDURE SelectForm.SelectGrid.Column14.Text1.DblClick
		thisform.KeyPress(13, 0)
		
	ENDPROC

	PROCEDURE SelectForm.SelectGrid.Column15.Text1.DblClick
		thisform.KeyPress(13, 0)
		
	ENDPROC

	PROCEDURE SelectForm.SelectGrid.Column16.Text1.DblClick
		thisform.KeyPress(13, 0)
		
	ENDPROC

	PROCEDURE SelectForm.SelectGrid.Column17.Text1.DblClick
		thisform.KeyPress(13, 0)
		
	ENDPROC

	PROCEDURE SelectForm.SelectGrid.Column18.Text1.DblClick
		thisform.KeyPress(13, 0)
		
	ENDPROC

	PROCEDURE SelectForm.SelectGrid.Column19.Text1.DblClick
		thisform.KeyPress(13, 0)
		
	ENDPROC

	PROCEDURE SelectForm.SelectGrid.Column2.Text1.DblClick
		thisform.KeyPress(13, 0)
		
	ENDPROC

	PROCEDURE SelectForm.SelectGrid.Column20.Text1.DblClick
		thisform.KeyPress(13, 0)
		
	ENDPROC

	PROCEDURE SelectForm.SelectGrid.Column3.Text1.DblClick
		thisform.KeyPress(13, 0)
		
	ENDPROC

	PROCEDURE SelectForm.SelectGrid.Column4.Text1.DblClick
		thisform.KeyPress(13, 0)
		
	ENDPROC

	PROCEDURE SelectForm.SelectGrid.Column5.Text1.DblClick
		thisform.KeyPress(13, 0)
		
	ENDPROC

	PROCEDURE SelectForm.SelectGrid.Column6.Text1.DblClick
		thisform.KeyPress(13, 0)
		
	ENDPROC

	PROCEDURE SelectForm.SelectGrid.Column7.Text1.DblClick
		thisform.KeyPress(13, 0)
		
	ENDPROC

	PROCEDURE SelectForm.SelectGrid.Column8.Text1.DblClick
		thisform.KeyPress(13, 0)
		
	ENDPROC

	PROCEDURE SelectForm.SelectGrid.Column9.Text1.DblClick
		thisform.KeyPress(13, 0)
		
	ENDPROC

	PROCEDURE UserForm.cmdCancel.Click
		thisformset.Result = 0
		thisform.Release()
		
	ENDPROC

	PROCEDURE UserForm.cmdOK.Click
		LOCAL l_cCur
		
		IF EMPTY(thisform.DataCopy.us_id)
			thisform.txtUserID.SetFocus()
			RETURN .F.
		ENDIF
		
		IF EMPTY(thisform.DataCopy.us_group)
			alert(GetLangText("MGRSYS", "TXT_USER_NO_GROUP_DEFINED"))
			thisform.cboUserGroup.SetFocus()
			RETURN .F.
		ENDIF
		
		IF EMPTY(thisform.DataCopy.us_pass)
			thisform.DataCopy.us_pass = SYS(2007, ALLTRIM(thisform.DataCopy.us_pass))
		ENDIF
		
		IF EMPTY(thisform.DataCopy.us_lang)
			thisform.DataCopy.us_lang = _screen.oGlobal.oParam.pa_lang
		ENDIF
		
		if thisformset.Mode <> EDIT_MODE
			l_cCur = sqlcursor([SELECT us_id FROM "user" WHERE us_id = ] + ;
					sqlcnv(PADR(thisform.DataCopy.us_id,10),.T.))
			IF RECCOUNT()>0
				dclose(l_cCur)
				alert(Str2Msg(GetLangText("MGRSYS", "TXT_USER_EXISTS"), "%s", TRIM(thisform.DataCopy.us_id)))
				RETURN .F.
			ENDIF
			dclose(l_cCur)
		
			SELECT causer
			Append Blank
			
		*!*		* INsert new fields in grid.dbf
		*!*		SELECT * from screens WHERE sc_userid="SUPERVISOR"  into CURSOR tempscreen READWRITE
		*!*		replace sc_userid WITH thisform.DataCopy.us_id ALL
		*!*		SCAN ALL
		*!*			SELECT tempscreen 
		*!*			SCATTER MEMVAR MEMO
		*!*			SELECT screens
		*!*			APPEND BLANK
		*!*			GATHER MEMVAR MEMO
		*!*		ENDSCAN
		
		*!*		SELECT * from grid WHERE gr_user="SUPERVISOR" INTO CURSOR tempgrid READWRITE
		*!*		replace gr_user WITH thisform.DataCopy.us_id ALL
		
		*!*	*	SELECT tempgrid 
		*!*		SCAN ALL
		*!*			SELECT tempgrid 
		*!*			SCATTER MEMVAR MEMO
		*!*			SELECT grid
		*!*			APPEND BLANK
		*!*			GATHER MEMVAR MEMO
		*!*		ENDSCAN
			
		*!*		Select UserTAlias
		ELSE
		*!*		* Replace USer Name in gird.dbf
		*!*		IF thisform.DataCopy.us_id<>UserTAlias.us_id
		*!*			replace screens.sc_userid WITH thisform.DataCopy.us_id FOR screens.sc_userid==UserTAlias.us_id IN screens
		*!*			replace grid.gr_user WITH thisform.DataCopy.us_id FOR grid.gr_user==UserTAlias.us_id IN grid	
		*!*		ENDIF
		endif
		
		SELECT causer
		GATHER NAME thisform.DataCopy
		
		thisformset.DataEnvironment.ocauser.DoTableUpdate()
		
		thisformset.Result = RecNo()
		
		thisform.Release()
		
	ENDPROC

	PROCEDURE UserForm.cmdPassword.Click
		Local NewPass
		
		do form "forms\UserPassForm" with thisform.DataCopy.us_id to NewPass
		
		if NOT Empty(NewPass)
			thisform.DataCopy.us_pass = NewPass
		endif
	ENDPROC

	PROCEDURE UserForm.Destroy
		if thisformset.FormID <> USER_FORM
			return
		endif
		
		if thisformset.Mode = EDIT_MODE
			UnLock
		endif
		
		*this.OldEnvir.Restore()
		thisformset.Release()
		
	ENDPROC

	PROCEDURE UserForm.Init
		LParameter m.Mode, m.URecNo
		
		if thisformset.FormID <> USER_FORM
			return
		endif
		
		LOCAL l_cSql
		
		this.Parent.DataEnvironment.NewObject("ocauser", "causer","progs\cadefdesk.prg")
		
		openfiledirect(.F., "group")
		openfiledirect(.F., "picklist")
			
		this.Caption = ChildTitle(GetLangText("MGRSYS", "TXT_USWIND"))
		
		this.lblName.Caption = GetLangText("MGRSYS", "TXT_USNAME")
		this.lblUserID.Caption = GetLangText("MGRSYS", "TXT_USID")
		this.lblLanguage.Caption = GetLangText("MGRSYS", "TXT_USLANG")
		this.lblUserGroup.Caption = GetLangText("MGRSYS", "TXT_USGROU")
		this.lblCashier.Caption = GetLangText("MGRSYS", "TXT_USCASH")
		this.lblDepartment.Caption = GetLangText("MGRSYS", "TXT_USDEPA")
		this.lblPhone.Caption = GetLangText("ADDRESS","TXT_PHONE")
		this.lblFax.Caption = GetLangText("ADDRESS","TXT_FAX")
		this.lblEmail.Caption = GetLangText("ADDRESS", "TXT_EMAIL")
		this.lblAllowWebServer.Caption = GetLangText("MGRSYS", "TXT_ALLOW_LOGIN_FROM_WEBSERVER")
		
		this.cmdOK.Caption = GetLangText("COMMON", "TXT_OK")
		this.cmdCancel.Caption = GetLangText("COMMON", "TXT_CANCEL")
		this.cmdPassword.Caption = GetLangText("MGRSYS", "TXT_PASSWORD")
		
		this.AddProperty("DataCopy")
		
		
		DO CASE
			CASE m.Mode = EDIT_MODE
				
				this.txtUserID.Enabled = .F.
				
				this.Parent.DataEnvironment.ocauser.ldontfill = .F.
				this.Parent.DataEnvironment.ocauser.cFilterClause = "us_id = " + sqlcnv(m.URecNo,.T.)
				this.Parent.DataEnvironment.ocauser.CursorFill()	
		
				Select causer
				SCATTER NAME this.DataCopy
			CASE m.Mode = NEW_MODE
				this.Parent.DataEnvironment.ocauser.ldontfill = .T.
				this.Parent.DataEnvironment.ocauser.CursorFill()	
		
				Select causer	
				SCATTER NAME this.DataCopy BLANK
		endcase
		
		TEXT TO l_cSql TEXTMERGE NOSHOW PRETEXT 15
		SELECT <<"pl_lang" + g_langnum>> AS pl_lang, pl_charcod ;
			FROM picklist ;
			WHERE pl_label = <<sqlcnv("LANGUAGE",.T.)>> ;
			UNION ;
			SELECT CAST(<<sqlcnv("",.T.)>> AS Char(25)) AS pl_lang, CAST(<<sqlcnv("",.T.)>> AS Char(3)) AS pl_charcod ;
			FROM picklist ;
			ORDER BY 2
		ENDTEXT
		
		SqlCursor(l_cSql, "curlanguage",,"",.NULL.,.T.)
		
		TEXT TO l_cSql TEXTMERGE NOSHOW PRETEXT 15
		SELECT gr_group ;
			FROM "group" ;
			ORDER BY 1
		ENDTEXT
		
		SqlCursor(l_cSql, "curgroup",,"",.NULL.,.T.)
		
		
		this.txtName.ControlSource = "thisform.DataCopy.us_name"
		this.txtUserID.ControlSource = "thisform.DataCopy.us_id"
		this.cboLanguage.RowSource = [curLanguage.pl_lang, pl_charcod]
		this.cboLanguage.ControlSource = [thisform.DataCopy.us_lang]
		this.cboUserGroup.RowSource = [curgroup.gr_group]
		this.cboUserGroup.ControlSource = [thisform.DataCopy.us_group]
		this.txtCashier.ControlSource = "thisform.DataCopy.us_cashier"
		this.txtDepartment.ControlSource = "thisform.DataCopy.us_dep"
		this.txtPhone.ControlSource = "thisform.DataCopy.us_phone"
		this.txtFax.ControlSource = "thisform.DataCopy.us_fax"
		this.txtEmail.ControlSource = "thisform.DataCopy.us_email"
		this.chkAllowWebServer.ControlSource = "thisform.DataCopy.us_websrv"
		
		this.txtName.InputMask = Replicate("X", 40)
		this.txtUserID.InputMask = Replicate("X", 10)
		this.txtCashier.InputMask = "99"
		this.txtDepartment.InputMask = Replicate("X", 30)
		this.txtPhone.InputMask = Replicate("X", 20)
		this.txtFax.InputMask = Replicate("X", 20)
		this.txtEmail.InputMask = Replicate("X", 100)
		
		DODEFAULT()
		
		this.Visible = .T.
		
	ENDPROC

	PROCEDURE UserForm.QueryUnload
		NODEFAULT
		thisform.cmdCancel.Click()
	ENDPROC

	PROCEDURE UserForm.Unload
		ChildTitle("")
		
	ENDPROC

ENDDEFINE
