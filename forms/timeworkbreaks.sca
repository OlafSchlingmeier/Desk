*--------------------------------------------------------------------------------------------------------------------------------------------------------
* (ES) AUTOGENERADO - ¡¡ATENCIÓN!! - ¡¡NO PENSADO PARA EJECUTAR!! USAR SOLAMENTE PARA INTEGRAR CAMBIOS Y ALMACENAR CON HERRAMIENTAS SCM!!
* (EN) AUTOGENERATED - ATTENTION!! - NOT INTENDED FOR EXECUTION!! USE ONLY FOR MERGING CHANGES AND STORING WITH SCM TOOLS!!
*--------------------------------------------------------------------------------------------------------------------------------------------------------
*< FOXBIN2PRG: Version="1.19" SourceFile="timeworkbreaks.scx" /> (Solo para binarios VFP 9 / Only for VFP 9 binaries)
*
*
DEFINE CLASS dataenvironment AS dataenvironment 
 	*< CLASSDATA: Baseclass="dataenvironment" Timestamp="" Scale="" Uniqueid="" ClassIcon="2" />

	DataSource = .NULL.
	Height = 0
	Left = 0
	Name = "Dataenvironment"
	Top = 0
	Width = 0

ENDDEFINE

DEFINE CLASS frmtimeworkbreaks AS timeplanbase OF "..\libs\cit_bridge.vcx" 
 	*< CLASSDATA: Baseclass="form" Timestamp="" Scale="" Uniqueid="" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="grdTimePlan.Column0.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grdTimePlan.Column0.Text1" UniqueID="" Timestamp="" />

	*<DefinedPropArrayMethod>
		*p: nworkhourid
	*</DefinedPropArrayMethod>

	Caption = "frmTimeWorkBreaks"
	DoCreate = .T.
	formname = TimeWorkBreaks
	Name = "frmTimeWorkBreaks"
	nworkhourid = 0
	grdTimePlan.Column0.Name = "Column0"
	grdTimePlan.Name = "grdTimePlan"

	ADD OBJECT 'grdTimePlan.Column0.Header1' AS header WITH ;
		Caption = "Header1", ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'grdTimePlan.Column0.Text1' AS textbox WITH ;
		BackColor = 255,255,255, ;
		BorderStyle = 0, ;
		ForeColor = 0,0,0, ;
		Margin = 0, ;
		Name = "Text1"
		*< END OBJECT: BaseClass="textbox" />
	
	PROCEDURE Init
		LPARAMETERS lp_cCaption, lp_aProperties, lp_nWorkHourID, lp_oCallingObj, lp_dDate 
		
		this.Caption = GetLangText("EMPLOYEE","TXT_WORK_BREAK")
		
		this.nWorkHourId = lp_nWorkHourID
		this.oCallingObj = lp_oCallingObj
		
		this.oWorkTimeFunc.CreateWorkBreaksCursor(this.TimePlanCursor)
		this.oWorkTimeFunc.GetWorkBreaksData(lp_dDate, this.nworkhourid, this.TimePlanCursor)
		
		DODEFAULT(lp_cCaption, @lp_aProperties)
	ENDPROC

	PROCEDURE ondelete
		LOCAL l_cCursor
		
		l_cCursor = thisform.TimePlanCursor
		IF YesNo(GetLangText("RESERV2","TXT_ARE_YOU_SURE"))
			DELETE FOR wb_wbid = &l_cCursor..cr_wbid IN workbrk
			this.oCallingObj.RequeryGrid()
		ENDIF
		
		this.OnClose()
	ENDPROC

	PROCEDURE onedit
		LOCAL l_lEditWorkBreak, l_cCursor
		
		l_cCursor = this.TimePlanCursor
		l_lEditWorkBreak = .T.
		DO ManageWorkBreak IN procaze WITH &l_cCursor..cr_wbid, this.nworkhourid, l_lEditWorkBreak
		this.oCallingObj.RequeryGrid()
		
		this.OnClose()
	ENDPROC

	PROCEDURE onnew
		LOCAL l_lEditWorkBreak, l_cCursor
		
		l_cCursor = this.TimePlanCursor
		l_lEditWorkBreak = .F.
		DO ManageWorkBreak IN procaze WITH &l_cCursor..cr_wbid, this.nworkhourid, l_lEditWorkBreak
		this.oCallingObj.RequeryGrid()
		
		this.OnClose()
	ENDPROC

	PROCEDURE opentable
		DODEFAULT()
		OpenFile(,"workint")
		OpenFile(,"workbrk")
		OpenFile(,"workbrkd")
	ENDPROC

	PROCEDURE grdTimePlan.AfterRowColChange
		LPARAMETERS nColIndex
		thisform.ActivateToolbar()
	ENDPROC

ENDDEFINE
