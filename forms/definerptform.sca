*--------------------------------------------------------------------------------------------------------------------------------------------------------
* (ES) AUTOGENERADO - ¡¡ATENCIÓN!! - ¡¡NO PENSADO PARA EJECUTAR!! USAR SOLAMENTE PARA INTEGRAR CAMBIOS Y ALMACENAR CON HERRAMIENTAS SCM!!
* (EN) AUTOGENERATED - ATTENTION!! - NOT INTENDED FOR EXECUTION!! USE ONLY FOR MERGING CHANGES AND STORING WITH SCM TOOLS!!
*--------------------------------------------------------------------------------------------------------------------------------------------------------
*< FOXBIN2PRG: Version="1.19" SourceFile="definerptform.scx" /> (Solo para binarios VFP 9 / Only for VFP 9 binaries)
*
*
#INCLUDE "..\include\constdefines.h"

DEFINE CLASS dataenvironment AS dataenvironment 
 	*< CLASSDATA: Baseclass="dataenvironment" Timestamp="" Scale="" Uniqueid="" ClassIcon="2" />

	DataSource = .NULL.
	Height = 0
	Left = 0
	Name = "Dataenvironment"
	Top = 0
	Width = 0

ENDDEFINE

DEFINE CLASS frmdefinereport AS tform OF "..\libs\main.vcx" 
 	*< CLASSDATA: Baseclass="form" Timestamp="" Scale="" Uniqueid="" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="cntSmall" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cntSmall.Lbatches" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cntSmall.tbbatches" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cntSmall.Lbatchcond" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cntSmall.tbbatchcond" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cntSmall.Lusergroups" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cntSmall.tbusergroups" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cntSmall.Chhide" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cntSmall.cmdOK" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cntSmall.cmdCancel" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cntSmall.lblLanguage" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cntSmall.cboPickLanguage" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cntMain" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cntMain.Sh1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cntMain.Sh2" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cntMain.Lid" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cntMain.Tbid" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cntMain.Tbloop" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cntMain.li_buildng" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cntMain.li_mainsrv" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cntMain.Ldesc" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cntMain.Tbdesc" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cntMain.Lreportmenu" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cntMain.Cbreportmenu" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cntMain.LOrder" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cntMain.TbOrder" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cntMain.loutput" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cntMain.Ogoutput" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cntMain.lreportoutput" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cntMain.tbreport" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cntMain.tboutput" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cntMain.Lddelink" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cntMain.Ogddelink" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cntMain.lblLetExpTypeGrp" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cntMain.li_lexptyp" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cntMain.li_rptgrp" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cntMain.lmacrotemplate" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cntMain.Tbmacro" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cntMain.Tbtemplate" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cntMain.Lbatches" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cntMain.tbbatches" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cntMain.Lbatchcond" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cntMain.tbbatchcond" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cntMain.Lusergroups" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cntMain.tbusergroups" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cntMain.LLicence" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cntMain.tblicence" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cntMain.lpreproc" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cntMain.tbpre" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cntMain.lpostproc" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cntMain.tbpost" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cntMain.lblShowOnForms" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cntMain.cboShowOnForms" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cntMain.li_forms" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cntMain.lblLetType" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cntMain.li_lettype" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cntMain.Chbased" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cntMain.ChDialog" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cntMain.Chcustom" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cntMain.li_saveres" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cntMain.Chhide" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cntMain.chdelaymailmerge" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cntMain.chsendviaemail" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cntMain.edtHead" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cntMain.ChAttachmentInPDF" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cntMain.li_expsend" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cntMain.li_etsavdc" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cntMain.lblexptype" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cntMain.li_exptype" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cntMain.li_expfnod" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cntMain.lblexpath" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cntMain.li_expath" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cntMain.lblexpfile" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cntMain.li_expfile" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cntMain.lblexpmail" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cntMain.li_expmail" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cntMain.cmdOK" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cntMain.cmdCancel" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cntMain.cmdDialog" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cntMain.cmdLetter" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cntMain.chConsent" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cntMain.lblLanguage" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cntMain.cboPickLanguage" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cntMain.cmdAttachment" UniqueID="" Timestamp="" />

	*<DefinedPropArrayMethod>
		*m: enabledisableemailcontrols
		*m: onattachment
		*m: refreshcmdattachment
		*p: nrecordid
		*p: ocalists
		*p: odata
		*a: achecks[1,0]
		*a: alettypes[1,0]
	*</DefinedPropArrayMethod>

	Caption = "frmDefineReport"
	ControlBox = .T.
	DataSession = 2
	DoCreate = .T.
	doini = .T.
	Height = 888
	Icon = ..\bitmap\icons\folder06.ico
	MaxButton = .F.
	MinButton = .F.
	Name = "frmDefineReport"
	nrecordid = 0
	ocalists = .NULL.
	odata = .NULL.
	Width = 528
	WindowType = 1

	ADD OBJECT 'cntMain' AS cntbase WITH ;
		BackStyle = 0, ;
		BorderWidth = 0, ;
		Height = 772, ;
		Left = 0, ;
		Name = "cntMain", ;
		Top = 0, ;
		Visible = .F., ;
		Width = 528
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="container" />

	ADD OBJECT 'cntMain.cboPickLanguage' AS jcbomain WITH ;
		ColumnCount = 2, ;
		cwhere = pl_label = 'LANGUAGE  ' AND NOT pl_inactiv, ;
		Format = "KR", ;
		Height = 24, ;
		InputMask = "!!!", ;
		Left = 168, ;
		Name = "cboPickLanguage", ;
		TabIndex = 19, ;
		Top = 179, ;
		Width = 77
		*< END OBJECT: ClassLib="..\libs\jbase.vcx" BaseClass="combobox" />

	ADD OBJECT 'cntMain.cboShowOnForms' AS tcombobox WITH ;
		BoundTo = .T., ;
		ColumnCount = 2, ;
		ColumnLines = .F., ;
		ColumnWidths = "100,200", ;
		DisabledForeColor = 0,0,0, ;
		DisplayCount = 15, ;
		Left = 95, ;
		Name = "cboShowOnForms", ;
		RowSource = "_screen.oGlobal.oRG.aFormDefs", ;
		RowSourceType = 5, ;
		Style = 2, ;
		TabIndex = 40, ;
		Top = 396, ;
		Width = 72, ;
		ZOrderSet = 38
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="combobox" />

	ADD OBJECT 'cntMain.Cbreportmenu' AS tcombobox WITH ;
		BoundColumn = 2, ;
		BoundTo = .T., ;
		ColumnCount = 2, ;
		ColumnLines = .F., ;
		ColumnWidths = "120,0", ;
		Left = 168, ;
		Name = "Cbreportmenu", ;
		RowSourceType = 5, ;
		Style = 2, ;
		TabIndex = 9, ;
		Top = 60, ;
		Width = 156, ;
		ZOrderSet = 9
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="combobox" />

	ADD OBJECT 'cntMain.ChAttachmentInPDF' AS tcheckbox WITH ;
		Alignment = 0, ;
		AutoSize = .T., ;
		Caption = "ChAttachmentInPDF", ;
		Left = 228, ;
		Name = "ChAttachmentInPDF", ;
		TabIndex = 51, ;
		Top = 573, ;
		Width = 129, ;
		ZOrderSet = 50
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="checkbox" />

	ADD OBJECT 'cntMain.Chbased' AS tcheckbox WITH ;
		Alignment = 0, ;
		AutoSize = .T., ;
		Caption = "Chbased", ;
		Left = 12, ;
		Name = "Chbased", ;
		TabIndex = 42, ;
		Top = 447, ;
		Width = 69, ;
		ZOrderSet = 42
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="checkbox" />

	ADD OBJECT 'cntMain.chConsent' AS tcheckbox WITH ;
		Alignment = 0, ;
		AutoSize = .T., ;
		Caption = "chConsent", ;
		Left = 12, ;
		Name = "chConsent", ;
		TabIndex = 48, ;
		Top = 573, ;
		Width = 78, ;
		ZOrderSet = 47
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="checkbox" />

	ADD OBJECT 'cntMain.Chcustom' AS tcheckbox WITH ;
		Alignment = 0, ;
		AutoSize = .T., ;
		Caption = "Chcustom", ;
		Left = 12, ;
		Name = "Chcustom", ;
		TabIndex = 44, ;
		Top = 489, ;
		Width = 75, ;
		ZOrderSet = 44
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="checkbox" />

	ADD OBJECT 'cntMain.chdelaymailmerge' AS tcheckbox WITH ;
		Alignment = 0, ;
		AutoSize = .T., ;
		Caption = "chdelaymailmerge", ;
		Left = 12, ;
		Name = "chdelaymailmerge", ;
		TabIndex = 47, ;
		Top = 552, ;
		Width = 120, ;
		ZOrderSet = 47
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="checkbox" />

	ADD OBJECT 'cntMain.ChDialog' AS tcheckbox WITH ;
		Alignment = 0, ;
		AutoSize = .T., ;
		Caption = "ChDialog", ;
		Left = 12, ;
		Name = "ChDialog", ;
		TabIndex = 43, ;
		Top = 468, ;
		Width = 70, ;
		ZOrderSet = 43
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="checkbox" />

	ADD OBJECT 'cntMain.Chhide' AS tcheckbox WITH ;
		Alignment = 0, ;
		AutoSize = .T., ;
		Caption = "Chhide", ;
		Left = 12, ;
		Name = "Chhide", ;
		TabIndex = 46, ;
		Top = 531, ;
		Width = 58, ;
		ZOrderSet = 46
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="checkbox" />

	ADD OBJECT 'cntMain.chsendviaemail' AS tcheckbox WITH ;
		Alignment = 0, ;
		AutoSize = .T., ;
		Caption = "chsendviaemail", ;
		Left = 228, ;
		Name = "chsendviaemail", ;
		TabIndex = 49, ;
		Top = 460, ;
		Width = 105, ;
		ZOrderSet = 48
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="checkbox" />

	ADD OBJECT 'cntMain.cmdAttachment' AS tcommandbutton WITH ;
		Caption = "cmdAttachment", ;
		Height = 20, ;
		Left = 420, ;
		Name = "cmdAttachment", ;
		TabIndex = 52, ;
		Top = 573, ;
		Width = 90
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'cntMain.cmdCancel' AS tcommandbutton WITH ;
		Cancel = .T., ;
		Caption = "cmdCancel", ;
		Left = 174, ;
		Name = "cmdCancel", ;
		TabIndex = 65, ;
		Top = 732, ;
		ZOrderSet = 63
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'cntMain.cmdDialog' AS tcommandbutton WITH ;
		Caption = "cmdDialog", ;
		Left = 270, ;
		Name = "cmdDialog", ;
		TabIndex = 66, ;
		Top = 732, ;
		ZOrderSet = 64
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'cntMain.cmdLetter' AS tcommandbutton WITH ;
		Caption = "cmdLetter", ;
		Left = 366, ;
		Name = "cmdLetter", ;
		TabIndex = 67, ;
		Top = 732, ;
		ZOrderSet = 65
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'cntMain.cmdOK' AS tcommandbutton WITH ;
		Caption = "cmdOK", ;
		Default = .T., ;
		Left = 78, ;
		Name = "cmdOK", ;
		TabIndex = 64, ;
		Top = 732, ;
		ZOrderSet = 62
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'cntMain.edtHead' AS teditbox WITH ;
		Height = 96, ;
		Left = 228, ;
		Name = "edtHead", ;
		TabIndex = 50, ;
		Top = 477, ;
		Width = 228, ;
		ZOrderSet = 49
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="editbox" />

	ADD OBJECT 'cntMain.Lbatchcond' AS tlabel WITH ;
		AutoSize = .T., ;
		Caption = "Lbatchcond", ;
		Left = 12, ;
		Name = "Lbatchcond", ;
		TabIndex = 27, ;
		Top = 279, ;
		Width = 66, ;
		ZOrderSet = 27
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'cntMain.Lbatches' AS tlabel WITH ;
		AutoSize = .T., ;
		Caption = "Lbatches", ;
		Left = 12, ;
		Name = "Lbatches", ;
		TabIndex = 25, ;
		Top = 255, ;
		Width = 53, ;
		ZOrderSet = 25
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'cntMain.lblexpath' AS tlabel WITH ;
		AutoSize = .T., ;
		Caption = "lblexpath", ;
		Left = 12, ;
		Name = "lblexpath", ;
		TabIndex = 58, ;
		Top = 648, ;
		Width = 51, ;
		ZOrderSet = 56
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'cntMain.lblexpfile' AS tlabel WITH ;
		AutoSize = .T., ;
		Caption = "lblexpfile", ;
		Left = 12, ;
		Name = "lblexpfile", ;
		TabIndex = 60, ;
		Top = 672, ;
		Width = 50, ;
		ZOrderSet = 58
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'cntMain.lblexpmail' AS tlabel WITH ;
		AutoSize = .T., ;
		Caption = "lblexpmail", ;
		Left = 12, ;
		Name = "lblexpmail", ;
		TabIndex = 62, ;
		Top = 696, ;
		Width = 58, ;
		ZOrderSet = 60
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'cntMain.lblexptype' AS tlabel WITH ;
		AutoSize = .T., ;
		Caption = "lblexptype", ;
		Left = 12, ;
		Name = "lblexptype", ;
		TabIndex = 54, ;
		Top = 624, ;
		Width = 56, ;
		ZOrderSet = 53
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'cntMain.lblLanguage' AS tlabel WITH ;
		Caption = "lblLanguage", ;
		Left = 12, ;
		Name = "lblLanguage", ;
		TabIndex = 69, ;
		Top = 182
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'cntMain.lblLetExpTypeGrp' AS tlabel WITH ;
		AutoSize = .T., ;
		Caption = "lblLetExpTypeGrp", ;
		Left = 12, ;
		Name = "lblLetExpTypeGrp", ;
		TabIndex = 68, ;
		Top = 207, ;
		Width = 98, ;
		ZOrderSet = 19
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'cntMain.lblLetType' AS tlabel WITH ;
		AutoSize = .T., ;
		Caption = "lblLetType", ;
		Left = 12, ;
		Name = "lblLetType", ;
		TabIndex = 38, ;
		Top = 423, ;
		Width = 58, ;
		ZOrderSet = 40
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'cntMain.lblShowOnForms' AS tlabel WITH ;
		AutoSize = .T., ;
		Caption = "lblShowOnForms", ;
		Left = 12, ;
		Name = "lblShowOnForms", ;
		TabIndex = 37, ;
		Top = 399, ;
		Width = 98, ;
		ZOrderSet = 37
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'cntMain.Lddelink' AS tlabel WITH ;
		AutoSize = .T., ;
		Caption = "Lddelink", ;
		Left = 12, ;
		Name = "Lddelink", ;
		TabIndex = 17, ;
		Top = 135, ;
		Width = 49, ;
		ZOrderSet = 17
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'cntMain.Ldesc' AS tlabel WITH ;
		AutoSize = .T., ;
		Caption = "Ldesc", ;
		Left = 12, ;
		Name = "Ldesc", ;
		TabIndex = 6, ;
		Top = 39, ;
		Width = 36, ;
		ZOrderSet = 6
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'cntMain.li_buildng' AS tcheckbox WITH ;
		Alignment = 0, ;
		AutoSize = .T., ;
		Caption = "li_buildng", ;
		Left = 372, ;
		Name = "li_buildng", ;
		TabIndex = 5, ;
		Top = 39, ;
		Width = 72, ;
		ZOrderSet = 5
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="checkbox" />

	ADD OBJECT 'cntMain.li_etsavdc' AS tcheckbox WITH ;
		Alignment = 0, ;
		AutoSize = .T., ;
		Caption = "li_etsavdc", ;
		Left = 240, ;
		Name = "li_etsavdc", ;
		TabIndex = 55, ;
		Top = 600, ;
		Width = 73, ;
		ZOrderSet = 52
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="checkbox" />

	ADD OBJECT 'cntMain.li_expath' AS ttext WITH ;
		Height = 23, ;
		InputMask = (REPLICATE("X", 254)), ;
		Left = 120, ;
		Name = "li_expath", ;
		TabIndex = 59, ;
		Top = 645, ;
		Width = 348, ;
		ZOrderSet = 57
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />

	ADD OBJECT 'cntMain.li_expfile' AS ttext WITH ;
		InputMask = (REPLICATE("X", 100)), ;
		Left = 120, ;
		Name = "li_expfile", ;
		TabIndex = 61, ;
		Top = 669, ;
		Width = 348, ;
		ZOrderSet = 59
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />

	ADD OBJECT 'cntMain.li_expfnod' AS tcheckbox WITH ;
		Alignment = 0, ;
		AutoSize = .T., ;
		Caption = "li_expfnod", ;
		Left = 240, ;
		Name = "li_expfnod", ;
		TabIndex = 57, ;
		Top = 624, ;
		Width = 74, ;
		ZOrderSet = 55
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="checkbox" />

	ADD OBJECT 'cntMain.li_expmail' AS ttext WITH ;
		InputMask = (REPLICATE("X", 254)), ;
		Left = 120, ;
		Name = "li_expmail", ;
		TabIndex = 63, ;
		Top = 693, ;
		Width = 348, ;
		ZOrderSet = 61
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />

	ADD OBJECT 'cntMain.li_expsend' AS tcheckbox WITH ;
		Alignment = 0, ;
		AutoSize = .T., ;
		Caption = "li_expsend", ;
		Left = 12, ;
		Name = "li_expsend", ;
		TabIndex = 53, ;
		Top = 600, ;
		Value = .F., ;
		Width = 78, ;
		ZOrderSet = 51
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="checkbox" />

	ADD OBJECT 'cntMain.li_exptype' AS tcombobox WITH ;
		Left = 120, ;
		Name = "li_exptype", ;
		RowSource = "XLS,DOC,PDF,XFF,CSV", ;
		RowSourceType = 1, ;
		Style = 2, ;
		TabIndex = 56, ;
		Top = 621, ;
		ZOrderSet = 54
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="combobox" />

	ADD OBJECT 'cntMain.li_forms' AS ttext WITH ;
		DisabledForeColor = 0,0,0, ;
		Format = "K!", ;
		Height = 40, ;
		Left = 168, ;
		Name = "li_forms", ;
		SelectOnEntry = .T., ;
		TabIndex = 41, ;
		Top = 396, ;
		Width = 302, ;
		ZOrderSet = 39
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />

	ADD OBJECT 'cntMain.li_lettype' AS tcombobox WITH ;
		BoundColumn = 2, ;
		BoundTo = .T., ;
		ColumnCount = 2, ;
		ColumnLines = .F., ;
		ColumnWidths = "160,0", ;
		DisabledForeColor = 0,0,0, ;
		Height = 23, ;
		Left = 72, ;
		Name = "li_lettype", ;
		RowSourceType = 5, ;
		Style = 2, ;
		TabIndex = 39, ;
		Top = 420, ;
		Width = 95, ;
		ZOrderSet = 41
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="combobox" />

	ADD OBJECT 'cntMain.li_lexptyp' AS tcombobox WITH ;
		BoundColumn = 2, ;
		BoundTo = .T., ;
		ColumnCount = 2, ;
		ColumnLines = .F., ;
		ColumnWidths = "100,0", ;
		Left = 168, ;
		Name = "li_lexptyp", ;
		RowSource = ",0,XLS,1,DOC,2,PDF,3,ODT,7", ;
		RowSourceType = 1, ;
		Style = 2, ;
		TabIndex = 20, ;
		Top = 204, ;
		Value = 0, ;
		ZOrderSet = 20
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="combobox" />

	ADD OBJECT 'cntMain.li_mainsrv' AS tcheckbox WITH ;
		Alignment = 0, ;
		AutoSize = .T., ;
		Caption = "li_mainsrv", ;
		Left = 372, ;
		Name = "li_mainsrv", ;
		TabIndex = 4, ;
		Top = 15, ;
		Width = 75, ;
		ZOrderSet = 5
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="checkbox" />

	ADD OBJECT 'cntMain.li_rptgrp' AS ttext WITH ;
		InputMask = (REPLICATE("!", 20)), ;
		Left = 269, ;
		Name = "li_rptgrp", ;
		TabIndex = 21, ;
		Top = 204, ;
		Width = 201, ;
		ZOrderSet = 21
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />

	ADD OBJECT 'cntMain.li_saveres' AS tcheckbox WITH ;
		Alignment = 0, ;
		AutoSize = .T., ;
		Caption = "li_saveres", ;
		Left = 12, ;
		Name = "li_saveres", ;
		TabIndex = 45, ;
		Top = 510, ;
		Width = 75, ;
		ZOrderSet = 45
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="checkbox" />

	ADD OBJECT 'cntMain.Lid' AS tlabel WITH ;
		AutoSize = .T., ;
		Caption = "Lid", ;
		Left = 12, ;
		Name = "Lid", ;
		TabIndex = 1, ;
		Top = 15, ;
		Width = 19, ;
		ZOrderSet = 2
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'cntMain.LLicence' AS tlabel WITH ;
		AutoSize = .T., ;
		Caption = "LLicence", ;
		Left = 12, ;
		Name = "LLicence", ;
		TabIndex = 31, ;
		Top = 327, ;
		Width = 52, ;
		ZOrderSet = 31
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'cntMain.lmacrotemplate' AS tlabel WITH ;
		AutoSize = .T., ;
		Caption = "lmacrotemplate", ;
		Left = 12, ;
		Name = "lmacrotemplate", ;
		TabIndex = 22, ;
		Top = 231, ;
		Width = 88, ;
		ZOrderSet = 22
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'cntMain.LOrder' AS tlabel WITH ;
		AutoSize = .T., ;
		Caption = "LOrder", ;
		Left = 336, ;
		Name = "LOrder", ;
		TabIndex = 10, ;
		Top = 63, ;
		Width = 40, ;
		ZOrderSet = 10
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'cntMain.loutput' AS tlabel WITH ;
		AutoSize = .T., ;
		Caption = "loutput", ;
		Left = 12, ;
		Name = "loutput", ;
		TabIndex = 12, ;
		Top = 87, ;
		Width = 39, ;
		ZOrderSet = 12
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'cntMain.lpostproc' AS tlabel WITH ;
		AutoSize = .T., ;
		Caption = "lpostproc", ;
		Left = 12, ;
		Name = "lpostproc", ;
		TabIndex = 35, ;
		Top = 375, ;
		Width = 53, ;
		ZOrderSet = 35
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'cntMain.lpreproc' AS tlabel WITH ;
		AutoSize = .T., ;
		Caption = "lpreproc", ;
		Left = 12, ;
		Name = "lpreproc", ;
		TabIndex = 33, ;
		Top = 351, ;
		Width = 47, ;
		ZOrderSet = 33
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'cntMain.Lreportmenu' AS tlabel WITH ;
		AutoSize = .T., ;
		Caption = "Lreportmenu", ;
		Left = 12, ;
		Name = "Lreportmenu", ;
		TabIndex = 8, ;
		Top = 63, ;
		Width = 73, ;
		ZOrderSet = 8
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'cntMain.lreportoutput' AS tlabel WITH ;
		AutoSize = .T., ;
		Caption = "lreportoutput", ;
		Left = 12, ;
		Name = "lreportoutput", ;
		TabIndex = 14, ;
		Top = 111, ;
		Width = 71, ;
		ZOrderSet = 14
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'cntMain.Lusergroups' AS tlabel WITH ;
		AutoSize = .T., ;
		Caption = "Lusergroups", ;
		Left = 12, ;
		Name = "Lusergroups", ;
		TabIndex = 29, ;
		Top = 303, ;
		Width = 73, ;
		ZOrderSet = 29
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'cntMain.Ogddelink' AS toptiongroup WITH ;
		AutoSize = .F., ;
		BackStyle = 0, ;
		BorderStyle = 0, ;
		ButtonCount = 6, ;
		Height = 48, ;
		Left = 168, ;
		Name = "Ogddelink", ;
		TabIndex = 18, ;
		Top = 132, ;
		Width = 348, ;
		ZOrderSet = 18, ;
		Option1.AutoSize = .T., ;
		Option1.Caption = "oNone", ;
		Option1.Height = 17, ;
		Option1.Left = 5, ;
		Option1.Name = "oNone", ;
		Option1.TabIndex = 1, ;
		Option1.Top = 3, ;
		Option1.Width = 55, ;
		Option1.ZOrderSet = 0, ;
		Option2.AutoSize = .T., ;
		Option2.Caption = "oWord97", ;
		Option2.Height = 17, ;
		Option2.Left = 5, ;
		Option2.Name = "oWord97", ;
		Option2.TabIndex = 3, ;
		Option2.Top = 27, ;
		Option2.Width = 68, ;
		Option2.ZOrderSet = 1, ;
		Option3.AutoSize = .T., ;
		Option3.Caption = "oExcel2007", ;
		Option3.Height = 17, ;
		Option3.Left = 210, ;
		Option3.Name = "oExcel2007", ;
		Option3.TabIndex = 4, ;
		Option3.Top = 27, ;
		Option3.Width = 82, ;
		Option3.ZOrderSet = 2, ;
		Option4.AutoSize = .T., ;
		Option4.Caption = "oWriter", ;
		Option4.Height = 17, ;
		Option4.Left = 210, ;
		Option4.Name = "oWriter", ;
		Option4.TabIndex = 5, ;
		Option4.Top = 3, ;
		Option4.Width = 57, ;
		Option4.ZOrderSet = 3, ;
		Option5.AutoSize = .T., ;
		Option5.Caption = "oCalc", ;
		Option5.Height = 17, ;
		Option5.Left = 102, ;
		Option5.Name = "oCalc", ;
		Option5.TabIndex = 6, ;
		Option5.Top = 27, ;
		Option5.Width = 50, ;
		Option5.ZOrderSet = 4, ;
		Option6.AutoSize = .T., ;
		Option6.Caption = "oWord2007", ;
		Option6.Height = 17, ;
		Option6.Left = 102, ;
		Option6.Name = "oWord2007", ;
		Option6.TabIndex = 2, ;
		Option6.Top = 3, ;
		Option6.Width = 82, ;
		Option6.ZOrderSet = 5
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="optiongroup" />

	ADD OBJECT 'cntMain.Ogoutput' AS toptiongroup WITH ;
		AutoSize = .F., ;
		BackStyle = 0, ;
		BorderStyle = 0, ;
		ButtonCount = 4, ;
		Height = 23, ;
		Left = 168, ;
		Name = "Ogoutput", ;
		TabIndex = 13, ;
		Top = 84, ;
		Value = 1, ;
		Width = 302, ;
		ZOrderSet = 13, ;
		Option1.AutoSize = .T., ;
		Option1.Caption = "Odialog", ;
		Option1.Enabled = .T., ;
		Option1.Height = 17, ;
		Option1.Left = 5, ;
		Option1.Name = "Odialog", ;
		Option1.Top = 3, ;
		Option1.Value = 1, ;
		Option1.Width = 61, ;
		Option2.AutoSize = .T., ;
		Option2.Caption = "Oprinter", ;
		Option2.Height = 17, ;
		Option2.Left = 75, ;
		Option2.Name = "Oprinter", ;
		Option2.Top = 3, ;
		Option2.Width = 62, ;
		Option3.AutoSize = .T., ;
		Option3.Caption = "Odbf", ;
		Option3.Height = 17, ;
		Option3.Left = 151, ;
		Option3.Name = "Odbf", ;
		Option3.Top = 3, ;
		Option3.Width = 44, ;
		Option4.AutoSize = .T., ;
		Option4.Caption = "Ocsv", ;
		Option4.Height = 17, ;
		Option4.Left = 226, ;
		Option4.Name = "Ocsv", ;
		Option4.Top = 3, ;
		Option4.Width = 45
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="optiongroup" />

	ADD OBJECT 'cntMain.Sh1' AS sh WITH ;
		Height = 142, ;
		Left = 224, ;
		Name = "Sh1", ;
		Top = 453, ;
		Width = 292, ;
		ZOrderSet = 0
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="shape" />

	ADD OBJECT 'cntMain.Sh2' AS sh WITH ;
		Height = 120, ;
		Left = 10, ;
		Name = "Sh2", ;
		Top = 599, ;
		Width = 461, ;
		ZOrderSet = 1
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="shape" />

	ADD OBJECT 'cntMain.tbbatchcond' AS ttext WITH ;
		InputMask = (REPLICATE("!", 20)), ;
		Left = 168, ;
		Name = "tbbatchcond", ;
		TabIndex = 28, ;
		Top = 276, ;
		Width = 201, ;
		ZOrderSet = 28
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />

	ADD OBJECT 'cntMain.tbbatches' AS ttext WITH ;
		InputMask = (REPLICATE("!", 40)), ;
		Left = 168, ;
		Name = "tbbatches", ;
		TabIndex = 26, ;
		Top = 252, ;
		Width = 201, ;
		ZOrderSet = 26
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />

	ADD OBJECT 'cntMain.Tbdesc' AS ttext WITH ;
		InputMask = (Replicate("X", 50)), ;
		Left = 168, ;
		Name = "Tbdesc", ;
		TabIndex = 7, ;
		Top = 36, ;
		Width = 201, ;
		ZOrderSet = 7
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />

	ADD OBJECT 'cntMain.Tbid' AS ttext WITH ;
		InputMask = "A!!!!!!!", ;
		Left = 168, ;
		Name = "Tbid", ;
		TabIndex = 2, ;
		Top = 12, ;
		ZOrderSet = 3
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />

	ADD OBJECT 'cntMain.tblicence' AS ttext WITH ;
		Format = "KR!", ;
		InputMask = (REPLICATE("X", 40)), ;
		Left = 168, ;
		Name = "tblicence", ;
		TabIndex = 32, ;
		Top = 324, ;
		Width = 201, ;
		ZOrderSet = 32
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />

	ADD OBJECT 'cntMain.Tbloop' AS ttext WITH ;
		InputMask = "!!!!!!!!!", ;
		Left = 269, ;
		Name = "Tbloop", ;
		TabIndex = 3, ;
		Top = 12, ;
		ZOrderSet = 4
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />

	ADD OBJECT 'cntMain.Tbmacro' AS ttext WITH ;
		InputMask = (Replicate("!", 10)), ;
		Left = 168, ;
		Name = "Tbmacro", ;
		TabIndex = 23, ;
		Top = 228, ;
		ZOrderSet = 23
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />

	ADD OBJECT 'cntMain.TbOrder' AS ttext WITH ;
		InputMask = "9999", ;
		Left = 419, ;
		Name = "TbOrder", ;
		nlineheight = 0, ;
		SelectOnEntry = .T., ;
		TabIndex = 11, ;
		Top = 60, ;
		Width = 50, ;
		ZOrderSet = 11
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />

	ADD OBJECT 'cntMain.tboutput' AS ttext WITH ;
		InputMask = (Replicate("!", 12)), ;
		Left = 370, ;
		Name = "tboutput", ;
		TabIndex = 16, ;
		Top = 108, ;
		ZOrderSet = 16
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />

	ADD OBJECT 'cntMain.tbpost' AS ttext WITH ;
		InputMask = (REPLICATE("!", 80)), ;
		Left = 168, ;
		Name = "tbpost", ;
		TabIndex = 36, ;
		Top = 372, ;
		Width = 201, ;
		ZOrderSet = 36
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />

	ADD OBJECT 'cntMain.tbpre' AS ttext WITH ;
		InputMask = (REPLICATE("!", 80)), ;
		Left = 168, ;
		Name = "tbpre", ;
		TabIndex = 34, ;
		Top = 348, ;
		Width = 201, ;
		ZOrderSet = 34
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />

	ADD OBJECT 'cntMain.tbreport' AS ttext WITH ;
		InputMask = (Replicate("!", 30)), ;
		Left = 168, ;
		Name = "tbreport", ;
		TabIndex = 15, ;
		Top = 108, ;
		Width = 201, ;
		ZOrderSet = 15
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />

	ADD OBJECT 'cntMain.Tbtemplate' AS ttext WITH ;
		InputMask = (Replicate("!", 30)), ;
		Left = 269, ;
		Name = "Tbtemplate", ;
		TabIndex = 24, ;
		Top = 228, ;
		Width = 201, ;
		ZOrderSet = 24
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />

	ADD OBJECT 'cntMain.tbusergroups' AS ttext WITH ;
		InputMask = (REPLICATE("X", 40)), ;
		Left = 168, ;
		Name = "tbusergroups", ;
		TabIndex = 30, ;
		Top = 300, ;
		Width = 201, ;
		ZOrderSet = 30
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />

	ADD OBJECT 'cntSmall' AS cntbase WITH ;
		BackStyle = 0, ;
		BorderWidth = 0, ;
		Height = 120, ;
		Left = 0, ;
		Name = "cntSmall", ;
		Top = 772, ;
		Visible = .F., ;
		Width = 528
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="container" />

	ADD OBJECT 'cntSmall.cboPickLanguage' AS jcbomain WITH ;
		ColumnCount = 2, ;
		cwhere = pl_label = 'LANGUAGE  ' AND NOT pl_inactiv, ;
		Format = "KR", ;
		Height = 24, ;
		InputMask = "!!!", ;
		Left = 180, ;
		Name = "cboPickLanguage", ;
		TabIndex = 7, ;
		Top = 84, ;
		Width = 77
		*< END OBJECT: ClassLib="..\libs\jbase.vcx" BaseClass="combobox" />

	ADD OBJECT 'cntSmall.Chhide' AS tcheckbox WITH ;
		Alignment = 0, ;
		AutoSize = .T., ;
		Caption = "Chhide", ;
		Left = 264, ;
		Name = "Chhide", ;
		TabIndex = 8, ;
		Top = 88, ;
		ZOrderSet = 6
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="checkbox" />

	ADD OBJECT 'cntSmall.cmdCancel' AS tcommandbutton WITH ;
		Cancel = .T., ;
		Caption = "cmdCancel", ;
		Left = 432, ;
		Name = "cmdCancel", ;
		TabIndex = 10, ;
		Top = 48
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'cntSmall.cmdOK' AS tcommandbutton WITH ;
		Caption = "cmdOK", ;
		Left = 432, ;
		Name = "cmdOK", ;
		TabIndex = 9, ;
		Top = 12
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'cntSmall.Lbatchcond' AS tlabel WITH ;
		AutoSize = .T., ;
		Caption = "Lbatchcond", ;
		Left = 12, ;
		Name = "Lbatchcond", ;
		Top = 39, ;
		ZOrderSet = 2
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'cntSmall.Lbatches' AS tlabel WITH ;
		AutoSize = .T., ;
		Caption = "Lbatches", ;
		Left = 12, ;
		Name = "Lbatches", ;
		Top = 15, ;
		ZOrderSet = 0
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'cntSmall.lblLanguage' AS tlabel WITH ;
		Caption = "lblLanguage", ;
		Left = 12, ;
		Name = "lblLanguage", ;
		Top = 87
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'cntSmall.Lusergroups' AS tlabel WITH ;
		AutoSize = .T., ;
		Caption = "Lusergroups", ;
		Left = 12, ;
		Name = "Lusergroups", ;
		Top = 63, ;
		ZOrderSet = 4
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'cntSmall.tbbatchcond' AS ttext WITH ;
		InputMask = (REPLICATE("!", 40)), ;
		Left = 180, ;
		Name = "tbbatchcond", ;
		Top = 36, ;
		Width = 230, ;
		ZOrderSet = 3
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />

	ADD OBJECT 'cntSmall.tbbatches' AS ttext WITH ;
		InputMask = (REPLICATE("!", 40)), ;
		Left = 180, ;
		Name = "tbbatches", ;
		Top = 12, ;
		Width = 230, ;
		ZOrderSet = 1
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />

	ADD OBJECT 'cntSmall.tbusergroups' AS ttext WITH ;
		InputMask = (REPLICATE("!", 40)), ;
		Left = 180, ;
		Name = "tbusergroups", ;
		Top = 60, ;
		Width = 230, ;
		ZOrderSet = 5
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />
	
	PROCEDURE enabledisableemailcontrols
		STORE this.cntMain.chsendviaemail.Value TO ;
			this.cntMain.edtHead.Enabled, ;
			this.cntMain.chAttachmentInPDF.Enabled, ;
			this.cntMain.cmdAttachment.Enabled
		
		RETURN .T.
		
	ENDPROC

	PROCEDURE Init
		LPARAMETERS tnMode, tnRecordId
		LOCAL i, lnRows, lnHeight, lnWidth
		
		this.nMode = tnMode
		
		this.ocaLists = CREATEOBJECT("caLists")
		this.ocaLists.Alias = "curLists"
		
		lnHeight = this.Height
		lnWidth = this.Width
		
		DO CASE
			CASE this.nMode = NEW_MODE
				this.ocaLists.SetProp(,.T.)
				this.ocaLists.CursorFill()
				INSERT INTO curLists (li_custom) VALUES (.T.)
				this.cntMain.Visible = .T.
				this.Height = this.cntMain.Height
				this.Width = this.cntMain.Width
				SELECT curLists
				SCATTER MEMO BLANK NAME this.oData
			CASE this.nMode = COPY_MODE
				this.ocaLists.cFilterClause = "li_liid = " + SqlCnv(tnRecordId, .T.)
				this.ocaLists.CursorFill()
				IF LEFT(curLists.li_listid, 1) = '_' AND NOT _screen.oGlobal.oParam.pa_debug AND g_userid <> "SUPERVISOR"
					Alert("This is a system report which can't be copied!")
					RETURN .F.
				ENDIF
				SELECT curLists
				SCATTER MEMO NAME this.oData
				this.oData.li_liid = 0
				this.oData.li_listid = ""
				this.oData.li_custom = .T.
				this.ocaLists.SetProp(,.T.)
				this.ocaLists.CursorFill()
				INSERT INTO curLists FROM NAME this.oData
				this.cntMain.Visible = .T.
				this.Height = this.cntMain.Height
				this.Width = this.cntMain.Width
			OTHERWISE && EDIT_MODE
				this.ocaLists.cFilterClause = "li_liid = " + SqlCnv(tnRecordId, .T.)
				this.ocaLists.CursorFill()
				SELECT curLists
				SCATTER MEMO NAME this.oData
				IF LEFT(curLists.li_listid, 1) = '_' AND NOT _screen.oGlobal.oParam.pa_debug AND g_userid <> "SUPERVISOR"
					this.cntSmall.Visible = .T.
					STORE 0 TO this.cntSmall.Left, this.cntSmall.Top, this.cntSmall.l, this.cntSmall.t
					this.Height = this.cntSmall.Height
					this.Width = this.cntSmall.Width
				ELSE
					this.cntMain.Visible = .T.
					this.Height = this.cntMain.Height
					this.Width = this.cntMain.Width
				ENDIF
		ENDCASE
		this.cntSmall.Anchor = 15
		this.cntMain.Anchor = 15
		this.Left = this.Left + INT((lnWidth - this.Width)/2)
		this.Top = this.Top + INT((lnHeight - this.Height)/2)
		
		IF this.cntMain.Visible
			DIMENSION this.aChecks[18,2]
			FOR i = 1 TO ALEN(this.aChecks,1)
				this.aChecks[i,2] = i-1
			NEXT
			this.aChecks[1,1] = STRTRAN(GetText("MYLISTS","TXT_BILL"), "\<")
			this.aChecks[2,1] = STRTRAN(GetText("MENU","RPT_RESERVAT"), "\<")
			this.aChecks[3,1] = STRTRAN(GetText("MENU","RPT_INHOUSE"), "\<")
			this.aChecks[4,1] = STRTRAN(GetText("MENU","RPT_FINANCIAL"), "\<")
			this.aChecks[5,1] = STRTRAN(GetText("MENU","RPT_CONFERENCE"), "\<")
			this.aChecks[6,1] = STRTRAN(GetText("MENU","RPT_STATISTIC"), "\<")
			this.aChecks[7,1] = STRTRAN(GetText("MENU","RPT_ADDRESS"), "\<")
			this.aChecks[8,1] = STRTRAN(GetText("MENU","RPT_SYSTEM"), "\<")
			this.aChecks[9,1] = STRTRAN(GetText("MENU","RPT_LETTERS"), "\<")
			this.aChecks[10,1] = STRTRAN(GetText("MENU","RPT_BATCH"), "\<")
			this.aChecks[11,1] = STRTRAN(GetText("MENU","RPT_TPOS"), "\<")
			this.aChecks[12,1] = STRTRAN(ALLTRIM(_screen.oGlobal.oParam.pa_rep13), "\<")
			this.aChecks[13,1] = STRTRAN(ALLTRIM(_screen.oGlobal.oParam.pa_rep14), "\<")
			this.aChecks[14,1] = STRTRAN(ALLTRIM(_screen.oGlobal.oParam.pa_rep15), "\<")
			this.aChecks[15,1] = STRTRAN(GetText("MENU","RPT_VOUCHER"), "\<")
			IF _screen.B2
				this.aChecks[18,1] = STRTRAN(GetText("MENU","RPT_BASELII"), "\<")
			ENDIF
			lnRows = ALEN(this.aChecks,1)
			FOR i = lnRows TO 1 STEP -1
				IF EMPTY(this.aChecks[i,1])
					ADEL(this.aChecks,i)
					lnRows = lnRows - 1
				ENDIF
			NEXT
			DIMENSION this.aChecks[lnRows,2]
			DIMENSION this.aLetTypes[5,2]
			FOR i = 1 TO ALEN(this.aLetTypes,1)
				this.aLetTypes[i,2] = i-1
			NEXT
			this.aLetTypes[1,1] = GetText("MYLISTS","TXT_ADR_LIST")
			this.aLetTypes[2,1] = GetText("MYLISTS","TXT_RES_LIST")
			this.aLetTypes[3,1] = GetText("MYLISTS","TXT_BMS_LIST")
			this.aLetTypes[4,1] = GetText("MYLISTS","TXT_ADR_CONSENT")
			this.aLetTypes[5,1] = GetText("MYLISTS","TXT_ADR_DELCONF")
			IF NOT _SCREEN.GO
				ADEL(this.aLetTypes,5)
				ADEL(this.aLetTypes,4)
				DIMENSION this.aLetTypes[ALEN(this.aLetTypes,1)-1,2]
				this.cntMain.chConsent.Visible = .F.
			ENDIF
		
			*caption
			WITH this.cntMain
				.cboShowOnForms.Enabled = _screen.oGlobal.lFormReports
				.li_forms.Enabled = _screen.oGlobal.lFormReports
				.li_mainsrv.Enabled = _screen.oGlobal.lMultiProper
				.li_buildng.Enabled = g_lBuildings AND NOT curLists.li_mainsrv
				thisform.Caption = GetText("MYLISTS","TW_REPORTS")
				.lid.Caption = 'Id / '+GetText("MYLISTS","T_BASEDON")
				.ldesc.Caption = GetText("MYLISTS","T_DESCRIPT")
				.lreportmenu.Caption = GetText("MYLISTS","T_MENU")
				.loutput.Caption = GetText("MYLISTS","T_OUTPUT")
				.lreportoutput.Caption = GetText("MYLISTS","T_REPOFILE")
				.lddelink.Caption = GetText("MYLISTS","T_DDELINK")
				.lblLetExpTypeGrp.Caption = GetText("MYLISTS","TXT_EXPORTED_FILE_TYPE")+' / '+GetText("MYLISTS","TXT_RPTGRP")
				.lmacrotemplate.Caption = GetText("MYLISTS","T_DDEMACRO")+' / '+GetText("MYLISTS","TXT_DOTFILE")
				.lbatches.Caption = GetText("MYLISTS","T_BATCH")
				.lbatchcond.Caption = GetText("MYLISTS","T_WHEN")
				.lusergroups.Caption = GetText("MYLISTS","T_USRGRP")
				.lpostproc.Caption = GetText("MYLISTS","TXT_POSTPROC")
				.lpreproc.Caption = GetText("MYLISTS","TXT_PREPROC")
				.lblShowOnForms.Caption = GetText("MYLISTS","TXT_SHOWONFORMS")
				.ogoutput.odialog.Caption = GetText("MYLISTS","TXT_DIALOG")
				.ogoutput.oprinter.Caption = GetText("MYLISTS","TXT_OPRINTER")
				.ogoutput.odbf.Caption = GetText("MYLISTS","TXT_DBF")
				.ogoutput.ocsv.Caption = "CSV"
				.ogddelink.onone.Caption = GetText("MYLISTS","TXT_NONE")
				.ogddelink.oword2007.Caption = GetText("MYLISTS","TXT_WORD2007")
				.ogddelink.oword97.Caption = GetText("MYLISTS","TXT_WORD")
				.ogddelink.oexcel2007.Caption = GetText("MYLISTS","TXT_EXCEL2007")
				.ogddelink.owriter.Caption = GetText("MYLISTS","TXT_OOOWRITER")
				.ogddelink.ocalc.Caption = GetText("MYLISTS","TXT_OOOCALC")
				.lblLanguage.Caption = GetLangText("PARAMS","TXT_LANGUAGE")
				.lblLetType.Caption = GetText("MYLISTS","TXT_LETTYPE")
				.chbased.Caption = GetText("MYLISTS","TXT_RESLET")
				.chcustom.Caption = GetText("MYLISTS","TXT_CUSTOM")
				.li_saveres.Caption = GetText("MYLISTS","TXT_SAVE_RESULTS")
				.li_mainsrv.Caption = GetText("SRVSETTI","TXT_MULTIPROPER")
				.li_buildng.Caption = GetText("HOTSTAT","TXT_FOR_BUILDING")
				.chSendViaEMail.Caption = GetText("MYLISTS","TXT_SEND_VIA_EMAIL")
				.chAttachmentInPDF.Caption = GetText("MYLISTS","TXT_ATTCH_PDF")
				.cmdAttachment.Caption = GetText("MYLISTS","TXT_ATTACHMENTS") && Button for attachments
				.chdialog.Caption = GetText("MYLISTS","TXT_ENABLE_DIALOG")
				.chhide.Caption = GetText("MYLISTS","TXT_HIDE")
				.chdelaymailmerge.Caption = GetText("MYLISTS","TXT_DELAY_MAIL_MERGE")
				.chConsent.Caption = GetText("MYLISTS","TXT_CHECK_CONSENT")
				.cmdOK.Caption = GetText("COMMON","TXT_OK")
				.cmdCancel.Caption = GetText("COMMON","TXT_CANCEL")
				.cmdDialog.Caption = GetText("MYLISTS","TXT_DIALOG")
				.cmdLetter.Caption = GetText("MYLISTS","TXT_LETTER")
				.LLicence.Caption = GetText("PARAMS","TXT_LICENSE")
				.lorder.Caption = GetText("MGRRESER","TXT_RMSEQU")
				.li_EXPSEND.Caption = GetText("MYLISTS","TXT_SEND_ATTACH_WITH_EMAIL")
				.lblexpath.Caption = GetText("PARAMS","TXT_TPOSORDERDIR")
				.lblexpfile.Caption = GetText("MYLISTS","TXT_EXPORTED_FILE_NAME")
				.lblexptype.Caption = GetText("MYLISTS","TXT_EXPORTED_FILE_TYPE")
				.lblexpmail.Caption = GetText("MYLISTS","TXT_SEND_TO_EMAIL")
				.li_expfnod.Caption = GetText("MYLISTS","TXT_NO_DATESTRING_IN_FILE_NAME")
				.li_etsavdc.Caption = GetText("MYLISTS","TXT_SAVE_IN_DOC")
		
				.tbid.ControlSource = [curLists.li_listid]
				.tbloop.ControlSource = [curLists.li_basedon]
				.tbdesc.ControlSource = [curLists.li_lang]+g_langnum
				.cbreportmenu.Rowsource = [thisform.aChecks]
				.cbreportmenu.ControlSource = [curLists.li_menu]
				.ogoutput.ControlSource = [curLists.li_output]
				.tbreport.ControlSource = [curLists.li_frx]
				.tboutput.ControlSource = [curLists.li_outfile]
				.ogddelink.ControlSource = [curLists.li_ddelink]
				.cboPickLanguage.ControlSource = [curLists.li_alang]
				.li_lexptyp.ControlSource = [curLists.li_lexptyp]
				.li_rptgrp.ControlSource = [curLists.li_rptgrp]
				.tbmacro.ControlSource = [curLists.li_ddemcro]
				.tbtemplate.ControlSource = [curLists.li_dotfile]
				.tbbatches.ControlSource = [curLists.li_batch]
				.tbbatchcond.ControlSource = [curLists.li_when]
				.tbusergroups.ControlSource = [curLists.li_usrgrp]
				.tbpre.ControlSource = [curLists.li_preproc]
				.tbpost.ControlSource = [curLists.li_postpro]
				.li_lettype.Rowsource = [thisform.aLetTypes]
				.li_lettype.ControlSource = [curLists.li_lettype]
				.chbased.ControlSource = [curLists.li_reslet]
				.chDialog.ControlSource = [curLists.li_dialog]
				.chcustom.ControlSource = [curLists.li_custom]
				.li_saveres.ControlSource = [curLists.li_saveres]
				.chSendViaEMail.ControlSource = [curLists.li_email]
				.edtHead.ControlSource = [curLists.li_emhea]+g_langnum
				.chAttachmentInPDF.ControlSource = [curLists.li_attpdf]
				.chhide.ControlSource = [curLists.li_hide]
				.chdelaymailmerge.ControlSource = [curLists.li_delaymm]
				.chConsent.ControlSource = [curLists.li_consent]
				.tblicence.ControlSource = [curLists.li_license]
				.tbOrder.ControlSource = [curLists.li_order]
				.li_mainsrv.ControlSource = [curLists.li_mainsrv]
				.li_buildng.ControlSource = [curLists.li_buildng]
				.li_forms.ControlSource = [curLists.li_forms]
				.li_eXPSEND.ControlSource = [curLists.li_expsend]
				.li_exPTYPE.ControlSource = [curLists.li_exptype]
				.li_expath.ControlSource = [curLists.li_expath]
				.li_exPFILE.ControlSource = [curLists.li_expfile]
				.li_eXPMAIL.ControlSource = [curLists.li_expmail]
				.li_expfnod.ControlSource = [curLists.li_expfnod]
				.li_etsavdc.ControlSource = [curLists.li_etsavdc]
		
				.edtHead.ToolTipText = "<CTRL + DOWN ARROW>" + CRLF + CRLF + ;
					GetText("PARAMS","TXT_USE_ANREDE_IN_HEAD") + ": #AR" + CRLF + ;
					GetText("PARAMS","TXT_USE_FIRST_NAME_IN_HEAD") + ": #EN" + CRLF + ;
					GetText("PARAMS","TXT_USE_LAST_NAME_IN_HEAD") + ": #NA" + CRLF + ;
					GetText("ADDRESS","TXT_SALUTE") + ": #BA"
				.li_expfile.ToolTipText = GetText("MYLISTS","TXT_EXPORT_FILE_TT")
		
			* enabled/disabled
				.tbid.Enabled = INLIST(this.nMode, NEW_MODE, COPY_MODE)
				.tbreport.Enabled = INLIST(curLists.li_output, 1, 2)
				.tboutput.Enabled = (curLists.li_output = 3)
				.ogddelink.onone.Enabled = INLIST(curLists.li_output, 3, 4)
				.ogddelink.oword2007.Enabled = INLIST(curLists.li_output, 3, 4)
				.ogddelink.oword97.Enabled = INLIST(curLists.li_output, 3, 4)
				.ogddelink.oexcel2007.Enabled = INLIST(curLists.li_output, 3, 4)
				.ogddelink.owriter.Enabled = INLIST(curLists.li_output, 3, 4)
				.ogddelink.ocalc.Enabled = INLIST(curLists.li_output, 3, 4)
				.li_lexptyp.Enabled = INLIST(curLists.li_output, 1, 2) AND (curLists.li_menu = 8)
				.tbmacro.Enabled = INLIST(curLists.li_output, 3, 4)
				.tbtemplate.Enabled = INLIST(curLists.li_output, 3, 4)
				.li_lettype.Enabled = (curLists.li_menu = 8)
				.chbased.Enabled = (curLists.li_menu = 8)
				.chConsent.Enabled = NOT INLIST(curLists.li_lettype,3,4) AND (curLists.li_menu = 8)
			ENDWITH
		ELSE
			WITH this.cntSmall
				thisform.Caption = GetText("MYLISTS","TW_REPORTS")
				.lbatches.Caption = GetText("MYLISTS","T_BATCH")
				.lbatchcond.Caption = GetText("MYLISTS","T_WHEN")
				.lusergroups.Caption = GetText("MYLISTS","T_USRGRP")
				.lblLanguage.Caption = GetLangText("PARAMS","TXT_LANGUAGE")
				.chHide.Caption = GetText("MYLISTS","TXT_HIDE")
				.cmdOK.Caption = GetText('COMMON','TXT_OK')
				.cmdCancel.Caption = GetText('COMMON','TXT_CANCEL')
		
				.tbbatches.ControlSource = [curLists.li_batch]
				.tbbatchcond.ControlSource = [curLists.li_when]
				.tbusergroups.ControlSource = [curLists.li_usrgrp]
				.chhide.ControlSource = [curLists.li_hide]
				.cboPickLanguage.ControlSource = [curLists.li_alang]
			ENDWITH
		ENDIF
		
		this.SetAll("Selectonentry",.T.)
		
		this.refreshcmdattachment()
		this.enabledisableemailcontrols()
		
		RETURN .T.
	ENDPROC

	PROCEDURE KeyPress
		LPARAMETERS nKeyCode, nShiftAltCtrl
		
		DO CASE
			CASE nKeyCode = 27							&& ESC
				this.OnClose()
				NODEFAULT
			CASE nShiftAltCtrl = 0 AND nKeyCode = 7		&& Delete
				IF TYPE("this.ActiveControl") = "O" AND LOWER(this.ActiveControl.BaseClass) = "optionbutton"
					this.ActiveControl.Parent.Value = Blank(this.ActiveControl.Parent.Value)
				ENDIF
		ENDCASE
	ENDPROC

	PROCEDURE onattachment
		* curLists.li_attcahm is used and changed in viewattachments form!
		IF NOT USED("emprop")
			= openfiledirect(.F.,"emprop")
		ENDIF
		IF NOT USED("eattachm")
			openfiledirect(.F.,"eattachm")
		ENDIF
		
		DO forms\viewattachments WITH 0, "REPORT"
		
		this.refreshcmdattachment()
		
		RETURN .T.
	ENDPROC

	PROCEDURE onclose
		this.Release()
	ENDPROC

	PROCEDURE onfirststart
		IF NOT this.lOnFirstActivate
			this.lOnFirstActivate = .T.
			IF _screen.Height < 768 AND this.Height > _screen.Height
				*this.WindowState = 2
				this.Height = _screen.Height - 2*SYSMETRIC(9)
				this.Resize()
				this.AutoCenter = .T.
			ENDIF
		ENDIF
		
		DODEFAULT()
	ENDPROC

	PROCEDURE onsave
		LOCAL lcSourceFile, lcTargetFile, lcExtension
		
		STORE "" TO lcSourceFile, lcTargetFile
		
		DO CASE
			CASE this.cntSmall.Visible
			CASE INLIST(curLists.li_output, 1, 2)
				BLANK FIELDS li_dotfile IN curLists
				IF NOT EMPTY(this.oData.li_frx) AND NOT EMPTY(curLists.li_frx)
					lcExtension = "frx"				&&FRX File for FoxPro reports
					lcSourceFile = FULLPATH(gcReportdir + FORCEEXT(ALLTRIM(this.oData.li_frx), lcExtension))
					lcTargetFile = FULLPATH(gcReportdir + FORCEEXT(ALLTRIM(curLists.li_frx), lcExtension))
				ENDIF
			CASE INLIST(curLists.li_output, 3, 4) AND BETWEEN(curLists.li_ddelink, 2, 6)
				BLANK FIELDS li_frx IN curLists
				IF NOT EMPTY(this.oData.li_dotfile) AND NOT EMPTY(curLists.li_dotfile)
					DO CASE
						CASE curLists.li_ddelink = 3
							lcExtension = "xlt"		&&XLT File for Microsoft Office Excel templates
						CASE curLists.li_ddelink = 4
							lcExtension = "ott"		&&OTT File for OpenOffice.org Writer templates
						CASE curLists.li_ddelink = 5
							lcExtension = "ots"		&&OTT File for OpenOffice.org Spreadsheet templates
						CASE curLists.li_ddelink = 2&& AND curLists.li_output = 4	&& in MyLists not function
							lcExtension = "doc"		&&DOC File for Microsoft Office Word documents
						CASE curLists.li_ddelink = 6&& AND curLists.li_output = 4
							lcExtension = "docx"	&&DOCX File for Microsoft Office 2007 Word documents
						*CASE curLists.li_ddelink = 2
						*	lcExtension = "dot"		&&DOT File for Microsoft Office Word templates
						*CASE curLists.li_ddelink = 6
						*	lcExtension = "dotx"	&&DOTX File for Microsoft Office 2007 Word templates
					ENDCASE
					lcSourceFile = FULLPATH(gcTemplatedir + FORCEEXT(ALLTRIM(this.oData.li_dotfile), lcExtension))
					lcTargetFile = FULLPATH(gcTemplatedir + FORCEEXT(ALLTRIM(curLists.li_dotfile), lcExtension))
				ENDIF
		ENDCASE
		
		DO CASE
			CASE EMPTY(lcSourceFile) OR EMPTY(lcTargetFile) OR lcSourceFile == lcTargetFile
			CASE NOT FILE(lcSourceFile)
				WAIT WINDOW "Can't find " + lcSourceFile + " file!" TIMEOUT 5
			CASE FILE(lcTargetFile) AND NOT YesNo("Do you want to overwrite " + lcTargetFile + "?")
			OTHERWISE
				IF lcExtension == "frx"
					lcSourceFile = FORCEEXT(lcSourceFile, "*")
					lcTargetFile = FORCEEXT(lcTargetFile, "*")
				ENDIF
				COPY FILE (lcSourceFile) TO (lcTargetFile)
		ENDCASE
		
		IF (curLists.li_menu <> 8 OR INLIST(curLists.li_lettype,3,4)) AND curLists.li_consent
			BLANK FIELDS li_consent IN curLists
		ENDIF
		IF curLists.li_mainsrv AND curLists.li_buildng
			BLANK FIELDS li_buildng IN curLists
		ENDIF
		IF this.nMode <> EDIT_MODE
			REPLACE li_liid WITH NextId("LISTS") IN curLists
		ENDIF
		
		this.nRecordId = curLists.li_liid
		this.ocaLists.DoTableUpdate()
		
		_screen.oGlobal.oRG.ListsRefresh()
		
		this.OnClose()
	ENDPROC

	PROCEDURE QueryUnload
		this.OnClose()
		NODEFAULT
	ENDPROC

	PROCEDURE refreshcmdattachment
		IF EMPTY(curLists.li_attcahm)
			this.cntMain.cmdAttachment.BackColor = RGB(240,240,240)
		ELSE
			this.cntMain.cmdAttachment.BackColor = RGB(255,0,0)
		ENDIF
		
		RETURN .T.
	ENDPROC

	PROCEDURE Unload
		DODEFAULT()
		RETURN this.nRecordId
	ENDPROC

	PROCEDURE cntMain.cboShowOnForms.InteractiveChange
		LOCAL lcForms, lcForm
		
		IF NOT EMPTY(this.Value)
			lcForms = STRTRAN(","+ALLTRIM(UPPER(curLists.li_forms))+",", " ")
			lcForm = ","+ALLTRIM(UPPER(this.Value))+","
			IF lcForm $ lcForms
				WAIT WINDOW GetText("COMMON","T_ALLREADY_ENTERED") TIMEOUT 3
			ELSE
				this.Parent.li_forms.Value = UPPER(ALLTRIM(this.Parent.li_forms.Value) + ;
					IIF(EMPTY(this.Parent.li_forms.Value), "", ",") + ALLTRIM(this.Value))
				this.Parent.li_forms.Refresh()
			ENDIF
		ENDIF
	ENDPROC

	PROCEDURE cntMain.Cbreportmenu.InteractiveChange
		this.Parent.li_lettype.Enabled = (this.Value = 8)
		this.Parent.chbased.Enabled = (this.Value = 8)
		this.Parent.chConsent.Enabled = NOT INLIST(curLists.li_lettype,3,4) AND (this.Value = 8)
		this.Parent.li_lexptyp.Enabled = INLIST(curLists.li_output,1,2) AND (this.Value = 8)
	ENDPROC

	PROCEDURE cntMain.chsendviaemail.InteractiveChange
		thisform.enabledisableemailcontrols()
	ENDPROC

	PROCEDURE cntMain.cmdAttachment.Click
		thisform.onattachment()
	ENDPROC

	PROCEDURE cntMain.cmdCancel.Click
		thisform.OnClose()
	ENDPROC

	PROCEDURE cntMain.cmdDialog.Click
		LOCAL loData, lOK
		
		SELECT curLists
		SCATTER MEMO NAME loData
		
		DO FORM "Forms\DefReportDialog" WITH thisform, loData TO lOK
		
		IF lOK
			SELECT curLists
			GATHER NAME loData FIELDS LIKE p?_lang*, li_pict*, li_operat*, li_type*, li_mindef*, li_maxdef*, li_picsql*, li_index, li_filter MEMO
		ENDIF
	ENDPROC

	PROCEDURE cntMain.cmdLetter.Click
		LOCAL lcLiMemo
		
		DO FORM "Forms\RepMemo" WITH curLists.li_memo TO lcLiMemo
		IF NOT curLists.li_memo == lcLiMemo
			REPLACE li_memo WITH lcLiMemo IN curLists
		ENDIF
	ENDPROC

	PROCEDURE cntMain.cmdOK.Click
		thisform.OnSave()
	ENDPROC

	PROCEDURE cntMain.edtHead.KeyPress
		LPARAMETERS nKeyCode, nShiftAltCtrl
		
		IF nKeyCode = 145 AND nShiftAltCtrl = 2
			LOCAL lcControlSource
			lcControlSource = this.ControlSource
			REPLACE &lcControlSource WITH this.Value IN curLists
			DO FORM "forms\DescForm" WITH "li_emhea", thisform.Caption, "curLists",,, "tEditbox"
			NODEFAULT
		ENDIF
	ENDPROC

	PROCEDURE cntMain.li_lettype.InteractiveChange
		this.Parent.chConsent.Enabled = NOT INLIST(this.Value,3,4) AND (curLists.li_menu = 8)
	ENDPROC

	PROCEDURE cntMain.li_mainsrv.InteractiveChange
		thisform.cntMain.li_buildng.Enabled = g_lBuildings AND NOT this.Value
	ENDPROC

	PROCEDURE cntMain.Ogoutput.InteractiveChange
		this.Parent.tbreport.Enabled = INLIST(this.Value,1,2)
		this.Parent.tboutput.Enabled = (this.Value = 3)
		this.Parent.ogddelink.onone.Enabled = INLIST(this.Value,3,4)
		this.Parent.ogddelink.oword2007.Enabled = INLIST(this.Value,3,4)
		this.Parent.ogddelink.oword97.Enabled = INLIST(this.Value,3,4)
		this.Parent.ogddelink.oexcel2007.Enabled = INLIST(this.Value,3,4)
		this.Parent.ogddelink.owriter.Enabled = INLIST(this.Value,3,4)
		this.Parent.ogddelink.ocalc.Enabled = INLIST(this.Value,3,4)
		this.Parent.li_lexptyp.Enabled = INLIST(this.Value,1,2) AND curLists.li_menu = 8
		this.Parent.tbmacro.Enabled = INLIST(this.Value,3,4)
		this.Parent.tbtemplate.Enabled = INLIST(this.Value,3,4)
	ENDPROC

	PROCEDURE cntMain.Tbdesc.KeyPress
		LPARAMETERS nKeyCode, nShiftAltCtrl
		
		IF nKeyCode = 24 AND nShiftAltCtrl = 0
			LOCAL lcControlSource
			lcControlSource = this.ControlSource
			REPLACE &lcControlSource WITH this.Value IN curLists
			DO MSFillDescriptions IN MgrSys WITH thisform.nMode, "curLists", "li_lang", this.Value
			DO FORM "forms\DescForm" WITH "li_lang", thisform.Caption, "curLists",, 50
			NODEFAULT
		ENDIF
	ENDPROC

	PROCEDURE cntMain.Tbdesc.LostFocus
		DO MSFillDescriptions IN MgrSys WITH thisform.nMode, "curLists", "li_lang", this.Value
	ENDPROC

	PROCEDURE cntMain.Tbloop.Valid
		IF NOT EMPTY(this.Value)
			LOCAL lcurLists
		
			lcurLists = SqlCursor("SELECT li_listid FROM lists WHERE li_liid <> " + SqlCnv(curLists.li_liid,.T.) + " AND li_listid = " + SqlCnv(PADR(this.Value,8),.T.))
			IF NOT USED(lcurLists) OR RECCOUNT(lcurLists) = 0
				WAIT WINDOW "The value You entered is invalid!"
				RETURN 0
			ENDIF
			DClose(lcurLists)
		ENDIF
	ENDPROC

	PROCEDURE cntMain.tbpre.Valid
		IF !empty(this.value)
			PRIVATE cvErsion
			PRIVATE cpPversion
			cvErsion = "0.00"
			cpPversion = "PpVersion"
			cfUnction = IIF(curLists.li_ddelink < 2, gcReportdir, gcTemplatedir) + STREXTRACT(this.Value, "","(", 0, 2)
			DO (cpPversion) IN (cfUnction) WITH cvErsion
			RETURN .T.
		ENDIF
	ENDPROC

	PROCEDURE cntSmall.cmdCancel.Click
		thisform.OnClose()
	ENDPROC

	PROCEDURE cntSmall.cmdOK.Click
		thisform.OnSave()
	ENDPROC

ENDDEFINE
