*--------------------------------------------------------------------------------------------------------------------------------------------------------
* (ES) AUTOGENERADO - ¡¡ATENCIÓN!! - ¡¡NO PENSADO PARA EJECUTAR!! USAR SOLAMENTE PARA INTEGRAR CAMBIOS Y ALMACENAR CON HERRAMIENTAS SCM!!
* (EN) AUTOGENERATED - ATTENTION!! - NOT INTENDED FOR EXECUTION!! USE ONLY FOR MERGING CHANGES AND STORING WITH SCM TOOLS!!
*--------------------------------------------------------------------------------------------------------------------------------------------------------
*< FOXBIN2PRG: Version="1.19" SourceFile="emailbrowse.scx" /> (Solo para binarios VFP 9 / Only for VFP 9 binaries)
*
*
DEFINE CLASS dataenvironment AS dataenvironment 
 	*< CLASSDATA: Baseclass="dataenvironment" Timestamp="" Scale="" Uniqueid="" ClassIcon="2" />

	DataSource = .NULL.
	Height = 556
	Left = 3
	Name = "Dataenvironment"
	Top = 5
	Width = 707

ENDDEFINE

DEFINE CLASS frmmailbrowse AS tform OF "..\libs\main.vcx" 
 	*< CLASSDATA: Baseclass="form" Timestamp="" Scale="" Uniqueid="" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="edtMessageText" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grdSent" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grdSent.Column1.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grdSent.Column1.Tbgrid1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grdSent.Column2.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grdSent.Column2.Tbgrid1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grdSent.Column3.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grdSent.Column3.Tbgrid1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grdSent.Column4.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grdSent.Column4.Tbgrid1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grdSent.Column5.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grdSent.Column5.Tbgrid1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grdSent.Column6.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grdSent.Column6.Tchkgrid1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grdSent.Column7.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grdSent.Column7.Tbgrid1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="tOleFolders" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="toleImageList" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grdLinked" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grdLinked.Column1.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grdLinked.Column1.Tbgrid1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grdLinked.Column2.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grdLinked.Column2.Tbgrid1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grdLinked.Column3.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grdLinked.Column3.Tbgrid1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grdLinked.Column4.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grdLinked.Column4.Tbgrid1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grdLinked.Column5.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grdLinked.Column5.Tchkgrid1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grdLinked.Column6.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grdLinked.Column6.Tbgrid1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grdInbox" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grdInbox.Column1.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grdInbox.Column1.Tbgrid1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grdInbox.Column2.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grdInbox.Column2.Tbgrid1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grdInbox.Column3.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grdInbox.Column3.Tbgrid1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grdInbox.Column4.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grdInbox.Column4.Tbgrid1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grdInbox.Column5.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grdInbox.Column5.Tbgrid1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grdInbox.Column6.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grdInbox.Column6.Tchkgrid1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grdInbox.Column7.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grdInbox.Column7.Tbgrid1" UniqueID="" Timestamp="" />

	*<DefinedPropArrayMethod>
		*m: attachmentdisable
		*m: checkattachmentstext
		*m: checkifmarked
		*m: fillcurlink
		*m: getdispname
		*m: getemail
		*m: getstatustext
		*m: gettooltiptext
		*m: onaddress
		*m: onaddressmaskclose
		*m: onfolderchange
		*m: onmark
		*m: onmarkall
		*m: onpreview
		*m: onreceive
		*m: onreply
		*m: onselectedaddress
		*m: printmessage
		*m: refreshgrid
		*m: refreshselectedrecord
		*m: refreshtree
		*m: replaceemail
		*p: lsendingemail
		*p: nfoldervalue
		*p: oemail
	*</DefinedPropArrayMethod>

	AlwaysOnTop = .F.
	Caption = "frmMailBrowse"
	ControlBox = .T.
	ctbrclass = ctbrEmailBrowse
	DataSession = 2
	DoCreate = .T.
	doini = .T.
	formname = frmMailBrowse
	Height = 487
	Icon = ..\bitmap\icons\mail01a.ico
	KeyPreview = .T.
	Name = "frmMailBrowse"
	nfoldervalue = 1
	oemail = .NULL.
	saveformsize = .T.
	savegridwidths = .T.
	ShowTips = .T.
	Width = 773

	ADD OBJECT 'edtMessageText' AS teditbox WITH ;
		Height = 228, ;
		Left = 138, ;
		Name = "edtMessageText", ;
		ReadOnly = .T., ;
		TabIndex = 3, ;
		Top = 257, ;
		Width = 630, ;
		ZOrderSet = 0
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="editbox" />

	ADD OBJECT 'grdInbox' AS tgrid WITH ;
		ColumnCount = 7, ;
		DeleteMark = .F., ;
		GridLineColor = 192,192,192, ;
		GridLines = 2, ;
		Height = 251, ;
		Left = 2, ;
		lresizecolumns = .F., ;
		Name = "grdInbox", ;
		Panel = 1, ;
		RecordMark = .F., ;
		resizefontsize = .F., ;
		ScrollBars = 2, ;
		setcolumns = .T., ;
		SplitBar = .F., ;
		TabIndex = 1, ;
		Top = 1, ;
		Width = 766, ;
		ZOrderSet = 5, ;
		Column1.ColumnOrder = 1, ;
		Column1.Name = "Column1", ;
		Column1.ReadOnly = .T., ;
		Column1.Width = 100, ;
		Column2.Name = "Column2", ;
		Column2.ReadOnly = .T., ;
		Column2.Width = 100, ;
		Column3.Name = "Column3", ;
		Column3.ReadOnly = .T., ;
		Column3.Width = 375, ;
		Column4.Name = "Column4", ;
		Column4.ReadOnly = .T., ;
		Column4.Width = 120, ;
		Column5.Name = "Column5", ;
		Column5.ReadOnly = .T., ;
		Column5.Width = 22, ;
		Column6.Name = "Column6", ;
		Column6.Sparse = .F., ;
		Column6.Width = 22, ;
		Column7.ColumnOrder = 7, ;
		Column7.Name = "Column7", ;
		Column7.Width = 51
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="grid" />

	ADD OBJECT 'grdInbox.Column1.Header1' AS header WITH ;
		Caption = "Header1", ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'grdInbox.Column1.Tbgrid1' AS tbgrid WITH ;
		Left = 45, ;
		Name = "Tbgrid1", ;
		ReadOnly = .T., ;
		Top = 29
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />

	ADD OBJECT 'grdInbox.Column2.Header1' AS header WITH ;
		Caption = "Header1", ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'grdInbox.Column2.Tbgrid1' AS tbgrid WITH ;
		Left = 40, ;
		Name = "Tbgrid1", ;
		ReadOnly = .T., ;
		Top = 29
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />

	ADD OBJECT 'grdInbox.Column3.Header1' AS header WITH ;
		Caption = "Header1", ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'grdInbox.Column3.Tbgrid1' AS tbgrid WITH ;
		Left = 47, ;
		Name = "Tbgrid1", ;
		ReadOnly = .T., ;
		Top = 29
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />

	ADD OBJECT 'grdInbox.Column4.Header1' AS header WITH ;
		Caption = "Header1", ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'grdInbox.Column4.Tbgrid1' AS tbgrid WITH ;
		Left = 55, ;
		Name = "Tbgrid1", ;
		ReadOnly = .T., ;
		Top = 29
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />

	ADD OBJECT 'grdInbox.Column5.Header1' AS header WITH ;
		Caption = "Header1", ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'grdInbox.Column5.Tbgrid1' AS tbgrid WITH ;
		Left = 6, ;
		Name = "Tbgrid1", ;
		ReadOnly = .T., ;
		Top = 29
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />

	ADD OBJECT 'grdInbox.Column6.Header1' AS header WITH ;
		Caption = "Header1", ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'grdInbox.Column6.Tchkgrid1' AS tchkgrid WITH ;
		Alignment = 0, ;
		Caption = "", ;
		Left = 7, ;
		Name = "Tchkgrid1", ;
		Top = 29
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="checkbox" />

	ADD OBJECT 'grdInbox.Column7.Header1' AS header WITH ;
		Caption = "Header1", ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'grdInbox.Column7.Tbgrid1' AS tbgrid WITH ;
		Height = 204, ;
		Left = 8, ;
		Name = "Tbgrid1", ;
		Top = 34, ;
		Width = 36
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />

	ADD OBJECT 'grdLinked' AS tgrid WITH ;
		ColumnCount = 6, ;
		DeleteMark = .F., ;
		GridLineColor = 192,192,192, ;
		GridLines = 2, ;
		Height = 251, ;
		Left = 2, ;
		lresizecolumns = .F., ;
		Name = "grdLinked", ;
		RecordMark = .F., ;
		resizefontsize = .F., ;
		ScrollBars = 2, ;
		setcolumns = .T., ;
		SplitBar = .F., ;
		TabIndex = 1, ;
		Top = 1, ;
		Visible = .F., ;
		Width = 766, ;
		ZOrderSet = 4, ;
		Column1.Name = "Column1", ;
		Column1.ReadOnly = .T., ;
		Column1.Visible = .F., ;
		Column1.Width = 100, ;
		Column2.Name = "Column2", ;
		Column2.ReadOnly = .T., ;
		Column2.Visible = .F., ;
		Column2.Width = 100, ;
		Column3.Name = "Column3", ;
		Column3.ReadOnly = .T., ;
		Column3.Visible = .F., ;
		Column3.Width = 375, ;
		Column4.Name = "Column4", ;
		Column4.ReadOnly = .T., ;
		Column4.Visible = .F., ;
		Column4.Width = 120, ;
		Column5.Name = "Column5", ;
		Column5.Sparse = .F., ;
		Column5.Visible = .F., ;
		Column5.Width = 22, ;
		Column6.CurrentControl = "Tbgrid1", ;
		Column6.Name = "Column6", ;
		Column6.Visible = .F.
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="grid" />

	ADD OBJECT 'grdLinked.Column1.Header1' AS header WITH ;
		Caption = "Header1", ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'grdLinked.Column1.Tbgrid1' AS tbgrid WITH ;
		Left = 45, ;
		Name = "Tbgrid1", ;
		ReadOnly = .T., ;
		Top = 29, ;
		Visible = .F.
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />

	ADD OBJECT 'grdLinked.Column2.Header1' AS header WITH ;
		Caption = "Header1", ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'grdLinked.Column2.Tbgrid1' AS tbgrid WITH ;
		Left = 40, ;
		Name = "Tbgrid1", ;
		ReadOnly = .T., ;
		Top = 29, ;
		Visible = .F.
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />

	ADD OBJECT 'grdLinked.Column3.Header1' AS header WITH ;
		Caption = "Header1", ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'grdLinked.Column3.Tbgrid1' AS tbgrid WITH ;
		Left = 47, ;
		Name = "Tbgrid1", ;
		ReadOnly = .T., ;
		Top = 29, ;
		Visible = .F.
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />

	ADD OBJECT 'grdLinked.Column4.Header1' AS header WITH ;
		Caption = "Header1", ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'grdLinked.Column4.Tbgrid1' AS tbgrid WITH ;
		Left = 55, ;
		Name = "Tbgrid1", ;
		ReadOnly = .T., ;
		Top = 29, ;
		Visible = .F.
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />

	ADD OBJECT 'grdLinked.Column5.Header1' AS header WITH ;
		Caption = "Header1", ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'grdLinked.Column5.Tchkgrid1' AS tchkgrid WITH ;
		Alignment = 0, ;
		Caption = "", ;
		Left = 5, ;
		Name = "Tchkgrid1", ;
		ReadOnly = .F., ;
		Top = 32, ;
		Visible = .T.
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="checkbox" />

	ADD OBJECT 'grdLinked.Column6.Header1' AS header WITH ;
		Caption = "Header1", ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'grdLinked.Column6.Tbgrid1' AS tbgrid WITH ;
		Height = 144, ;
		Left = 9, ;
		Name = "Tbgrid1", ;
		Top = 71, ;
		Width = 12
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />

	ADD OBJECT 'grdSent' AS tgrid WITH ;
		ColumnCount = 7, ;
		DeleteMark = .F., ;
		GridLineColor = 192,192,192, ;
		GridLines = 2, ;
		Height = 251, ;
		Left = 2, ;
		lresizecolumns = .F., ;
		Name = "grdSent", ;
		RecordMark = .F., ;
		resizefontsize = .F., ;
		ScrollBars = 2, ;
		setcolumns = .T., ;
		SplitBar = .F., ;
		TabIndex = 4, ;
		Top = 1, ;
		Visible = .F., ;
		Width = 766, ;
		ZOrderSet = 1, ;
		Column1.Name = "Column1", ;
		Column1.ReadOnly = .T., ;
		Column1.Visible = .F., ;
		Column1.Width = 100, ;
		Column2.Name = "Column2", ;
		Column2.ReadOnly = .T., ;
		Column2.Visible = .F., ;
		Column2.Width = 100, ;
		Column3.Name = "Column3", ;
		Column3.ReadOnly = .T., ;
		Column3.Visible = .F., ;
		Column3.Width = 375, ;
		Column4.Name = "Column4", ;
		Column4.ReadOnly = .T., ;
		Column4.Visible = .F., ;
		Column4.Width = 120, ;
		Column5.Name = "Column5", ;
		Column5.ReadOnly = .T., ;
		Column5.Visible = .F., ;
		Column5.Width = 22, ;
		Column6.Name = "Column6", ;
		Column6.Sparse = .F., ;
		Column6.Visible = .F., ;
		Column6.Width = 22, ;
		Column7.CurrentControl = "Tbgrid1", ;
		Column7.Name = "Column7", ;
		Column7.Visible = .F.
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="grid" />

	ADD OBJECT 'grdSent.Column1.Header1' AS header WITH ;
		Caption = "Header1", ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'grdSent.Column1.Tbgrid1' AS tbgrid WITH ;
		Left = 45, ;
		Name = "Tbgrid1", ;
		ReadOnly = .T., ;
		Top = 29, ;
		Visible = .F.
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />

	ADD OBJECT 'grdSent.Column2.Header1' AS header WITH ;
		Caption = "Header1", ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'grdSent.Column2.Tbgrid1' AS tbgrid WITH ;
		Left = 40, ;
		Name = "Tbgrid1", ;
		ReadOnly = .T., ;
		Top = 29, ;
		Visible = .F.
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />

	ADD OBJECT 'grdSent.Column3.Header1' AS header WITH ;
		Caption = "Header1", ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'grdSent.Column3.Tbgrid1' AS tbgrid WITH ;
		Left = 47, ;
		Name = "Tbgrid1", ;
		ReadOnly = .T., ;
		Top = 29, ;
		Visible = .F.
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />

	ADD OBJECT 'grdSent.Column4.Header1' AS header WITH ;
		Caption = "Header1", ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'grdSent.Column4.Tbgrid1' AS tbgrid WITH ;
		Left = 55, ;
		Name = "Tbgrid1", ;
		ReadOnly = .T., ;
		Top = 29, ;
		Visible = .F.
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />

	ADD OBJECT 'grdSent.Column5.Header1' AS header WITH ;
		Caption = "Header1", ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'grdSent.Column5.Tbgrid1' AS tbgrid WITH ;
		Left = 6, ;
		Name = "Tbgrid1", ;
		ReadOnly = .T., ;
		Top = 29, ;
		Visible = .F.
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />

	ADD OBJECT 'grdSent.Column6.Header1' AS header WITH ;
		Caption = "Header1", ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'grdSent.Column6.Tchkgrid1' AS tchkgrid WITH ;
		Alignment = 0, ;
		Caption = "", ;
		Left = 7, ;
		Name = "Tchkgrid1", ;
		Top = 29, ;
		Visible = .F.
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="checkbox" />

	ADD OBJECT 'grdSent.Column7.Header1' AS header WITH ;
		Caption = "Header1", ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'grdSent.Column7.Tbgrid1' AS tbgrid WITH ;
		Height = 168, ;
		Left = 8, ;
		Name = "Tbgrid1", ;
		Top = 22, ;
		Width = 12
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />

	ADD OBJECT 'tOleFolders' AS toletree WITH ;
		Height = 227, ;
		Left = 2, ;
		Name = "tOleFolders", ;
		Top = 257, ;
		Width = 133, ;
		ZOrderSet = 2
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="olecontrol" OLEObject="c:\windows\syswow64\mscomctl.ocx" Value="0M8R4KGxGuEAAAAAAAAAAAAAAAAAAAAAPgADAP7/CQAGAAAAAAAAAAAAAAABAAAAAQAAAAAAAAAAEAAAAgvbwBvAHQAIABFAG4AdAByAHkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWAAUA//////////8BAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACBYiCKIQs8BAwAAAIABAAAAAAAAAwBPAGwAZQBPAGIAagBlAGMAdABEAGEAdABhAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4AAgEDAAAAAgAAAP////8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAagAAAAAAAAADAEEAYwBjAGUAcwBzAE8AYgBqAFMAaQB0AGUARABhAHQAYQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJgACAP///////////////wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAABcAAAAAAAAAAMAQwBoAGEAbgBnAGUAZABQAHIAbwBwAHMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAcAAIA////////////////AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAHokEHHiYXREbFqAMDwKDYoIUM0EggAAAC/DQAAdhcAALE8wWoBAAYAIgAAAD0AAACnAQAACAAAAAEAAAAB782rXAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAACQAAAA4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA5MzY4MjY1RS04NUZFLTExZDEtOEJFMy0wMDAwRjg3NTREQTFXAEkATgBEAE8AVwBTAFwAUwB5AHMAdABlAG0AMwAyAFwAbAABAACADgAAAEhpZGVTZWxlY3Rpb24ABQAAAEwAAAAADAAAAEluZGVudGF0aW9uABEAAABODQAAAAcAAAAAAAAAAAAFAOjquQAGAAAAAAAAAAUAAIAk3hgAAQAAAFwAH97svQEABQBs3hgAKQAJAHsANQA4AEQAQQA4AEQAOABGAAAAMEAKAAAATGFiZWxFZGl0AAkAAABJCgAAAAEAAAAKAAAATGluZVN0eWxlAAkAAABJCgAAAAEAAAAgAEMAOgBcAFcASQBOAEQATwBXAFMAXABzAHkAcwB0AGUAbQAzADIAXABDAE8ATQBDAFQATAAzADIALgBPAEMAWAAAABQA6jppEKLYCAArMDCdGQAvRDpcAAAAAAAAAAAAAAAAAAAAAAAAADwAMQAAAAAAAAAAABAAY2l0YWRlbAAmAAMABA==" />

	ADD OBJECT 'toleImageList' AS olecontrol WITH ;
		Height = 100, ;
		Left = 72, ;
		Name = "toleImageList", ;
		Top = 444, ;
		Width = 100, ;
		ZOrderSet = 3
		*< END OBJECT: BaseClass="olecontrol" OLEObject="c:\windows\syswow64\mscomctl.ocx" Value="0M8R4KGxGuEAAAAAAAAAAAAAAAAAAAAAPgADAP7/CQAGAAAAAAAAAAAAAAABAAAAAQAAAAAAAAAAEAAAAgv////7///8EAAAA/vbwBvAHQAIABFAG4AdAByAHkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWAAUA//////////8BAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACBYiCKIQs8BAwAAAMADAAAAAAAAAwBPAGwAZQBPAGIAagBlAGMAdABEAGEAdABhAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4AAgEDAAAAAgAAAP////8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAmgIAAAAAAAADAEEAYwBjAGUAcwBzAE8AYgBqAFMAaQB0AGUARABhAHQAYQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJgACAP///////////////wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAABcAAAAAAAAAAMAQwBoAGEAbgBnAGUAZABQAHIAbwBwAHMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAcAAIA////////////////AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAFcAAAAAAAAABQAAAAIAAAD+////BAAAAP7///8GAAAABwAAAAgAAAAJAAAACgAAAAsjfyQskYXREbFqAMDwKDYoIUM0EggAAADtAwAA7QMAAIB+4eYAAAYAWgAAABAAEADAwMAAAAAAAAHvzasAAAUAXAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAACQAAAA4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA5MzY4MjY1RS04NUZFLTExZDEtOEJFMy0wMDAwRjg3NTREQTEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAACADAAAAEltYWdlSGVpZ2h0AAkAAABJCgAAABAAAAALAAAASW1hZ2VXaWR0aAAJAAAASQoAAAAQAAAADQAAAFVzZU1hc2tDb2xvcgAFAAAATAAAAAAAdABlAEQAYQB0AGEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABA4AGAAAA/////wUAAIBs3hgAAgAAAAEMAAAATwBwAGUAbgBlAGQARgBvAGwAZABlAHIAAQwAAABDAGwAbwBzAGUAZABGAG8AbABkAGUAcgACAAAAAQAAAGx0AAD2AAAAQk32AAAAAAAAAHYAAAAoAAAAEAAAABAAAAABAAQAAAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAAAgAAAAICAAIAAAACAAIAAgIAAAICAgADAwMAAAAD/AAD/AAAA//8A/wAAAP8A/wD//wAA////AP//////////////////////8AAAAAAAAP93d3d3d3cA/3+4uLi4twD3+4uLi4uAcPf4uLi4uHBwf4uLi4uLB3B///////cIcHd3d3d3d3tw9/i4uLi4uHD3+4uLj///cPf4uLj3d3d//3///3//////93d3////////////////AgAAAGx0AAD2AAAAQk32AAAAAAAAAHYAAAAoAAAAEAAAABAAAAABAAQAAAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAAAgAAAAICAAIAAAACAAIAAgIAAAICAgADAwMAAAAD/AAD/AAAA//8A/wAAAP8A/wD//wAA////AP/////////////////////wAAAAAAAAD3d3d3d3d3cPf7i4uLi4tw9/i4uLi4uHD3+4uLi4uLcPf4uLi4uLhw9/uLi4uLi3D3+Li4uLi4cPf7i4uLi4tw9////////3D3i4uLh3d3f/94uLh///////d3d/////////////////AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA" />
	
	PROCEDURE attachmentdisable
		LOCAL l_lRetVal
		DO CASE
			CASE this.nFolderValue = 2
				l_lRetVal = EMPTY(curESent.es_attachm)
			CASE this.nFolderValue = 3
				l_lRetVal = EMPTY(curELinked.ei_attachm)
			OTHERWISE
				l_lRetVal = EMPTY(curEInbox.ei_attachm)
		ENDCASE
		RETURN l_lRetVal
	ENDPROC

	PROCEDURE checkattachmentstext
		LPARAMETERS lp_nMsgId, lp_lSentMsg
		LOCAL l_cRetText
		DO CheckAttachmentsText IN procemail WITH lp_nMsgId, lp_lSentMsg, l_cRetText
		RETURN PADR(l_cRetText,5)
	ENDPROC

	PROCEDURE checkifmarked
		DO CASE
			CASE this.nFolderValue = 2
				IF NOT curESent.es_mark
					REPLACE curESent.es_mark WITH .T. IN curESent
				ENDIF
			CASE this.nFolderValue = 3
				IF NOT curELinked.ei_mark
					REPLACE curELinked.ei_mark WITH .T. IN curELinked
				ENDIF
			OTHERWISE
				IF NOT curEInbox.ei_mark
					REPLACE curEInbox.ei_mark WITH .T. IN curEInbox
				ENDIF		
		ENDCASE	
		
		RETURN .T.
	ENDPROC

	PROCEDURE fillcurlink
		LPARAMETERS lp_nEiId, lp_cEMailAddress, lp_cGrid
		LOCAL l_cLink, l_nSelect
		l_cLink = ""
		lp_cEMailAddress = UPPER(PADR(lp_cEMailAddress,100))
		l_nSelect = SELECT()
		
		*CREATE CURSOR curLink (cl_addrid N(8), cl_apid N(8), cl_eiid N(8), cl_email C(100), cl_lname C(30), ;
		*		cl_fname C(20), cl_company C(50), cl_street C(30), cl_zip C(10), cl_city C(30))
		*INDEX ON STR(cl_eiid,8)+STR(cl_addrid,8)+STR(cl_apid,8) TAG TAG1
		*INDEX ON cl_eiid TAG TAG2
		
		IF EMPTY(lp_cGrid)
			SELECT address
			SCAN FOR UPPER(ad_email) == lp_cEMailAddress
				INSERT INTO curLink (cl_addrid, cl_apid, cl_eiid, cl_email, cl_lname, ;
						cl_fname, cl_company, cl_street, cl_zip, cl_city) ;
						VALUES (address.ad_addrid, 0, lp_nEiId, lp_cEMailAddress, address.ad_lname, ;
						address.ad_fname, address.ad_company, address.ad_street, address.ad_zip, address.ad_city)
			ENDSCAN
			SELECT apartner
			SCAN FOR UPPER(ap_email) == lp_cEMailAddress AND NOT SEEK(STR(lp_nEiId,8)+STR(ap_addrid,8)+STR(ap_apid,8), "curlink", "tag1") AND ;
					SEEK(ap_addrid, "address", "tag1")
				INSERT INTO curLink (cl_addrid, cl_apid, cl_eiid, cl_email, cl_lname, ;
						cl_fname, cl_company, cl_street, cl_zip, cl_city) ;
						VALUES (apartner.ap_addrid, apartner.ap_apid, lp_nEiId, lp_cEMailAddress, apartner.ap_lname, ;
						apartner.ap_fname, address.ad_company, address.ad_street, address.ad_zip, address.ad_city)
			ENDSCAN
		ELSE
			SELECT einboxsn
			SCAN FOR eb_eiid = lp_nEiId AND SEEK(eb_addrid,"address","tag1")
				IF NOT EMPTY(eb_apid) AND SEEK(eb_apid,"apartner","tag1")
					INSERT INTO curLink (cl_addrid, cl_apid, cl_eiid, cl_email, cl_lname, ;
							cl_fname, cl_company, cl_street, cl_zip, cl_city) ;
							VALUES (apartner.ap_addrid, apartner.ap_apid, lp_nEiId, lp_cEMailAddress, apartner.ap_lname, ;
							apartner.ap_fname, address.ad_company, address.ad_street, address.ad_zip, address.ad_city)
				ELSE
					INSERT INTO curLink (cl_addrid, cl_apid, cl_eiid, cl_email, cl_lname, ;
							cl_fname, cl_company, cl_street, cl_zip, cl_city) ;
							VALUES (address.ad_addrid, 0, lp_nEiId, lp_cEMailAddress, address.ad_lname, ;
							address.ad_fname, address.ad_company, address.ad_street, address.ad_zip, address.ad_city)
				ENDIF
			ENDSCAN
		ENDIF
		SELECT curLink
		SCAN FOR cl_eiid = lp_nEiId
			l_cLink = GetLangText("AR","T_YES")
			EXIT
		ENDSCAN
		IF EMPTY(l_cLink)
			l_cLink = GetLangText("AR","T_NO")
		ENDIF
		
		SELECT (l_nSelect)
		
		RETURN PADR(l_cLink,5)
	ENDPROC

	PROCEDURE getdispname
		LPARAMETERS lp_nEsId
		LOCAL l_cDisName, l_nSelect
		l_cDisName = ""
		l_nSelect = SELECT()
		SELECT esentrcp
		SCAN FOR ec_esid = lp_nEsId
			l_cDisName = l_cDisName + ALLTRIM(ec_disname) + "; "
		ENDSCAN
		IF NOT EMPTY(l_cDisName)
			l_cDisName = LEFT(l_cDisName,LEN(l_cDisName)-2)
		ENDIF
		SELECT (l_nSelect)
		RETURN l_cDisName
	ENDPROC

	PROCEDURE getemail
		LPARAMETERS lp_nEsId
		LOCAL l_cEmail, l_nSelect
		l_cEmail = ""
		l_nSelect = SELECT()
		SELECT esentrcp
		SCAN FOR ec_esid = lp_nEsId
			l_cEmail = l_cEmail + ALLTRIM(ec_email) + "; "
		ENDSCAN
		IF NOT EMPTY(l_cEmail)
			l_cEmail = LEFT(l_cEmail,LEN(l_cEmail)-2)
		ENDIF
		SELECT (l_nSelect)
		RETURN l_cEmail
	ENDPROC

	PROCEDURE getstatustext
		LPARAMETERS lp_cTable, lp_nStatus
		LOCAL l_cResult
		IF UPPER(lp_cTable) = "ESENT"
			l_cResult = GetLangText("EMBROWS","TXT_MESSAGE_SENT")
		ELSE
			DO CASE
				CASE lp_nStatus = 1
					l_cResult = GetLangText("EMBROWS","TXT_MESSAGE_BODY")
				CASE lp_nStatus = 2
					l_cResult = GetLangText("EMBROWS","TXT_LINK")
				CASE lp_nStatus = 3
					l_cResult = GetLangText("EMBROWS","TXT_REPLYING")
				OTHERWISE
					l_cResult = GetLangText("EMBROWS","TXT_STATUS_UNKNOWN")
			ENDCASE
		ENDIF
		RETURN PADR(l_cResult,20)
	ENDPROC

	PROCEDURE gettooltiptext
		LPARAMETERS lp_nEiId
		LOCAL l_cText, l_nSelect, i
		LOCAL ARRAY l_aLines(1)
		l_cText = ""
		l_nSelect = SELECT()
		
		SELECT curlink
		SCAN FOR cl_eiid = lp_nEiId
			l_cText = l_cText + IIF(EMPTY(cl_company),"",ALLTRIM(cl_company) + CHR(10)) + ;
					ALLTRIM(cl_lname) + " " + ALLTRIM(cl_fname) + CHR(10) + ;
					IIF(EMPTY(cl_street),"",ALLTRIM(cl_street) + CHR(10)) + ;
					IIF(EMPTY(cl_zip),"",ALLTRIM(cl_zip) + " ") + ;
					IIF(EMPTY(cl_city),"",ALLTRIM(cl_city) + CHR(10)) + CHR(10)
		ENDSCAN
		= ALINES(l_aLines, l_cText)
		IF ALEN(l_aLines,1) > 25
			l_cText = ""
			FOR i = 1 TO 25
				l_cText = l_cText + l_aLines(i) + CHR(10)
			ENDFOR
			l_cText = l_cText + "..."
		ENDIF
		SELECT (l_nSelect)
		
		RETURN l_cText
	ENDPROC

	PROCEDURE Init
		DODEFAULT()
		this.Caption = GetLangText("EMBROWS","TXT_CAPTION")
		
		this.tOleFolders.ImageList = thisform.tOleImageList
		this.NewObject("oEmail","emailclient","cit_email")
		this.edtMessageText.ControlSource = [curEInbox.ei_body]
		
		this.Show()
		
		this.RefreshTree("A1")
		this.RefreshGrid()
		GO TOP IN curEInbox
		
		RETURN .T.
	ENDPROC

	PROCEDURE Load
		DODEFAULT()
		
		= openfile(.F.,"address")
		SELECT address
		SET ORDER TO
		= openfile(.F.,"apartner")
		SELECT apartner
		SET ORDER TO
		= openfile(.F.,"param")
		= openfile(.F.,"document")
		= openfile(.F.,"picklist")
		= openfile(.F.,"id")
		= openfile(.F.,"esent")
		= openfile(.F.,"esentrcp")
		= openfile(.F.,"einbox")
		= openfile(.F.,"einboxsn")
		= openfile(.F.,"emprop")
		= openfile(.F.,"eattachm")
		
		CREATE CURSOR curLink (cl_addrid N(8), cl_apid N(8), cl_eiid N(8), cl_email C(100), cl_lname C(30), ;
				cl_fname C(20), cl_company C(50), cl_street C(30), cl_zip C(10), cl_city C(30))
		INDEX ON STR(cl_eiid,8)+STR(cl_addrid,8)+STR(cl_apid,8) TAG TAG1
		INDEX ON cl_eiid TAG TAG2
		
		RETURN .T.
	ENDPROC

	PROCEDURE onaddress
		LOCAL l_nCount, l_nAddrId, l_nSelect
		LOCAL ARRAY LArray(12)
		
		IF this.nFolderValue <> 1
			RETURN .T.
		ENDIF
		IF EMPTY(curEInbox.ei_eiid)
			RETURN .T.
		ENDIF
		l_nCount = 0
		l_nSelect = SELECT()
		SELECT * FROM curLink WHERE .F. INTO CURSOR curTempLink READWRITE
		SELECT curLink
		SCAN FOR cl_eiid = curEInbox.ei_eiid
			l_nCount = l_nCount + 1
			l_nAddrId = cl_addrid
			SCATTER MEMO NAME l_oData
			SELECT curTempLink
			APPEND BLANK
			GATHER MEMO NAME l_oData
		ENDSCAN
		DO CASE
			CASE l_nCount = 0
				LOCAL l_cAddStart, l_cAddText, l_nAddTagNo, l_nAddRn
				l_cAddStart = "BRWL"
				l_cAddText = "A"
				l_nAddTagNo = 2
				l_nAddRn = 0
				LArray(1) = l_cAddStart
				LArray(2) = l_cAddText
				LArray(3) = l_nAddTagNo
				LArray(4) = "EMAIL"
				LArray(5) = l_nAddRn
				LArray(6) = 0
				LArray(7) = 20
				LArray(8) = 0
				LArray(9) = this
				LArray(12) = .T.
				doform('addressmask','forms\addressmask','',.F.,@LArray)
			CASE l_nCount = 1
				this.onselectedaddress(l_nAddrId)
				this.refreshgrid()
			OTHERWISE
				LOCAL ARRAY l_aDefs(6, 4)
				l_nArea = SELECT()
				l_aDefs(1, 1) = "cl_company"
				l_aDefs(1, 2) = 120
				l_aDefs(1, 3) = GetLangText("ADDRESS","TXT_COMPANY")
				l_aDefs(1, 4) = "TXT"
				l_aDefs(2, 1) = "cl_lname"
				l_aDefs(2, 2) = 100
				l_aDefs(2, 3) = GetLangText("ADDRESS","TXT_LNAME")
				l_aDefs(2, 4) = "TXT"
				l_aDefs(3, 1) = "cl_fname"
				l_aDefs(3, 2) = 100
				l_aDefs(3, 3) = GetLangText("ADDRESS","TXT_FIRSTNAME")
				l_aDefs(3, 4) = "TXT"
				l_aDefs(4, 1) = "cl_street"
				l_aDefs(4, 2) = 200
				l_aDefs(4, 3) = GetLangText("ADDRESS","TXT_STREET")
				l_aDefs(4, 4) = "TXT"
				l_aDefs(5, 1) = "cl_zip"
				l_aDefs(5, 2) = 50
				l_aDefs(5, 3) = GetLangText("PARAMS","TXT_ZIP")
				l_aDefs(5, 4) = "TXT"
				l_aDefs(6, 1) = "cl_city"
				l_aDefs(6, 2) = 200
				l_aDefs(6, 3) = GetLangText("ADDRESS","TXT_CITY")
				l_aDefs(6, 4) = "TXT"
				SELECT curTempLink
				GO TOP
				DO FORM forms\brwmulsel WITH "curTempLink", l_aDefs TO l_nRet
				IF NOT EMPTY(l_nRet)
					this.onselectedaddress(curTempLink.cl_addrid)
					this.refreshgrid()
				ELSE
					IF this.lSendingEMail
						this.lSendingEMail = .F.
					ENDIF
				ENDIF
		ENDCASE
		USE IN curTempLink
		SELECT (l_nSelect)
		RETURN .T.
	ENDPROC

	PROCEDURE onaddressmaskclose
		LPARAMETERS lp_nAddrId
		LOCAL l_nRet, l_cCaption, l_cApartnerOrder
		l_nRet = 0
		CREATE CURSOR curReplaceEMail (rem_lname c(30), rem_fname c(20), ;
				rem_comp c(50), rem_email c(100), rem_mark l, rem_apid n(8))
		IF SEEK(lp_nAddrId,"address","TAG1") && found() should allways be .T.
			SELECT curReplaceEMail
			APPEND BLANK
			REPLACE rem_lname WITH address.ad_lname, ;
					rem_fname WITH address.ad_fname, ;
					rem_comp WITH address.ad_company, ;
					rem_email WITH address.ad_email IN curReplaceEMail
			SELECT apartner
			l_cApartnerOrder = ORDER()
			SET ORDER TO
			SCAN ALL FOR ap_addrid=lp_nAddrId
				SELECT curReplaceEMail
				APPEND BLANK
				REPLACE rem_lname WITH apartner.ap_lname, ;
						rem_fname WITH apartner.ap_fname, ;
						rem_comp WITH address.ad_company, ;
						rem_email WITH apartner.ap_email, ;
						rem_apid WITH apartner.ap_apid IN curReplaceEMail
				SELECT apartner		
			ENDSCAN
			SET ORDER TO l_cApartnerOrder IN "apartner"
			LOCAL ARRAY l_aDefs(5,4)
			l_aDefs(1,1) = "rem_lname"
			l_aDefs(1,2) = 150
			l_aDefs(1,3) = GetLangText("ADDRESS","TXT_LNAME")
			l_aDefs(1,4) = "TXT"
			l_aDefs(2,1) = "rem_fname"
			l_aDefs(2,2) = 150
			l_aDefs(2,3) = GetLangText("ADDRESS","TXT_FIRSTNAME")
			l_aDefs(2,4) = "TXT"
			l_aDefs(3,1) = "rem_comp"
			l_aDefs(3,2) = 150
			l_aDefs(3,3) = GetLangText("ADDRESS","TXT_COMPANY")
			l_aDefs(3,4) = "TXT"
			l_aDefs(4,1) = "rem_email"
			l_aDefs(4,2) = 200
			l_aDefs(4,3) = GetLangText("EMBROWS","TXT_CURR_EMAIL")
			l_aDefs(4,4) = "TXT"
			l_aDefs(5,1) = "rem_mark"
			l_aDefs(5,2) = 15
			l_aDefs(5,3) = ""
			l_aDefs(5,4) = "CHK"
			SELECT curReplaceEMail
			GO TOP
			l_cCaption = STRTRAN(GetLangText("EMBROWS","TXT_SAVE_QUESTION"),"?",":  ")
			l_cCaption = l_cCaption + RTRIM(curEInbox.ei_sender) + " ?"
			DO FORM forms\brwmulsel WITH "curReplaceEMail", l_aDefs, l_cCaption TO l_nRet
		ENDIF
		IF NOT EMPTY(l_nRet)
			this.replaceemail(lp_nAddrId)
			this.onselectedaddress(lp_nAddrId)
			this.refreshgrid()
		ELSE
			IF this.lSendingEMail
				this.lSendingEMail = .F.
			ENDIF
		ENDIF
		this.Enabled = .T.
		
		RETURN .T.
	ENDPROC

	PROCEDURE onclose
		this.Release()
	ENDPROC

	PROCEDURE ondelete
		this.checkifmarked()
		IF NOT yesno(GetLangText("RESERV2","TXT_ARE_YOU_SURE"))
			RETURN .T.
		ENDIF
		
		LOCAL l_nRecNo
		DO CASE
			CASE this.nFolderValue = 2
				SELECT curESent
				l_nRecNo = RECNO()
				SCAN FOR es_mark
					DO esent_delete IN procemail WITH es_esid
				ENDSCAN	
			CASE this.nFolderValue = 3
				l_nRecNo = RECNO("curELinked")
				this.oEmail.DeleteMsg("DLocate('curELinked', 'ei_mark AND ei_msysid = %s1')")
				SELECT curELinked
				SCAN FOR ei_mark
					DO einbox_delete IN procemail WITH ei_eiid
				ENDSCAN
			OTHERWISE
				l_nRecNo = RECNO("curEInbox")
				this.oEmail.DeleteMsg("DLocate('curEInbox', 'ei_mark AND ei_msysid = %s1')")
				SELECT curEInbox
				SCAN FOR ei_mark
					DO einbox_delete IN procemail WITH ei_eiid
				ENDSCAN
		ENDCASE
		
		GO l_nRecNo
		
		this.RefreshGrid()
		this.RefreshTree()
		
		RETURN .T.
	ENDPROC

	PROCEDURE onfolderchange
		LPARAMETERS lp_cValue
		LOCAL l_lGoTop, l_cESentFilter
		l_cESentFilter = ""
		l_lGoTop = .F.
		IF EMPTY(lp_cValue)
			lp_cValue = "A1"
		ENDIF
		
		this.nFolderValue = VAL(SUBSTR(lp_cValue,2,1))
		
		DO CASE
			CASE this.nFolderValue = 2
				IF RECCOUNT("curESent") = 0
					l_lGoTop = .T.
				ENDIF
				DO CASE
					CASE LEN(lp_cValue) = 9
						l_cESentFilter = "STR(YEAR(es_datime),4)+PADL(MONTH(es_datime),2,[0]) == [" + RIGHT(lp_cValue,6) + "]"
					CASE LEN(lp_cValue) = 7
						l_cESentFilter = "STR(YEAR(es_datime),4) == [" + RIGHT(lp_cValue,4) + "]"
					OTHERWISE
						l_cESentFilter = ".T."
				ENDCASE
				thisform.RefreshGrid(l_cESentFilter)
				thisform.edtMessageText.ControlSource = [curESent.es_body]
				thisform.grdInbox.Visible = .F.
				thisform.grdLinked.Visible = .F.
				thisform.grdSent.Visible = .T.
				IF l_lGoTop
					GO TOP IN curESent
					thisform.grdSent.SetFocus()
				ENDIF
				
			CASE this.nFolderValue = 3
				IF RECCOUNT("curELinked") = 0
					l_lGoTop = .T.
				ENDIF
				DO CASE
					CASE LEN(lp_cValue) = 9
						l_cESentFilter = "STR(YEAR(ei_datime),4)+PADL(MONTH(ei_datime),2,[0]) == [" + RIGHT(lp_cValue,6) + "]"
					CASE LEN(lp_cValue) = 7
						l_cESentFilter = "STR(YEAR(ei_datime),4) == [" + RIGHT(lp_cValue,4) + "]"
					OTHERWISE
						l_cESentFilter = ".T."
				ENDCASE
				thisform.RefreshGrid(l_cESentFilter)
				thisform.edtMessageText.ControlSource = [curELinked.ei_body]
				thisform.grdInbox.Visible = .F.
				thisform.grdSent.Visible = .F.
				thisform.grdLinked.Visible = .T.
				IF l_lGoTop
					GO TOP IN curELinked
					thisform.grdLinked.SetFocus()
				ENDIF
			OTHERWISE
				thisform.RefreshGrid()
				thisform.edtMessageText.ControlSource = [curEInbox.ei_body]
				thisform.grdSent.Visible = .F.
				thisform.grdLinked.Visible = .F.
				thisform.grdInbox.Visible = .T.
		ENDCASE
		
		this.RefreshTree(lp_cValue)
		
		RETURN .T.
	ENDPROC

	PROCEDURE onmark
		LPARAMETERS lp_lMarkAll
		DO CASE
			CASE this.nFolderValue = 2
				IF curESent.es_esid > 0
					IF lp_lMarkAll
						LOCAL l_lValue, l_nRecNo
						l_nRecNo = RECNO("curESent")
						l_lValue = NOT curESent.es_mark
						REPLACE curESent.es_mark WITH l_lValue ALL IN curESent
						GO l_nRecNo IN curESent
					ELSE
						REPLACE curESent.es_mark WITH NOT curESent.es_mark IN curESent
					ENDIF
				ENDIF
			CASE this.nFolderValue = 3
				IF curELinked.ei_eiid > 0
					IF lp_lMarkAll
						LOCAL l_lValue, l_nRecNo
						l_nRecNo = RECNO("curELinked")
						l_lValue = NOT curELinked.ei_mark
						REPLACE curELinked.ei_mark WITH l_lValue ALL IN curELinked
						GO l_nRecNo IN curELinked
					ELSE
						REPLACE curELinked.ei_mark WITH NOT curELinked.ei_mark IN curELinked
					ENDIF
				ENDIF
			OTHERWISE
				IF curEInbox.ei_eiid > 0
					IF lp_lMarkAll
						LOCAL l_lValue, l_nRecNo
						l_nRecNo = RECNO("curEInbox")
						l_lValue = NOT curEInbox.ei_mark
						REPLACE curEInbox.ei_mark WITH l_lValue ALL IN curEInbox
						GO l_nRecNo IN curEInbox
					ELSE
						REPLACE curEInbox.ei_mark WITH NOT curEInbox.ei_mark IN curEInbox
					ENDIF
				ENDIF
		ENDCASE
		
		RETURN .T.
	ENDPROC

	PROCEDURE onmarkall
		this.OnMark(.T.)
	ENDPROC

	PROCEDURE onpreview
		LOCAL l_lSentMessage, l_nCursorRecNo, l_lReMark
		
		DO CASE
			CASE this.nFolderValue = 2
				l_nCursorRecNo = RECNO("curESent")
				l_lSentMessage = .T.
				DO FORM "forms\ViewAttachments" WITH curESent.es_esid, "VIEW", l_lSentMessage
				l_lReMark = .T.
				this.refreshgrid("", l_lReMark)
		
				GO l_nCursorRecNo IN "curESent"
			CASE this.nFolderValue = 3
				l_nCursorRecNo = RECNO("curELinked")
				l_lSentMessage = .F.
				DO FORM "forms\ViewAttachments" WITH curELinked.ei_eiid, "VIEW", l_lSentMessage
				l_lReMark = .T.
				this.refreshgrid("", l_lReMark)
		
				GO l_nCursorRecNo IN "curELinked"
			OTHERWISE
				l_nCursorRecNo = RECNO("curEInbox")
				l_lSentMessage = .F.
				DO FORM "forms\ViewAttachments" WITH curEInbox.ei_eiid, "VIEW", l_lSentMessage
				l_lReMark = .T.
				this.refreshgrid("", l_lReMark)
		
				GO l_nCursorRecNo IN "curEInbox"
		ENDCASE
	ENDPROC

	PROCEDURE onprint
		LOCAL l_nMessageID, l_nOldArea, l_nRecNo
		LOCAL l_cFrx, l_cLangdbfm
		l_nOldArea = SELECT()
		l_nRecNo = RECNO()
		
		DO CASE
			CASE this.nFolderValue = 2 && sent
				l_nMessageID = curESent.es_esid
				SELECT es_datime AS datetime, es_body AS msgbody, ;
						es_subject AS subject, ;
						thisform.getemail(l_nMessageID) AS sender, ;
						thisform.getdispname(l_nMessageID) AS dispname, ;
						.T. AS sent ;
						FROM esent WHERE es_esid=l_nMessageID;
						INTO CURSOR Query READWRITE
			OTHERWISE && linked and inbox
				IF this.nFolderValue = 3
					l_nMessageID = curELinked.ei_eiid
				ELSE
					l_nMessageID = curEInbox.ei_eiid
				ENDIF
				SELECT ei_datime AS datetime, ei_body AS msgbody, ;
						ei_subject AS subject, ei_sender AS sender, ;
						ei_disname AS dispname, .F. AS sent ;
						FROM einbox WHERE ei_eiid = l_nMessageID;
						INTO CURSOR Query READWRITE
		ENDCASE
		
		IF RECCOUNT("Query") > 0
			g_Rptlngnr = g_Langnum
			g_Rptlng = g_Language
			l_cFrx = gcReportdir+"_emailms.FRX"
			l_cLangdbf = STRTRAN(UPPER(l_cFrx), '.FRX', '.DBF')
			If FILE(l_cLangdbf)
				USE Shared Noupdate (l_cLangdbf) ALIAS RepText IN 0
			ENDIF
		
			SELECT Query
			REPORT FORM (l_cFrx) TO PRINTER PROMPT NOCONSOLE FOR RECNO() = 1
		
			IF USED('RepText')
				USE IN RepText
			ENDIF
		ENDIF
		
		USE IN Query
		SELECT (l_nOldArea)
		GO l_nRecNo IN (l_nOldArea)
	ENDPROC

	PROCEDURE onreceive
		LOCAL l_nRecNo
		IF this.nFolderValue <> 1
			this.onfolderchange("A1")
		ENDIF
		SELECT curEInbox
		l_nRecNo = RECNO()
		WAIT WINDOW NOWAIT GetLangText("COMMON", "T_PLEASEWAIT")
		IF NOT this.oEmail.ReceiveMsg()
			= alert(GetLangText("EMBROWS","TXT_OPERATION_UNSUCCESSFULL"))
		ENDIF
		WAIT CLEAR
		GO l_nRecNo IN curEInbox
		this.RefreshGrid()
		
	ENDPROC

	PROCEDURE onreply
		DO CASE
			CASE this.nFolderValue = 1
				IF this.lSendingEMail
					this.lSendingEMail = .F.
				ENDIF
				IF EMPTY(curEInbox.ei_eiid)
					RETURN .T.
				ENDIF
		
				IF curEInbox.ei_status = 1
					this.lSendingEMail = .T.
					this.OnAddress()
					RETURN .T.
				ENDIF
		
				IF SEEK(curEInbox.ei_eiid,"einbox","tag1") AND SEEK(curEInbox.ei_eiid, "einboxsn", "tag1")
					LOCAL l_lSuccess
					l_lSuccess = .F.
					DO FORM forms\emailsend.scx WITH "REPLY", einboxsn.eb_addrid, this, einbox.ei_eiid TO l_lSuccess
					IF l_lSuccess AND einbox.ei_status = 3
						DO einbox_status_change IN procemail WITH einbox.ei_eiid, 4
					ENDIF
				ENDIF
				this.refreshgrid()
			CASE this.nFolderValue = 3
				IF SEEK(curELinked.ei_eiid,"einbox","tag1") AND SEEK(curELinked.ei_eiid, "einboxsn", "tag1")
					DO FORM forms\emailsend.scx WITH "REPLY", einboxsn.eb_addrid, this, einbox.ei_eiid TO l_lSuccess
				ENDIF
				this.refreshgrid()
		ENDCASE
		
		RETURN .T.
	ENDPROC

	PROCEDURE onselectedaddress
		LPARAMETERS lp_nAddrId
		
		IF SEEK(curEInbox.ei_eiid, "einbox", "tag1")
			DO LinkOneAddress IN procemail WITH einbox.ei_eiid, lp_nAddrId
			IF NOT this.lSendingEMail
				DO einbox_status_change IN procemail WITH einbox.ei_eiid, 2
				REPLACE ei_status WITH 2 IN curEInbox
			ELSE
				this.lSendingEMail = .F.
				DO einbox_status_change IN procemail WITH einbox.ei_eiid, 3
				REPLACE ei_status WITH 3 IN curEInbox
				this.onreply()
			ENDIF
		ENDIF
		
		RETURN .T.
	ENDPROC

	PROCEDURE printmessage
	ENDPROC

	PROCEDURE QueryUnload
		this.OnClose()
		NODEFAULT
	ENDPROC

	PROCEDURE refreshgrid
		LPARAMETERS lp_cFilter, lp_lReMark
		LOCAL l_cWhere, l_nRecno, l_cLink, l_lSent
		LOCAL ARRAY l_aSelectedMessageID(1)
		
		this.edtMessageText.SetFocus()
		DO CASE
			CASE this.nFolderValue = 2
				l_nRecno = RECNO("curESent")
				IF EMPTY(lp_cFilter)
					lp_cFilter = ".T."
				ENDIF
				l_lSent = .T.
				SELECT *, thisform.getemail(es_esid) AS es_email, ;
						thisform.getdispname(es_esid) AS es_disname, ;
						thisform.GetStatusText("esent", es_status) AS es_stadesc, ;
						.F. AS es_mark, ;
						this.CheckattAchmentsText(es_esid,l_lSent) AS es_attachment ;
						FROM esent ;
						WHERE NOT es_deleted AND &lp_cFilter ;
						ORDER BY es_datime ;
						INTO CURSOR curTempESent READWRITE
				SELECT curESent
				IF lp_lReMark
					SELECT es_esid FROM curESent WHERE es_mark INTO ARRAY l_aSelectedMessageID
				ENDIF
				ZAP
				APPEND FROM DBF("curTempESent")
				USE IN curTempESent
				
				IF lp_lReMark
					IF TYPE("l_aSelectedMessageID(1)") = "N"
						FOR l_i = 1 TO ALEN(l_aSelectedMessageID,1)
							REPLACE es_mark WITH .T. for curESent.es_esid = l_aSelectedMessageID(l_i)
						ENDFOR
					ENDIF
				ENDIF
		
				IF l_nRecno > RECCOUNT("curESent")
					l_nRecno = RECCOUNT("curESent")
				ENDIF
				GO l_nRecno IN curESent
				this.grdSent.nRecno = l_nRecno
				this.grdSent.SetFocus()
			CASE this.nFolderValue = 3
				l_nRecno = RECNO("curELinked")
				IF EMPTY(lp_cFilter)
					lp_cFilter = ".T."
				ENDIF
				ZAP IN curLink
				l_lSent = .F.
				SELECT *, thisform.GetStatusText("einbox",ei_status) AS ei_stadesc, ;
						REPLICATE(" ",5) AS ei_link, ;
						.F. AS ei_mark, ;
						this.CheckattAchmentsText(ei_eiid,l_lSent) AS ei_attachment ;
						FROM einbox ;
						WHERE NOT ei_deleted AND INLIST(ei_status, 2, 4) AND &lp_cFilter ;
						ORDER BY ei_datime ;
						INTO CURSOR curTempELinked READWRITE
				SCAN
					l_cLink = thisform.fillCurLink(ei_eiid, "", "grdLinked")
					REPLACE ei_link WITH l_cLink
				ENDSCAN
				SELECT curELinked
				IF lp_lReMark
					SELECT ei_eiid FROM curELinked WHERE ei_mark INTO ARRAY l_aSelectedMessageID
				ENDIF
				ZAP
				APPEND FROM DBF("curTempELinked")
				USE IN curTempELinked
		
				IF lp_lReMark
					IF TYPE("l_aSelectedMessageID(1)") = "N"
						FOR l_i = 1 TO ALEN(l_aSelectedMessageID,1)
							REPLACE ei_mark WITH .T. FOR curELinked.ei_eiid = l_aSelectedMessageID(l_i)
						ENDFOR
					ENDIF
				ENDIF
		
				IF l_nRecno > RECCOUNT("curELinked")
					l_nRecno = RECCOUNT("curELinked")
				ENDIF
				GO l_nRecno IN curELinked
				this.grdLinked.nRecno = l_nRecno
				this.grdLinked.SetFocus()
			OTHERWISE
				l_nRecno = RECNO("curEInbox")
				ZAP IN curLink
				l_lSent = .F.
				SELECT *, thisform.GetStatusText("einbox",ei_status) AS ei_stadesc, ;
						REPLICATE(" ",5) AS ei_link, ;
						.F. AS ei_mark, ;
						this.CheckattAchmentsText(ei_eiid,l_lSent) AS ei_attachment ;
						FROM einbox ;
						WHERE NOT ei_deleted AND INLIST(ei_status, 1, 3) ;
						ORDER BY ei_datime ;
						INTO CURSOR curTempEInbox READWRITE
				SCAN
					l_cLink = thisform.fillCurLink(ei_eiid, ei_sender)
					REPLACE ei_link WITH l_cLink
				ENDSCAN
				SELECT curEInbox
				IF lp_lReMark
					SELECT ei_eiid FROM curEInbox WHERE ei_mark INTO ARRAY l_aSelectedMessageID
				ENDIF
				ZAP
				APPEND FROM DBF("curTempEInbox")
				USE IN curTempEInbox
		
				IF lp_lReMark
					IF TYPE("l_aSelectedMessageID(1)") = "N"
						FOR l_i = 1 TO ALEN(l_aSelectedMessageID,1)
							REPLACE ei_mark WITH .T. FOR curEInbox.ei_eiid = l_aSelectedMessageID(l_i)
						ENDFOR
					ENDIF
				ENDIF
		
				IF l_nRecno > RECCOUNT("curEInbox")
					l_nRecno = RECCOUNT("curEInbox")
				ENDIF
				GO l_nRecno IN curEInbox
				this.grdInbox.nRecno = l_nRecno
				this.grdInbox.SetFocus()
		ENDCASE
		
		this.edtMessageText.Refresh()
		
		RETURN .T.
	ENDPROC

	PROCEDURE refreshselectedrecord
		IF this.nFolderValue = 1
			this.grdInbox.SetFocus()
			this.edtMessageText.SetFocus()
			this.grdInbox.nRecNo = RECNO("curEInbox")
			this.grdInbox.SetFocus()
		ELSE
			this.grdSent.SetFocus()
			this.edtMessageText.SetFocus()
			this.grdSent.nRecNo = RECNO("curESent")
			this.grdSent.SetFocus()
		ENDIF
		RETURN .T.
	ENDPROC

	PROCEDURE refreshtree
		LPARAMETERS lp_cKey
		IF EMPTY(lp_cKey)
			lp_cKey = "A"+ALLTRIM(STR(this.nfoldervalue))
		ENDIF
		LOCAL loNode, lcKey, l_nSelect
		l_nSelect = SELECT()
		this.LockScreen = .T.
		this.tOleFolders.Nodes.Clear()
		
		this.tOleFolders.Nodes.Add( , , "A1", GetLangText("EMBROWS","TXT_INBOX"), "ClosedFolder", "OpenedFolder")
		
		this.tOleFolders.Nodes.Add( , , "A2", GetLangText("EMBROWS","TXT_SENT"), "ClosedFolder", "OpenedFolder")
		loNode = this.tOleFolders.Nodes.Item("A2")
		SELECT PADR(YEAR(es_datime),4) AS es_year ;
				FROM esent WHERE NOT es_deleted AND NOT EMPTY(es_datime) GROUP BY es_year INTO CURSOR curY
		IF RECCOUNT()>0
			SCAN
				lcKey = loNode.Key + "_" + es_year
				this.tOleFolders.Nodes.Add(loNode.Key, 4, lcKey, es_year, "ClosedFolder", "OpenedFolder")
			ENDSCAN
		ENDIF
		USE
		SELECT STR(YEAR(es_datime),4)+PADL(MONTH(es_datime),2,"0") AS es_monthyear, ;
				PADL(MONTH(es_datime),2,"0") AS es_month, ;
				PADR(MyCMonth(MONTH(es_datime)),10) as es_descrmonth, ;
				PADR(YEAR(es_datime),4) AS es_year ;
				FROM esent WHERE NOT es_deleted AND NOT EMPTY(es_datime) GROUP BY es_monthyear INTO CURSOR curMY
		IF RECCOUNT()>0
			SCAN
				loNode = this.tOleFolders.Nodes.Item("A2_" + es_year)
				lcKey = loNode.Key + es_month
				this.tOleFolders.Nodes.Add(loNode.Key, 4, lcKey, TRIM(es_descrmonth), "ClosedFolder", "OpenedFolder")
			ENDSCAN
		ENDIF
		USE
		
		this.tOleFolders.Nodes.Add( , , "A3", GetLangText("EMBROWS","TXT_DISCARDED"), "ClosedFolder", "OpenedFolder")
		loNode = this.tOleFolders.Nodes.Item("A3")
		SELECT PADR(YEAR(ei_datime),4) AS ei_year ;
				FROM einbox WHERE NOT ei_deleted AND NOT EMPTY(ei_datime) AND INLIST(ei_status, 2, 4) ;
				GROUP BY ei_year INTO CURSOR curY
		IF RECCOUNT()>0
			SCAN
				lcKey = loNode.Key + "_" + ei_year
				this.tOleFolders.Nodes.Add(loNode.Key, 4, lcKey, ei_year, "ClosedFolder", "OpenedFolder")
			ENDSCAN
		ENDIF
		USE
		SELECT STR(YEAR(ei_datime),4)+PADL(MONTH(ei_datime),2,"0") AS ei_monthyear, ;
				PADL(MONTH(ei_datime),2,"0") AS ei_month, ;
				PADR(MyCMonth(MONTH(ei_datime)),10) as ei_descrmonth, ;
				PADR(YEAR(ei_datime),4) AS ei_year ;
				FROM einbox WHERE NOT ei_deleted AND NOT EMPTY(ei_datime) AND INLIST(ei_status, 2, 4) ;
				GROUP BY ei_monthyear INTO CURSOR curMY
		IF RECCOUNT()>0
			SCAN
				loNode = this.tOleFolders.Nodes.Item("A3_" + ei_year)
				lcKey = loNode.Key + ei_month
				this.tOleFolders.Nodes.Add(loNode.Key, 4, lcKey, TRIM(ei_descrmonth), "ClosedFolder", "OpenedFolder")
			ENDSCAN
		ENDIF
		USE
		
		loNode = this.tOleFolders.Nodes.Item(lp_cKey)
		*loNode.EnsureVisible()
		loNode.Selected = .T.
		this.LockScreen = .F.
		this.tOleFolders.SetFocus()
		SELECT (l_nSelect)
		RETURN .T.
	ENDPROC

	PROCEDURE replaceemail
		LPARAMETERS lp_nAddrId
		LOCAL l_cEMail
		l_cEMail = curEInbox.ei_sender
		SELECT curReplaceEMail
		SCAN ALL FOR NOT EMPTY(rem_mark)
			IF EMPTY(rem_apid)
				IF SEEK(lp_nAddrId,"address","TAG1")
					REPLACE address.ad_email WITH l_cEMail IN address
				ENDIF
			ELSE
				IF SEEK(rem_apid,"apartner","TAG3")
					REPLACE apartner.ap_email WITH l_cEMail IN apartner
				ENDIF
			ENDIF
		ENDSCAN
	ENDPROC

	PROCEDURE grdInbox.AfterRowColChange
		LPARAMETERS nColIndex
		LOCAL l_cText
		
		l_cText = thisform.GetToolTipText(curEInbox.ei_eiid)
		this.ToolTipText = l_cText
		thisform.edtMessageText.Refresh()
		thisform.ActivateToolbar()
	ENDPROC

	PROCEDURE grdInbox.Column4.Header1.DblClick
		IF DESCENDING(1,this.Parent.Parent.RecordSource)
			SET ORDER TO 1 IN (this.Parent.Parent.RecordSource) ASCENDING
		ELSE
			SET ORDER TO 1 IN (this.Parent.Parent.RecordSource) DESCENDING
		ENDIF
		GO TOP IN this.Parent.Parent.RecordSource
		this.Parent.Parent.Refresh()
		RETURN .T.
	ENDPROC

	PROCEDURE grdInbox.Column6.Tchkgrid1.InteractiveChange
		* Overlap Parent Code
	ENDPROC

	PROCEDURE grdInbox.Init
		SELECT *, REPLICATE(" ",20) AS ei_stadesc, ;
				REPLICATE(" ",5) AS ei_link, ;
				.F. AS ei_mark, ;
				SPACE(5) AS ei_attachment ;
				FROM einbox ;
				WHERE .F. ;
				INTO CURSOR curEInbox READWRITE
		INDEX ON ei_datime TAG TAG1
		SET ORDER TO TAG1 DESCENDING
		
		this.RecordSource = [curEInbox]
		this.column1.ControlSource = [curEInbox.ei_disname]
		this.column2.ControlSource = [curEInbox.ei_sender]
		this.column3.ControlSource = [curEInbox.ei_subject]
		this.column4.ControlSource = [curEInbox.ei_datime]
		this.column5.ControlSource = [curEInbox.ei_link]
		this.column6.ControlSource = [curEInbox.ei_mark]
		this.column7.ControlSource = [curEInbox.ei_attachment]
		this.column1.Header1.Caption = GetLangText("EMBROWS","TXT_FROM")
		this.column2.Header1.Caption = GetLangText("EMBROWS","TXT_EMAIL")
		this.column3.Header1.Caption = GetLangText("EMBROWS","TXT_SUBJECT")
		this.column4.Header1.Caption = GetLangText("EMBROWS","TXT_DATE_TIME")
		this.column5.Header1.Caption = GetLangText("EMBROWS","TXT_LINK")
		this.column6.Header1.Caption = GetLangText("EMBROWS","TXT_MARK")
		this.column7.Header1.Caption = GetLangText("EMBROWS","TXT_ATTACHMENT")
		DODEFAULT()
		
		RETURN .T.
	ENDPROC

	PROCEDURE grdLinked.AfterRowColChange
		LPARAMETERS nColIndex
		LOCAL l_cText
		
		l_cText = thisform.GetToolTipText(curELinked.ei_eiid)
		this.ToolTipText = l_cText
		thisform.edtMessageText.Refresh()
		thisform.ActivateToolbar()
	ENDPROC

	PROCEDURE grdLinked.Column4.Header1.DblClick
		IF DESCENDING(1,this.Parent.Parent.RecordSource)
			SET ORDER TO 1 IN (this.Parent.Parent.RecordSource) ASCENDING
		ELSE
			SET ORDER TO 1 IN (this.Parent.Parent.RecordSource) DESCENDING
		ENDIF
		GO TOP IN this.Parent.Parent.RecordSource
		this.Parent.Parent.Refresh()
		RETURN .T.
	ENDPROC

	PROCEDURE grdLinked.Column5.Tchkgrid1.InteractiveChange
		* Overlap Parent Code
	ENDPROC

	PROCEDURE grdLinked.Init
		SELECT *, REPLICATE(" ",20) AS ei_stadesc, ;
				REPLICATE(" ",5) AS ei_link, ;
				.F. AS ei_mark, ;
				SPACE(5) AS ei_attachment ;
				FROM einbox ;
				WHERE .F. ;
				INTO CURSOR curELinked READWRITE
		INDEX ON ei_datime TAG TAG1
		SET ORDER TO TAG1 DESCENDING
		
		this.RecordSource = [curELinked]
		this.column1.ControlSource = [curELinked.ei_disname]
		this.column2.ControlSource = [curELinked.ei_sender]
		this.column3.ControlSource = [curELinked.ei_subject]
		this.column4.ControlSource = [curELinked.ei_datime]
		this.column5.ControlSource = [curELinked.ei_mark]
		this.column6.ControlSource = [curELinked.ei_attachment]
		this.column1.Header1.Caption = GetLangText("EMBROWS","TXT_FROM")
		this.column2.Header1.Caption = GetLangText("EMBROWS","TXT_EMAIL")
		this.column3.Header1.Caption = GetLangText("EMBROWS","TXT_SUBJECT")
		this.column4.Header1.Caption = GetLangText("EMBROWS","TXT_DATE_TIME")
		this.column5.Header1.Caption = GetLangText("EMBROWS","TXT_MARK")
		this.column6.Header1.Caption = GetLangText("EMBROWS","TXT_ATTACHMENT")
		DODEFAULT()
		
		RETURN .T.
	ENDPROC

	PROCEDURE grdSent.AfterRowColChange
		LPARAMETERS nColIndex
		
		thisform.edtMessageText.Refresh()
		thisform.ActivateToolbar()
	ENDPROC

	PROCEDURE grdSent.Column4.Header1.DblClick
		IF DESCENDING(1,this.Parent.Parent.RecordSource)
			SET ORDER TO 1 IN (this.Parent.Parent.RecordSource) ASCENDING
		ELSE
			SET ORDER TO 1 IN (this.Parent.Parent.RecordSource) DESCENDING
		ENDIF
		GO TOP IN this.Parent.Parent.RecordSource
		this.Parent.Parent.Refresh()
		RETURN .T.
	ENDPROC

	PROCEDURE grdSent.Column6.Tchkgrid1.InteractiveChange
		* Overlap Parent Code
	ENDPROC

	PROCEDURE grdSent.Init
		SELECT *, REPLICATE(" ",100) AS es_email, ;
				REPLICATE(" ",120) AS es_disname, ;
				REPLICATE(" ",20) AS es_stadesc, ;
				.F. AS es_mark, ;
				SPACE(5) AS es_attachment ;
				FROM esent ;
				WHERE .F. ;
				INTO CURSOR curESent READWRITE
		
		INDEX ON es_datime TAG TAG1
		SET ORDER TO TAG1 DESCENDING
		
		this.RecordSource = [curESent]
		this.column1.ControlSource = [curESent.es_disname]
		this.column2.ControlSource = [curESent.es_email]
		this.column3.ControlSource = [curESent.es_subject]
		this.column4.ControlSource = [curESent.es_datime]
		this.column5.ControlSource = [curESent.es_stadesc]
		this.column6.ControlSource = [curESent.es_mark]
		this.column7.ControlSource = [curESent.es_attachment]
		this.column1.Header1.Caption = GetLangText("EMBROWS","TXT_TO")
		this.column2.Header1.Caption = GetLangText("EMBROWS","TXT_EMAIL")
		this.column3.Header1.Caption = GetLangText("EMBROWS","TXT_SUBJECT")
		this.column4.Header1.Caption = GetLangText("EMBROWS","TXT_SENT_DATE_TIME")
		this.column5.Header1.Caption = GetLangText("EMBROWS","TXT_STATUS")
		this.column6.Header1.Caption = GetLangText("EMBROWS","TXT_MARK")
		this.column7.Header1.Caption = GetLangText("EMBROWS","TXT_ATTACHMENT")
		DODEFAULT()
		
		RETURN .T.
	ENDPROC

	PROCEDURE tOleFolders.KeyUp
		*** ActiveX Control Event ***
		LPARAMETERS keycode, shift
		thisform.KeyPress(keycode, shift)
		
		RETURN .T.
	ENDPROC

	PROCEDURE tOleFolders.NodeClick
		*** ActiveX Control Event ***
		LPARAMETERS node
		thisform.OnFolderChange(node.Key)
	ENDPROC

ENDDEFINE
