*--------------------------------------------------------------------------------------------------------------------------------------------------------
* (ES) AUTOGENERADO - ¡¡ATENCIÓN!! - ¡¡NO PENSADO PARA EJECUTAR!! USAR SOLAMENTE PARA INTEGRAR CAMBIOS Y ALMACENAR CON HERRAMIENTAS SCM!!
* (EN) AUTOGENERATED - ATTENTION!! - NOT INTENDED FOR EXECUTION!! USE ONLY FOR MERGING CHANGES AND STORING WITH SCM TOOLS!!
*--------------------------------------------------------------------------------------------------------------------------------------------------------
*< FOXBIN2PRG: Version="1.19" SourceFile="budgetform.scx" /> (Solo para binarios VFP 9 / Only for VFP 9 binaries)
*
*
#INCLUDE "..\include\constdefines.h"

DEFINE CLASS budgetform AS tform OF "..\libs\main.vcx" 
 	*< CLASSDATA: Baseclass="form" Timestamp="" Scale="" Uniqueid="" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="LBType" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="LYear" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="LPeriod" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="LBTypeBig" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="CBBType" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="CBYear" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="CBPeriod" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="CloseCmd" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="BudgetGrid" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="BudgetGrid.Column1.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="BudgetGrid.Column1.Txtgrid1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="BudgetGrid.Column2.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="BudgetGrid.Column2.Txtgrid1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="BudgetGrid.Column3.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="BudgetGrid.Column3.Txtgrid1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chkRevenue" UniqueID="" Timestamp="" />

	*<DefinedPropArrayMethod>
		*m: setrelation
		*m: showbudget
		*m: updatebudgettable
		*m: updatedonerevenue		&& Updates cursor tblDoneRevenue.
		*p: nlastyear
		*p: nlastyearrevenue
	*</DefinedPropArrayMethod>

	Caption = "Form1"
	ControlBox = .T.
	DataSession = 2
	DoCreate = .T.
	doini = .T.
	doiniopencommontables = .T.
	Height = 490
	Icon = ..\bitmap\icons\graph06.ico
	MaxButton = .T.
	MinButton = .F.
	MinHeight = 50
	MinWidth = 40
	Name = "BUDGETFORM"
	nlastyear = 0
	nlastyearrevenue = 0
	Width = 363

	ADD OBJECT 'BudgetGrid' AS grdbase WITH ;
		AllowRowSizing = .F., ;
		ColumnCount = 3, ;
		DeleteMark = .F., ;
		Height = 369, ;
		Left = 4, ;
		Name = "BudgetGrid", ;
		Panel = 1, ;
		p_basecolumncontrol = txtGrid, ;
		RecordSource = "", ;
		ScrollBars = 2, ;
		SplitBar = .F., ;
		TabIndex = 5, ;
		Top = 119, ;
		Visible = .F., ;
		Width = 355, ;
		ZOrderSet = 8, ;
		Column1.BackColor = 224,224,224, ;
		Column1.ControlSource = "", ;
		Column1.Movable = .F., ;
		Column1.Name = "Column1", ;
		Column1.ReadOnly = .T., ;
		Column1.Visible = .F., ;
		Column1.Width = 50, ;
		Column2.BackColor = 224,224,224, ;
		Column2.ControlSource = "", ;
		Column2.Movable = .F., ;
		Column2.Name = "Column2", ;
		Column2.ReadOnly = .T., ;
		Column2.Visible = .F., ;
		Column2.Width = 175, ;
		Column3.Alignment = 1, ;
		Column3.ControlSource = "", ;
		Column3.Movable = .F., ;
		Column3.Name = "Column3", ;
		Column3.Visible = .F., ;
		Column3.Width = 96
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="grid" />

	ADD OBJECT 'BudgetGrid.Column1.Header1' AS header WITH ;
		Caption = "Header1", ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'BudgetGrid.Column1.Txtgrid1' AS txtgrid WITH ;
		BackColor = 224,224,224, ;
		Left = 21, ;
		Name = "Txtgrid1", ;
		Top = 24, ;
		Visible = .F.
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />

	ADD OBJECT 'BudgetGrid.Column2.Header1' AS header WITH ;
		Caption = "Header1", ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'BudgetGrid.Column2.Txtgrid1' AS txtgrid WITH ;
		BackColor = 224,224,224, ;
		Left = 90, ;
		Name = "Txtgrid1", ;
		Top = 24, ;
		Visible = .F.
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />

	ADD OBJECT 'BudgetGrid.Column3.Header1' AS header WITH ;
		Alignment = 1, ;
		Caption = "Header1", ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'BudgetGrid.Column3.Txtgrid1' AS txtgrid WITH ;
		Left = 58, ;
		Name = "Txtgrid1", ;
		Top = 36, ;
		Visible = .F.
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />

	ADD OBJECT 'CBBType' AS tcombobox WITH ;
		Height = 24, ;
		Left = 105, ;
		Name = "CBBType", ;
		Style = 2, ;
		TabIndex = 1, ;
		Top = 3, ;
		Width = 254, ;
		ZOrderSet = 4
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="combobox" />

	ADD OBJECT 'CBPeriod' AS tcombobox WITH ;
		ColumnCount = 2, ;
		ColumnWidths = "30,135", ;
		Height = 24, ;
		Left = 105, ;
		Name = "CBPeriod", ;
		Style = 2, ;
		TabIndex = 3, ;
		Top = 57, ;
		Width = 70, ;
		ZOrderSet = 6
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="combobox" />

	ADD OBJECT 'CBYear' AS tcombobox WITH ;
		Height = 24, ;
		Left = 105, ;
		Name = "CBYear", ;
		Style = 2, ;
		TabIndex = 2, ;
		Top = 30, ;
		Width = 70, ;
		ZOrderSet = 5
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="combobox" />

	ADD OBJECT 'chkRevenue' AS tcheckbox WITH ;
		Alignment = 0, ;
		Caption = "chkRevenue", ;
		Left = 190, ;
		Name = "chkRevenue", ;
		TabIndex = 4, ;
		Top = 34, ;
		Value = .F., ;
		Width = 170
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="checkbox" />

	ADD OBJECT 'CloseCmd' AS tcommandbutton WITH ;
		Cancel = .T., ;
		Caption = "CloseCmd", ;
		Height = 27, ;
		Left = 275, ;
		Name = "CloseCmd", ;
		TabIndex = 6, ;
		Top = 54, ;
		Width = 84, ;
		ZOrderSet = 7
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'LBType' AS tlabel WITH ;
		Caption = "LBType", ;
		Height = 17, ;
		Left = 4, ;
		Name = "LBType", ;
		TabIndex = 7, ;
		Top = 7, ;
		Width = 100, ;
		ZOrderSet = 0
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'LBTypeBig' AS tlabel WITH ;
		BackColor = 128,128,128, ;
		Caption = "LBTypeBig", ;
		FontBold = .T., ;
		FontSize = 16, ;
		ForeColor = 255,255,255, ;
		Height = 29, ;
		Left = 4, ;
		Name = "LBTypeBig", ;
		TabIndex = 10, ;
		Top = 85, ;
		Width = 355, ;
		ZOrderSet = 3
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'LPeriod' AS tlabel WITH ;
		Caption = "LPeriod", ;
		Height = 17, ;
		Left = 4, ;
		Name = "LPeriod", ;
		TabIndex = 9, ;
		Top = 61, ;
		Width = 100, ;
		ZOrderSet = 2
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'LYear' AS tlabel WITH ;
		Caption = "LYear", ;
		Height = 17, ;
		Left = 4, ;
		Name = "LYear", ;
		TabIndex = 8, ;
		Top = 34, ;
		Width = 100, ;
		ZOrderSet = 1
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />
	
	PROCEDURE Destroy
		* On close, commit all pending changes
		this.ocabudget.DoTableUpdate(.T.)
		
		DODEFAULT()
	ENDPROC

	PROCEDURE Init
		DODEFAULT()
		
		this.Caption = ChildTitle(GetLangText("BUDGET", "TW_BUDGET"))
		this.LBType.Caption = GetLangText("BUDGET", "T_TYPE")
		this.LYear.Caption = GetLangText("BUDGET", "T_YEAR")
		this.LPeriod.Caption = GetLangText("BUDGET", "T_PERIOD")
		this.CloseCmd.Caption = GetLangText("COMMON", "TXT_CLOSE")
		this.LBTypeBig.Caption = ""
		*this.BudgetGrid.Column1.Header1.Caption = GetLangText("BUDGET", "T_CODE")
		*this.BudgetGrid.Column2.Header1.Caption = GetLangText("BUDGET", "T_MRKT")
		*this.BudgetGrid.Column3.Header1.Caption = GetLangText("BUDGET", "T_REV")
		
		this.chkRevenue.Caption = GetLangText("BUDGET","TXT_SHOW_ACCOMPLISHED")
		
		this.CBBType.AddItem(GetLangText("BUDGET", "T_RMSMRKT"))
		this.CBBType.AddItem(GetLangText("BUDGET", "T_REVMRKT"))
		this.CBBType.AddItem(GetLangText("BUDGET", "T_REVMAIN"))
		this.CBBType.AddItem(GetLangText("BUDGET", "T_REVSUB"))
		this.CBBType.AddItem(GetLangText("BUDGET", "T_REVART"))
		
		*IF _SCREEN.B2
		*	this.CBBType.AddItem(GetLangText("BUDGET", "T_BASEL2MAINGRP"))
		*	this.CBBType.AddItem(GetLangText("BUDGET", "T_BASEL2SUBGRP"))
		*ENDIF
		
		this.CBYear.AddItem(STR(YEAR(SysDate()) - 1, 4))
		this.CBYear.AddItem(STR(YEAR(SysDate()), 4))
		this.CBYear.AddItem(STR(YEAR(SysDate()) + 1, 4))
		this.CBYear.AddItem(STR(YEAR(SysDate()) + 2, 4))
		this.CBYear.AddItem(STR(YEAR(SysDate()) + 3, 4))
		this.CBYear.Value = STR(YEAR(SysDate()), 4)
		
		DO PeriodsCursorLoad IN ProcBudget WITH VAL(this.CBYear.Value), "tblPeriods"
		GO TOP IN tblPeriods
		this.CBPeriod.RowSourceType = 6
		this.CBPeriod.RowSource = "tblPeriods.pe_cperiod,pe_descrip"
		this.CBPeriod.Value = tblPeriods.pe_cperiod
		
		this.BudgetGrid.RecordSource = [curbudget]
		
		
	ENDPROC

	PROCEDURE KeyPress
		LPARAMETERS nKeyCode, nShiftAltCtrl
		
		IF nKeyCode = 27
			NODEFAULT
			this.closeCmd.Click()
		ENDIF
	ENDPROC

	PROCEDURE Load
		LOCAL ARRAY l_aFields(1)
		
		DODEFAULT()
		
		this.AddProperty("ocapicklist",.NULL.)
		this.AddProperty("ocapicklistgrid",.NULL.)
		this.AddProperty("ocabudget",.NULL.)
		this.AddProperty("ocaperiod",.NULL.)
		this.AddProperty("ocaarticle",.NULL.)
		this.AddProperty("ocaarticlegrid",.NULL.)
		this.AddProperty("ocaorstat",.NULL.)
		this.AddProperty("ocahistors",.NULL.)
		
		this.ocapicklist = CREATEOBJECT("capicklist")
		this.ocapicklist.Alias = "curpicklist"
		this.ocapicklist.cFilterClause = "pl_label IN ('MARKET    ','MAINGROUP ','SUBGROUP  ')"
		this.ocapicklist.lcreateindexes = .T.
		this.ocapicklist.CursorFill()
		
		this.ocapicklistgrid = CREATEOBJECT("capicklist")
		this.ocapicklistgrid.Alias = "picklistgrid"
		this.ocapicklistgrid.cFilterClause = "pl_label IN ('MARKET    ','MAINGROUP ','SUBGROUP  ')"
		this.ocapicklistgrid.lcreateindexes = .T.
		this.ocapicklistgrid.CursorFill()
		
		this.ocabudget = CREATEOBJECT("cabudget")
		this.ocabudget.Alias = "curbudget"
		this.ocabudget.cFilterClause = "0=1"
		this.ocabudget.lcreateindexes = .T.
		this.ocabudget.CursorFill()
		
		this.ocaperiod = CREATEOBJECT("caperiod")
		this.ocaperiod.Alias = "curperiod"
		this.ocaperiod.cFilterClause = "1=1"
		this.ocaperiod.lcreateindexes = .T.
		this.ocaperiod.CursorFill()
		
		this.ocaarticle = CREATEOBJECT("caarticle")
		this.ocaarticle.Alias = "curarticle"
		this.ocaarticle.cFilterClause = "NOT ar_inactiv"
		this.ocaarticle.lcreateindexes = .T.
		this.ocaarticle.CursorFill()
		SET ORDER TO TAG1 IN curarticle
		
		this.ocaarticlegrid = CREATEOBJECT("caarticle")
		this.ocaarticlegrid.Alias = "articlegrid"
		this.ocaarticlegrid.cFilterClause = "NOT ar_inactiv"
		this.ocaarticlegrid.lcreateindexes = .T.
		this.ocaarticlegrid.CursorFill()
		SET ORDER TO TAG1 IN articlegrid
		
		this.ocaorstat = CREATEOBJECT("caorstat")
		this.ocaorstat.Alias = "curorstat"
		this.ocaorstat.cFilterClause = "0=1"
		this.ocaorstat.lcreateindexes = .T.
		this.ocaorstat.CursorFill()
		SET ORDER TO tag1 DESCENDING IN curorstat
		
		this.ocahistors = CREATEOBJECT("cahistors")
		this.ocahistors.Alias = "curhistors"
		this.ocahistors.cFilterClause = "0=1"
		this.ocahistors.lcreateindexes = .T.
		this.ocahistors.CursorFill()
		SET ORDER TO tag1 DESCENDING IN curhistors
		
		= AFIELDS(l_aFields,"curbudget")
		CREATE CURSOR tblDoneRevenue FROM ARRAY l_aFields
		INDEX ON STR(bg_year,4)+STR(bg_period,2)+STR(bg_artinum,4)+ ;
				PADR(UPPER(bg_label),20)+STR(bg_main,1)+PADR(UPPER(bg_market),3)+ ;
				STR(bg_sub,2)+STR(bg_hgnr,2)+STR(bg_sgnr,3) ;
				TAG tag4
		
		RETURN .T.
	ENDPROC

	PROCEDURE QueryUnload
		NODEFAULT
		this.closeCmd.Click()
	ENDPROC

	PROCEDURE setrelation
		do case
		case (thisform.CBBType.ListIndex = 1) OR (thisform.CBBType.ListIndex = 2)
			set order to TAG4 in curpicklist
			Set relation to "MARKET    " + bg_market into curpicklist in curbudget
			SET ORDER TO Tag4 IN PickListGrid
			SET RELATION TO "MARKET    " + bg_market INTO PickListGrid IN curbudget ADDITIVE
		case thisform.CBBType.ListIndex = 3
			Set order to TAG3 in curpicklist
			Set relation to "MAINGROUP " + Str(bg_main, 3) into curpicklist in curbudget
			SET ORDER TO Tag3 IN PickListGrid
			SET RELATION TO "MAINGROUP " + STR(bg_main,3) INTO PickListGrid IN curbudget ADDITIVE
		case thisform.CBBType.ListIndex = 4
			Set order to TAG3 in curpicklist
			Set relation to "SUBGROUP  " + Str(bg_sub, 3) into curpicklist in curbudget
			SET ORDER TO Tag3 IN PickListGrid
			SET RELATION TO "SUBGROUP  " + STR(bg_sub,3) INTO PickListGrid IN curbudget ADDITIVE
		case thisform.CBBType.ListIndex = 5
			Set relation to bg_artinum into curarticle in curbudget
			SET RELATION TO bg_artinum INTO ArticleGrid IN curbudget
		case thisform.CBBType.ListIndex = 6
			Set relation to bg_hgnr into hauptgrp in curbudget
		case thisform.CBBType.ListIndex = 7
			Set relation to bg_sgnr into subgrp in curbudget
		endcase
		SET RELATION TO STR(bg_year,4)+STR(bg_period,2)+STR(bg_artinum,4)+ ;
				PADR(UPPER(bg_label),20)+STR(bg_main,1)+PADR(UPPER(bg_market),3)+ ;
				STR(bg_sub,2)+STR(bg_hgnr,2)+STR(bg_sgnr,3) ;
				INTO tblDoneRevenue ;
				IN curbudget ADDITIVE
		
		RETURN .T.
	ENDPROC

	PROCEDURE showbudget
		IF EMPTY(this.CBBType.Value) OR EMPTY(this.CBYear.Value) OR EMPTY(this.CBPeriod.Value)
			RETURN
		ENDIF
		
		this.BudgetGrid.Visible = .T.
		
		Local m.CMacro, m.refActivCtrl, m.IsPast, m.SelectedYear
		
		* User is not allowed to change budget for past year.
		m.IsPast = YEAR(tblperiods.pe_fromdat)<YEAR(sysdate())
		
		m.SelectedYear = INT(VAL(this.CBYear.Value))
		IF m.SelectedYear <> this.nlastyear
			* Refresh cursor adapter. We must restore grid settings, because cursoradapter closes curbudget cursor,
			* which is source of grid.
			this.nlastyear = m.SelectedYear
			this.ocabudget.cFilterClause = "bg_year = " + sqlcnv(this.nlastyear,.T.)
			this.budgetGrid.Visible = .F.
			this.budgetGrid.RecordSource = ""
			this.BudgetGrid.Column1.ControlSource = []
			this.BudgetGrid.Column2.ControlSource = []
			this.BudgetGrid.Column3.ControlSource = []
			this.ocabudget.CursorFill()
			this.SetRelation()
			this.BudgetGrid.RecordSource = [curbudget]
			this.budgetGrid.Visible = .T.
		ENDIF
		
		select curbudget
		
		do case
		case this.CBBType.ListIndex = 1
			this.BudgetGrid.Column1.Header1.Caption = GetLangText("BUDGET", "T_CODE")
			this.BudgetGrid.Column2.Header1.Caption = GetLangText("BUDGET", "T_MRKT")
			this.BudgetGrid.Column3.Header1.Caption = GetLangText("BUDGET", "T_RMS")
			this.BudgetGrid.Column1.ControlSource = [bg_market]
			this.BudgetGrid.Column2.ControlSource = [PickListGrid.pl_lang] + g_langnum
			this.BudgetGrid.Column3.ControlSource = [bg_roomnts]
			this.BudgetGrid.Column3.ReadOnly = m.IsPast
			m.CMacro = [(bg_label = "RMNT_PER_MARKET")]
		case this.CBBType.ListIndex = 2
			this.BudgetGrid.Column1.Header1.Caption = GetLangText("BUDGET", "T_CODE")
			this.BudgetGrid.Column2.Header1.Caption = GetLangText("BUDGET", "T_MRKT")
			this.BudgetGrid.Column3.Header1.Caption = GetLangText("BUDGET", "T_REV")
			this.BudgetGrid.Column1.ControlSource = [bg_market]
			this.BudgetGrid.Column2.ControlSource = [PickListGrid.pl_lang] + g_langnum
			this.BudgetGrid.Column3.ControlSource = [bg_revenue]
			this.BudgetGrid.Column3.ReadOnly = m.IsPast
			m.CMacro = [(bg_label = "REV_PER_MARKET")]
		case this.CBBType.ListIndex = 3
			this.BudgetGrid.Column1.Header1.Caption = GetLangText("BUDGET", "T_NR")
			this.BudgetGrid.Column2.Header1.Caption = GetLangText("BUDGET", "T_MAINGRP")
			this.BudgetGrid.Column3.Header1.Caption = GetLangText("BUDGET", "T_REV")
			this.BudgetGrid.Column1.ControlSource = [bg_main]
			this.BudgetGrid.Column2.ControlSource = [PickListGrid.pl_lang] + g_langnum
			this.BudgetGrid.Column3.ControlSource = [bg_revenue]
			this.BudgetGrid.Column3.ReadOnly = m.IsPast
			m.CMacro = [(bg_label = "REV_PER_MAINGROUP")]
		case this.CBBType.ListIndex = 4
			this.BudgetGrid.Column1.Header1.Caption = GetLangText("BUDGET", "T_NR")
			this.BudgetGrid.Column2.Header1.Caption = GetLangText("BUDGET", "T_SUBGRP")
			this.BudgetGrid.Column3.Header1.Caption = GetLangText("BUDGET", "T_REV")
			this.BudgetGrid.Column1.ControlSource = [bg_sub]
			this.BudgetGrid.Column2.ControlSource = [PickListGrid.pl_lang] + g_langnum
			this.BudgetGrid.Column3.ControlSource = [bg_revenue]
			this.BudgetGrid.Column3.ReadOnly = m.IsPast
			m.CMacro = [(bg_label = "REV_PER_SUBGROUP")]
		case this.CBBType.ListIndex = 5
			this.BudgetGrid.Column1.Header1.Caption = GetLangText("BUDGET", "T_NR")
			this.BudgetGrid.Column2.Header1.Caption = GetLangText("BUDGET", "T_ART")
			this.BudgetGrid.Column3.Header1.Caption = GetLangText("BUDGET", "T_REV")
			this.BudgetGrid.Column1.ControlSource = [bg_artinum]
			this.BudgetGrid.Column2.ControlSource = [ArticleGrid.ar_lang] + g_langnum
			this.BudgetGrid.Column3.ControlSource = [bg_revenue]
			this.BudgetGrid.Column3.ReadOnly = m.IsPast
			m.CMacro = [(bg_label = "REV_PER_ARTICLE")]
		case this.CBBType.ListIndex = 6
			this.BudgetGrid.Column1.Header1.Caption = GetLangText("BUDGET", "T_NR")
			this.BudgetGrid.Column2.Header1.Caption = GetLangText("BUDGET", "T_BASEL2MAINGRP")
			this.BudgetGrid.Column3.Header1.Caption = GetLangText("BUDGET", "T_REV")
			this.BudgetGrid.Column1.ControlSource = [bg_hgnr]
			this.BudgetGrid.Column2.ControlSource = [hauptgrp.hg_text]
			this.BudgetGrid.Column3.ControlSource = [bg_revenue]
			this.BudgetGrid.Column3.ReadOnly = m.IsPast
			m.CMacro = [(bg_label = "REV_PER_HGNR_BASELII")]
		case this.CBBType.ListIndex = 7
			this.BudgetGrid.Column1.Header1.Caption = GetLangText("BUDGET", "T_NR")
			this.BudgetGrid.Column2.Header1.Caption = GetLangText("BUDGET", "T_BASEL2SUBGRP")
			this.BudgetGrid.Column3.Header1.Caption = GetLangText("BUDGET", "T_REV")
			this.BudgetGrid.Column1.ControlSource = [bg_sgnr]
			this.BudgetGrid.Column2.ControlSource = [subgrp.sg_text]
			this.BudgetGrid.Column3.ControlSource = [bg_revenue]
			this.BudgetGrid.Column3.ReadOnly = m.IsPast
			m.CMacro = [(bg_label = "REV_PER_SGNR_BASELII")]
		endcase
		
		m.CMacro = CMacro + [AND (bg_year = ] + this.CBYear.Value + [)]
		m.CMacro = CMacro + [AND (bg_period = ] + this.CBPeriod.Value + [)]
		
		this.UpdateBudgetTable(CMacro, Int(Val(this.CBYear.Value)), Int(Val(this.CBPeriod.Value)))
		IF this.chkRevenue.Value
			IF this.BudgetGrid.ColumnCount == 3
				this.BudgetGrid.ColumnCount = 4
				this.BudgetGrid.Column4.ReadOnly = .T.
				this.BudgetGrid.Column4.BackColor = RGB(224,224,224)
				this.BudgetGrid.Column4.Header1.Alignment = 1
				this.BudgetGrid.Column4.cw = this.BudgetGrid.Column3.cw
				this.BudgetGrid.Column4.Width = this.BudgetGrid.Column3.Width
				this.BudgetGrid.w = this.BudgetGrid.w + this.BudgetGrid.Column4.cw
				this.BudgetGrid.Width = this.BudgetGrid.Width + this.BudgetGrid.Column4.Width
				this.w = this.w + this.BudgetGrid.Column4.cw
				this.Width = this.Width + this.BudgetGrid.Column4.Width
			ENDIF
			IF this.BudgetGrid.ColumnCount == 4
				this.BudgetGrid.Column4.Header1.Caption = GetLangText("BUDGET","TH_PREV_YEAR") + ;
						"(" + ALLTRIM(STR(VAL(this.CBYear.Value)-1)) + ")"
			ENDIF
			this.UpdateDoneRevenue(CMacro, INT(VAL(this.CBYear.Value)), ;
					INT(VAL(this.CBPeriod.Value)))
			IF this.CBBType.ListIndex == 1
				this.BudgetGrid.Column4.ControlSource = [tblDoneRevenue.bg_roomnts]
			ELSE
				this.BudgetGrid.Column4.ControlSource = [tblDoneRevenue.bg_revenue]
			ENDIF
		ELSE
			IF this.BudgetGrid.ColumnCount == 4
				this.BudgetGrid.w = this.BudgetGrid.w - this.BudgetGrid.Column4.cw
				this.BudgetGrid.Width = this.BudgetGrid.Width - this.BudgetGrid.Column4.Width
				this.w = this.w - this.BudgetGrid.Column4.cw
				this.Width = this.Width - this.BudgetGrid.Column4.Width
				this.BudgetGrid.ColumnCount = 3
			ENDIF
		ENDIF
		this.LBTypeBig.w = this.BudgetGrid.w
		this.LBTypeBig.Width = this.BudgetGrid.Width
		
		set filter to &CMacro
		goto top
		
		m.refActivCtrl = .NULL.
		IF TYPE("this.ActiveControl") <> "U"
			m.refActivCtrl = this.ActiveControl
		ENDIF
		this.BudgetGrid.SetFocus()
		IF NOT ISNULL(m.refActivCtrl)
			m.refActivCtrl.SetFocus()
		ENDIF
	ENDPROC

	PROCEDURE Unload
		this.Visible = .F.
		ChildTitle("")
	ENDPROC

	PROCEDURE updatebudgettable
		LParameters m.BgFilter, m.BgYear, m.BgPeriod
		
		Local m.lOldEnvr, m.BgLabel
		
		m.lOldEnvr = NewObject("CEnvr")
		m.lOldEnvr.AddTable([curbudget], [BudgetTable])
		
		do case
		case (this.CBBType.ListIndex = 1) OR (this.CBBType.ListIndex = 2)
			if this.CBBType.ListIndex = 1
				m.BgLabel = "RMNT_PER_MARKET"
			else
				m.BgLabel = "REV_PER_MARKET"
			endif
			m.lOldEnvr.AddTable([curpicklist], [PickListTable])
			m.lOldEnvr.Save()
		
			Select curpicklist
			Set order to TAG4
			Set Filter to pl_label = "MARKET"
		
			Select curbudget
			set filter to &BgFilter
			goto top
		
			scan
				seek "MARKET    " + curbudget.bg_market in curpicklist
				if NOT Found([curpicklist])
					Delete
				endif
			endscan
		
			goto top in curpicklist
		
			do while NOT Eof([curpicklist])
				goto top
				Locate for bg_market = curpicklist.pl_charcod
				if NOT Found()
					Insert into curbudget (bg_label, bg_market, bg_period, bg_year);
									 Values (m.BgLabel, curpicklist.pl_charcod, m.BgPeriod, m.BgYear)
				endif
				skip 1 in curpicklist
			enddo
			
		case this.CBBType.ListIndex = 3
			m.BgLabel = "REV_PER_MAINGROUP"
			m.lOldEnvr.AddTable([curpicklist], [PickListTable])
			m.lOldEnvr.Save()
		
			Select curpicklist
			Set order to TAG3
			Set Filter to pl_label = "MAINGROUP"
		
			Select curbudget
			set filter to &BgFilter
			goto top
		
			scan
				seek "MAINGROUP " + STR(curbudget.bg_main, 3) in curpicklist
				if NOT Found([curpicklist])
					Delete
				endif
			endscan
		
			goto top in curpicklist
		
			do while NOT Eof([curpicklist])
				goto top
				Locate for bg_main = curpicklist.pl_numcod
				if NOT Found()
					Insert into curbudget (bg_label, bg_main, bg_period, bg_year);
									 Values (m.BgLabel, curpicklist.pl_numcod, m.BgPeriod, m.BgYear)
				endif
				skip 1 in curpicklist
			enddo
		
		case this.CBBType.ListIndex = 4
			m.BgLabel = "REV_PER_SUBGROUP"
			m.lOldEnvr.AddTable([curpicklist], [PickListTable])
			m.lOldEnvr.Save()
		
			Select curpicklist
			Set order to TAG3
			Set Filter to pl_label = "SUBGROUP"
		
			Select curbudget
			set filter to &BgFilter
			goto top
		
			scan
				seek "SUBGROUP  " + STR(curbudget.bg_sub, 3) in curpicklist
				if NOT Found([curpicklist])
					Delete
				endif
			endscan
		
			goto top in curpicklist
		
			do while NOT Eof([curpicklist])
				goto top
				Locate for bg_sub = curpicklist.pl_numcod
				if NOT Found()
					Insert into curbudget (bg_label, bg_sub, bg_period, bg_year);
									 Values (m.BgLabel, curpicklist.pl_numcod, m.BgPeriod, m.BgYear)
				endif
				skip 1 in curpicklist
			enddo
		
		case this.CBBType.ListIndex = 5
			m.BgLabel = "REV_PER_ARTICLE"
			m.lOldEnvr.AddTable([curarticle], [ArticleTable])
			m.lOldEnvr.Save()
		
			Select curarticle
			Set order to TAG1
		
			Select curbudget
			set filter to &BgFilter
			goto top
		
			scan
				seek curbudget.bg_artinum in curarticle
				if NOT Found([curarticle])
					Delete
				endif
			endscan
		
			goto top in curarticle
		
			do while NOT Eof([curarticle])
				goto top
				Locate for bg_artinum = curarticle.ar_artinum
				if NOT Found()
					Insert into curbudget (bg_label, bg_artinum, bg_period, bg_year);
									 Values (m.BgLabel, curarticle.ar_artinum, m.BgPeriod, m.BgYear)
				endif
				skip 1 in curarticle
			enddo
		case this.CBBType.ListIndex = 6
			m.BgLabel = "REV_PER_HGNR_BASELII"
			m.lOldEnvr.Save()
				
			Select curbudget
			set filter to &BgFilter
			goto top
		
			scan
				seek curbudget.bg_hgnr in hauptgrp
				if NOT Found([hauptgrp])
					Delete
				endif
			endscan
		
			goto top in hauptgrp
		
			do while NOT Eof([hauptgrp])
				goto top
				Locate for bg_hgnr = hauptgrp.hg_nummer
				if NOT Found()
					Insert into curbudget (bg_label, bg_hgnr, bg_period, bg_year);
									 Values (m.BgLabel, hauptgrp.hg_nummer, m.BgPeriod, m.BgYear)
				endif
				skip 1 in hauptgrp
			enddo
		
		case this.CBBType.ListIndex = 7
			m.BgLabel = "REV_PER_SGNR_BASELII"
			m.lOldEnvr.Save()
		
			Select curbudget
			set filter to &BgFilter
			goto top
		
			scan
				seek curbudget.bg_sgnr in subgrp
				if NOT Found([subgrp])
					Delete
				endif
			endscan
		
			goto top in subgrp
		
			do while NOT Eof([subgrp])
				goto top
				Locate for bg_sgnr = subgrp.sg_nummer
				if NOT Found()
					Insert into curbudget (bg_label, bg_sgnr, bg_period, bg_year);
									 Values (m.BgLabel, subgrp.sg_nummer, m.BgPeriod, m.BgYear)
				endif
				skip 1 in subgrp
			enddo
		
		endcase
		
		this.ocabudget.DoTableUpdate(.T.)
		
		m.lOldEnvr.Restore()
		
		release m.lOldEnvr
		
	ENDPROC

	PROCEDURE updatedonerevenue		&& Updates cursor tblDoneRevenue.
		LPARAMETERS lp_cBgFilter, lp_nBgYear, lp_cBgPeriod
		LOCAL l_nArea, l_cBgLabel, l_cBgField, l_cTypeTable, l_cTtField
		LOCAL l_cForClause, l_dFrom, l_dTo, l_dStatFrom, l_dStatTo
		l_nArea = SELECT()
		SELECT tblPeriods
		LOCATE FOR pe_period = lp_cBgPeriod
		IF NOT FOUND()
			SELECT(l_nArea)
			RETURN .F.
		ENDIF
		DO CASE
		 CASE this.CBBType.ListIndex = 1
			l_cBgLabel = "RMNT_PER_MARKET"
			l_cBgField = "bg_market"
			l_cTypeTable = "curpicklist"
			l_cTtField = "curpicklist.pl_charcod"
			l_cForClause = "pl_label = [MARKET]"
		 CASE this.CBBType.ListIndex = 2
			l_cBgLabel = "REV_PER_MARKET"
			l_cBgField = "bg_market"
			l_cTypeTable = "curpicklist"
			l_cTtField = "curpicklist.pl_charcod"
			l_cForClause = "pl_label = [MARKET]"
		 CASE this.CBBType.ListIndex = 3
			l_cBgLabel = "REV_PER_MAINGROUP"
			l_cBgField = "bg_main"
			l_cTypeTable = "curpicklist"
			l_cTtField = "curpicklist.pl_numcod"
			l_cForClause = "pl_label = [MAINGROUP]"
		 CASE this.CBBType.ListIndex = 4
			l_cBgLabel = "REV_PER_SUBGROUP"
			l_cBgField = "bg_sub"
			l_cTypeTable = "curpicklist"
			l_cTtField = "curpicklist.pl_numcod"
			l_cForClause = "pl_label = [SUBGROUP]"
		 CASE this.CBBType.ListIndex = 5
			l_cBgLabel = "REV_PER_ARTICLE"
			l_cBgField = "bg_artinum"
			l_cTypeTable = "curarticle"
			l_cTtField = "curarticle.ar_artinum"
			l_cForClause = ".T."
		ENDCASE
		IF this.nlastyearrevenue <> (lp_nBgYear-1)
			this.nlastyearrevenue = (lp_nBgYear-1)
		
			* Refresh cursor adapter. Get all data for selected year, but only once.
			l_dStatFrom = DATE(this.nlastyearrevenue,1,1)
			l_dStatTo = DATE(this.nlastyearrevenue+1,1,1)-1
			this.ocaorstat.cFilterClause = "or_date BETWEEN " + sqlcnv(l_dStatFrom,.T.) + " AND " + sqlcnv(l_dStatTo,.T.)
			this.ocaorstat.CursorFill()
			SET ORDER TO tag1 DESCENDING IN curorstat
			this.ocahistors.cFilterClause = this.ocaorstat.cFilterClause
			this.ocahistors.CursorFill()
			SET ORDER TO tag1 DESCENDING IN curhistors
		ENDIF
		SELECT tblDoneRevenue
		LOCATE FOR &lp_cBgFilter
		IF NOT FOUND()
			l_dFrom = DATE(lp_nBgYear-1,MONTH(tblPeriods.pe_fromdat),DAY(tblPeriods.pe_fromdat))
			l_dTo = DATE(lp_nBgYear-1,MONTH(tblPeriods.pe_todat),DAY(tblPeriods.pe_todat))
			SELECT(l_cTypeTable)
			SCAN FOR &l_cForClause
				INSERT INTO tblDoneRevenue ;
						(bg_label, &l_cBgField, bg_period, bg_year) ;
						VALUES ;
						(l_cBgLabel, EVALUATE(l_cTtField), lp_cBgPeriod, lp_nBgYear)
				DO BudgetSuggest IN ProcBudget WITH l_cBgLabel, ;
						EVALUATE(l_cTtField), "tblDoneRevenue", l_dFrom, l_dTo
			ENDSCAN
		ENDIF
		SELECT(l_nArea)
	ENDPROC

	PROCEDURE BudgetGrid.Init
		DODEFAULT()
		With this
			.SetAll( 'DynamicForeColor', [], 'COLUMN' )
			.SetAll( 'DynamicBackColor', [], 'COLUMN' )
		Endwith
		RETURN
	ENDPROC

	PROCEDURE CBBType.InteractiveChange
		thisform.LBTypeBig.Caption = this.Value
		
		thisform.SetRelation()
		
		thisform.ShowBudget()
		
		RETURN .T.
	ENDPROC

	PROCEDURE CBPeriod.InteractiveChange
		thisform.ShowBudget()
		
	ENDPROC

	PROCEDURE CBYear.InteractiveChange
		DO PeriodsCursorLoad IN ProcBudget WITH VAL(this.Value), "tblPeriods"
		thisform.CBPeriod.Requery()
		thisform.ShowBudget()
		
	ENDPROC

	PROCEDURE chkRevenue.InteractiveChange
		thisform.ShowBudget()
	ENDPROC

	PROCEDURE CloseCmd.Click
		thisform.Release()
		
	ENDPROC

ENDDEFINE

DEFINE CLASS dataenvironment AS dataenvironment 
 	*< CLASSDATA: Baseclass="dataenvironment" Timestamp="" Scale="" Uniqueid="" ClassIcon="2" />

	DataSource = .NULL.
	Height = 200
	Left = 1
	Name = "Dataenvironment"
	Top = 220
	Width = 520

ENDDEFINE
