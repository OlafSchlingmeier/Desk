*--------------------------------------------------------------------------------------------------------------------------------------------------------
* (ES) AUTOGENERADO - ¡¡ATENCIÓN!! - ¡¡NO PENSADO PARA EJECUTAR!! USAR SOLAMENTE PARA INTEGRAR CAMBIOS Y ALMACENAR CON HERRAMIENTAS SCM!!
* (EN) AUTOGENERATED - ATTENTION!! - NOT INTENDED FOR EXECUTION!! USE ONLY FOR MERGING CHANGES AND STORING WITH SCM TOOLS!!
*--------------------------------------------------------------------------------------------------------------------------------------------------------
*< FOXBIN2PRG: Version="1.19" SourceFile="timeworkhours.scx" /> (Solo para binarios VFP 9 / Only for VFP 9 binaries)
*
*
DEFINE CLASS dataenvironment AS dataenvironment 
 	*< CLASSDATA: Baseclass="dataenvironment" Timestamp="" Scale="" Uniqueid="" ClassIcon="2" />

	DataSource = .NULL.
	Height = 0
	Left = 0
	Name = "Dataenvironment"
	Top = 0
	Width = 0

ENDDEFINE

DEFINE CLASS frmtimeworkhours AS timeplanbase OF "..\libs\cit_bridge.vcx" 
 	*< CLASSDATA: Baseclass="form" Timestamp="" Scale="" Uniqueid="" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="grdTimePlan.Column0.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grdTimePlan.Column0.Text1" UniqueID="" Timestamp="" />

	*<DefinedPropArrayMethod>
		*p: dformdate
		*p: njobnumber
	*</DefinedPropArrayMethod>

	Caption = "frmTimeWorkHours"
	dformdate = {}
	DoCreate = .T.
	formname = TimeWorkHours
	Name = "frmTimeWorkHours"
	njobnumber = 0
	grdTimePlan.Column0.Name = "Column0"
	grdTimePlan.HeaderHeight = 32
	grdTimePlan.Name = "grdTimePlan"

	ADD OBJECT 'grdTimePlan.Column0.Header1' AS header WITH ;
		Caption = "Header1", ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'grdTimePlan.Column0.Text1' AS textbox WITH ;
		BackColor = 255,255,255, ;
		BorderStyle = 0, ;
		ForeColor = 0,0,0, ;
		Margin = 0, ;
		Name = "Text1"
		*< END OBJECT: BaseClass="textbox" />
	
	PROCEDURE Init
		LPARAMETERS lp_cCaption, lp_aProperties
		LOCAL l_dFromDate, l_dToDate, l_nMonth, l_nYear, l_nFirstDay, l_nLastDay
		
		this.oWorkTimeFunc.GetMonthDates(sysdate(), @l_dFromDate, @l_dToDate, @l_nMonth, @l_nYear, @l_nFirstDay, @l_nLastDay)
		this.oWorkTimeFunc.CreateWorkHoursCursor(this.TimePlanCursor)
		this.oWorkTimeFunc.GetWorkHoursData(l_dFromDate, l_dToDate, 0, this.TimePlanCursor)
		
		this.dFormDate = l_dFromDate
		this.nJobNumber = 0
		this.Caption = GetLangText("EMPLOYEE","TXT_WORK_HOURS_FOR") + " " + lp_cCaption
		DODEFAULT(lp_cCaption, @lp_aProperties)
	ENDPROC

	PROCEDURE onedit
		LOCAL l_cCursor
		
		l_cCursor = this.TimePlanCursor
		DO WorkHoursDetailsBrowse IN procaze WITH &l_cCursor..cr_emid, this.dFormDate
		this.Requerygrid()
	ENDPROC

	PROCEDURE onsearch
		LOCAL l_cCursor, l_lSuccess, l_dFromDate, l_nJobNumber
		
		l_cCursor = SYS(2015)
		l_dFromDate = this.dFormDate
		l_nJobNumber = this.nJobNumber
		DO ChangeWorkHourPeriod IN procaze WITH l_lSuccess, l_dFromDate, l_nJobNumber
		IF l_lSuccess
			this.dFormDate = l_dFromDate
			this.nJobNumber = l_nJobNumber
			this.RequeryGrid()
			this.cCaption = ALLTRIM(STR(MONTH(this.dFormDate)))+"/"+ALLTRIM(STR(YEAR(this.dFormDate)))
			this.Caption = GetLangText("EMPLOYEE","TXT_WORK_HOURS_FOR") + " " + this.cCaption
		ENDIF
	ENDPROC

	PROCEDURE opentable
		DODEFAULT()
		OpenFile(,"employeh")
		OpenFile(,"asgempl")
		OpenFile(,"timetype")
		OpenFile(,"workint")
		OpenFile(,"workbrk")
		OpenFile(,"workbrkd")
	ENDPROC

	PROCEDURE requerygrid
		LOCAL l_dToDate, l_nLastDay
		
		this.curTempTimePlan = SYS(2015)
		this.oWorkTimeFunc.CreateWorkHoursCursor(this.curTempTimePlan)
		l_nLastDay = LastDay(this.dFormDate)
		l_dToDate = DATE(YEAR(this.dFormDate), MONTH(this.dFormDate), l_nLastDay)
		this.oWorkTimeFunc.GetWorkHoursData(this.dFormDate, l_dToDate, this.nJobNumber, this.curTempTimePlan)
		
		DODEFAULT()
	ENDPROC

ENDDEFINE
