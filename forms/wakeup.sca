*--------------------------------------------------------------------------------------------------------------------------------------------------------
* (ES) AUTOGENERADO - ¡¡ATENCIÓN!! - ¡¡NO PENSADO PARA EJECUTAR!! USAR SOLAMENTE PARA INTEGRAR CAMBIOS Y ALMACENAR CON HERRAMIENTAS SCM!!
* (EN) AUTOGENERATED - ATTENTION!! - NOT INTENDED FOR EXECUTION!! USE ONLY FOR MERGING CHANGES AND STORING WITH SCM TOOLS!!
*--------------------------------------------------------------------------------------------------------------------------------------------------------
*< FOXBIN2PRG: Version="1.19" SourceFile="wakeup.scx" /> (Solo para binarios VFP 9 / Only for VFP 9 binaries)
*
*
DEFINE CLASS dataenvironment AS dataenvironment 
 	*< CLASSDATA: Baseclass="dataenvironment" Timestamp="" Scale="" Uniqueid="" ClassIcon="2" />

	DataSource = .NULL.
	Height = 0
	Left = 0
	Name = "Dataenvironment"
	Top = 0
	Width = 0

ENDDEFINE

DEFINE CLASS frmwakeup AS tform OF "..\libs\main.vcx" 
 	*< CLASSDATA: Baseclass="form" Timestamp="" Scale="" Uniqueid="" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="lblRoomNum" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblWakeDate" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblWakeTime" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblGuestName" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblArrival" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblDepartureDate" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtWakeTime" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtGuestName" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtArrival" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtDepartureDate" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdOK" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdDelete" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdCancel" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lstWakes" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtWakeDate" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cboRoomName" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblWakeFailReason" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtWakeFailReason" UniqueID="" Timestamp="" />

	*<DefinedPropArrayMethod>
		*m: checkdate
		*m: checktime
		*m: deletewakeup
		*m: disptimes
		*m: okwakeup
		*m: selecteddatetime
		*m: setcontrolsource
		*m: showguestdata
		*p: ldroppeddown
		*p: ltimesempty
	*</DefinedPropArrayMethod>

	Caption = "frmWakeup"
	ControlBox = .T.
	DataSession = 2
	DoCreate = .T.
	Height = 206
	Icon = ..\bitmap\icons\clock06.ico
	MaxButton = .F.
	Name = "frmWakeup"
	Width = 493
	WindowType = 1

	ADD OBJECT 'cboRoomName' AS tcombobox WITH ;
		ColumnCount = 3, ;
		ColumnWidths = "80,50,150", ;
		Format = "!", ;
		Height = 24, ;
		Left = 120, ;
		Name = "cboRoomName", ;
		TabIndex = 1, ;
		Top = 12, ;
		Width = 120
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="combobox" />

	ADD OBJECT 'cmdCancel' AS tcommandbutton WITH ;
		Caption = "cmdCancel", ;
		Left = 396, ;
		Name = "cmdCancel", ;
		TabIndex = 8, ;
		Top = 72
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'cmdDelete' AS tcommandbutton WITH ;
		Caption = "cmdDelete", ;
		Enabled = .F., ;
		Left = 396, ;
		Name = "cmdDelete", ;
		TabIndex = 7, ;
		Top = 42
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'cmdOK' AS tcommandbutton WITH ;
		Caption = "cmdOK", ;
		Left = 396, ;
		Name = "cmdOK", ;
		TabIndex = 6, ;
		Top = 12
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'lblArrival' AS tlabel WITH ;
		AutoSize = .T., ;
		Caption = "lblArrival", ;
		Left = 12, ;
		Name = "lblArrival", ;
		TabIndex = 14, ;
		Top = 120
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'lblDepartureDate' AS tlabel WITH ;
		AutoSize = .T., ;
		Caption = "lblDepartureDate", ;
		Left = 12, ;
		Name = "lblDepartureDate", ;
		TabIndex = 15, ;
		Top = 144
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'lblGuestName' AS tlabel WITH ;
		AutoSize = .T., ;
		Caption = "lblGuestName", ;
		Left = 12, ;
		Name = "lblGuestName", ;
		TabIndex = 13, ;
		Top = 96
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'lblRoomNum' AS tlabel WITH ;
		AutoSize = .T., ;
		Caption = "lblRoomNum", ;
		Left = 12, ;
		Name = "lblRoomNum", ;
		TabIndex = 9, ;
		Top = 12
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'lblWakeDate' AS tlabel WITH ;
		AutoSize = .T., ;
		Caption = "lblWakeDate", ;
		Left = 12, ;
		Name = "lblWakeDate", ;
		TabIndex = 10, ;
		Top = 36
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'lblWakeFailReason' AS tlabel WITH ;
		AutoSize = .T., ;
		Caption = "lblWakeFailReason", ;
		Height = 17, ;
		Left = 12, ;
		Name = "lblWakeFailReason", ;
		TabIndex = 11, ;
		Top = 176, ;
		Width = 110
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'lblWakeTime' AS tlabel WITH ;
		AutoSize = .T., ;
		Caption = "lblWakeTime", ;
		Left = 12, ;
		Name = "lblWakeTime", ;
		TabIndex = 12, ;
		Top = 60
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'lstWakes' AS tlistbox WITH ;
		Height = 156, ;
		Left = 252, ;
		Name = "lstWakes", ;
		TabIndex = 4, ;
		Top = 12, ;
		Width = 132
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="listbox" />

	ADD OBJECT 'txtArrival' AS ttext WITH ;
		Height = 23, ;
		Left = 120, ;
		Name = "txtArrival", ;
		ReadOnly = .T., ;
		TabIndex = 17, ;
		TabStop = .F., ;
		Top = 120, ;
		Width = 120
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtDepartureDate' AS ttext WITH ;
		Height = 23, ;
		Left = 120, ;
		Name = "txtDepartureDate", ;
		ReadOnly = .T., ;
		TabIndex = 18, ;
		TabStop = .F., ;
		Top = 144, ;
		Width = 120
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtGuestName' AS ttext WITH ;
		Height = 23, ;
		Left = 120, ;
		Name = "txtGuestName", ;
		ReadOnly = .T., ;
		TabIndex = 16, ;
		TabStop = .F., ;
		Top = 96, ;
		Width = 120
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtWakeDate' AS tdatectrl WITH ;
		Height = 23, ;
		Left = 120, ;
		Name = "txtWakeDate", ;
		TabIndex = 2, ;
		Top = 36, ;
		Width = 120
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtWakeFailReason' AS ttext WITH ;
		DisabledForeColor = 0,0,0, ;
		Enabled = .F., ;
		Height = 23, ;
		Left = 120, ;
		Name = "txtWakeFailReason", ;
		TabIndex = 5, ;
		Top = 176, ;
		Width = 264
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtWakeTime' AS ttext WITH ;
		Format = "K", ;
		Height = 23, ;
		InputMask = "99:99", ;
		Left = 120, ;
		Name = "txtWakeTime", ;
		TabIndex = 3, ;
		Top = 60, ;
		Width = 120
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />
	
	PROCEDURE Activate
		DO childtitle WITH this.Caption
	ENDPROC

	PROCEDURE assigncaption
		WITH this
			.Caption = GetLangText("WAKEUP","TXT_WAKEUPCAPTION")
			.lblRoomNum.Caption = GetLangText("WAKEUP","TXT_ROOMNUMBER")
			.lblWakeDate.Caption = GetLangText("WAKEUP","TXT_DATES")
			.lblWakeTime.Caption = GetLangText("WAKEUP","TXT_TIMES")
			.lblGuestName.Caption = GetLangText("WAKEUP","TXT_GUESTNAME")
			.lblArrival.Caption = GetLangText("WAKEUP","TXT_ARRIVAL")
			.lblDepartureDate.Caption = GetLangText("WAKEUP","TXT_DEPARTURE")
			.lblWakeFailReason.Caption = GetLangText("WAKEUP","TXT_FAIL_REASON")
			.cmdOK.Caption = GetLangText("COMMON","TXT_OK")
			.cmdDelete.Caption = GetLangText("COMMON","TXT_DELETE")
			.cmdCancel.Caption = GetLangText("TRANSLAT","TXT_EXIT")
			.txtWakeDate.Value = sysdate()
			.txtWakeTime.Value = SUBSTR(TIME(), 1, 5)
		ENDWITH
	ENDPROC

	PROCEDURE checkdate
		LOCAL l_lOk, l_cRoomNumber, l_dDate
		l_cRoomNumber = ALLTRIM(crsrWakeData.rm_roomnum)
		l_dDate = this.txtWakeDate.Value
		l_lOk = .F.
		SELECT reservat
		SET ORDER TO 6
		IF NOT EMPTY(l_cRoomNumber )
			IF NOT SEEK("1"+l_cRoomNumber)
				creaderror = GetLangText("WAKEUP","TXT_NOTCHECKEDIN")
			ELSE
				IF (l_dDate >= reservat.rs_arrdate AND l_dDate <= reservat.rs_depdate)
					IF (l_dDate < sysdate())
						creaderror = GetLangText("WAKEUP","TXT_SOMETIMEAGO")
					ELSE
						l_lOk = .T.
					ENDIF
				ELSE
					creaderror = GetLangText("WAKEUP","TXT_DATENOTVALID")
				ENDIF
			ENDIF
			RETURN l_lOk
		ENDIF
		RETURN .T.
	ENDPROC

	PROCEDURE checktime
		LPARAMETER lp_cTime
		LOCAL l_lOK, l_nHour, l_nMinute
		l_nHour= VAL(SUBSTR(lp_cTime, 1, 2))
		l_nMinute = VAL(SUBSTR(lp_cTime, 4, 2))
		IF (LASTKEY()==27)
			l_lOK = .T.
		ELSE
			IF ((l_nHour>=0 AND l_nHour<24 AND l_nMinute>=0 AND l_nMinute<60))
				l_lOK = .T.
			ELSE
				crEaderror = txT_timenotvalid
				l_lOK = .F.
			ENDIF
		ENDIF
		RETURN l_lOK
	ENDPROC

	PROCEDURE deletewakeup
		IF (NOT this.ltimesempty) AND (yesno(GetLangText("WAKEUP","TXT_DELTHISONE")+";;"+ ;
				crsrWakeTimes.wake,GetLangText("WAKEUP","TXT_SURE")))
			SELECT wakeup
			IF SEEK(DTOS(crsrWakeTimes.wu_date)+crsrWakeTimes.wu_room, "WakeUp")
				= writewakeup(wakeup.wu_room,wakeup.wu_date,"00:00","DEL",wakeup.wu_time)
				DELETE
				this.disptimes()
				= alErt(GetLangText("WAKEUP","TXT_DELED"))
			ENDIF
		ENDIF
	ENDPROC

	PROCEDURE Destroy
		DODEFAULT()
		this.Visible = .F.
		DO childtitle WITH ""
	ENDPROC

	PROCEDURE disptimes
		LOCAL l_nRow, l_cRoomNumber, l_cOldOrd
		l_cRoomNumber = ALLTRIM(crsrWakeData.rm_roomnum)
		ZAP IN crsrWakeTimes
		this.ltimesempty = .T.
		IF ( NOT EMPTY(l_cRoomNumber))
			l_cOldOrd = ORDER("wakeup")
			SET ORDER TO TAG2 IN wakeup
			IF (SEEK(PADR(l_cRoomNumber, 4), "WakeUp"))
				SELECT *,DTOC(wu_date)+" /"+wu_time AS wake FROM WakeUp ;
				WHERE wu_room == l_cRoomNumber AND wu_date >= sySdate() ORDER BY wu_date ;
				INTO CURSOR crsrWakeTimes READWRITE
			ENDIF
			SET ORDER TO l_cOldOrd IN wakeup
		ENDIF
		SELECT crsrWakeTimes
		IF RECCOUNT("crsrWakeTimes") == 0
			APPEND BLANK
			REPLACE wake WITH GetLangText("WAKEUP","TXT_NOWAKE")
		ELSE
			this.ltimesempty = .F.
		ENDIF
		this.lstWakes.Requery()
		this.cmddelete.Enabled = NOT this.ltimesempty
	ENDPROC

	PROCEDURE Init
		this.assigncaption()
		this.setcontrolsource()
		DODEFAULT()
	ENDPROC

	PROCEDURE KeyPress
		LPARAMETERS nKeyCode, nShiftAltCtrl
		IF nKeyCode == 27
			NODEFAULT
			this.Release()
		ENDIF
	ENDPROC

	PROCEDURE Load
		ini()
		openfile(.F., "reservat")
		openfile(.F., "room")
		openfile(.F., "address")
		openfile(.F., "wakeup")
	ENDPROC

	PROCEDURE okwakeup
		LOCAL l_cRoomNum, l_dWakeDate, l_cWakeTime, lcOldTime
		l_cRoomNum = ALLTRIM(crsrWakeData.rm_roomnum)
		l_dWakeDate = this.txtWakeDate.Value
		l_cWakeTime = this.txtWakeTime.Value
		SELECT room
		SET ORDER TO 1
		IF ( NOT SEEK(ALLTRIM(l_cRoomNum), "Room"))
			= alErt(GetLangText("WAKEUP","TXT_NOTAROOM"))
		ELSE
			SELECT reservat
			SET ORDER TO 6
			IF ( NOT SEEK("1"+l_cRoomNum))
				= alErt(GetLangText("WAKEUP","TXT_NOTCHECKEDIN"))
			ELSE
				IF (reservat.rs_depdate<l_dWakeDate)
					= alErt(GetLangText("WAKEUP","TXT_NOTINHOUSEANYMORE"))
				ELSE
					IF this.checkdate()
						SELECT wakeup
						lcHange = .T.
						IF SEEK(DTOS(l_dWakeDate)+PADR(l_cRoomNum,4), "WakeUp")
							lcHange = yeSno(GetLangText("WAKEUP","TXT_CHANGEWAKEUP")+";"+ ;
								wakeup.wu_time+" "+ ;
								GetLangText("WAKEUP","TXT_TO")+" "+l_cWakeTime+"?", ;
								GetLangText("WAKEUP","TXT_THEREISONE"))
							lcOldTime = waKeup.wu_time
						ENDIF
						IF (lcHange)
							IF ( NOT EOF("WakeUp"))
								REPLACE waKeup.wu_time WITH l_cWakeTime
								REPLACE waKeup.wu_userid WITH g_Userid
								REPLACE waKeup.wu_chtime WITH TIME()
								REPLACE waKeup.wu_chdate WITH DATE()
							ELSE
								INSERT INTO WakeUp (wu_date, wu_room, wu_time, ;
									wu_lang, wu_userid, wu_chtime, wu_chdate) ;
									VALUES (l_dWakeDate, l_cRoomNum, l_cWakeTime, ;
									crsrWakeData.ad_lang, g_Userid, TIME(), DATE())
							ENDIF
							= writewakeup(waKeup.wu_room, waKeup.wu_date, ;
								waKeup.wu_time,waKeup.wu_lang,lcOldTime)
							this.disptimes()
							= alert(GetLangText("WAKEUP","TXT_WUBOOKED"))
						ENDIF
					ENDIF
				ENDIF
			ENDIF
		ENDIF
	ENDPROC

	PROCEDURE selecteddatetime
		IF NOT this.ltimesempty
			this.txtWakeDate.Value = crsrWakeTimes.wu_date
			this.txtWakeTime.Value = crsrWakeTimes.wu_time
			this.txtWakeFailReason.Value = crsrWakeTimes.wu_reason
		ENDIF
	ENDPROC

	PROCEDURE setcontrolsource
		SELECT rm_rmname, rm_roomnum, rs_roomnum, rs_lname, rs_roomtyp, rs_arrdate, rs_depdate, ad_lang ;
			FROM reservat ;
			LEFT JOIN room ON rs_roomnum = rm_roomnum ;
			LEFT JOIN address ON ad_addrID = rs_addrID ;
			WHERE Empty(rs_out) AND rs_in = "1" ;
			INTO CURSOR crsrWakeData ORDER BY rm_rmname READWRITE
		REPLACE rs_roomtyp WITH get_rt_roomtyp(rs_roomtyp) ALL
		GOTO TOP IN crsrWakeData
		this.cboroomname.RowSourceType = 6
		this.cboroomname.RowSource = "crsrWakeData.rm_rmname, rs_roomtyp, rs_lname"
		SELECT *, SPACE(40) as wake FROM wakeup WHERE .F. INTO CURSOR crsrWakeTimes READWRITE
		this.ltimesempty = .T.
		this.lstWakes.RowSourceType = 6
		this.lstWakes.RowSource = "crsrWakeTimes.wake"
	ENDPROC

	PROCEDURE showguestdata
		this.txtGuestName.Value = ALLTRIM(crsrWakeData.rs_lname)
		this.txtArrival.Value = crsrWakeData.rs_arrdate
		this.txtDepartureDate.Value = crsrWakeData.rs_depdate
	ENDPROC

	PROCEDURE cboRoomName.Valid
		LPARAMETERS lp_lSetValue
		LOCAL l_lValid_
		l_lValid = DODEFAULT()
		IF TYPE("l_lValid") == "N"
			RETURN l_lValid
		ENDIF
		IF EMPTY(this.DisplayValue)
			KEYBOARD '{ALT+DNARROW}'
			RETURN 0
		ENDIF
		thisform.showguestdata()
		thisform.disptimes()
	ENDPROC

	PROCEDURE cmdCancel.Click
		thisform.Release()
	ENDPROC

	PROCEDURE cmdDelete.Click
		thisform.deletewakeup()
	ENDPROC

	PROCEDURE cmdOK.Click
		thisform.okwakeup()
	ENDPROC

	PROCEDURE lstWakes.Click
		thisform.selecteddatetime()
	ENDPROC

	PROCEDURE txtWakeDate.KeyPress
		Lparameters nKeyCode, nShiftAltCtrl
		IF nKeyCode == 27
			NODEFAULT
			IF this.Value == sysdate()
				thisform.KeyPress(nKeyCode, nShiftAltCtrl)
			ELSE
				this.Value = sysdate()
			ENDIF
		ENDIF
	ENDPROC

	PROCEDURE txtWakeDate.Valid
		IF NOT thisform.checkdate()
			WAIT WINDOW NOWAIT TIMEOUT 2 cReadError 
			this.DropDown()
			RETURN 0
		ENDIF
	ENDPROC

	PROCEDURE txtWakeFailReason.Valid
		RETURN thisform.checktime(this.Value)
	ENDPROC

	PROCEDURE txtWakeTime.Valid
		RETURN thisform.checktime(this.Value)
	ENDPROC

ENDDEFINE
