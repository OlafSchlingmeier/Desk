*--------------------------------------------------------------------------------------------------------------------------------------------------------
* (ES) AUTOGENERADO - ¡¡ATENCIÓN!! - ¡¡NO PENSADO PARA EJECUTAR!! USAR SOLAMENTE PARA INTEGRAR CAMBIOS Y ALMACENAR CON HERRAMIENTAS SCM!!
* (EN) AUTOGENERATED - ATTENTION!! - NOT INTENDED FOR EXECUTION!! USE ONLY FOR MERGING CHANGES AND STORING WITH SCM TOOLS!!
*--------------------------------------------------------------------------------------------------------------------------------------------------------
*< FOXBIN2PRG: Version="1.19" SourceFile="selroomnumform.scx" /> (Solo para binarios VFP 9 / Only for VFP 9 binaries)
*
*
#INCLUDE "..\include\constdefines.h"

DEFINE CLASS dataenvironment AS dataenvironment 
 	*< CLASSDATA: Baseclass="dataenvironment" Timestamp="" Scale="" Uniqueid="" ClassIcon="2" />

	DataSource = .NULL.
	Height = 0
	Left = 0
	Name = "Dataenvironment"
	Top = 0
	Width = 0

ENDDEFINE

DEFINE CLASS roomnumform AS tform OF "..\libs\main.vcx" 
 	*< CLASSDATA: Baseclass="form" Timestamp="" Scale="" Uniqueid="" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="lblRoomnum" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtRoomName" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtToRoomName" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblRoomtypeDescription" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblRoomtype" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cboroomtype1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblConfRange" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cboConfRange" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblDescription" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtDescription" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblMemo" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtMemo" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblRpSequence" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtRpSequence" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblFloor" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtFloor" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblBeds" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtBeds" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblMaxPers" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtMaxPers" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblFeat" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtFeat" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblPhone" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cboRateCode" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblRateCode" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtPhone" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chkRoomAsPhone" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblLink" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cboLink" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lstLink" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblSequence" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtSequence" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblBMPFile" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtBMPFile" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblKeyCard" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chkLinkIfc" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtKeyCard" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblGEO" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtGEO" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chkGrStart" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblAddrid" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtAddrid" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblUser1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtUser1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblUser6" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtUser6" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblUser2" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtUser2" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblUser7" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtUser7" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblUser3" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtUser3" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblUser8" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtUser8" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblUser4" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtUser4" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblUser9" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtUser9" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblUser5" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtUser5" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblUser10" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtUser10" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdOK" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdCancel" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chkInactive" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtrm_bedchld" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtrm_bedchfr" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblrm_bedchld" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblrm_bedchag" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblrm_bedchfr" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cborm_bedchag" UniqueID="" Timestamp="" />

	*<DefinedPropArrayMethod>
		*m: roomlinkspopup
		*p: addstock
		*p: caarticle
		*p: datacopy
		*p: mode
		*p: ocaroom
		*p: result
	*</DefinedPropArrayMethod>

	addstock = 0
	aligntopedges = .T.
	caarticle = .NULL.
	Caption = ""
	ControlBox = .T.
	datacopy = .NULL.
	DataSession = 2
	DoCreate = .T.
	doini = .T.
	Height = 664
	Icon = ..\bitmap\icons\folder06.ico
	MinButton = .F.
	mode = 0
	Name = "RoomNumForm"
	ocaroom = .NULL.
	Width = 712
	WindowType = 1

	ADD OBJECT 'cboConfRange' AS tcombobox WITH ;
		BoundColumn = 2, ;
		BoundTo = .T., ;
		ColumnCount = 2, ;
		ColumnWidths = "120,50", ;
		Format = "", ;
		Left = 120, ;
		Name = "cboConfRange", ;
		RowSourceType = 6, ;
		Style = 2, ;
		TabIndex = 8, ;
		Top = 60, ;
		Width = 156, ;
		ZOrderSet = 6
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="combobox" />

	ADD OBJECT 'cboLink' AS cboroomname WITH ;
		Left = 120, ;
		Name = "cboLink", ;
		TabIndex = 33, ;
		Top = 324, ;
		Width = 167, ;
		ZOrderSet = 25
		*< END OBJECT: ClassLib="..\libs\cit_ctrl.vcx" BaseClass="combobox" />

	ADD OBJECT 'cboRateCode' AS jcombobox WITH ;
		Height = 23, ;
		Left = 311, ;
		Name = "cboRateCode", ;
		TabIndex = 49, ;
		Top = 468, ;
		Width = 121, ;
		ZOrderSet = 22
		*< END OBJECT: ClassLib="..\libs\jbase.vcx" BaseClass="combobox" />

	ADD OBJECT 'cborm_bedchag' AS tcombobox WITH ;
		BoundColumn = 2, ;
		BoundTo = .T., ;
		ColumnCount = 2, ;
		ColumnLines = .F., ;
		ColumnWidths = "200,0", ;
		Height = 23, ;
		Left = 512, ;
		Name = "cborm_bedchag", ;
		RowSourceType = 1, ;
		Style = 2, ;
		TabIndex = 22, ;
		Top = 228, ;
		Value = 0, ;
		Width = 57
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="combobox" />

	ADD OBJECT 'Cboroomtype1' AS cboroomtype WITH ;
		Left = 120, ;
		lselectbuilding = .T., ;
		Name = "Cboroomtype1", ;
		TabIndex = 5, ;
		Top = 36, ;
		Width = 156, ;
		ZOrderSet = 4
		*< END OBJECT: ClassLib="..\libs\cit_ctrl.vcx" BaseClass="combobox" />

	ADD OBJECT 'chkGrStart' AS tcheckbox WITH ;
		Alignment = 0, ;
		AutoSize = .T., ;
		Caption = "chkGrStart", ;
		Left = 12, ;
		Name = "chkGrStart", ;
		TabIndex = 44, ;
		Top = 447, ;
		Width = 75, ;
		ZOrderSet = 35
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="checkbox" />

	ADD OBJECT 'chkInactive' AS tcheckbox WITH ;
		Alignment = 0, ;
		AutoSize = .T., ;
		Caption = "chkInactive", ;
		Left = 311, ;
		Name = "chkInactive", ;
		TabIndex = 45, ;
		Top = 447, ;
		Width = 78, ;
		ZOrderSet = 35
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="checkbox" />

	ADD OBJECT 'chkLinkIfc' AS tcheckbox WITH ;
		Alignment = 0, ;
		AutoSize = .T., ;
		Caption = "chkLinkIfc", ;
		Left = 444, ;
		Name = "chkLinkIfc", ;
		TabIndex = 35, ;
		Top = 328, ;
		Width = 72, ;
		ZOrderSet = 35
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="checkbox" />

	ADD OBJECT 'chkRoomAsPhone' AS tcheckbox WITH ;
		Alignment = 0, ;
		AutoSize = .T., ;
		Caption = "chkRoomAsPhone", ;
		Enabled = .F., ;
		Left = 211, ;
		Name = "chkRoomAsPhone", ;
		nlineheight = 0, ;
		TabIndex = 31, ;
		Top = 303, ;
		Width = 121, ;
		ZOrderSet = 23
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="checkbox" />

	ADD OBJECT 'cmdCancel' AS tcommandbutton WITH ;
		Cancel = .T., ;
		Caption = "cmdCancel", ;
		Left = 362, ;
		Name = "cmdCancel", ;
		TabIndex = 71, ;
		Top = 624, ;
		ZOrderSet = 59
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'cmdOK' AS tcommandbutton WITH ;
		Caption = "cmdOK", ;
		Default = .F., ;
		Left = 266, ;
		Name = "cmdOK", ;
		TabIndex = 70, ;
		Top = 624, ;
		ZOrderSet = 58
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'lblAddrid' AS tlabel WITH ;
		AutoSize = .T., ;
		Caption = "lblAddrid", ;
		Left = 12, ;
		Name = "lblAddrid", ;
		TabIndex = 46, ;
		Top = 471, ;
		Width = 50, ;
		ZOrderSet = 36
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'lblBeds' AS tlabel WITH ;
		AutoSize = .T., ;
		Caption = "lblBeds", ;
		Left = 12, ;
		Name = "lblBeds", ;
		TabIndex = 17, ;
		Top = 231, ;
		Width = 44, ;
		ZOrderSet = 15
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'lblBMPFile' AS tlabel WITH ;
		AutoSize = .T., ;
		Caption = "lblBMPFile", ;
		Left = 12, ;
		Name = "lblBMPFile", ;
		TabIndex = 38, ;
		Top = 375, ;
		Width = 60, ;
		ZOrderSet = 29
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'lblConfRange' AS tlabel WITH ;
		AutoSize = .T., ;
		Caption = "lblConfRange", ;
		Left = 12, ;
		Name = "lblConfRange", ;
		TabIndex = 7, ;
		Top = 63, ;
		Width = 78, ;
		ZOrderSet = 5
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'lblDescription' AS tlabel WITH ;
		AutoSize = .T., ;
		Caption = "lblDescription", ;
		Left = 12, ;
		Name = "lblDescription", ;
		TabIndex = 9, ;
		Top = 87, ;
		Width = 78, ;
		ZOrderSet = 7
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'lblFeat' AS tlabel WITH ;
		AutoSize = .T., ;
		Caption = "lblFeat", ;
		Left = 12, ;
		Name = "lblFeat", ;
		TabIndex = 27, ;
		Top = 279, ;
		Width = 39, ;
		ZOrderSet = 19
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'lblFloor' AS tlabel WITH ;
		AutoSize = .T., ;
		Caption = "lblFloor", ;
		Left = 12, ;
		Name = "lblFloor", ;
		TabIndex = 15, ;
		Top = 207, ;
		Width = 43, ;
		ZOrderSet = 13
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'lblGEO' AS tlabel WITH ;
		AutoSize = .T., ;
		Caption = "GEO", ;
		Left = 12, ;
		Name = "lblGEO", ;
		TabIndex = 42, ;
		Top = 423, ;
		Width = 28, ;
		ZOrderSet = 33
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'lblKeyCard' AS tlabel WITH ;
		AutoSize = .T., ;
		Caption = "lblKeyCard", ;
		Left = 12, ;
		Name = "lblKeyCard", ;
		TabIndex = 40, ;
		Top = 399, ;
		Width = 62, ;
		ZOrderSet = 31
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'lblLink' AS tlabel WITH ;
		AutoSize = .T., ;
		Caption = "lblLink", ;
		Left = 12, ;
		Name = "lblLink", ;
		TabIndex = 32, ;
		Top = 327, ;
		Width = 38, ;
		ZOrderSet = 24
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'lblMaxPers' AS tlabel WITH ;
		AutoSize = .T., ;
		Caption = "lblMaxPers", ;
		Left = 12, ;
		Name = "lblMaxPers", ;
		TabIndex = 25, ;
		Top = 255, ;
		Width = 62, ;
		ZOrderSet = 17
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'lblMemo' AS tlabel WITH ;
		AutoSize = .T., ;
		Caption = "lblMemo", ;
		Left = 12, ;
		Name = "lblMemo", ;
		TabIndex = 11, ;
		Top = 111, ;
		Width = 49, ;
		ZOrderSet = 9
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'lblPhone' AS tlabel WITH ;
		AutoSize = .T., ;
		Caption = "lblPhone", ;
		Left = 12, ;
		Name = "lblPhone", ;
		TabIndex = 29, ;
		Top = 303, ;
		Width = 51, ;
		ZOrderSet = 21
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'lblRateCode' AS tlabel WITH ;
		AutoSize = .T., ;
		Caption = "lblRateCode", ;
		Left = 227, ;
		Name = "lblRateCode", ;
		TabIndex = 48, ;
		Tag = "39", ;
		Top = 471, ;
		Width = 71, ;
		ZOrderSet = 23
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'lblrm_bedchag' AS tlabel WITH ;
		AutoSize = .T., ;
		Caption = "lblrm_bedchag", ;
		Height = 17, ;
		Left = 368, ;
		Name = "lblrm_bedchag", ;
		TabIndex = 21, ;
		Top = 231, ;
		Width = 85, ;
		ZOrderSet = 15
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'lblrm_bedchfr' AS tlabel WITH ;
		AutoSize = .T., ;
		Caption = "lblrm_bedchfr", ;
		Height = 17, ;
		Left = 572, ;
		Name = "lblrm_bedchfr", ;
		TabIndex = 23, ;
		Top = 231, ;
		Width = 78, ;
		ZOrderSet = 15
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'lblrm_bedchld' AS tlabel WITH ;
		AutoSize = .T., ;
		Caption = "lblrm_bedchld", ;
		Height = 17, ;
		Left = 199, ;
		Name = "lblrm_bedchld", ;
		TabIndex = 19, ;
		Top = 231, ;
		Width = 81, ;
		ZOrderSet = 15
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'lblRoomnum' AS tlabel WITH ;
		AutoSize = .T., ;
		Caption = "lblRoomnum", ;
		Left = 12, ;
		Name = "lblRoomnum", ;
		TabIndex = 1, ;
		Top = 15, ;
		Width = 74, ;
		ZOrderSet = 0
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'lblRoomtype' AS tlabel WITH ;
		AutoSize = .T., ;
		Caption = "lblRoomtype", ;
		Left = 12, ;
		Name = "lblRoomtype", ;
		TabIndex = 4, ;
		Top = 39, ;
		Width = 71, ;
		ZOrderSet = 3
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'lblRoomtypeDescription' AS tlabel WITH ;
		AutoSize = .T., ;
		Caption = "", ;
		Height = 17, ;
		Left = 277, ;
		Name = "lblRoomtypeDescription", ;
		TabIndex = 6, ;
		Top = 39, ;
		Width = 2, ;
		ZOrderSet = 3
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'lblRpSequence' AS tlabel WITH ;
		AutoSize = .T., ;
		Caption = "lblRpSequence", ;
		Left = 12, ;
		Name = "lblRpSequence", ;
		TabIndex = 13, ;
		Top = 183, ;
		Width = 87, ;
		ZOrderSet = 11
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'lblSequence' AS tlabel WITH ;
		AutoSize = .T., ;
		Caption = "lblSequence", ;
		Left = 12, ;
		Name = "lblSequence", ;
		TabIndex = 36, ;
		Top = 351, ;
		Width = 71, ;
		ZOrderSet = 27
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'lblUser1' AS tlabel WITH ;
		AutoSize = .T., ;
		Caption = "lblUser1", ;
		Left = 12, ;
		Name = "lblUser1", ;
		TabIndex = 50, ;
		Top = 495, ;
		Visible = .F., ;
		Width = 49, ;
		ZOrderSet = 38
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'lblUser10' AS tlabel WITH ;
		AutoSize = .T., ;
		Caption = "lblUser10", ;
		Left = 228, ;
		Name = "lblUser10", ;
		TabIndex = 68, ;
		Top = 591, ;
		Visible = .F., ;
		Width = 56, ;
		ZOrderSet = 56
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'lblUser2' AS tlabel WITH ;
		AutoSize = .T., ;
		Caption = "lblUser2", ;
		Left = 12, ;
		Name = "lblUser2", ;
		TabIndex = 52, ;
		Top = 519, ;
		Visible = .F., ;
		Width = 49, ;
		ZOrderSet = 42
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'lblUser3' AS tlabel WITH ;
		AutoSize = .T., ;
		Caption = "lblUser3", ;
		Left = 12, ;
		Name = "lblUser3", ;
		TabIndex = 54, ;
		Top = 543, ;
		Visible = .F., ;
		Width = 49, ;
		ZOrderSet = 46
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'lblUser4' AS tlabel WITH ;
		AutoSize = .T., ;
		Caption = "lblUser4", ;
		Left = 12, ;
		Name = "lblUser4", ;
		TabIndex = 56, ;
		Top = 567, ;
		Visible = .F., ;
		Width = 49, ;
		ZOrderSet = 50
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'lblUser5' AS tlabel WITH ;
		AutoSize = .T., ;
		Caption = "lblUser5", ;
		Left = 12, ;
		Name = "lblUser5", ;
		TabIndex = 58, ;
		Top = 591, ;
		Visible = .F., ;
		Width = 49, ;
		ZOrderSet = 54
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'lblUser6' AS tlabel WITH ;
		AutoSize = .T., ;
		Caption = "lblUser6", ;
		Left = 228, ;
		Name = "lblUser6", ;
		TabIndex = 60, ;
		Top = 495, ;
		Visible = .F., ;
		Width = 49, ;
		ZOrderSet = 40
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'lblUser7' AS tlabel WITH ;
		AutoSize = .T., ;
		Caption = "lblUser7", ;
		Left = 228, ;
		Name = "lblUser7", ;
		TabIndex = 62, ;
		Top = 519, ;
		Visible = .F., ;
		Width = 49, ;
		ZOrderSet = 44
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'lblUser8' AS tlabel WITH ;
		AutoSize = .T., ;
		Caption = "lblUser8", ;
		Left = 228, ;
		Name = "lblUser8", ;
		TabIndex = 64, ;
		Top = 543, ;
		Visible = .F., ;
		Width = 49, ;
		ZOrderSet = 48
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'lblUser9' AS tlabel WITH ;
		AutoSize = .T., ;
		Caption = "lblUser9", ;
		Left = 228, ;
		Name = "lblUser9", ;
		TabIndex = 66, ;
		Top = 567, ;
		Visible = .F., ;
		Width = 49, ;
		ZOrderSet = 52
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'lstLink' AS tlistbox WITH ;
		ColumnCount = 3, ;
		ColumnLines = .F., ;
		ColumnWidths = "50,30,0", ;
		Height = 95, ;
		Left = 288, ;
		Name = "lstLink", ;
		nlineheight = 0, ;
		RowSourceType = 6, ;
		TabIndex = 34, ;
		Top = 324, ;
		Width = 144, ;
		ZOrderSet = 26
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="listbox" />

	ADD OBJECT 'txtAddrid' AS ttext WITH ;
		Format = "K", ;
		Left = 120, ;
		Name = "txtAddrid", ;
		TabIndex = 47, ;
		Top = 468, ;
		Width = 96, ;
		ZOrderSet = 37
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtBeds' AS ttext WITH ;
		Format = "K!", ;
		Left = 120, ;
		Name = "txtBeds", ;
		TabIndex = 18, ;
		Top = 228, ;
		Width = 72, ;
		ZOrderSet = 16
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtBMPFile' AS ttext WITH ;
		Format = "K!", ;
		Left = 120, ;
		Name = "txtBMPFile", ;
		TabIndex = 39, ;
		Top = 372, ;
		Width = 156, ;
		ZOrderSet = 30
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtDescription' AS ttext WITH ;
		Format = "K", ;
		InputMask = (REPLICATE("X",25)), ;
		Left = 120, ;
		Name = "txtDescription", ;
		TabIndex = 10, ;
		Top = 84, ;
		Width = 312, ;
		ZOrderSet = 8
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtFeat' AS ttext WITH ;
		Format = "K!", ;
		Left = 120, ;
		Name = "txtFeat", ;
		TabIndex = 28, ;
		Top = 276, ;
		Width = 312, ;
		ZOrderSet = 20
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtFloor' AS ttext WITH ;
		Format = "K!", ;
		Left = 120, ;
		Name = "txtFloor", ;
		TabIndex = 16, ;
		Top = 204, ;
		Width = 72, ;
		ZOrderSet = 14
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtGEO' AS ttext WITH ;
		Format = "K!", ;
		Left = 120, ;
		Name = "txtGEO", ;
		TabIndex = 43, ;
		Top = 420, ;
		Width = 312, ;
		ZOrderSet = 34
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtKeyCard' AS ttext WITH ;
		Format = "K!", ;
		Left = 120, ;
		Name = "txtKeyCard", ;
		TabIndex = 41, ;
		Top = 396, ;
		Width = 156, ;
		ZOrderSet = 32
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtMaxPers' AS ttext WITH ;
		Format = "K!", ;
		Left = 120, ;
		Name = "txtMaxPers", ;
		TabIndex = 26, ;
		Top = 252, ;
		Width = 72, ;
		ZOrderSet = 18
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtMemo' AS teditbox WITH ;
		Left = 120, ;
		Name = "txtMemo", ;
		TabIndex = 12, ;
		Top = 108, ;
		Width = 312, ;
		ZOrderSet = 10
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="editbox" />

	ADD OBJECT 'txtPhone' AS ttext WITH ;
		Format = "K!", ;
		Left = 120, ;
		Name = "txtPhone", ;
		TabIndex = 30, ;
		Top = 300, ;
		Width = 72, ;
		ZOrderSet = 22
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtrm_bedchfr' AS ttext WITH ;
		Format = "K!", ;
		Height = 23, ;
		InputMask = "99", ;
		Left = 679, ;
		Name = "txtrm_bedchfr", ;
		TabIndex = 24, ;
		Top = 228, ;
		Width = 30, ;
		ZOrderSet = 16
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtrm_bedchld' AS ttext WITH ;
		Format = "K!", ;
		Height = 23, ;
		InputMask = "99", ;
		Left = 332, ;
		Name = "txtrm_bedchld", ;
		TabIndex = 20, ;
		Top = 228, ;
		Width = 30, ;
		ZOrderSet = 16
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtRoomName' AS ttext WITH ;
		Format = "K!", ;
		Left = 120, ;
		Name = "txtRoomName", ;
		TabIndex = 2, ;
		Top = 12, ;
		Width = 156, ;
		ZOrderSet = 1
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtRpSequence' AS ttext WITH ;
		Format = "K!", ;
		Left = 120, ;
		Name = "txtRpSequence", ;
		TabIndex = 14, ;
		Top = 180, ;
		Width = 72, ;
		ZOrderSet = 12
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtSequence' AS ttext WITH ;
		Format = "K!", ;
		InputMask = "99999", ;
		Left = 120, ;
		Name = "txtSequence", ;
		TabIndex = 37, ;
		Top = 348, ;
		Width = 72, ;
		ZOrderSet = 28
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtToRoomName' AS ttext WITH ;
		DisabledForeColor = 0,0,0, ;
		Enabled = .F., ;
		Format = "K!", ;
		Left = 277, ;
		Name = "txtToRoomName", ;
		nlineheight = 0, ;
		TabIndex = 3, ;
		Top = 12, ;
		Width = 155, ;
		ZOrderSet = 2
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtUser1' AS ttext WITH ;
		Format = "K", ;
		Left = 120, ;
		Name = "txtUser1", ;
		nlineheight = 0, ;
		TabIndex = 51, ;
		Top = 492, ;
		Visible = .F., ;
		Width = 96, ;
		ZOrderSet = 39
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtUser10' AS ttext WITH ;
		Format = "K", ;
		Left = 336, ;
		Name = "txtUser10", ;
		nlineheight = 0, ;
		TabIndex = 69, ;
		Top = 588, ;
		Visible = .F., ;
		Width = 96, ;
		ZOrderSet = 57
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtUser2' AS ttext WITH ;
		Format = "K", ;
		Left = 120, ;
		Name = "txtUser2", ;
		nlineheight = 0, ;
		TabIndex = 53, ;
		Top = 516, ;
		Visible = .F., ;
		Width = 96, ;
		ZOrderSet = 43
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtUser3' AS ttext WITH ;
		Format = "K", ;
		Left = 120, ;
		Name = "txtUser3", ;
		nlineheight = 0, ;
		TabIndex = 55, ;
		Top = 540, ;
		Visible = .F., ;
		Width = 96, ;
		ZOrderSet = 47
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtUser4' AS ttext WITH ;
		Format = "K", ;
		Left = 120, ;
		Name = "txtUser4", ;
		nlineheight = 0, ;
		TabIndex = 57, ;
		Top = 564, ;
		Visible = .F., ;
		Width = 96, ;
		ZOrderSet = 51
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtUser5' AS ttext WITH ;
		Format = "K", ;
		Left = 120, ;
		Name = "txtUser5", ;
		nlineheight = 0, ;
		TabIndex = 59, ;
		Top = 588, ;
		Visible = .F., ;
		Width = 96, ;
		ZOrderSet = 55
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtUser6' AS ttext WITH ;
		Format = "K", ;
		Left = 336, ;
		Name = "txtUser6", ;
		nlineheight = 0, ;
		TabIndex = 61, ;
		Top = 492, ;
		Visible = .F., ;
		Width = 96, ;
		ZOrderSet = 41
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtUser7' AS ttext WITH ;
		Format = "K", ;
		Left = 336, ;
		Name = "txtUser7", ;
		nlineheight = 0, ;
		TabIndex = 63, ;
		Top = 516, ;
		Visible = .F., ;
		Width = 96, ;
		ZOrderSet = 45
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtUser8' AS ttext WITH ;
		Format = "K", ;
		Left = 336, ;
		Name = "txtUser8", ;
		nlineheight = 0, ;
		TabIndex = 65, ;
		Top = 540, ;
		Visible = .F., ;
		Width = 96, ;
		ZOrderSet = 49
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtUser9' AS ttext WITH ;
		Format = "K", ;
		Left = 336, ;
		Name = "txtUser9", ;
		nlineheight = 0, ;
		TabIndex = 67, ;
		Top = 564, ;
		Visible = .F., ;
		Width = 96, ;
		ZOrderSet = 53
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />
	
	PROCEDURE Init
		LParameter m.Mode, m.RNRecNo, pl_lOnlyConfRooms, pl_cBuilding
		LOCAL l_cLang, nUserIndex, cUserMacro, cUser, l_nVisibleControl, l_cSql
		
		this.Mode = m.Mode
		
		OpenFile(.F., "Room")
		OpenFile(.F., "RTypeDef")
		OpenFile(.F., "RoomType")
		OpenFile(.F., "Building")
		OpenFile(.F., "PickList")
		
		*this.cmdOK.Default = .T.
		this.cmdCancel.Cancel = .T.
		
		*this.AddObject("OldEnvir", "CEnvr")
		*this.OldEnvir.AddTable([RoomTypeTAlias], [RoomTypeTable])
		*this.OldEnvir.Save()
		
		this.AddProperty("DataCopy")
		this.AddProperty("CurrName","")
		this.AddProperty("lConfRoom",pl_lOnlyConfRooms)
		
		IF pl_lOnlyConfRooms
			this.Caption = ChildTitle(GetLangText("PICKLIST","TXT_RTG2"))
			this.lblRoomtype.Caption = GetLangText("MGRRESER", "TXT_CONF_RTTYPE")
			this.lblRpSequence.Caption = GetLangText("MGRRESER", "TXT_CONF_RPSEQ")
		ELSE
			this.Caption = ChildTitle(GetLangText("MGRRESER", "TXT_RMWINDOW"))
			this.lblRoomtype.Caption = GetLangText("MGRRESER", "TXT_RTTYPE")
			this.lblRpSequence.Caption = GetLangText("MGRRESER", "TXT_RPSEQ")
		ENDIF
		this.lblConfRange.Caption = GetLangText("MGRRESER", "TXT_CONF_RANGE")
		this.lblRoomnum.Caption = GetLangText("MGRRESER", "TXT_RMNUM")
		this.lblDescription.Caption = GetLangText("MGRRESER", "TXT_RMLANG")
		this.lblMemo.Caption = GetLangText("MYLISTS", "TXT_MEMO")
		this.lblFloor.Caption = GetLangText("MGRRESER", "TXT_RMFLOOR")
		this.lblBeds.Caption = GetLangText("MGRRESER", "TXT_RMBED")
		this.lblrm_bedchld.Caption = "davon Kinderaufbettung"
		this.lblrm_bedchag.Caption = "Alter für Kinder-Aufbettung"
		this.lblrm_bedchfr.Caption = "Kleinkinder frei bis"
		this.lblMaxPers.Caption = GetLangText("MGRRESER", "TXT_RMMAX")
		this.lblFeat.Caption = GetLangText("MGRRESER", "TXT_RMFEATURE")
		this.lblPhone.Caption = GetLangText("MGRRESER", "TXT_RMPHONE")
		this.lblLink.Caption = GetLangText("MGRRESER", "TXT_RMLINK")
		this.chkLinkIfc.Caption = GetLangText("ROOM", "TXT_DO_IFC_FOR_LINKED_ROOMS")
		this.lblSequence.Caption = GetLangText("MGRRESER", "TXT_RMSEQU")
		this.lblBMPFile.Caption = GetLangText("MGRRESER", "TXT_RMBMP")
		this.lblKeyCard.Caption = GetLangText("MGRRESER", "TXT_KEYCARDNUMBER")
		this.chkGrStart.Caption = GetLangText("MGRRESER", "TXT_NEWGROUP")
		this.chkInactive.Caption = GetLangText("COMMON", "TXT_INACTIVE")
		this.LblAddrid.Caption = GetLangText("MGRRESER", "TXT_ROOMADDRID")
		this.lblRateCode.Caption = GetLangText("MGRRESER", "TXT_RTRATECOD")
		this.cmdOK.Caption = GetLangText("COMMON", "TXT_OK")
		this.cmdCancel.Caption = GetLangText("COMMON", "TXT_CANCEL")
		
		this.AddProperty("cToRoom","")
		this.AddProperty("lRoomToPhone",.F.)
		this.chkRoomAsPhone.Caption = GetLangText("ROOM", "TXT_ROOM_NUM_IS_PHONE")
		this.chkRoomAsPhone.ControlSource = [thisform.lRoomToPhone]
		
		this.ocaroom = CREATEOBJECT("caroom")
		this.ocaroom.Alias = "curroom"
		
		DO CASE
			CASE m.Mode = EDIT_MODE
				this.ocaroom.cFilterClause = "rm_roomnum = " + sqlcnv(m.RNRecNo, .T.)
				this.ocaroom.CursorFill()
				SELECT curroom
				SCATTER Name this.DataCopy MEMO
				this.CurrName = this.DataCopy.rm_rmname
			CASE m.Mode = NEW_MODE
				this.ocaroom.SetProp(.F.,.T.)
				this.ocaroom.CursorFill()
				SELECT curroom
				SCATTER BLANK Name this.DataCopy MEMO
				this.txtToRoomName.Enabled = .T.
				this.txtToRoomName.ControlSource = [thisform.cToRoom]
				this.chkRoomAsPhone.Enabled = .T.
			CASE m.Mode = COPY_MODE
				sqlcursor("SELECT * FROM room WHERE rm_roomnum = " + sqlcnv(m.RNRecNo, .T.),"curorig")
				SELECT curorig
				SCATTER Name this.DataCopy MEMO
				dclose("curorig")
				FOR i = 1 TO 11
					IF TRANSFORM(i)<>g_langnum
						l_cLangMacro = "this.DataCopy.rm_lang"+TRANSFORM(i)
						IF TYPE(l_cLangMacro)="C"
							&l_cLangMacro = ""
						ENDIF
					ENDIF
				ENDFOR
				this.DataCopy.rm_roomnum = SPACE(4)
				this.ocaroom.SetProp(.F.,.T.)
				this.ocaroom.CursorFill()
		ENDCASE
		
		l_cLang = "CAST(pl_lang" + g_langnum + " AS Char(25))"
		TEXT TO l_cSql TEXTMERGE NOSHOW PRETEXT 15
		SELECT <<l_cLang>> AS pl_lang, pl_charcod FROM picklist WHERE pl_label = 'CONFRANG' 
			UNION SELECT CAST('' AS Char(25)) AS pl_lang, CAST('' AS Char(3)) AS pl_charcod FROM param 
			ORDER BY pl_charcod
		ENDTEXT
		sqlcursor(l_cSql, "curConfRange")
		
		TEXT TO l_cSql TEXTMERGE NOSHOW PRETEXT 15
		SELECT rm_rmname, rt_buildng, rm_roomnum, <<sqlcnv(.F.,.T.)>> AS rm_linked 
			FROM Room 
			LEFT JOIN RoomType ON rt_roomtyp = rm_roomtyp
		ENDTEXT
		sqlcursor(l_cSql, "curRoomLinks",,,,,,.T.)
		l_cRmLink = thisform.DataCopy.rm_link
		SCAN ALL
			IF (","+ALLTRIM(rm_roomnum)+",") $ (","+STRTRAN(l_cRmLink," ")+",")
				REPLACE rm_linked WITH .T.
			ENDIF
		ENDSCAN
		SET FILTER TO rm_linked
		
		Select curroom
		
		IF pl_lOnlyConfRooms OR (NOT EMPTY(this.DataCopy.rm_roomtyp) AND ;
					dlookup("roomtype","rt_roomtyp = "+sqlcnv(rm_roomtyp,.T.),"rt_group") = 2)
			this.cboConfRange.Enabled = .T.
		ELSE
			this.cboConfRange.Enabled = .F.
		ENDIF
		this.cboConfRange.RowSource = [curConfRange.pl_lang,pl_charcod]
		this.txtRoomName.ControlSource = [thisform.DataCopy.rm_rmname]
		this.txtRoomName.InputMask = REPLICATE("!",IIF(_screen.oGlobal.lLimitInputMaskForRoomName,9,10))
		this.txtToRoomName.InputMask = this.txtRoomName.InputMask
		this.txtRpSequence.ControlSource = [thisform.DataCopy.rm_rpseq]
		this.cboroomtype1.ControlSource = [thisform.DataCopy.rm_roomtyp]
		IF pl_lOnlyConfRooms
			this.cboroomtype1.cWhere = "rt_group = 2"
		ENDIF
		IF NOT EMPTY(pl_cBuilding)
			this.cboroomtype1.cBuilding = pl_cBuilding
		ENDIF
		this.cboroomtype1.Requery()
		this.cboConfRange.ControlSource = [thisform.DataCopy.rm_cnfrang]
		this.txtDescription.ControlSource = [thisform.DataCopy.Rm_Lang] + g_Langnum
		this.txtFloor.ControlSource = [thisform.DataCopy.rm_floor]
		this.txtBeds.ControlSource = [thisform.DataCopy.Rm_beds]
		this.txtrm_bedchld.ControlSource = [thisform.DataCopy.rm_bedchld]
		this.cborm_bedchag.ControlSource = [thisform.DataCopy.rm_bedchag]
		this.txtrm_bedchfr.ControlSource = [thisform.DataCopy.rm_bedchfr]
		this.txtMaxPers.ControlSource = [thisform.DataCopy.Rm_maxpers]
		this.txtFeat.ControlSource = [thisform.DataCopy.rm_feature]
		this.txtPhone.ControlSource = [thisform.DataCopy.rm_phone]
		this.lstLink.RowSource = [curRoomLinks.rm_rmname,rt_buildng,rm_roomnum]
		this.chkLinkIfc.ControlSource = [thisform.DataCopy.rm_linkifc]
		this.txtSequence.ControlSource = [thisform.DataCopy.rm_sequ]
		this.txtBMPFile.ControlSource = [thisform.DataCopy.rm_bmpfile]
		this.txtKeyCard.ControlSource = [thisform.DataCopy.rm_keycard]
		this.txtGEO.ControlSource = [thisform.DataCopy.rm_geo]
		this.chkGrStart.ControlSource = [thisform.DataCopy.rm_newgrp]
		this.chkInactive.ControlSource = [thisform.DataCopy.rm_inactiv]
		this.txtMemo.ControlSource = [thisform.DataCopy.rm_note]
		this.txtAddrid.ControlSource = [thisform.DataCopy.rm_addrid]
		
		l_nVisibleControl = 0
		
		FOR nUserIndex = 1 to 10
			cUser = RTRIM(EVALUATE([_screen.oglobal.oparam] + ;
				IIF(nUserIndex>3, "2", "") + ;
				[.pa_rmuser] + STR(IIF(nUserIndex=10,0,nUserIndex), 1)))
			IF NOT EMPTY(cUser)
				cUserMacro = "this.lblUser" + TRANSFORM(nUserIndex)
				&cUserMacro..Caption = cUser
				&cUserMacro..Visible = .T.
				cUserMacro = "this.txtUser" + TRANSFORM(nUserIndex)
				&cUserMacro..ControlSource = [thisform.DataCopy.rm_user] + TRANSFORM(nUserIndex)
				&cUserMacro..Visible = .T.
			endif
		ENDFOR
		
		TEXT TO l_cSql TEXTMERGE NOSHOW PRETEXT 2+8
		SELECT DISTINCT rc_ratecod, <<[rc_lang] + g_Langnum>> AS rc_lang, rc_fromdat, rc_todat, 
			rc_amnt1, rc_amnt2 
			FROM ratecode 
			UNION SELECT [], [], {}, {}, 0, 0 FROM param
			ORDER BY 1,2,3,4,5,6
		ENDTEXT
		
		this.cboRateCode.jsql = l_cSql
		this.cboRateCode.jboundcolumn = 1
		this.cboRateCode.jcolumncount = 6
		this.cboRateCode.jcolumnwidths = "90,200,75,75,90,90"
		this.cboRateCode.ControlSource = [thisform.DataCopy.rm_ratecod]
		this.cboRateCode.Init()
		
		DODEFAULT()
	ENDPROC

	PROCEDURE KeyPress
		LPARAMETERS nKeyCode, nShiftAltCtrl
		
		IF nKeyCode = 27
			this.OnClose()
			NODEFAULT
		ENDIF
	ENDPROC

	PROCEDURE onclose
		this.Release()
	ENDPROC

	PROCEDURE onfirststart
		IF NOT this.lOnFirstActivate
			IF _screen.Height < 768 AND this.Height > _screen.Height
				*this.WindowState = 2
				this.Height = _screen.Height - 2*SYSMETRIC(9)
				this.Resize()
				*this.AutoCenter = .T.
			ENDIF
			this.AutoCenter = .T.
		
			IF this.Mode <> NEW_MODE
				* Refresh selected roomtype caption
				SqlCursor("SELECT * FROM roomtype WHERE rt_roomtyp = "+ SqlCnv(thisform.DataCopy.rm_roomtyp,.T.),"curroomtype")
				thisform.lblRoomtypeDescription.Caption = ALLTRIM(EVALUATE("curroomtype.rt_lang" + TRANSFORM(g_langnum)))
				DClose("curroomtype")
			ENDIF
		
		ENDIF
		
		DODEFAULT()
		
		RETURN .T.
	ENDPROC

	PROCEDURE onsave
		LOCAL l_cRoomNum, l_cRmRmname, l_cRmRoomnum, l_cRtBuilding, l_lRmNameInvalid, l_oLogger, ;
				l_cOldRoomType, l_cRoomNumToUpdate, l_cSql, cLinks, nEnd, nSequence, cRoom, l_curTemp, l_cOldBuilding, l_lRtError, i
		LOCAL ARRAY l_aDummy(1)
		
		l_cRoomNum = ""
		
		IF EMPTY(this.DataCopy.rm_roomtyp)
			this.cboroomtype1.SetFocus()
			cReadError = GetLangText("MGRRESER", "TXT_INVALID_ROOMTYPE")
			WhatRead() 
			RETURN
		ENDIF
		
		l_lRmNameInvalid = EMPTY(this.DataCopy.rm_rmname)
		IF NOT l_lRmNameInvalid
			l_cRmRmname = PADR(ALLTRIM(this.DataCopy.rm_rmname),10)
			l_cRmRoomnum = PADR(ALLTRIM(this.DataCopy.rm_roomnum),4)
			l_cRtBuilding = DLookUp("Roomtype", "rt_roomtyp = " + SqlCnv(this.DataCopy.rm_roomtyp), "rt_buildng")
			TEXT TO l_cSql TEXTMERGE NOSHOW PRETEXT 15
				SELECT rm_rmname 
				FROM room 
				INNER JOIN roomtype ON rt_roomtyp = rm_roomtyp 
				WHERE rm_rmname = <<sqlcnv(l_cRmRmname,.T.)>> AND rt_buildng = <<sqlcnv(l_cRtBuilding,.T.)>> AND 
				rm_roomnum <> <<sqlcnv(l_cRmRoomnum,.T.)>>
			ENDTEXT
			sqlcursor(l_cSql,"rmcheck")
			l_lRmNameInvalid = (RECCOUNT("rmcheck") > 0)
			dclose("rmcheck")
		ENDIF
		IF l_lRmNameInvalid
			this.txtRoomName.SetFocus()
			cReadError = GetLangText("MGRRESER", "TXT_INVALID_ROOMNUM")
			WhatRead() 
			RETURN
		ENDIF
		
		this.DataCopy.rm_link = ""
		SELECT curRoomLinks
		SCAN FOR rm_linked
			this.DataCopy.rm_link = this.DataCopy.rm_link + IIF(EMPTY(this.DataCopy.rm_link), "", ",") + ALLTRIM(rm_roomnum)
		ENDSCAN
		
		* Copy description to all empty languages
		IF INLIST(this.Mode, NEW_MODE, COPY_MODE)
			FOR i = 1 TO 11
				IF TRANSFORM(i)<>g_langnum
					l_cLangMacro = "this.DataCopy.rm_lang"+TRANSFORM(i)
					IF TYPE(l_cLangMacro)="C" AND EMPTY(&l_cLangMacro)
						&l_cLangMacro = EVALUATE("this.DataCopy.rm_lang"+g_langnum)
					ENDIF
				ENDIF
			ENDFOR
		ENDIF
		
		l_oLogger = CREATEOBJECT("ProcLogger", "room", "rm_roomnum", "curRoom")
		
		*** NEW MODE, SHOULD BE REFACTORED!!!
		
		IF this.Mode = NEW_MODE AND NOT EMPTY(this.cToRoom)
			LOCAL l_nFromRoom, i, l_cRepList, l_cFromTrimed, l_cPrefix, l_nToRoom
			l_nToRoom = INT(VAL(this.cToRoom))
			l_nFromRoom = INT(VAL(this.DataCopy.rm_rmname))
		
			* Check here, is user entered digits, or alpabets.
			* When INT VAL functions return 0, then user has enteres alphabets, and then,
			* is this option disabled.
		
			IF EMPTY(l_nToRoom) OR EMPTY(l_nFromRoom)
				RETURN .F.
			ELSE
				IF YesNo(Str2Msg(GetLangText("ROOM", "TXT_INSERT_MANY_ROOMS"), "%s", ;
						TRANSFORM(l_nToRoom - l_nFromRoom + 1), ;
						ALLTRIM(this.DataCopy.rm_rmname), ;
						ALLTRIM(this.cToRoom)))
		
					* Get only leading 0, until another number is found.
					* Append leading 0 on new room number.
		
					l_cFromTrimed = ALLTRIM(this.DataCopy.rm_rmname)
					l_cPrefix = IIF(LEFT(l_cFromTrimed,1) = "0", "0", "")
		
					l_cRepList = ""
					FOR i = l_nFromRoom TO l_nToRoom
						this.DataCopy.rm_rmname = IIF(EMPTY(l_cPrefix), TRANSFORM(i), PADL(i,LEN(l_cFromTrimed),l_cPrefix))
						l_cRmRmname = PADR(ALLTRIM(this.DataCopy.rm_rmname),10)
						
						TEXT TO l_cSql TEXTMERGE NOSHOW PRETEXT 15
							SELECT rm_rmname FROM room 
								INNER JOIN roomtype ON rt_roomtyp = rm_roomtyp 
								WHERE rm_rmname = <<sqlcnv(l_cRmRmname,.T.)>> AND rt_buildng = <<sqlcnv(l_cRtBuilding,.T.)>> 
						ENDTEXT
						dclose("currcheck")
						sqlcursor(l_cSql, "currcheck")
						IF RECCOUNT() > 0
							l_cRepList = l_cRepList + ALLTRIM(this.DataCopy.rm_rmname) + ", "
							LOOP
						ENDIF
						l_cRoomNum = NextId("ROOM")
						IF EMPTY(l_cRoomNum)
							Alert("No valid Room ID is found! Please contact your support. Aborting.")
							EXIT
						ENDIF
						this.DataCopy.rm_roomnum = l_cRoomNum
						IF this.lRoomToPhone
							this.DataCopy.rm_phone = ALLTRIM(this.DataCopy.rm_rmname)
						ENDIF
						SELECT curRoom
						APPEND Blank
						GATHER NAME this.DataCopy MEMO
						l_oLogger.SetNewVal()
						l_oLogger.Save()
						this.ocaroom.DoTableUpdate()
					NEXT
					IF NOT EMPTY(l_cRepList)
						Alert(GetLangText("ROOM","TXT_THOSE_ROOMS_ARE_NOT_CREATED") + CRLF + l_cRepList)
					ENDIF
				ENDIF
			ENDIF
		ELSE
			IF this.Mode = EDIT_MODE
				l_oLogger.SetOldVal()
				* Roomtype changed. Update child tables.
				l_cOldRoomType = curroom.rm_roomtyp
				IF this.DataCopy.rm_roomtyp <> l_cOldRoomType
					IF OpenFileDirect(,"reservat") AND OpenFileDirect(,"histres") AND OpenFileDirect(,"sharing") AND ;
							OpenFileDirect(,"resrooms") AND OpenFileDirect(,"hresroom") AND OpenFileDirect(,"laststay")
						l_cOldBuilding = DLookUp("Roomtype", "rt_roomtyp = " + SqlCnv(l_cOldRoomType), "rt_buildng")
						IF _screen.oGlobal.lVehicleRentMode AND NOT l_cOldBuilding == this.cboroomtype1.cBuilding
							l_curTemp = SqlCursor("SELECT rs_reserid FROM reservat WHERE rs_roomtyp = " + SqlCnv(this.DataCopy.rm_roomtyp, .T.))
							IF USED(l_curTemp) AND RECCOUNT(l_curTemp) > 0
								l_lRtError = .T.
							ENDIF
							DClose(l_curTemp)
							IF NOT l_lRtError
								l_curTemp = SqlCursor("SELECT hr_reserid FROM histres WHERE hr_roomtyp = " + SqlCnv(this.DataCopy.rm_roomtyp, .T.))
								IF USED(l_curTemp) AND RECCOUNT(l_curTemp) > 0
									l_lRtError = .T.
								ENDIF
								DClose(l_curTemp)
							ENDIF
							IF l_lRtError
								Alert(GetLangText("MGRRESER", "TXT_ROOMNUM_CHANGED_BLD") + CRLF + GetLangText("MGRRESER", "TXT_CALL_SUPPORT"))
								RETURN
							ENDIF
						ENDIF
						l_cRoomNumToUpdate = ALLTRIM(this.DataCopy.rm_roomnum)
						sqlupdate("reservat", "rs_roomnum = " + sqlcnv(l_cRoomNumToUpdate,.T.), "rs_roomtyp = " + sqlcnv(this.DataCopy.rm_roomtyp, .T.))
						sqlupdate("histres", "hr_roomnum = " + sqlcnv(l_cRoomNumToUpdate,.T.), "hr_roomtyp = " + sqlcnv(this.DataCopy.rm_roomtyp, .T.))
						sqlupdate("resrooms", "ri_roomnum = " + sqlcnv(l_cRoomNumToUpdate,.T.), "ri_roomtyp = " + sqlcnv(this.DataCopy.rm_roomtyp, .T.))
						sqlupdate("hresroom", "ri_roomnum = " + sqlcnv(l_cRoomNumToUpdate,.T.), "ri_roomtyp = " + sqlcnv(this.DataCopy.rm_roomtyp, .T.))
						sqlupdate("laststay", "ls_roomnum = " + sqlcnv(l_cRoomNumToUpdate,.T.), "ls_roomtyp = " + sqlcnv(this.DataCopy.rm_roomtyp, .T.))
						sqlupdate("sharing", "sd_roomnum = " + sqlcnv(l_cRoomNumToUpdate,.T.), "sd_roomtyp = " + sqlcnv(this.DataCopy.rm_roomtyp, .T.))
						FLUSH
						Alert(GetLangText("COMMON", "TXT_MUST_REBUILD_AVAILABILITY"))
					ENDIF
				ENDIF
			ELSE
				l_cRoomNum = NextId("ROOM")
				IF EMPTY(l_cRoomNum)
					cReadError = "No valid Room ID is found! Please contact your support."
					WhatRead() 
					RETURN
				ENDIF
				this.DataCopy.rm_roomnum = l_cRoomNum
				IF this.lRoomToPhone
					this.DataCopy.rm_phone = ALLTRIM(this.DataCopy.rm_rmname)
				ENDIF
				SELECT curroom
				APPEND BLANK
			ENDIF
		
			SELECT curroom
			GATHER NAME this.DataCopy MEMO
			l_oLogger.SetNewVal()
			l_oLogger.Save()
			this.ocaroom.DoTableUpdate()
		
			IF NOT EMPTY(curroom.rm_link) AND DLookUp("Roomtype", "rt_roomtyp = " + SqlCnv(this.DataCopy.rm_roomtyp), "rt_group") = 4
				cLinks = ALLTRIM(curroom.rm_link)
				nSequence = 0
				FOR nSequence = 1 TO GETWORDCOUNT(cLinks,",")
					cRoom = GETWORDNUM(cLinks,nSequence,",")
					IF NOT EMPTY(cRoom)
						nSequence = nSequence + 1
						sqlupdate("room", "rm_roomnum = " + sqlcnv(PADR(cRoom,4),.T.), "rm_sqlink = " + sqlcnv(nSequence, .T.))
					ENDIF
				NEXT
			ENDIF
		ENDIF
		
		_screen.oGlobal.oGData.RoomsRefresh()
		
		this.Result = this.DataCopy.rm_roomnum
		
		this.OnClose()
	ENDPROC

	PROCEDURE QueryUnload
		this.OnClose()
		NODEFAULT
	ENDPROC

	PROCEDURE roomlinkspopup
		LPARAMETERS XCoor, YCoor
		LOCAL l_nBar			&& for popap meni
		
		l_nBar = 0
		DEFINE POPUP PopupMenu SHORTCUT RELATIVE FROM YCoor, XCoor
		DEFINE BAR 1 OF PopupMenu PROMPT GetLangText("COMMON","TXT_DELETE") SKIP FOR EOF("curRoomLinks") PICTURE "bitmap\toolbar\delete.bmp"
		ON SELECTION BAR 1 OF PopupMenu l_nBar = 1
		ACTIVATE POPUP PopupMenu
		
		IF l_nBar = 1
			REPLACE rm_linked WITH .F. IN curRoomLinks
			this.lstLink.Requery()
		ENDIF
		
		RETURN .T.
	ENDPROC

	PROCEDURE Unload
		RETURN this.Result
	ENDPROC

	PROCEDURE cboLink.Valid
		LPARAMETERS lp_lSetValue
		LOCAL l_lValid
		l_lValid = DODEFAULT(.F.)
		thisform.lstLink.Value = STRTRAN(thisform.lstLink.Value, " ")
		IF NOT EMPTY(l_lValid) AND NOT EMPTY(this.Value)
			SET FILTER TO IN curRoomLinks
			IF DLocate("curRoomLinks", "rm_roomnum = " + SqlCnv(this.Value))
				REPLACE rm_linked WITH .T. IN curRoomLinks
			ENDIF
			SET FILTER TO rm_linked IN curRoomLinks
			thisform.lstLink.Requery()
		ENDIF
		RETURN l_lValid
	ENDPROC

	PROCEDURE cborm_bedchag.Init
		LOCAL l_cList
		
		DODEFAULT()
		
		l_cList = LstItem(_screen.oglobal.oparam.pa_childs, 1) + ",1," + ;
				LstItem(_screen.oglobal.oparam.pa_childs, 2) + ",2," + ;
				LstItem(_screen.oglobal.oparam.pa_childs, 3) + ",3," + ;
				"Keine" + ",0"
		
		this.RowSource = l_cList
		
		this.Refresh()
	ENDPROC

	PROCEDURE Cboroomtype1.cbuilding_assign
		LPARAMETERS lp_cNewVal
		LOCAL l_cCaption
		
		DODEFAULT(lp_cNewVal)
		
		IF TYPE("thisform.lConfRoom")<>"L"
			RETURN .T.
		ENDIF
		
		IF thisform.lConfRoom
			l_cCaption = GetLangText("PICKLIST","TXT_RTG2")
		ELSE
			l_cCaption = GetLangText("MGRRESER", "TXT_RMWINDOW")
		ENDIF
		IF TYPE("this.oBuildingCombo")="O" AND NOT ISNULL(this.oBuildingCombo)
			thisform.Caption = ChildTitle(l_cCaption + "  " + GetLangText("MGRPLIST","TXT_BUILDINGWINDOW") + ": " + ;
				ALLTRIM(EVALUATE(this.oBuildingCombo.cCursor + ".bu_lang")))
		ENDIF
		
		RETURN .T.
	ENDPROC

	PROCEDURE Cboroomtype1.InteractiveChange
		LOCAL lcCursor
		
		lcCursor = this.cCursor
		
		IF &lcCursor..rt_group = 2
			thisform.cboConfRange.Enabled = .T.
		ELSE
			thisform.cboConfRange.Enabled = .F.
			thisform.cboConfRange.Value = ""
		ENDIF
	ENDPROC

	PROCEDURE Cboroomtype1.LostFocus
		LOCAL i, CMacro
		
		SqlCursor("SELECT * FROM roomtype WHERE rt_roomtyp = "+ SqlCnv(thisform.DataCopy.rm_roomtyp,.T.),"curroomtype")
		
		IF EMPTY(thisform.txtDescription.Value)
			FOR i = 1 TO 11
				CMacro = "thisform.DataCopy.rm_lang" + TRANSFORM(i)
				&CMacro = EVALUATE("curroomtype.rt_lang" + TRANSFORM(i))
			NEXT
		ENDIF
		
		thisform.lblRoomtypeDescription.Caption = ALLTRIM(EVALUATE("curroomtype.rt_lang" + TRANSFORM(g_langnum)))
		
		DClose("curroomtype")
	ENDPROC

	PROCEDURE cmdCancel.Click
		thisform.OnClose()
	ENDPROC

	PROCEDURE cmdOK.Click
		thisform.OnSave()
	ENDPROC

	PROCEDURE lstLink.InteractiveChange
		thisform.cboLink.Value = curRoomLinks.rm_roomnum
		thisform.cboLink.Refresh()
	ENDPROC

	PROCEDURE lstLink.MouseUp
		LPARAMETERS nButton, nShift, nXCoord, nYCoord
		
		IF nButton = 2
			thisform.RoomLinksPopup(MCOL(), MROW())
		ENDIF
	ENDPROC

	PROCEDURE txtDescription.KeyPress
		LPARAMETERS nKeyCode, nShiftAltCtrl
		
		IF nKeyCode = 24 AND nShiftAltCtrl = 0
			LOCAL lcControlSource
			lcControlSource = this.ControlSource
			&lcControlSource = this.Value
			DO MSFillDescriptions IN MgrSys WITH thisform.Mode, thisform.DataCopy, "rm_lang", this.Value
			DO FORM "forms\DescForm" WITH "rm_lang", thisform.Caption, thisform.DataCopy
		ENDIF
	ENDPROC

	PROCEDURE txtDescription.LostFocus
		DO MSFillDescriptions IN MgrSys WITH thisform.Mode, thisform.DataCopy, "rm_lang", this.Value
	ENDPROC

ENDDEFINE
