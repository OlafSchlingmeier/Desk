*--------------------------------------------------------------------------------------------------------------------------------------------------------
* (ES) AUTOGENERADO - ¡¡ATENCIÓN!! - ¡¡NO PENSADO PARA EJECUTAR!! USAR SOLAMENTE PARA INTEGRAR CAMBIOS Y ALMACENAR CON HERRAMIENTAS SCM!!
* (EN) AUTOGENERATED - ATTENTION!! - NOT INTENDED FOR EXECUTION!! USE ONLY FOR MERGING CHANGES AND STORING WITH SCM TOOLS!!
*--------------------------------------------------------------------------------------------------------------------------------------------------------
*< FOXBIN2PRG: Version="1.19" SourceFile="addressbrowse.scx" /> (Solo para binarios VFP 9 / Only for VFP 9 binaries)
*
*
DEFINE CLASS addressbrowse AS tform OF "..\libs\main.vcx" 
 	*< CLASSDATA: Baseclass="form" Timestamp="" Scale="" Uniqueid="" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="grAddress" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grAddress.Company.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grAddress.Company.Tbgrid1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grAddress.Department.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grAddress.Department.Tbgrid1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grAddress.LName.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grAddress.LName.Tbgrid1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grAddress.FName.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grAddress.FName.Tbgrid1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grAddress.Salute.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grAddress.Salute.Tbgrid1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grAddress.Street.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grAddress.Street.Tbgrid1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grAddress.City.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grAddress.City.Tbgrid1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grAddress.Hotels.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grAddress.Hotels.Tbgrid1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="CmdOk" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="CmdCancel" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="CmdNew" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdcopy" UniqueID="" Timestamp="" />

	*<DefinedPropArrayMethod>
		*m: getadrmainsql
		*m: gethotels
		*p: calias
		*p: cmode
		*p: ladrmainmode
		*p: p_addrid		&& Ad_addrid which would be returned as result to function which called this form
	*</DefinedPropArrayMethod>

	AlwaysOnTop = .F.
	calias = 
	Caption = "addressbrowse"
	cmode = 
	ControlBox = .T.
	DataSession = 2
	DoCreate = .T.
	doini = .T.
	doiniopencommontables = .T.
	Height = 297
	Icon = ..\bitmap\icons\crdfle04.ico
	KeyPreview = .T.
	ladrmainmode = .F.
	Name = "addressbrowse"
	ShowTips = .T.
	Width = 670
	WindowType = 1

	ADD OBJECT 'CmdCancel' AS tcommandbutton WITH ;
		Cancel = .T., ;
		Caption = "CmdCancel", ;
		Height = 24, ;
		Left = 338, ;
		Name = "CmdCancel", ;
		TabIndex = 5, ;
		Top = 270, ;
		Width = 95
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'cmdcopy' AS tcommandbutton WITH ;
		Caption = "CmdCopy", ;
		Height = 24, ;
		Left = 134, ;
		Name = "cmdcopy", ;
		TabIndex = 3, ;
		Top = 270, ;
		Visible = .F., ;
		Width = 95
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'CmdNew' AS tcommandbutton WITH ;
		Caption = "CmdNew", ;
		Height = 24, ;
		Left = 32, ;
		Name = "CmdNew", ;
		TabIndex = 2, ;
		Top = 270, ;
		Visible = .F., ;
		Width = 95
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'CmdOk' AS tcommandbutton WITH ;
		Caption = "CmdOk", ;
		Default = .T., ;
		Height = 24, ;
		Left = 236, ;
		Name = "CmdOk", ;
		TabIndex = 4, ;
		Top = 270, ;
		Width = 95
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'grAddress' AS tgrid WITH ;
		ColumnCount = 8, ;
		DeleteMark = .F., ;
		GridLineColor = 192,192,192, ;
		GridLines = 2, ;
		Height = 267, ;
		HighlightRow = .F., ;
		Left = 0, ;
		lsetgridprop = .F., ;
		Name = "grAddress", ;
		RecordMark = .F., ;
		ScrollBars = 2, ;
		TabIndex = 1, ;
		Top = 0, ;
		Width = 670, ;
		Column1.Name = "Company", ;
		Column1.Width = 100, ;
		Column2.Name = "Department", ;
		Column2.Width = 90, ;
		Column3.Name = "LName", ;
		Column3.Width = 90, ;
		Column4.Name = "FName", ;
		Column4.Width = 90, ;
		Column5.Name = "Salute", ;
		Column5.Width = 100, ;
		Column6.Name = "Street", ;
		Column6.Width = 90, ;
		Column7.Name = "City", ;
		Column7.Width = 84, ;
		Column8.Name = "Hotels", ;
		Column8.Width = 200
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="grid" />

	ADD OBJECT 'grAddress.City.Header1' AS header WITH ;
		Caption = "Header1", ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'grAddress.City.Tbgrid1' AS tbgrid WITH ;
		Left = 21, ;
		Name = "Tbgrid1", ;
		Top = 23
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />

	ADD OBJECT 'grAddress.Company.Header1' AS header WITH ;
		Caption = "Header1", ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'grAddress.Company.Tbgrid1' AS tbgrid WITH ;
		Left = 47, ;
		Name = "Tbgrid1", ;
		Top = 23
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />

	ADD OBJECT 'grAddress.Department.Header1' AS header WITH ;
		Caption = "Header1", ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'grAddress.Department.Tbgrid1' AS tbgrid WITH ;
		Left = 54, ;
		Name = "Tbgrid1", ;
		Top = 35
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />

	ADD OBJECT 'grAddress.FName.Header1' AS header WITH ;
		Caption = "Header1", ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'grAddress.FName.Tbgrid1' AS tbgrid WITH ;
		Left = 28, ;
		Name = "Tbgrid1", ;
		Top = 23
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />

	ADD OBJECT 'grAddress.Hotels.Header1' AS header WITH ;
		Caption = "Header1", ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'grAddress.Hotels.Tbgrid1' AS tbgrid WITH ;
		Left = 32, ;
		Name = "Tbgrid1", ;
		Top = 35
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />

	ADD OBJECT 'grAddress.LName.Header1' AS header WITH ;
		Caption = "Header1", ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'grAddress.LName.Tbgrid1' AS tbgrid WITH ;
		Left = 23, ;
		Name = "Tbgrid1", ;
		Top = 23
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />

	ADD OBJECT 'grAddress.Salute.Header1' AS header WITH ;
		Caption = "Header1", ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'grAddress.Salute.Tbgrid1' AS tbgrid WITH ;
		Left = 33, ;
		Name = "Tbgrid1", ;
		Top = 35
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />

	ADD OBJECT 'grAddress.Street.Header1' AS header WITH ;
		Caption = "Header1", ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'grAddress.Street.Tbgrid1' AS tbgrid WITH ;
		Left = 28, ;
		Name = "Tbgrid1", ;
		Top = 23
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />
	
	PROCEDURE Activate
		setkeylabel()
	ENDPROC

	PROCEDURE Deactivate
		checkkeylabel()
		
	ENDPROC

	PROCEDURE getadrmainsql
		LPARAMETERS lp_cWhere, lp_nOrder
		LOCAL l_cSql
		TEXT TO l_cSql TEXTMERGE NOSHOW PRETEXT 15
		SELECT c1.*, CAST(EXECSCRIPT(;
		     "LPARAMETER lp_nAdId"+CHR(13)+;
		     "LOCAL i,l_cResult,l_aResult(1)"+CHR(13)+;
		     "l_cResult = ''"+CHR(13)+;
		     "SELECT an_hotcode FROM adrhot WHERE an_adid = lp_nAdId ORDER BY 1 INTO ARRAY l_aResult"+CHR(13)+;
		     "IF NOT EMPTY(l_aResult(1))"+CHR(13)+;
		     "FOR i = 1 TO ALEN(l_aResult)"+CHR(13)+;
		     "l_cResult = l_cResult + IIF(EMPTY(l_cResult),'',',') + ALLTRIM(l_aResult(i))" + CHR(13)+;
		     "ENDFOR"+CHR(13)+;
		     "ENDIF"+CHR(13)+;
		     "RETURN l_cResult",;
		     c1.ad_adid) AS Char(30)) AS c_hotels FROM (;
		SELECT ad_adid, ad_company, ad_departm, ad_lname, ad_fname, ad_salute, ad_street, ad_city ;
		     FROM __#SRV.ADRMAIN#__ ;
		     WHERE <<lp_cWhere>> ;
		     ORDER BY <<TRANSFORM(lp_nOrder)>>) c1
		ENDTEXT
		
		l_cSql = STRTRAN(l_cSql, ";", "")
		
		RETURN l_cSql
	ENDPROC

	PROCEDURE gethotels
		LOCAL l_cHotels, l_nAdId, l_nSelect
		l_cHotels = ""
		l_nAdId = EVALUATE(this.grAddress.RecordSource + ".ad_adid")
		IF NOT EMPTY(l_nAdId)
			l_nSelect = SELECT()
			SELECT adrhot
			SCAN FOR an_adid = l_nAdId
				l_cHotels = l_cHotels + ALLTRIM(an_hotcode) + ","
			ENDSCAN
			IF NOT EMPTY(l_cHotels)
				l_cHotels = LEFT(l_cHotels,LEN(l_cHotels)-1)
			ENDIF
			SELECT (l_nSelect)
		ENDIF
		RETURN l_cHotels
		*RETURN EVALUATE(this.grAddress.RecordSource + ".ad_hotcode")
	ENDPROC

	PROCEDURE Init
		LPARAMETERS lpnAddrId, lpcMode, lp_cWhere
		
		LOCAL l_cAlias, l_i, i, l_cSql
		l_cAlias = "address"
		this.p_addrid = 0
		this.cMode = lpcMode
		IF NOT EMPTY(lpnAddrId)
			= SEEK(lpnAddrId, "address", "tag1")
		ELSE
			GO TOP IN address
		ENDIF
		this.Caption = GetLangText("ADDRESS","TXT_BRWADDR")
		IF PCOUNT() >= 2
			DO CASE
			CASE lpcMode == "COMPANY"
				SET ORDER TO tag3 IN address
				IF EMPTY(address.ad_company) OR EMPTY(lpnAddrId)
					= SEEK("A", "address", "tag3")
				ENDIF
			CASE lpcMode == "COMPKEY"
				SET ORDER TO tag4 IN address
			CASE lpcMode == "COMPNUM"
				SET ORDER TO tag5 IN address
			CASE lpcMode == "LNAME"
				SET ORDER TO tag2 IN address
			CASE lpcMode == "MEMBER"
				SET ORDER TO tag6 IN address
			CASE lpcMode == "ADRMAIN_LNAME"
				this.Caption = GetLangText("ADDRESS","TXT_MAIN_SERVER_SEARCH")
				IF _screen.oGlobal.lmainserverremote
					l_cAlias = "cadrmbr663"
					l_cSql = this.getadrmainsql("UPPER(ad_lname) = " + sqlcnv(lp_cWhere,.T.),4)
					sqlcursor(l_cSql,l_cAlias)
					IF NOT USED(l_cAlias)
						RETURN .T.
					ENDIF
				ELSE
					l_cAlias = "adrmain"
					IF openfile(.F.,"adrmain") AND openfile(.F.,"adrhot")
						SET ORDER TO '' IN adrmain
						SET ORDER TO '' IN adrhot
						dlocate("adrmain", "UPPER(ad_lname) = " + sqlcnv(lp_cWhere))
						SET ORDER TO TAG3 IN adrmain
					ELSE
						RETURN .F.
					ENDIF
				ENDIF
				this.ladrmainmode = .T.
			CASE lpcMode == "ADRMAIN_COMPANY"
				this.Caption = GetLangText("ADDRESS","TXT_MAIN_SERVER_SEARCH")
				IF _screen.oGlobal.lmainserverremote
					l_cAlias = "cadrmbr663"
					l_cSql = this.getadrmainsql("UPPER(ad_company) = " + sqlcnv(lp_cWhere,.T.),2)
					sqlcursor(l_cSql,l_cAlias)
					IF NOT USED(l_cAlias)
						RETURN .T.
					ENDIF
				ELSE
					l_cAlias = "adrmain"
					IF openfile(.F.,"adrmain") AND openfile(.F.,"adrhot")
						SET ORDER TO '' IN adrmain
						SET ORDER TO '' IN adrhot
						dlocate("adrmain", "UPPER(ad_company) = " + sqlcnv(lp_cWhere))
						SET ORDER TO TAG4 IN adrmain
					ELSE
						RETURN .F.
					ENDIF
				ENDIF
				this.ladrmainmode = .T.
			CASE lpcMode == "ADRMAIN_ADID"
				this.Caption = GetLangText("ADDRESS","TXT_MAIN_SERVER_SEARCH")
				IF _screen.oGlobal.lmainserverremote
					l_cAlias = "cadrmbr663"
					l_cSql = this.getadrmainsql("UPPER(ad_adid) = " + sqlcnv(lp_cWhere,.T.),1)
					sqlcursor(l_cSql,l_cAlias)
					IF NOT USED(l_cAlias)
						RETURN .T.
					ENDIF
				ELSE
					l_cAlias = "adrmain"
					IF openfile(.F.,"adrmain") AND openfile(.F.,"adrhot")
						SET ORDER TO '' IN adrmain
						SET ORDER TO '' IN adrhot
						dlocate("adrmain", "ad_adid = " + sqlcnv(lp_cWhere))
						SET ORDER TO TAG3 IN adrmain
					ELSE
						RETURN .F.
					ENDIF
				ENDIF
				this.ladrmainmode = .T.
			OTHERWISE
				SET ORDER TO tag2 IN address
			ENDCASE
		ELSE
			SET ORDER TO tag2 IN address
		ENDIF
		
		this.grAddress.RecordSource = l_cAlias
		this.grAddress.Company.ControlSource = l_cAlias+[.ad_company]
		this.grAddress.Department.ControlSource = l_cAlias+[.ad_departm]
		this.grAddress.LName.ControlSource = l_cAlias+[.ad_lname]
		this.grAddress.FName.ControlSource = l_cAlias+[.ad_fname]
		this.grAddress.Salute.ControlSource = l_cAlias+[.ad_salute]
		this.grAddress.Street.ControlSource = l_cAlias+[.ad_street]
		this.grAddress.City.ControlSource = l_cAlias+[.ad_city]
		IF this.ladrmainmode
			IF _screen.oGlobal.lmainserverremote
				this.grAddress.Hotels.ControlSource = l_cAlias+[.c_hotels]
			ELSE
				this.grAddress.Hotels.ControlSource = [thisform.GetHotels()]&&l_cAlias+[.ad_hotcode]
			ENDIF
			FOR i = 1 TO this.grAddress.ColumnCount-1
				this.grAddress.Columns(i).ColumnOrder = i+1
			ENDFOR
			this.grAddress.Hotels.ColumnOrder = 1
		ELSE
			this.grAddress.RemoveObject("Hotels")
		ENDIF
		IF _screen.BMS AND INLIST(lpcMode, "ADRMAIN_LNAME", "ADRMAIN_COMPANY", "ADRMAIN_ADID") AND NOT _screen.oGlobal.lmainserverremote
			LOCAL l_cBackColor
			IF openfile(.F.,"bsacct")
				l_cBackColor = 'curLedgers.ld_vblock,rgb(255,130,130)'
				l_cBackColor = "SEEK(EVALUATE(thisform.grAddress.RecordSource+'.ad_adid'),'bsacct','tag3') ,rgb(255,130,130)"
				FOR l_i = 1 TO this.grAddress.ColumnCount
					this.grAddress.Columns(l_i).AddProperty("cCustomDynamicBackColor",l_cBackColor)
				ENDFOR
				this.grAddress.Company.ControlSource = [IIF(SEEK(EVALUATE(thisform.grAddress.RecordSource+'.ad_adid'),'bsacct','tag3') AND bsacct.bb_bbid>0,"("+TRANSFORM(bsacct.bb_bbid)+") ","")+]+l_cAlias+[.ad_company]
				this.grAddress.HighlightRowLineWidth = 3
				this.grAddress.HighlightStyle = 0
				this.grAddress.HighlightRow = .T.
			ENDIF
		ENDIF
		
		this.grAddress.Init(.T.)
		
		DODEFAULT()
		
		IF this.ladrmainmode
			this.Width = this.Width + this.grAddress.Hotels.Width
			this.grAddress.Width = this.Width
			this.w = this.w + this.grAddress.Hotels.cw
			this.grAddress.w = this.w
			this.cmdcancel.Left = INT(this.Width/2)
			this.cmdCancel.l = INT(this.w/2)
			this.cmdOK.Left = this.cmdcancel.Left - this.cmdOK.Width - 10
			this.cmdOK.l = this.cmdcancel.l - this.cmdOK.w - 10
		ENDIF
		
		this.CmdOk.Caption = GetLangText("COMMON","TXT_OK")
		this.cmdCancel.Caption = GetLangText("COMMON", "TXT_CANCEL")
		this.CmdNew.Caption = GetLangText("COMMON","TXT_NEW")
		this.CmdCopy.Caption = GetLangText("COMMON","TXT_COPY")
		IF lpcMode = "QE"
			this.CmdNew.Visible = .T.
			this.cmdCopy.Visible = .T.
		ENDIF
		this.grAddress.Company.Header1.Caption = GetLangText("ADDRESS","TXT_COMPANY")
		this.grAddress.Department.Header1.Caption = GetLangText("ADDRESS","TXT_DEPARTM")
		this.grAddress.LName.Header1.Caption = GetLangText("ADDRESS","TXT_LNAME")
		this.grAddress.FName.Header1.Caption = GetLangText("ADDRESS","TXT_FIRSTNAME")
		this.grAddress.Salute.Header1.Caption = GetLangText("ADDRESS","TXT_TITLE")
		this.grAddress.Street.Header1.Caption = GetLangText("ADDRESS","TXT_STREET")
		this.grAddress.City.Header1.Caption = GetLangText("ADDRESS","TXT_CITY")
		IF this.ladrmainmode
			this.grAddress.Hotels.Header1.Caption = GetLangText("SRVSETTI","TXT_HOTEL_CODE")
		ENDIF
		
		this.calias = l_cAlias
		
		RETURN .T.
	ENDPROC

	PROCEDURE KeyPress
		LPARAMETERS nKeyCode, nShiftAltCtrl
		DO CASE
		 CASE nKeyCode = 27
			NODEFAULT
			this.CmdCancel.Click()
		 CASE nKeyCode = 13
			NODEFAULT
			this.cmdOK.Click()
		ENDCASE
	ENDPROC

	PROCEDURE QueryUnload
		NODEFAULT
		this.cmdcancel.Click()
	ENDPROC

	PROCEDURE Unload
		RETURN this.p_addrid
		
	ENDPROC

	PROCEDURE CmdCancel.Click
		thisform.p_addrid = 0 && Cancel
		thisform.Release()
	ENDPROC

	PROCEDURE cmdcopy.Click
		thisform.p_addrid = -2 * RECNO('address') && Copy
		thisform.Release()
	ENDPROC

	PROCEDURE CmdNew.Click
		thisform.p_addrid = -1 && New
		thisform.Release()
	ENDPROC

	PROCEDURE CmdOk.Click
		LOCAL l_cAlias
		l_cAlias = thisform.calias
		IF INLIST(thisform.cMode ,"ADRMAIN_LNAME", "ADRMAIN_COMPANY", "ADRMAIN_ADID")
			thisform.p_addrid = &l_cAlias..ad_adid
		ELSE
			thisform.p_addrid = RECNO('address')
		ENDIF
		thisform.Release()
	ENDPROC

	PROCEDURE grAddress.Init
		LPARAMETERS lp_lDoInit
		IF NOT lp_lDoInit
			RETURN .T.
		ENDIF
		
		DODEFAULT()
		
		RETURN .T.
	ENDPROC

ENDDEFINE

DEFINE CLASS dataenvironment AS dataenvironment 
 	*< CLASSDATA: Baseclass="dataenvironment" Timestamp="" Scale="" Uniqueid="" ClassIcon="2" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="Cursor1" UniqueID="" Timestamp="" />

	AutoOpenTables = .F.
	DataSource = .NULL.
	Height = 200
	Left = 1
	Name = "Dataenvironment"
	Top = 220
	Width = 520

	ADD OBJECT 'Cursor1' AS cursor WITH ;
		Alias = "address", ;
		CursorSource = ..\data\address.dbf, ;
		Height = 90, ;
		Left = 10, ;
		Name = "Cursor1", ;
		Top = 20, ;
		Width = 90
		*< END OBJECT: BaseClass="cursor" />

ENDDEFINE
