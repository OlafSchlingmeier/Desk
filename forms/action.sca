*--------------------------------------------------------------------------------------------------------------------------------------------------------
* (ES) AUTOGENERADO - ¡¡ATENCIÓN!! - ¡¡NO PENSADO PARA EJECUTAR!! USAR SOLAMENTE PARA INTEGRAR CAMBIOS Y ALMACENAR CON HERRAMIENTAS SCM!!
* (EN) AUTOGENERATED - ATTENTION!! - NOT INTENDED FOR EXECUTION!! USE ONLY FOR MERGING CHANGES AND STORING WITH SCM TOOLS!!
*--------------------------------------------------------------------------------------------------------------------------------------------------------
*< FOXBIN2PRG: Version="1.19" SourceFile="action.scx" /> (Solo para binarios VFP 9 / Only for VFP 9 binaries)
*
*
DEFINE CLASS dataenvironment AS dataenvironment 
 	*< CLASSDATA: Baseclass="dataenvironment" Timestamp="" Scale="" Uniqueid="" ClassIcon="1" />

	DataSource = .NULL.
	Height = 200
	Left = 1
	Name = "Dataenvironment"
	Top = 220
	Width = 520

ENDDEFINE

DEFINE CLASS frmaction AS tform OF "..\libs\main.vcx" 
 	*< CLASSDATA: Baseclass="form" Timestamp="" Scale="" Uniqueid="" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="LType" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="CBType" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="TBSayType" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="LDate" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="DBDate" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="TBTime" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chkReccuring" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="LUser" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="CBUser" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lstUsers" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="LGroup" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="CBGroup" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lstGroups" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="EBNote" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="LRoom" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cboroomname1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="LCreated" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="TBCreated" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="at_hkeep" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblFrom" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="dfrom" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblTo" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="dto" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblEvery" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtdays" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lbldays" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chkMon" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chkTue" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chkWed" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chkThu" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chkFri" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chkSat" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chkSun" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="CmdOK" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="CmdCancel" UniqueID="" Timestamp="" />

	*<DefinedPropArrayMethod>
		*m: groupspopup
		*m: insertactions
		*m: lreccurring_assign
		*m: reccuringinsert
		*m: userspopup
		*p: a_record
		*p: cfiltercursor
		*p: cmode
		*p: lreccurring
		*p: ocaaction
	*</DefinedPropArrayMethod>

	AlwaysOnTop = .F.
	a_record = .NULL.
	Caption = "frmAction"
	cfiltercursor = 
	cmode = 
	ControlBox = .T.
	DoCreate = .T.
	doini = .T.
	doiniopencommontables = .T.
	formname = Activities
	Height = 496
	Icon = ..\bitmap\icons\default16.ico
	MaxButton = .F.
	MinButton = .F.
	Name = "frmAction"
	ocaaction = .NULL.
	Width = 396
	WindowType = 1

	ADD OBJECT 'at_hkeep' AS tcheckbox WITH ;
		Alignment = 0, ;
		AutoSize = .T., ;
		Caption = "at_hkeep", ;
		Left = 108, ;
		Name = "at_hkeep", ;
		Top = 423, ;
		ZOrderSet = 18
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="checkbox" />

	ADD OBJECT 'CBGroup' AS cbodb WITH ;
		ColumnLines = .F., ;
		DisabledForeColor = 0,0,0, ;
		InputMask = "!!!!!!!!!!", ;
		Left = 108, ;
		Name = "CBGroup", ;
		Top = 180, ;
		Width = 120, ;
		ZOrderSet = 11
		*< END OBJECT: ClassLib="..\libs\jbase.vcx" BaseClass="combobox" />

	ADD OBJECT 'Cboroomname1' AS cboroomname WITH ;
		Left = 108, ;
		Name = "Cboroomname1", ;
		Top = 372, ;
		ZOrderSet = 15
		*< END OBJECT: ClassLib="..\libs\cit_ctrl.vcx" BaseClass="combobox" />

	ADD OBJECT 'CBType' AS cbodb WITH ;
		ColumnLines = .F., ;
		DisabledForeColor = 0,0,0, ;
		InputMask = "!!!", ;
		Left = 108, ;
		Name = "CBType", ;
		Top = 12, ;
		Width = 60, ;
		ZOrderSet = 1
		*< END OBJECT: ClassLib="..\libs\jbase.vcx" BaseClass="combobox" />

	ADD OBJECT 'CBUser' AS cbodb WITH ;
		ColumnLines = .F., ;
		DisabledForeColor = 0,0,0, ;
		InputMask = "!!!!!!!!!!", ;
		Left = 108, ;
		Name = "CBUser", ;
		Top = 60, ;
		Width = 120, ;
		ZOrderSet = 8
		*< END OBJECT: ClassLib="..\libs\jbase.vcx" BaseClass="combobox" />

	ADD OBJECT 'chkFri' AS tcheckbox WITH ;
		Alignment = 0, ;
		AutoSize = .T., ;
		Caption = "chkFri", ;
		Left = 408, ;
		Name = "chkFri", ;
		Top = 183, ;
		Value = .F., ;
		Visible = .F., ;
		Width = 51, ;
		ZOrderSet = 30
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="checkbox" />

	ADD OBJECT 'chkMon' AS tcheckbox WITH ;
		Alignment = 0, ;
		AutoSize = .T., ;
		Caption = "chkMon", ;
		Left = 408, ;
		Name = "chkMon", ;
		Top = 87, ;
		Value = .F., ;
		Visible = .F., ;
		Width = 60, ;
		ZOrderSet = 26
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="checkbox" />

	ADD OBJECT 'chkReccuring' AS tcheckbox WITH ;
		Alignment = 0, ;
		AutoSize = .T., ;
		Caption = "chkReccuring", ;
		Left = 276, ;
		Name = "chkReccuring", ;
		Top = 39, ;
		Width = 93, ;
		ZOrderSet = 6
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="checkbox" />

	ADD OBJECT 'chkSat' AS tcheckbox WITH ;
		Alignment = 0, ;
		AutoSize = .T., ;
		Caption = "chkSat", ;
		Left = 408, ;
		Name = "chkSat", ;
		Top = 207, ;
		Value = .F., ;
		Visible = .F., ;
		Width = 55, ;
		ZOrderSet = 31
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="checkbox" />

	ADD OBJECT 'chkSun' AS tcheckbox WITH ;
		Alignment = 0, ;
		AutoSize = .T., ;
		Caption = "chkSun", ;
		Left = 408, ;
		Name = "chkSun", ;
		Top = 231, ;
		Value = .F., ;
		Visible = .F., ;
		Width = 59, ;
		ZOrderSet = 32
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="checkbox" />

	ADD OBJECT 'chkThu' AS tcheckbox WITH ;
		Alignment = 0, ;
		AutoSize = .T., ;
		Caption = "chkThu", ;
		Left = 408, ;
		Name = "chkThu", ;
		Top = 159, ;
		Value = .F., ;
		Visible = .F., ;
		Width = 58, ;
		ZOrderSet = 29
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="checkbox" />

	ADD OBJECT 'chkTue' AS tcheckbox WITH ;
		Alignment = 0, ;
		AutoSize = .T., ;
		Caption = "chkTue", ;
		Left = 408, ;
		Name = "chkTue", ;
		Top = 111, ;
		Value = .F., ;
		Visible = .F., ;
		Width = 58, ;
		ZOrderSet = 27
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="checkbox" />

	ADD OBJECT 'chkWed' AS tcheckbox WITH ;
		Alignment = 0, ;
		AutoSize = .T., ;
		Caption = "chkWed", ;
		Height = 17, ;
		Left = 408, ;
		Name = "chkWed", ;
		Top = 135, ;
		Value = .F., ;
		Visible = .F., ;
		Width = 62, ;
		ZOrderSet = 28
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="checkbox" />

	ADD OBJECT 'CmdCancel' AS tcommandbutton WITH ;
		Caption = "CmdCancel", ;
		Left = 204, ;
		Name = "CmdCancel", ;
		Top = 456, ;
		ZOrderSet = 34
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'CmdOK' AS tcommandbutton WITH ;
		Caption = "CmdOK", ;
		Default = .F., ;
		Left = 108, ;
		Name = "CmdOK", ;
		Top = 456, ;
		ZOrderSet = 33
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'DBDate' AS tdatectrl WITH ;
		Left = 108, ;
		Name = "DBDate", ;
		Top = 36, ;
		Width = 96, ;
		ZOrderSet = 4
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />

	ADD OBJECT 'dfrom' AS tdatectrl WITH ;
		Left = 408, ;
		Name = "dfrom", ;
		Top = 36, ;
		Visible = .F., ;
		Width = 96, ;
		ZOrderSet = 20
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />

	ADD OBJECT 'dto' AS tdatectrl WITH ;
		Left = 505, ;
		Name = "dto", ;
		Top = 36, ;
		Visible = .F., ;
		Width = 96, ;
		ZOrderSet = 22
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />

	ADD OBJECT 'EBNote' AS teditbox WITH ;
		Format = "K", ;
		Height = 71, ;
		Left = 12, ;
		Name = "EBNote", ;
		Top = 300, ;
		Width = 372, ;
		ZOrderSet = 13
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="editbox" />

	ADD OBJECT 'lbldays' AS tlabel WITH ;
		AutoSize = .T., ;
		Caption = "lbldays", ;
		Height = 17, ;
		Left = 507, ;
		Name = "lbldays", ;
		Top = 63, ;
		Visible = .F., ;
		Width = 41, ;
		ZOrderSet = 25
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'lblEvery' AS tlabel WITH ;
		AutoSize = .T., ;
		Caption = "lblEvery", ;
		Height = 17, ;
		Left = 408, ;
		Name = "lblEvery", ;
		Top = 63, ;
		Visible = .F., ;
		Width = 44, ;
		ZOrderSet = 23
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'lblFrom' AS tlabel WITH ;
		AutoSize = .T., ;
		Caption = "lblFrom", ;
		Left = 420, ;
		Name = "lblFrom", ;
		Top = 15, ;
		Visible = .F., ;
		ZOrderSet = 19
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'lblTo' AS tlabel WITH ;
		AutoSize = .T., ;
		Caption = "lblTo", ;
		Left = 516, ;
		Name = "lblTo", ;
		Top = 15, ;
		Visible = .F., ;
		ZOrderSet = 21
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'LCreated' AS tlabel WITH ;
		AutoSize = .T., ;
		Caption = "LCreated", ;
		Left = 12, ;
		Name = "LCreated", ;
		Top = 399, ;
		Width = 53, ;
		ZOrderSet = 16
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'LDate' AS tlabel WITH ;
		AutoSize = .T., ;
		Caption = "LDate", ;
		Left = 12, ;
		Name = "LDate", ;
		Top = 39, ;
		Width = 35, ;
		ZOrderSet = 3
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'LGroup' AS tlabel WITH ;
		AutoSize = .T., ;
		Caption = "LGroup", ;
		Left = 12, ;
		Name = "LGroup", ;
		Top = 183, ;
		Width = 43, ;
		ZOrderSet = 10
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'LRoom' AS tlabel WITH ;
		AutoSize = .T., ;
		Caption = "LRoom", ;
		Left = 12, ;
		Name = "LRoom", ;
		Top = 375, ;
		Width = 43, ;
		ZOrderSet = 14
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'lstGroups' AS tlistbox WITH ;
		ColumnCount = 3, ;
		ColumnLines = .F., ;
		ColumnWidths = "120,0", ;
		Height = 119, ;
		Left = 240, ;
		Name = "lstGroups", ;
		nlineheight = 0, ;
		RowSourceType = 6, ;
		Top = 180, ;
		Width = 144, ;
		ZOrderSet = 12
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="listbox" />

	ADD OBJECT 'lstUsers' AS tlistbox WITH ;
		ColumnCount = 3, ;
		ColumnLines = .F., ;
		ColumnWidths = "80,80,0", ;
		Height = 119, ;
		Left = 240, ;
		Name = "lstUsers", ;
		nlineheight = 0, ;
		RowSourceType = 6, ;
		Top = 60, ;
		Width = 144, ;
		ZOrderSet = 9
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="listbox" />

	ADD OBJECT 'LType' AS tlabel WITH ;
		AutoSize = .T., ;
		Caption = "LType", ;
		Left = 12, ;
		Name = "LType", ;
		Top = 15, ;
		Width = 35, ;
		ZOrderSet = 0
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'LUser' AS tlabel WITH ;
		AutoSize = .T., ;
		Caption = "LUser", ;
		Left = 12, ;
		Name = "LUser", ;
		Top = 63, ;
		Width = 36, ;
		ZOrderSet = 7
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'TBCreated' AS ttext WITH ;
		BackStyle = 0, ;
		ForeColor = 0,0,255, ;
		Left = 108, ;
		Name = "TBCreated", ;
		Style = 1, ;
		Top = 396, ;
		Width = 216, ;
		ZOrderSet = 17
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />

	ADD OBJECT 'TBSayType' AS ttext WITH ;
		BackStyle = 0, ;
		ForeColor = 0,0,255, ;
		Left = 169, ;
		Name = "TBSayType", ;
		Style = 1, ;
		Top = 12, ;
		Width = 155, ;
		ZOrderSet = 2
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />

	ADD OBJECT 'TBTime' AS ttext WITH ;
		Format = "K", ;
		InputMask = "99:99", ;
		Left = 205, ;
		Name = "TBTime", ;
		Top = 36, ;
		Width = 59, ;
		ZOrderSet = 5
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtdays' AS ttext WITH ;
		Height = 23, ;
		Left = 456, ;
		Name = "txtdays", ;
		Top = 60, ;
		Visible = .F., ;
		Width = 48, ;
		ZOrderSet = 24
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />
	
	PROCEDURE groupspopup
		LPARAMETERS XCoor, YCoor
		LOCAL l_nBar
		
		l_nBar = 0
		DEFINE POPUP PopupMenu SHORTCUT RELATIVE FROM YCoor, XCoor
		DEFINE BAR 1 OF PopupMenu PROMPT GetLangText("ALZOOMIN","TT_DELETE") SKIP FOR EOF("curGroups") PICTURE "bitmap\toolbar\delete.bmp"
		ON SELECTION BAR 1 OF PopupMenu l_nBar = 1
		ACTIVATE POPUP PopupMenu
		
		IF l_nBar = 1
			REPLACE c_selected WITH .F. IN curGroups
			this.lstGroups.Requery()
		ENDIF
		
		RETURN .T.
	ENDPROC

	PROCEDURE Init
		LPARAMETERS tcMode, tcFilterCursor, tnAddrId, tnReserId, tnActId
		
		DODEFAULT()
		
		this.cMode = tcMode
		this.cFilterCursor = tcFilterCursor
		
		this.Caption = GetLangText("ACT","TW_ACTIVITY")
		this.LType.Caption = GetLangText("ACT","T_ACTTYP")
		this.LDate.Caption = GetLangText("ACT","T_DATE")+' '+GetLangText("ACT","T_TIME")
		this.LUser.Caption = GetLangText("ACT","T_USER")
		this.LGroup.Caption = GetLangText("MGRSYS","TXT_GRNAME")
		
		this.LCreated.Caption = GetLangText("ACT","T_CREATED")
		this.at_hkeep.Caption = GetLangText("ACT","TXT_HOUSEKEEPING")
		
		this.cmdOK.Caption = GetLangText("ACT","TB_OK")
		this.cmdCancel.Caption = GetLangText("ACT","TB_CANCEL")
		
		this.chkReccuring.Caption = GetLangText("ACT", "TXT_RECUR")
		this.lblFrom.Caption = GetLangText("RECURRES", "TXT_START_DATE")
		this.lblTo.Caption = GetLangText("RECURRES", "TXT_END_DATE")
		this.lblEvery.Caption = GetLangText("RECURRES", "TXT_EVERY")
		this.lblDays.Caption = GetLangText("RECURRES", "TXT_DAYS")
		this.chkMon.Caption = Left(GetLangText("FUNC", "TXT_MONDAY"), 3)
		this.chkTue.Caption = Left(GetLangText("FUNC", "TXT_TUESDAY"), 3)
		this.chkwed.Caption = Left(GetLangText("FUNC", "TXT_WEDNESDAY"), 3)
		this.chkThu.Caption = Left(GetLangText("FUNC", "TXT_THURSDAY"), 3)
		this.chkFri.Caption = Left(GetLangText("FUNC", "TXT_FRIDAY"), 3)
		this.chkSat.Caption = Left(GetLangText("FUNC", "TXT_SATURDAY"), 3)
		this.chkSun.Caption = Left(GetLangText("FUNC", "TXT_SUNDAY"), 3)
		this.LRoom.Caption = GetLangText("KEYCARD","TXT_ROOMNUMBER")
		
		SELECT (this.ocaAction.Alias)
		IF this.cMode = "EDIT"
			this.ocaAction.cFilterClause = "at_atid = " + SqlCnv(tnActId,.T.)
			this.ocaAction.CursorFill()
			SCATTER MEMO NAME this.a_record
		ELSE
			SCATTER MEMO NAME this.a_record BLANK
			this.a_record.at_addrid = EVL(tnAddrId,0)
			this.a_record.at_reserid = EVL(tnReserId,0)
		ENDIF
		IF this.cMode = "EDIT"
			this.TBSayType.Value = DLookUp("picklist", "pl_label = 'ACTION' AND pl_charcod = " + SqlCnv(this.a_record.at_acttyp,.T.), "pl_lang" + g_langnum)
			this.CBUser.Value = this.a_record.at_userid
			REPLACE c_selected WITH .T. FOR us_id = this.a_record.at_userid IN curUsers
		ENDIF
		SET FILTER TO c_selected IN curUsers
		SET FILTER TO c_selected IN curGroups
		this.DBDate.ControlSource = [thisform.a_record.at_date]
		this.TBTime.ControlSource = [thisform.a_record.at_time]
		this.EBNote.ControlSource = [thisform.a_record.at_note]
		this.cboroomname1.ControlSource = [thisform.a_record.at_roomnum]
		this.at_hkeep.ControlSource = [thisform.a_record.at_hkeep]
		this.CBType.ControlSource = [thisform.a_record.at_acttyp]
		*this.CBUser.ControlSource = [thisform.a_record.at_userid]
		this.lstUsers.RowSource = [curUsers.us_id,us_name]
		this.lstGroups.RowSource = [curGroups.gr_group]
		this.chkReccuring.ControlSource = [thisform.lReccurring]
		
		this.chkReccuring.Visible = (this.cMode = "NEW")
		this.LCreated.Visible = (this.cMode = "EDIT")
		this.TBCreated.Visible = (this.cMode = "EDIT")
		this.TBCreated.Value = TRIM(this.a_record.at_insuser) + ', ' + DTOC(this.a_record.at_insdate) + ' ' + this.a_record.at_instime
		
	ENDPROC

	PROCEDURE insertactions
		LOCAL l_nSelect, l_lInsertAny
		
		l_nSelect = SELECT()
		
		IF DLocate("curGroups", "c_selected")
			SELECT curGroups
			SCAN FOR c_selected
				this.a_record.at_userid = ""
				ProcAction("ActInsert", this.a_record, this.cMode, gr_group, .T., this.cFilterCursor, this.ocaAction)
				l_lInsertAny = .T.
			ENDSCAN
		ELSE
			SELECT curUsers
			SCAN FOR c_selected
				this.a_record.at_userid = us_id
				ProcAction("ActInsert", this.a_record, this.cMode, "", .T., this.cFilterCursor, this.ocaAction)
				l_lInsertAny = .T.
			ENDSCAN
		ENDIF
		IF NOT l_lInsertAny
			ProcAction("ActInsert", this.a_record, this.cMode, "", .T., this.cFilterCursor, this.ocaAction)
		ENDIF
		
		SELECT (l_nSelect)
		
		RETURN .T.
	ENDPROC

	PROCEDURE KeyPress
		LPARAMETERS nKeyCode, nShiftAltCtrl
		
		IF nKeyCode = 27
			this.OnClose()
			NODEFAULT
		ENDIF
	ENDPROC

	PROCEDURE Load
		LOCAL l_cSql
		
		DODEFAULT()
		
		OpenFile(,"group")
		OpenFile(,"user")
		OpenFile(,"action")
		this.ocaAction = CREATEOBJECT("caAction")
		this.ocaAction.cfilterclause = "0=1"
		this.ocaAction.CursorFill()
		
		* Get users for curUsers cursor, which is used as rowsource for lstUsers listbox
		TEXT TO l_cSql TEXTMERGE NOSHOW PRETEXT 15
			SELECT us_id, us_name, 0=1 AS c_selected 
			FROM "user" 
			WHERE NOT us_inactiv 
			ORDER BY 1
		ENDTEXT
		SqlCursor(l_cSql,"curUsers",,,,,,.T.)
		
		* Get groups for curGroups cursor, which is used as rowsource for lstGroups listbox
		TEXT TO l_cSql TEXTMERGE NOSHOW PRETEXT 15
			SELECT gr_group, 0=1 AS c_selected 
				FROM "group" 
				UNION 
				SELECT CAST('' AS Char(10)) AS gr_group, 0=1 AS c_selected FROM param 
				ORDER BY 1
		ENDTEXT
		SqlCursor(l_cSql,"curGroups",,,,,,.T.)
		
		RETURN .T.
	ENDPROC

	PROCEDURE lreccurring_assign
		LPARAMETERS vNewVal
		LOCAL l_nAddWith, l_lChanged
		
		l_nAddWith = 214
		IF vNewVal
			IF vNewVal <> this.lReccurring
				this.Resize()
				this.w = this.w + l_nAddWith
				this.Width = this.Width + l_nAddWith*this.sw
				STORE .T. TO this.dFrom.Visible, ;
						this.dto.Visible, ;
						this.lbldays.Visible, ;
						this.txtdays.Visible, ;
						this.chkMon.Visible, ;
						this.chkTue.Visible, ;
						this.chkWed.Visible, ;
						this.chkThu.Visible, ;
						this.chkFri.Visible, ;
						this.chkSat.Visible, ;
						this.chkSun.Visible, ;
						this.lblFrom.Visible, ;
						this.lblTo.Visible, ;
						this.lblEvery.Visible
				this.dFrom.Value = this.a_record.at_date
				this.dto.Value = this.a_record.at_date
				this.txtdays.Value = 1
				STORE .T. TO this.chkMon.Value, ;
						this.chkTue.Value, ;
						this.chkWed.Value, ;
						this.chkThu.Value, ;
						this.chkFri.Value, ;
						this.chkSat.Value, ;
						this.chkSun.Value
				l_lChanged = .T.
			ENDIF
		ELSE
			IF vNewVal <> this.lReccurring
				this.Resize()
				this.w = this.w - l_nAddWith
				this.Width = this.Width - l_nAddWith*this.sw
				STORE .F. TO this.dFrom.Visible, ;
						this.dto.Visible, ;
						this.lbldays.Visible, ;
						this.txtdays.Visible, ;
						this.chkMon.Visible, ;
						this.chkTue.Visible, ;
						this.chkWed.Visible, ;
						this.chkThu.Visible, ;
						this.chkFri.Visible, ;
						this.chkSat.Visible, ;
						this.chkSun.Visible, ;
						this.lblFrom.Visible, ;
						this.lblTo.Visible, ;
						this.lblEvery.Visible
				l_lChanged = .T.
			ENDIF
		ENDIF
		
		this.lReccurring = m.vNewVal
		
		IF l_lChanged = .T.
			this.Resize()
			this.Refresh()
			*this.chkReccuring.Refresh()
		ENDIF
		
	ENDPROC

	PROCEDURE onclose
		this.Release()
	ENDPROC

	PROCEDURE QueryUnload
		this.OnClose()
		NODEFAULT
	ENDPROC

	PROCEDURE reccuringinsert
		LOCAL l_dFrom, l_dTo, i, l_dDate, l_nEveryDay, l_nDay
		
		l_dFrom = this.dFrom.Value
		l_dTo = this.dTo.Value
		l_nEveryDay = this.txtDays.Value
		IF EMPTY(l_dFrom) OR l_dFrom < SysDate()
			Alert(GetLangText("RECURRES","TXT_DATE_NOT_VALID"))
			this.dFrom.SetFocus()
			RETURN .F.
		ENDIF
		IF EMPTY(l_dTo) OR l_dTo < SysDate()
			alert(GetLangText("RECURRES","TXT_DATE_NOT_VALID"))
			this.dTo.SetFocus()
			RETURN .F.
		ENDIF
		
		l_tReccurDateTime = DATETIME()
		
		l_dDate = l_dFrom-1
		DO WHILE l_dDate < l_dTo
			l_dDate = l_dDate + 1
			* check every X day interval
			IF NOT INLIST(l_nEveryDay, 0, 1) AND MOD(l_dDate-l_dFrom, l_nEveryDay) > 0 && Always allow first day
				LOOP
			ENDIF
			* check weekdays
			IF NOT this.chkMon.Value AND DOW(l_dDate,2) = 1
				LOOP
			ENDIF
			IF NOT this.chkTue.Value AND DOW(l_dDate,2) = 2
				LOOP
			ENDIF
			IF NOT this.chkWed.Value AND DOW(l_dDate,2) = 3
				LOOP
			ENDIF
			IF NOT this.chkThu.Value AND DOW(l_dDate,2) = 4
				LOOP
			ENDIF
			IF NOT this.chkFri.Value AND DOW(l_dDate,2) = 5
				LOOP
			ENDIF
			IF NOT this.chkSat.Value AND DOW(l_dDate,2) = 6
				LOOP
			ENDIF
			IF NOT this.chkSun.Value AND DOW(l_dDate,2) = 7
				LOOP
			ENDIF
			
			this.a_record.at_date = l_dDate
			this.a_record.at_reccur = l_tReccurDateTime
			WAIT WINDOW TRANSFORM(l_dDate) NOWAIT
			this.InsertActions()
		ENDDO
		
		WAIT CLEAR
		
		RETURN .T.
	ENDPROC

	PROCEDURE userspopup
		LPARAMETERS XCoor, YCoor
		LOCAL l_nBar
		
		l_nBar = 0
		DEFINE POPUP PopupMenu SHORTCUT RELATIVE FROM YCoor, XCoor
		DEFINE BAR 1 OF PopupMenu PROMPT GetLangText("ALZOOMIN","TT_DELETE") SKIP FOR EOF("curUsers") PICTURE "bitmap\toolbar\delete.bmp"
		ON SELECTION BAR 1 OF PopupMenu l_nBar = 1
		ACTIVATE POPUP PopupMenu
		
		IF l_nBar = 1
			REPLACE c_selected WITH .F. IN curUsers
			this.lstUsers.Requery()
		ENDIF
		
		RETURN .T.
	ENDPROC

	PROCEDURE CBGroup.getrowsourcebefore
		LOCAL l_cSql
		WITH this
			TEXT TO .jsql TEXTMERGE NOSHOW PRETEXT 15
				SELECT gr_group 
					FROM "group" 
					UNION 
					SELECT "" FROM "group" 
					ORDER BY 1
			ENDTEXT
			.jboundcolumn = 1
			.jcolumncount = 1
			.jcolumnwidths = "100"
		ENDWITH
		
		RETURN .T.
	ENDPROC

	PROCEDURE CBGroup.Valid
		LPARAMETERS lp_lSetValue
		LOCAL l_lValid
		
		l_lValid = DODEFAULT()
		
		thisform.lstGroups.Value = STRTRAN(thisform.lstGroups.Value, " ")
		IF NOT EMPTY(l_lValid) AND NOT EMPTY(this.Value)
			SET FILTER TO IN curGroups
			IF DLocate("curGroups", "gr_group = " + SqlCnv(this.Value))
				REPLACE c_selected WITH .T. IN curGroups
			ENDIF
			SET FILTER TO c_selected IN curGroups
			thisform.lstGroups.Requery()
		
			* When group is selected, users are ignored
			IF dlocate("curUsers", "c_selected")
				REPLACE c_selected WITH .F. ALL IN curUsers
				thisform.lstUsers.Requery()
				thisform.CBUser.Value = ""
				thisform.CBUser.Refresh()
			ENDIF
		
		ENDIF
		
		RETURN l_lValid
	ENDPROC

	PROCEDURE CBType.getrowsourcebefore
		LOCAL l_cSql
		WITH this
			TEXT TO .jsql TEXTMERGE NOSHOW PRETEXT 15
				SELECT pl_charcod, pl_lang<<g_langnum>> AS pl_lang 
					FROM picklist 
					WHERE pl_label = <<sqlcnv("ACTION",.T.)>> 
					UNION 
					SELECT "", "" FROM picklist 
					ORDER BY 1
			ENDTEXT
			.jboundcolumn = 1
			.jcolumncount = 2
			.jcolumnwidths = "40,150"
		ENDWITH
		
		RETURN .T.
	ENDPROC

	PROCEDURE CBType.oninteractivechange
		this.Parent.TBSayType.Value = EVALUATE(this.jCursor + ".pl_lang")
	ENDPROC

	PROCEDURE CBUser.getrowsourcebefore
		LOCAL l_cSql
		WITH this
			TEXT TO .jsql TEXTMERGE NOSHOW PRETEXT 15
				SELECT us_id, us_name 
					FROM "user" 
					WHERE NOT us_inactiv 
					UNION 
					SELECT "", "" FROM "user" 
					ORDER BY 1
			ENDTEXT
			.jboundcolumn = 1
			.jcolumncount = 2
			.jcolumnwidths = "80,150"
		ENDWITH
		
		RETURN .T.
	ENDPROC

	PROCEDURE CBUser.Valid
		LPARAMETERS lp_lSetValue
		LOCAL l_lValid
		
		l_lValid = DODEFAULT()
		
		thisform.lstUsers.Value = STRTRAN(thisform.lstUsers.Value, " ")
		IF NOT EMPTY(l_lValid) AND NOT EMPTY(this.Value)
			SET FILTER TO IN curUsers
			IF DLocate("curUsers", "us_id = " + SqlCnv(this.Value))
				REPLACE c_selected WITH .T. IN curUsers
			ENDIF
			SET FILTER TO c_selected IN curUsers
			thisform.lstUsers.Requery()
		
			* When user is selected, groups are ignored
			IF dlocate("curGroups", "c_selected")
				REPLACE c_selected WITH .F. ALL IN curGroups
				thisform.lstGroups.Requery()
				thisform.CBGroup.Value = ""
				thisform.CBGroup.Refresh()
			ENDIF
		
		ENDIF
		
		RETURN l_lValid
	ENDPROC

	PROCEDURE CmdCancel.Click
		thisform.OnClose()
	ENDPROC

	PROCEDURE CmdOK.Click
		LOCAL l_lSuccess
		IF EMPTY(thisform.a_record.at_acttyp)
			= alErt(GetLangText("ACT","TA_TYPEREQ"))
			RETURN l_lSuccess
		ENDIF
		
		IF thisform.lReccurring
			l_lSuccess = thisform.ReccuringInsert()
			IF NOT l_lSuccess
				RETURN l_lSuccess
			ENDIF
		ELSE
			thisform.InsertActions()
			l_lSuccess = .T.
		ENDIF
		
		thisform.OnClose()
	ENDPROC

	PROCEDURE DBDate.Valid
		RETURN EMPTY(thisform.a_record.at_date) OR thisform.a_record.at_date >= SysDate()
	ENDPROC

	PROCEDURE dfrom.Valid
		RETURN EMPTY(thisform.a_record.at_date) .OR. thisform.a_record.at_date>=SysDate()
	ENDPROC

	PROCEDURE dto.Valid
		RETURN EMPTY(thisform.a_record.at_date) .OR. thisform.a_record.at_date>=SysDate()
	ENDPROC

	PROCEDURE lstGroups.GotFocus
		IF this.ListCount > 0
			this.selected(1) = .T.
		ENDIF
	ENDPROC

	PROCEDURE lstGroups.InteractiveChange
		thisform.CBGroup.Value = curGroups.gr_group
		
		DODEFAULT()
	ENDPROC

	PROCEDURE lstGroups.KeyPress
		LPARAMETERS nKeyCode, nShiftAltCtrl
		
		IF nKeyCode = 7 AND nShiftAltCtrl = 0
			NODEFAULT
			REPLACE c_selected WITH .F. IN curGroups
			this.Requery()
			IF this.ListCount > 0
				this.selected(1) = .T.
			ENDIF
			this.Parent.CBGroup.Value = ""
			this.Parent.CBGroup.Refresh()
		ENDIF
	ENDPROC

	PROCEDURE lstGroups.MouseUp
		LPARAMETERS nButton, nShift, nXCoord, nYCoord
		
		IF nButton = 2
			thisform.GroupsPopup(MCOL(), MROW())
		ENDIF
	ENDPROC

	PROCEDURE lstUsers.GotFocus
		IF this.ListCount > 0
			this.selected(1) = .T.
		ENDIF
	ENDPROC

	PROCEDURE lstUsers.InteractiveChange
		thisform.CBUser.Value = curUsers.us_id
		
		DODEFAULT()
	ENDPROC

	PROCEDURE lstUsers.KeyPress
		LPARAMETERS nKeyCode, nShiftAltCtrl
		
		IF nKeyCode = 7 AND nShiftAltCtrl = 0
			NODEFAULT
			REPLACE c_selected WITH .F. IN curUsers
			this.Requery()
			IF this.ListCount > 0
				this.selected(1) = .T.
			ENDIF
			this.Parent.CBUser.Value = ""
			this.Parent.CBUser.Refresh()
		ENDIF
	ENDPROC

	PROCEDURE lstUsers.MouseUp
		LPARAMETERS nButton, nShift, nXCoord, nYCoord
		
		IF nButton = 2
			thisform.UsersPopup(MCOL(), MROW())
		ENDIF
	ENDPROC

	PROCEDURE TBTime.Valid
		LOCAL nhOurs, nmInutes
		
		IF EMPTY(SUBSTR(thisform.a_record.at_time, 1, 2) + SUBSTR(thisform.a_record.at_time, 4, 2))
			thisform.a_record.at_time = "  :  "
		ELSE
			nhOurs = MAX(0, MIN(23, VAL(SUBSTR(thisform.a_record.at_time, 1, 2))))
			nmInutes = MAX(0, MIN(59, VAL(SUBSTR(thisform.a_record.at_time, 4, 2))))
			thisform.a_record.at_time = PADL(LTRIM(STR(nhOurs)), 2, "0") + ":" + PADL(LTRIM(STR(nmInutes)), 2, "0")
		ENDIF
		
		RETURN .T.
	ENDPROC

ENDDEFINE
