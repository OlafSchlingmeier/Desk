*--------------------------------------------------------------------------------------------------------------------------------------------------------
* (ES) AUTOGENERADO - ¡¡ATENCIÓN!! - ¡¡NO PENSADO PARA EJECUTAR!! USAR SOLAMENTE PARA INTEGRAR CAMBIOS Y ALMACENAR CON HERRAMIENTAS SCM!!
* (EN) AUTOGENERATED - ATTENTION!! - NOT INTENDED FOR EXECUTION!! USE ONLY FOR MERGING CHANGES AND STORING WITH SCM TOOLS!!
*--------------------------------------------------------------------------------------------------------------------------------------------------------
*< FOXBIN2PRG: Version="1.19" SourceFile="_pg_searchres.scx" /> (Solo para binarios VFP 9 / Only for VFP 9 binaries)
*
*
DEFINE CLASS dataenvironment AS dataenvironment 
 	*< CLASSDATA: Baseclass="dataenvironment" Timestamp="" Scale="" Uniqueid="" ClassIcon="1" />

	DataSource = .NULL.
	Height = 200
	Left = 1
	Name = "Dataenvironment"
	Top = 220
	Width = 520
	
	PROCEDURE BeforeOpenTables
		SetDataPath(this)
	ENDPROC

ENDDEFINE

DEFINE CLASS searchres AS tform OF "..\libs\main.vcx" 
 	*< CLASSDATA: Baseclass="form" Timestamp="" Scale="" Uniqueid="" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="lbl1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txt1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="dtxt1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cbo1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chk1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txt12" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="dtxt12" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lbl2" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txt2" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="dtxt2" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chk2" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lbl3" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txt3" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chk3" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lbl4" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txt4" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chk4" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lbl5" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txt5" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chk5" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lbl6" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txt6" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chk6" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lbl7" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txt7" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chk7" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lbl8" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txt8" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chk8" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lbl9" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txt9" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chk9" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lbl10" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txt10" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chk10" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdOK" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdCancel" UniqueID="" Timestamp="" />

	*<DefinedPropArrayMethod>
		*p: arrdate
		*p: calterfilter
		*p: cexpr
		*p: cfilter
		*p: corder
		*p: corderascdesc
		*p: corderexpression
		*p: cseekexpression
		*p: eseekvalue
		*p: naltid
		*p: nbar
		*p: neiid
		*p: nfound
		*p: ocallingformref
	*</DefinedPropArrayMethod>

	AlwaysOnTop = .T.
	arrdate = {}
	calterfilter = 
	Caption = "formSearchres"
	cexpr = 
	cfilter = 
	ControlBox = .T.
	corder = 
	corderascdesc = 
	corderexpression = 
	cseekexpression = 
	DoCreate = .T.
	eseekvalue = 
	Height = 264
	Icon = ..\bitmap\icons\binoculr.ico
	MaxButton = .F.
	MinButton = .F.
	naltid = 0
	Name = "searchres"
	nbar = 0
	neiid = 0
	nfound = 1
	ocallingformref = .NULL.
	Width = 480
	WindowType = 1

	ADD OBJECT 'cbo1' AS jcombobox WITH ;
		ColumnLines = .F., ;
		Left = 108, ;
		Name = "cbo1", ;
		Style = 2, ;
		Top = 12, ;
		Visible = .F., ;
		Width = 120, ;
		ZOrderSet = 3
		*< END OBJECT: ClassLib="..\libs\jbase.vcx" BaseClass="combobox" />

	ADD OBJECT 'chk1' AS tcheckbox WITH ;
		Alignment = 0, ;
		Caption = "chk1", ;
		Left = 108, ;
		Name = "chk1", ;
		Top = 15, ;
		Visible = .F., ;
		Width = 252, ;
		ZOrderSet = 4
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="checkbox" />

	ADD OBJECT 'chk10' AS tcheckbox WITH ;
		Alignment = 0, ;
		Caption = "chk10", ;
		Left = 108, ;
		Name = "chk10", ;
		Top = 231, ;
		Visible = .F., ;
		Width = 252, ;
		ZOrderSet = 34
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="checkbox" />

	ADD OBJECT 'chk2' AS tcheckbox WITH ;
		Alignment = 0, ;
		Caption = "chk2", ;
		Left = 108, ;
		Name = "chk2", ;
		Top = 39, ;
		Visible = .F., ;
		Width = 252, ;
		ZOrderSet = 10
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="checkbox" />

	ADD OBJECT 'chk3' AS tcheckbox WITH ;
		Alignment = 0, ;
		Caption = "chk3", ;
		Left = 108, ;
		Name = "chk3", ;
		Top = 63, ;
		Visible = .F., ;
		Width = 252, ;
		ZOrderSet = 13
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="checkbox" />

	ADD OBJECT 'chk4' AS tcheckbox WITH ;
		Alignment = 0, ;
		Caption = "chk4", ;
		Left = 108, ;
		Name = "chk4", ;
		Top = 87, ;
		Visible = .F., ;
		Width = 252, ;
		ZOrderSet = 16
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="checkbox" />

	ADD OBJECT 'chk5' AS tcheckbox WITH ;
		Alignment = 0, ;
		Caption = "chk5", ;
		Left = 108, ;
		Name = "chk5", ;
		Top = 111, ;
		Visible = .F., ;
		Width = 252, ;
		ZOrderSet = 19
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="checkbox" />

	ADD OBJECT 'chk6' AS tcheckbox WITH ;
		Alignment = 0, ;
		Caption = "chk6", ;
		Left = 108, ;
		Name = "chk6", ;
		Top = 135, ;
		Visible = .F., ;
		Width = 252, ;
		ZOrderSet = 22
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="checkbox" />

	ADD OBJECT 'chk7' AS tcheckbox WITH ;
		Alignment = 0, ;
		Caption = "chk7", ;
		Left = 108, ;
		Name = "chk7", ;
		Top = 159, ;
		Visible = .F., ;
		Width = 252, ;
		ZOrderSet = 25
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="checkbox" />

	ADD OBJECT 'chk8' AS tcheckbox WITH ;
		Alignment = 0, ;
		Caption = "chk8", ;
		Left = 108, ;
		Name = "chk8", ;
		Top = 183, ;
		Visible = .F., ;
		Width = 252, ;
		ZOrderSet = 28
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="checkbox" />

	ADD OBJECT 'chk9' AS tcheckbox WITH ;
		Alignment = 0, ;
		Caption = "chk9", ;
		Left = 108, ;
		Name = "chk9", ;
		Top = 207, ;
		Visible = .F., ;
		Width = 252, ;
		ZOrderSet = 31
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="checkbox" />

	ADD OBJECT 'cmdCancel' AS tcommandbutton WITH ;
		Cancel = .T., ;
		Caption = "cmdCancel", ;
		Left = 384, ;
		Name = "cmdCancel", ;
		Top = 48, ;
		ZOrderSet = 36
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'cmdOK' AS tcommandbutton WITH ;
		Caption = "cmdOK", ;
		Default = .T., ;
		Left = 384, ;
		Name = "cmdOK", ;
		Top = 12, ;
		ZOrderSet = 35
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'dtxt1' AS tdatectrl WITH ;
		Alignment = 3, ;
		Left = 108, ;
		Name = "dtxt1", ;
		Top = 12, ;
		Value = {}, ;
		Visible = .F., ;
		Width = 120, ;
		ZOrderSet = 2
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />

	ADD OBJECT 'dtxt12' AS tdatectrl WITH ;
		Alignment = 3, ;
		Left = 240, ;
		Name = "dtxt12", ;
		Top = 12, ;
		Value = {}, ;
		Visible = .F., ;
		Width = 120, ;
		ZOrderSet = 6
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />

	ADD OBJECT 'dtxt2' AS tdatectrl WITH ;
		Alignment = 3, ;
		Left = 108, ;
		Name = "dtxt2", ;
		Top = 36, ;
		Value = {}, ;
		Visible = .F., ;
		Width = 120, ;
		ZOrderSet = 9
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />

	ADD OBJECT 'lbl1' AS tlabel WITH ;
		Caption = "lbl1", ;
		Left = 12, ;
		Name = "lbl1", ;
		Top = 15, ;
		Width = 96, ;
		ZOrderSet = 0
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'lbl10' AS tlabel WITH ;
		Caption = "lbl10", ;
		Left = 12, ;
		Name = "lbl10", ;
		Top = 231, ;
		Visible = .F., ;
		Width = 96, ;
		ZOrderSet = 32
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'lbl2' AS tlabel WITH ;
		Caption = "lbl2", ;
		Left = 12, ;
		Name = "lbl2", ;
		Top = 39, ;
		Width = 96, ;
		ZOrderSet = 7
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'lbl3' AS tlabel WITH ;
		Caption = "lbl3", ;
		Left = 12, ;
		Name = "lbl3", ;
		Top = 63, ;
		Visible = .F., ;
		Width = 96, ;
		ZOrderSet = 11
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'lbl4' AS tlabel WITH ;
		Caption = "lbl4", ;
		Left = 12, ;
		Name = "lbl4", ;
		Top = 87, ;
		Visible = .F., ;
		Width = 96, ;
		ZOrderSet = 14
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'lbl5' AS tlabel WITH ;
		Caption = "lbl5", ;
		Left = 12, ;
		Name = "lbl5", ;
		Top = 111, ;
		Visible = .F., ;
		Width = 96, ;
		ZOrderSet = 17
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'lbl6' AS tlabel WITH ;
		Caption = "lbl6", ;
		Left = 12, ;
		Name = "lbl6", ;
		Top = 135, ;
		Visible = .F., ;
		Width = 96, ;
		ZOrderSet = 20
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'lbl7' AS tlabel WITH ;
		Caption = "lbl7", ;
		Left = 12, ;
		Name = "lbl7", ;
		Top = 159, ;
		Visible = .F., ;
		Width = 96, ;
		ZOrderSet = 23
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'lbl8' AS tlabel WITH ;
		Caption = "lbl8", ;
		Left = 12, ;
		Name = "lbl8", ;
		Top = 183, ;
		Visible = .F., ;
		Width = 96, ;
		ZOrderSet = 26
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'lbl9' AS tlabel WITH ;
		Caption = "lbl9", ;
		Left = 12, ;
		Name = "lbl9", ;
		Top = 207, ;
		Visible = .F., ;
		Width = 96, ;
		ZOrderSet = 29
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'txt1' AS ttext WITH ;
		Left = 108, ;
		Name = "txt1", ;
		Top = 12, ;
		Width = 120, ;
		ZOrderSet = 1
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />

	ADD OBJECT 'txt10' AS ttext WITH ;
		Left = 108, ;
		Name = "txt10", ;
		Top = 228, ;
		Visible = .F., ;
		Width = 252, ;
		ZOrderSet = 33
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />

	ADD OBJECT 'txt12' AS ttext WITH ;
		Left = 240, ;
		Name = "txt12", ;
		Top = 12, ;
		Visible = .F., ;
		Width = 120, ;
		ZOrderSet = 5
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />

	ADD OBJECT 'txt2' AS ttext WITH ;
		Left = 108, ;
		Name = "txt2", ;
		Top = 36, ;
		Width = 120, ;
		ZOrderSet = 8
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />

	ADD OBJECT 'txt3' AS ttext WITH ;
		Left = 108, ;
		Name = "txt3", ;
		Top = 60, ;
		Visible = .F., ;
		Width = 252, ;
		ZOrderSet = 12
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />

	ADD OBJECT 'txt4' AS ttext WITH ;
		Left = 108, ;
		Name = "txt4", ;
		Top = 84, ;
		Visible = .F., ;
		Width = 252, ;
		ZOrderSet = 15
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />

	ADD OBJECT 'txt5' AS ttext WITH ;
		Left = 108, ;
		Name = "txt5", ;
		Top = 108, ;
		Visible = .F., ;
		Width = 252, ;
		ZOrderSet = 18
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />

	ADD OBJECT 'txt6' AS ttext WITH ;
		Left = 108, ;
		Name = "txt6", ;
		Top = 132, ;
		Visible = .F., ;
		Width = 252, ;
		ZOrderSet = 21
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />

	ADD OBJECT 'txt7' AS ttext WITH ;
		Left = 108, ;
		Name = "txt7", ;
		Top = 156, ;
		Visible = .F., ;
		Width = 252, ;
		ZOrderSet = 24
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />

	ADD OBJECT 'txt8' AS ttext WITH ;
		Left = 108, ;
		Name = "txt8", ;
		Top = 180, ;
		Visible = .F., ;
		Width = 252, ;
		ZOrderSet = 27
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />

	ADD OBJECT 'txt9' AS ttext WITH ;
		Left = 108, ;
		Name = "txt9", ;
		Top = 204, ;
		Visible = .F., ;
		Width = 252, ;
		ZOrderSet = 30
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />
	
	PROCEDURE Init
		LPARAMETERS pl_oRef, pl_nbarnum, pl_cFilter
		LOCAL lnCount, cTmp, cCaption, l_cSql, l_dResShowDate
		
		this.oCallingFormRef = pl_oRef
		this.oCallingFormRef.Enabled = .F.
		this.cOrder = ""
		IF PCOUNT() = 3
			this.cfilter = pl_cFilter
		ENDIF
		this.nbar=pl_nbarnum
		this.Caption=GetLangText("RESERVAT","TW_RSSEARCH")
		this.cmdOk.Caption =GetLangText("COMMON","TXT_OK")
		this.cmdCancel.Caption = GetLangText("COMMON","TXT_CANCEL")
		STORE .F. TO this.dtxt1.Visible, this.dtxt12.Visible, this.dtxt2.Visible && Needed to make invisible dropdown button in date control
		DO CASE
			Case pl_nbarnum=1
			*name
				this.txt2.Visible = .F.
				this.dtxt2.Visible = .T.
				This.txt1.Width=252
				this.txt1.w = this.txt1.Width
				this.txt1.InputMask=REPLICATE('!',30)
				This.Height=88
				this.lbl1.Caption=GetLangText("RESERVAT","T_LNAME")
				this.lbl2.Caption=GetLangText("RESERVAT","T_ARRDATE")
			Case pl_nbarnum=2
			*company
				this.txt2.Visible = .F.
				this.dtxt2.Visible = .T.
				This.txt1.Width=252
				this.txt1.w = this.txt1.Width
				this.txt1.InputMask=REPLICATE('!',30)
				This.Height=88
				this.lbl1.Caption=GetLangText("RESERVAT","T_COMPANY")
				this.lbl2.Caption=GetLangText("RESERVAT","T_ARRDATE")
			Case pl_nbarnum=3
			*agent
				this.txt2.Visible = .F.
				this.dtxt2.Visible = .T.
				This.txt1.Width=252
				this.txt1.w = this.txt1.Width
				this.txt1.InputMask=REPLICATE('!',30)
				This.Height=88
				this.lbl1.Caption=GetLangText("RESERVAT","T_AGENT")
				this.lbl2.Caption=GetLangText("RESERVAT","T_ARRDATE")
			Case pl_nbarnum=4
			*group
				this.txt2.Visible = .F.
				this.dtxt2.Visible = .T.
				This.txt1.Width=252
				this.txt1.w = this.txt1.Width
				This.Height=88
				this.txt1.InputMask=REPLICATE('!',30)
				this.lbl1.Caption=GetLangText("RESERVAT","T_GROUP")
				this.lbl2.Caption=GetLangText("RESERVAT","T_ARRDATE")
			Case pl_nbarnum=5
			*allotment
				this.txt2.Visible = .F.
				this.dtxt2.Visible = .T.
				this.txt1.Visible = .F.
				this.cbo1.Visible = .T.
				TEXT TO l_cSql TEXTMERGE NOSHOW PRETEXT 2 + 8
				SELECT al_allott, al_fromdat, al_todat, al_altid ;
						FROM althead ;
						ORDER BY al_allott, al_fromdat
				ENDTEXT
				l_cSql = STRTRAN(l_cSql,";","")
				this.cbo1.jsql = l_cSql
				this.cbo1.jcolumnwidths = "170,80,80,0"
				this.cbo1.InputMask=REPLICATE('!',30)
				this.cbo1.ControlSource = [thisform.naltid]
				this.cbo1.Init()
				this.dtxt2.Value=_screen.oGlobal.oParam.pa_sysdate
				this.lbl1.Caption=GetLangText("RESERVAT","T_ALLOTT")
				this.lbl2.Caption=GetLangText("RESERVAT","T_ARRDATE")
				This.Height=88
			Case pl_nbarnum=7
			*arrival
				STORE .T. TO this.dtxt1.Visible, this.dtxt12.Visible
				STORE .F. TO this.txt1.Visible, this.txt12.Visible, this.txt2.Visible
				this.Height=88
				this.dtxt1.Value=_screen.oGlobal.oParam.pa_sysdate
				this.dtxt12.Value=this.dtxt1.Value+7
				this.lbl1.Caption=GetLangText("RESERVAT","T_ARRDATE")
			Case pl_nbarnum=8
			*departure
				STORE .T. TO this.dtxt1.Visible, this.dtxt12.Visible
				STORE .F. TO this.txt1.Visible, this.txt12.Visible, this.txt2.Visible
				this.Height=88
				this.dtxt1.Value=_screen.oGlobal.oParam.pa_sysdate
				this.dtxt12.Value=this.dtxt1.Value+7
				this.lbl1.Caption=GetLangText("RESERVAT","T_DEPDATE")
			Case pl_nbarnum=9
			*roomnum
				this.txt2.Visible = .F.
				this.dtxt2.Visible = .T.
				this.chk1.Visible = .T.
				this.chk1.Left = this.dtxt12.Left
				this.chk1.Width = this.dtxt12.Width
				this.chk1.l = this.chk1.Left
				this.chk1.w = this.chk1.Width
				this.chk1.Value = 1
				this.txt1.Width=90
				this.txt1.w = this.txt1.Width
				*this.dtxt2.Value=_screen.oGlobal.oParam.pa_sysdate
				this.Height=88
				this.txt1.InputMask=REPLICATE('!',10)
				this.lbl1.Caption=GetLangText("RESERVAT","T_ROOMNUM")
				this.lbl2.Caption=GetLangText("RESERVAT","T_ARRDATE")
				this.chk1.Caption=GetLangText("ADDRESS","TXT_EXACT_SEARCH")
			Case pl_nbarnum=10
			*roomtype
				this.txt2.Visible = .F.
				this.dtxt2.Visible = .T.
				this.txt1.Visible = .F.
				this.cbo1.Visible = .T.
				this.cbo1.Value = 0
				TEXT TO l_cSql TEXTMERGE NOSHOW PRETEXT 2 + 8
				SELECT rd_roomtyp, rd_lang<<g_langnum>> AS rd_lang, rd_rdid ;
						FROM rtypedef ;
						ORDER BY rd_roomtyp
				ENDTEXT
				this.cbo1.jsql = STRTRAN(l_cSql,";","")
				this.cbo1.jcolumnwidths = "50,150,0"
				this.cbo1.InputMask=REPLICATE('!',10)
				this.cbo1.Init()
				this.Height=88
				this.dtxt2.Value=_screen.oGlobal.oParam.pa_sysdate
				this.lbl1.Caption=GetLangText("RESERVAT","T_ROOMTYPE")
				this.lbl2.Caption=GetLangText("RESERVAT","T_ARRDATE")
			Case pl_nbarnum=11
			*status
				this.txt2.Visible = .F.
				this.dtxt2.Visible = .T.
				this.txt1.Visible = .F.
				this.cbo1.Visible = .T.
				TEXT TO l_cSql TEXTMERGE NOSHOW PRETEXT 2 + 8
				SELECT pl_charcod, pl_lang<<g_langnum>> AS pl_lang ;
						FROM picklist WHERE pl_label = 'RESSTATUS' ;
						UNION SELECT CAST('NS' AS char(3)), CAST('No Show' AS char(25)) FROM param ;
						UNION SELECT CAST('CXL' AS char(3)), CAST('Canceled' AS char(25)) FROM param ;
						UNION SELECT CAST('IN' AS char(3)), CAST('Checked In' AS char(25)) FROM param ;
						UNION SELECT CAST('OUT' AS char(3)), CAST('Checked Out' AS char(25)) FROM param ;
						ORDER BY pl_charcod
				ENDTEXT
				this.cbo1.jsql = STRTRAN(l_cSql,";","")
				this.cbo1.jboundcolumn = 1
				this.cbo1.jcolumnwidths = "50,150"
				*this.cbo1.InputMask=REPLICATE('!',10)
				this.cbo1.Init()
				this.Height=88
				this.dtxt2.Value=_screen.oGlobal.oParam.pa_sysdate
				this.lbl1.Caption=GetLangText("RESERVAT","T_STATUS")
				this.lbl2.Caption=GetLangText("RESERVAT","T_ARRDATE")
			Case pl_nbarnum=12
			*reservation number
				this.txt1.Value=0
				this.txt2.Visible=.f.
				this.txt1.InputMask='99999999.999'
				this.lbl1.Caption=GetLangText("RESERVAT","T_RESNUM")
				this.Height=88
			Case pl_nbarnum=13
			*cancelation number
				this.txt2.Visible=.f.
				this.Height=88
				this.txt1.InputMask='99999999'
				this.lbl1.Caption=GetLangText("RESERVAT","T_CANCNUM")
			Case pl_nbarnum=20
			*recurring reservation name
				this.txt1.Width=252
				this.txt1.w = this.txt1.Width
				this.txt2.Visible=.f.
				this.Height=88
				this.txt1.InputMask=REPLICATE('!',20)
				this.lbl1.Caption=GetLangText("RESERVAT","TXT_RECURNAME")
			Case pl_nbarnum=22
			*memeberid
				this.txt2.Visible=.f.
				this.Height=88
				this.txt1.InputMask='999999999'
				this.lbl1.Caption=GetLangText("RESERVAT","TXT_MEMBER")	
			Case pl_nbarnum=23
			*user fields
				this.txt1.Visible=.f.
				this.txt2.Visible=.f.
				this.txt2.Width = this.txt3.Width
				this.txt2.w = this.txt2.Width
		
				FOR lnCount=1 TO 10
					cTmp='cCaption=IIF(EMPTY(_screen.oGlobal.oParam.pa_usrres'+TRANSFORM(MOD(lncount,10))+"),'<User"+TRANSFORM(lncount)+">',TRIM(_screen.oGlobal.oParam.pa_usrres"+TRANSFORM(MOD(lncount,10))+'))'
					&cTmp
					IF SUBSTR(_screen.oGlobal.oParam.pa_setusre,lncount,1)='C'
						cTmp='this.lbl'+TRANSFORM(lnCount)
						&cTmp..Visible=.F.
						cTmp='this.chk'+TRANSFORM(lnCount)
					ELSE
						cTmp='this.chk'+TRANSFORM(lnCount)
						&cTmp..Visible=.F.
						cTmp='this.lbl'+TRANSFORM(lnCount)
					ENDIF
					&cTmp..Caption=cCaption
					&cTmp..Visible=.t.
					IF SUBSTR(_screen.oGlobal.oParam.pa_setusre,lncount,1)#'C'
						cTmp='this.txt'+TRANSFORM(lncount)+'.Visible=.t.'
						&cTmp
						cTmp='this.txt'+TRANSFORM(lncount)+".InputMask=REPLICATE('!',35)"
						&cTmp
					ENDIF
				NEXT
			CASE pl_nbarnum=24
			* ratecode
				this.txt2.Visible = .F.
				this.dtxt2.Visible = .T.
				this.Height=88
				this.dtxt2.Value=_screen.oGlobal.oParam.pa_sysdate
				this.txt1.InputMask=REPLICATE('!',10)
				this.lbl1.Caption=GetLangText("RESERVAT","T_RATECODE")
				this.lbl2.Caption=GetLangText("RESERVAT","T_ARRDATE")
			CASE pl_nbarnum=25
			*cardauth
				this.txt2.Visible = .F.
				this.dtxt2.Visible = .T.
				this.Height=88
				this.dtxt2.Value=_screen.oGlobal.oParam.pa_sysdate
				this.txt1.InputMask=REPLICATE('9',10)
				this.lbl1.Caption=GetLangText("RESERVAT","T_CARDAUTH")
				this.lbl2.Caption=GetLangText("RESERVAT","T_ARRDATE")
			CASE pl_nbarnum=26
			*billnum
				this.txt2.Visible = .F.
				this.Height = 88
				this.txt1.InputMask = REPLICATE('9',10)
				this.lbl1.Caption = GetLangText("BILL","TXT_BILL_NUM")
			Case pl_nbarnum=30
			*event
				this.txt2.Visible = .F.
				this.dtxt2.Visible = .T.
				this.txt1.Visible = .F.
				this.cbo1.Visible = .T.
				l_dResShowDate = sysdate()-_screen.oGlobal.oParam.pa_holdres
				TEXT TO l_cSql TEXTMERGE NOSHOW PRETEXT 2 + 8
					SELECT ev_name AS EventName, ev_city AS EventCity, UPPER(ev_name) ;
						FROM events ;
						UNION SELECT CAST("" AS char(30)) AS EventName, CAST("" AS char(30)) AS EventCity, CAST("" AS char(30)) FROM param ;
						ORDER BY 3
				ENDTEXT
				l_cSql = STRTRAN(l_cSql,";","")
				this.cbo1.jsql = l_cSql
				this.cbo1.jboundcolumn = 1
				this.cbo1.jcolumnwidths = "170,100,0"
				this.cbo1.InputMask=REPLICATE('!',30)
		*		this.cbo1.ControlSource = [thisform.neiid]
				this.cbo1.Init()
				this.dtxt2.Value=_screen.oGlobal.oParam.pa_sysdate
				this.lbl1.Caption=GetLangText("EVENT","TXT_EVENT")
				this.lbl2.Caption=GetLangText("RESERVAT","T_ARRDATE")
				This.Height=88
			Case pl_nbarnum=31
			*rs_created
				this.txt1.Visible=.f.
				this.txt2.Visible=.f.
				this.dtxt1.Visible = .T.
				this.dtxt12.Visible = .T.
				this.Height=88
				this.dtxt1.Value=sysdate()
				this.lbl1.Caption=GetLangText("REFERRAL","TXT_INFO_CREATED")
			Case pl_nbarnum=50
			* Search Arrivals
				this.Caption = GetLangText("VIEW","TW_SEARCH")+" "+GetLangText("VIEW","TW_ARRIVALS")
				this.Height = 144
				this.lbl1.Visible = .T.
				this.lbl1.Caption = GetLangText("VIEW","T_DATE")
				this.txt1.Visible = .F.
				this.dtxt1.Visible = .T.
				this.dtxt1.Value = g_sysdate
				this.lbl2.Visible = .T.
				this.lbl2.Caption = GetLangText("VIEW","T_LNAME")
				this.txt2.Visible = .T.
				this.txt2.InputMask = REPLICATE("X",30)
				this.txt2.Width = 252
				this.txt2.w = this.txt2.Width
				this.lbl3.Visible = .T.
				this.lbl3.Caption = GetLangText("VIEW","T_COMPANY")
				this.txt3.Visible = .T.
				this.txt3.InputMask = REPLICATE("X",30)
				this.lbl4.Visible = .T.
				this.lbl4.Caption = GetLangText("VIEW","T_AGENT")
				this.txt4.Visible = .T.
				this.txt4.InputMask = REPLICATE("X",30)
				this.lbl5.Visible = .T.
				this.lbl5.Caption = GetLangText("VIEW","T_GROUP")
				this.txt5.Visible = .T.
				this.txt5.InputMask = REPLICATE("X",25)
			Case pl_nbarnum=51
			* Search Departures
				this.Caption = GetLangText("VIEW","TW_SEARCH")+" "+GetLangText("VIEW","TW_DEPARTS")
				this.Height = 144
				this.lbl1.Visible = .T.
				this.lbl1.Caption = GetLangText("VIEW","T_DATE")
				this.txt1.Visible = .F.
				this.dtxt1.Visible = .T.
				this.dtxt1.Value = g_sysdate
				this.lbl2.Visible = .T.
				this.lbl2.Caption = GetLangText("VIEW","T_LNAME")
				this.txt2.Visible = .T.
				this.txt2.InputMask = REPLICATE("X",30)
				this.txt2.Width = 252
				this.txt2.w = this.txt2.Width
				this.lbl3.Visible = .T.
				this.lbl3.Caption = GetLangText("VIEW","T_COMPANY")
				this.txt3.Visible = .T.
				this.txt3.InputMask = REPLICATE("X",30)
				this.lbl4.Visible = .T.
				this.lbl4.Caption = GetLangText("VIEW","T_AGENT")
				this.txt4.Visible = .T.
				this.txt4.InputMask = REPLICATE("X",30)
				this.lbl5.Visible = .T.
				this.lbl5.Caption = GetLangText("VIEW","T_GROUP")
				this.txt5.Visible = .T.
				this.txt5.InputMask = REPLICATE("X",25)
			Case pl_nbarnum=52
			* Search Inhouse
				this.Caption = GetLangText("VIEW","TW_SEARCH")+" "+GetLangText("VIEW","TW_INHOUSE")
				this.Height = 144
				this.lbl1.Visible = .T.
				this.lbl1.Caption = GetLangText("VIEW","T_DATE")
				this.txt1.Visible = .F.
				this.dtxt1.Visible = .T.
				this.dtxt1.Value = g_sysdate
				this.lbl2.Visible = .T.
				this.lbl2.Caption = GetLangText("VIEW","T_LNAME")
				this.txt2.Visible = .T.
				this.txt2.InputMask = REPLICATE("X",30)
				this.txt2.Width = 252
				this.txt2.w = this.txt2.Width
				this.lbl3.Visible = .T.
				this.lbl3.Caption = GetLangText("VIEW","T_COMPANY")
				this.txt3.Visible = .T.
				this.txt3.InputMask = REPLICATE("X",30)
				this.lbl4.Visible = .T.
				this.lbl4.Caption = GetLangText("VIEW","T_AGENT")
				this.txt4.Visible = .T.
				this.txt4.InputMask = REPLICATE("X",30)
				this.lbl5.Visible = .T.
				this.lbl5.Caption = GetLangText("VIEW","T_GROUP")
				this.txt5.Visible = .T.
				this.txt5.InputMask = REPLICATE("X",25)
			Case pl_nbarnum=53
			* Search for Bill Instruction
				this.Caption = GetLangText("VIEW","TW_SEARCH")
				this.Height = 120
				this.lbl1.Visible = .T.
				this.lbl1.Caption = GetLangText("RESERVAT","T_ARRDATE")
				this.txt1.Visible = .F.
				this.dtxt1.Visible = .T.
				this.dtxt1.Value = this.oCallingFormRef.oCallingObj.oResData.rs_arrdate
				this.txt12.Visible = .F.
				this.dtxt12.Visible = .T.
				this.dtxt12.Value = this.oCallingFormRef.oCallingObj.oResData.rs_depdate
				this.lbl2.Visible = .T.
				this.lbl2.Caption = GetLangText("VIEW","T_LNAME")
				this.txt2.Visible = .T.
				this.txt2.InputMask = REPLICATE("X",30)
				this.txt2.Width = 252
				this.txt2.w = this.txt2.Width
				this.lbl3.Visible = .T.
				this.lbl3.Caption = GetLangText("VIEW","T_COMPANY")
				this.txt3.Visible = .T.
				this.txt3.InputMask = REPLICATE("X",30)
				this.lbl4.Visible = .T.
				this.lbl4.Caption = GetLangText("PLAN","T_ROOMNUM")
				this.txt4.Visible = .T.
				this.txt4.Width = 90
				this.txt4.w = this.txt4.Width
				this.txt4.InputMask = REPLICATE("!",10)
				this.lbl5.Visible = .F.
			Case pl_nbarnum=54
			* Search Inhouseguest
				this.Caption = GetLangText("VIEW","TW_SEARCH")+" "+GetLangText("VIEW","TW_INHOUSE")
				this.Height = 144
				this.lbl1.Visible = .T.
				this.lbl1.Caption = GetLangText("CHKOUT1","T_ROOMNUM")
				this.txt1.Width = 252
				this.txt1.w = this.txt1.Width
				this.txt1.Visible = .T.
				this.txt1.InputMask = REPLICATE("!",10)
				this.lbl2.Visible = .T.
				this.lbl2.Caption = GetLangText("CHKOUT1","T_LNAME")
				this.txt2.Visible = .T.
				this.txt2.Width = 252
				this.txt2.w = this.txt2.Width
				this.txt2.InputMask = REPLICATE("!",25)
				this.lbl3.Visible = .T.
				this.lbl3.Caption = GetLangText("CHKOUT1","TH_COMPANY")
				this.txt3.Visible = .T.
				this.txt3.InputMask = REPLICATE("!",30)
				this.lbl4.Visible = .T.
				this.lbl4.Caption = GetLangText("CHKOUT1","TH_GROUP")
				this.txt4.Visible = .T.
				this.txt4.InputMask = REPLICATE("!",25)
				this.lbl5.Visible = .T.
				this.lbl5.Caption = GetLangText("CHKOUT1","T_ALSOOUT")
				this.chk5.Visible = .T.
				this.chk5.Caption = GetLangText("CHKOUT1","TC_ALSOOUT")
			Case pl_nbarnum=60
			* Address history reservations page
				this.txt2.Visible = .F.
				this.dtxt2.Visible = .T.
				this.Height=144
				this.lbl1.Caption=GetLangText("EVENT","TXT_EVENT")
				this.txt1.Visible = .F.
				this.cbo1.Visible = .T.
				TEXT TO l_cSql TEXTMERGE NOSHOW PRETEXT 2 + 8
					SELECT ev_name AS EventName, ev_city AS EventCity, ei_from, ei_to, ei_eiid, UPPER(ev_name) ;
						FROM evint ;
						INNER JOIN events ON ev_evid = ei_evid ;
						UNION SELECT "" AS EventName, "" AS EventCity, {} AS ei_from, {} AS ei_to, 0 AS ei_eiid, "" FROM param ;
						ORDER BY 6, ei_from
				ENDTEXT
				l_cSql = STRTRAN(l_cSql,";","")
				this.cbo1.jsql = l_cSql
				this.cbo1.jboundcolumn = 5
				this.cbo1.jcolumnwidths = "170,100,90,90,0,0"
				this.cbo1.InputMask=REPLICATE('!',30)
				this.cbo1.ControlSource = [thisform.neiid]
				this.cbo1.Init()
				this.lbl2.Caption=GetLangText("RESERVAT","T_ARRDATE")
				this.dtxt2.Value={}
				this.lbl3.Caption=GetLangText("RESERVAT","T_GROUP")
				this.lbl3.Visible=.t.
				this.txt3.Visible=.t.
				this.txt3.Width=252
				this.txt3.w = this.txt3.Width
				this.txt3.InputMask=REPLICATE('!',30)
				this.lbl4.Caption=GetLangText("RESERVAT","T_RESNUM")
				this.lbl4.Visible=.t.
				this.txt4.Visible=.t.
				this.txt4.Value=0
				this.txt4.Width=120
				this.txt4.w = this.txt4.Width
				this.txt4.InputMask='99999999.999'
				this.chk5.Caption=GetLangText("RESBRW","TXT_ONLY_PAYMASTERS")
				this.chk5.Visible=.t.
				this.chk5.Value=.f.
		ENDCASE
		
		IF NOT INLIST(pl_nbarnum, 23, 50, 51, 52, 53, 54, 60)
			this.lbl2.Visible=this.txt2.visible OR this.dtxt2.visible
			this.lbl3.Visible=this.txt3.Visible
		ENDIF
		
		DODEFAULT()
	ENDPROC

	PROCEDURE KeyPress
		LPARAMETERS nKeyCode, nShiftAltCtrl
		
		IF nkeycode = 27
			this.OnClose()
			NODEFAULT
		ENDIF
	ENDPROC

	PROCEDURE onclose
		this.Release()
	ENDPROC

	PROCEDURE onsearch
		LOCAL lcWhere, lcSeekExpression, leSeekValue, lc1, lc2, lc3, lc4, lc5, lc6, lc7, lc8, lc9, lc10
		LOCAL lcFilter, lnReserId, lnCount, lcCtrlName, lcLname, lcCompany, lcAgent, lcGroup, lcRmName, lcRatecode, ldDate, lnRdId, lcStatus
		
		WAIT GetLangText("COMMON", "T_PLEASEWAIT") WINDOW NOWAIT
		this.LockScreen = .T.
		
		STORE '' TO lcWhere, lcSeekExpression, leSeekValue, lc1, lc2, lc3, lc4, lc5, lc6, lc7, lc8, lc9, lc10
		
		IF this.nBar = 60
			* Address history reservations page
		ELSE
			lcFilter = this.cFilter
			IF INLIST(this.nBar, 50, 51, 52)
				IF NOT "rs_status <> 'CXL'" $ lcFilter
					lcFilter = lcFilter + [ AND rs_status <> 'CXL']
				ENDIF
				IF NOT "rs_status <> 'NS'" $ lcFilter
					lcFilter = lcFilter + [ AND rs_status <> 'NS']
				ENDIF
			ENDIF
		ENDIF
		
		DO CASE
			CASE this.nBar = 1
			*name
				this.cOrder = "rs_lname,rs_arrdate,rs_rsid"
				lcLname = this.txt1.Value
				ldDate = this.dtxt2.Value
				IF NOT EMPTY(lcLname)
					lcSeekExpression = "UPPER(rs_lname)"
					leSeekValue = UPPER(ALLTRIM(lcLname))
					lcWhere = StrToSql("(rs_lname LIKE %s1 OR rs_sname LIKE %s2)", leSeekValue+"%", leSeekValue+"%")
					IF NOT EMPTY(ldDate)
						lcWhere = SqlAnd(StrToSql("rs_arrdate >= %d1", ldDate), lcWhere)
						this.cSeekExpression = "rs_arrdate"
						this.eSeekValue = ldDate
					ENDIF
				ENDIF
			CASE this.nBar = 2
			*company
				this.cOrder = "rs_company,rs_arrdate,rs_rsid"
				lcCompany = this.txt1.Value
				ldDate = this.dtxt2.Value
				IF NOT EMPTY(lcCompany)
					lcSeekExpression = "UPPER(rs_company)"
					leSeekValue = UPPER(ALLTRIM(lcCompany))
					lcWhere = StrToSql("rs_company LIKE %s1", leSeekValue+"%")
					IF NOT EMPTY(ldDate)
						lcWhere = SqlAnd(StrToSql("rs_arrdate >= %d1", ldDate), lcWhere)
						this.cSeekExpression = "rs_arrdate"
						this.eSeekValue = ldDate
					ENDIF
				ENDIF
			CASE this.nBar = 3
			*agent
				this.cOrder = "rs_agent,rs_arrdate,rs_rsid"
				lcAgent = this.txt1.Value
				ldDate = this.dtxt2.Value
				IF NOT EMPTY(lcAgent)
					lcSeekExpression = "UPPER(rs_agent)"
					leSeekValue = UPPER(ALLTRIM(lcAgent))
					lcWhere = StrToSql("rs_agent LIKE %s1", leSeekValue+"%")
					IF NOT EMPTY(ldDate)
						lcWhere = SqlAnd(StrToSql("rs_arrdate >= %d1", ldDate), lcWhere)
						this.cSeekExpression = "rs_arrdate"
						this.eSeekValue = ldDate
					ENDIF
				ENDIF
			CASE this.nBar = 4
			*group
				this.cOrder = "rs_group,rs_arrdate,rs_lname,rs_rsid"
				lcGroup = this.txt1.Value
				ldDate = this.dtxt2.Value
				IF NOT EMPTY(lcGroup)
					lcSeekExpression = "UPPER(rs_group)"
					leSeekValue = UPPER(ALLTRIM(lcGroup))
					lcWhere = StrToSql("rs_group LIKE %s1", leSeekValue+"%")
					IF NOT EMPTY(ldDate)
						lcWhere = SqlAnd(StrToSql("rs_arrdate >= %d1", ldDate), lcWhere)
						this.cSeekExpression = "rs_arrdate"
						this.eSeekValue = ldDate
					ENDIF
				ENDIF
			CASE this.nBar = 5
			*allotment
				this.cOrder = "rs_arrdate,rs_lname,rs_rsid"
				ldDate = this.dtxt2.Value
				IF NOT EMPTY(this.nAltid)
					lcWhere = StrToSql("rs_altid = %n1", this.nAltid)
					IF NOT EMPTY(ldDate)
						lcWhere = SqlAnd(StrToSql("rs_arrdate >= %d1", ldDate), lcWhere)
						this.cSeekExpression = "rs_arrdate"
						this.eSeekValue = ldDate
					ENDIF
				ENDIF
			CASE this.nBar = 7
			*arrival
				this.cOrder = "rs_arrdate,rs_lname,rs_rsid"
				ldDate = this.dtxt1.Value
				ldDate2 = this.dtxt2.Value
				IF NOT EMPTY(ldDate) AND NOT EMPTY(ldDate2)
					lcWhere = StrToSql("BETWEEN(rs_arrdate, %d1, %d2)", ldDate, ldDate2)
				ENDIF
			CASE this.nBar = 8
			*departure
				this.cOrder = "rs_depdate,rs_lname,rs_rsid"
				ldDate = this.dtxt1.Value
				ldDate2 = this.dtxt2.Value
				IF NOT EMPTY(ldDate) AND NOT EMPTY(ldDate2)
					lcWhere = StrToSql("BETWEEN(rs_depdate, %d1, %d2)", ldDate, ldDate2)
				ENDIF
			CASE this.nBar = 9
			*roomnum
				this.cOrder = "rs_rmname,rs_arrdate,rs_lname,rs_rsid"
				llExact = this.chk1.Value
				lcRmName = this.txt1.Value
				ldDate = this.dtxt2.Value
				IF NOT EMPTY(lcRmName)
					lcSeekExpression = "UPPER(rs_rmname)"
					leSeekValue = UPPER(ALLTRIM(lcRmName))
					IF EMPTY(llExact)
						lcWhere = StrToSql("rs_rmname LIKE %s1", ALLTRIM(lcRmName)+"%")
					ELSE
						lcWhere = StrToSql("rs_rmname = %s1", PADR(lcRmName,10))
					ENDIF
					IF NOT EMPTY(ldDate)
						lcWhere = SqlAnd(StrToSql("rs_arrdate >= %d1", ldDate), lcWhere)
						this.cSeekExpression = "rs_arrdate"
						this.eSeekValue = ldDate
					ENDIF
				ENDIF
			CASE this.nBar = 10
			*roomtype
				this.cOrder = "rs_arrdate,rs_lname,rs_rsid"
				lnRdId = this.cbo1.Value
				ldDate = this.dtxt2.Value
				IF NOT EMPTY(lnRdId)
					lcWhere = StrToSql("roomtype.rt_rdid = %n1", lnRdId)
					IF NOT EMPTY(ldDate)
						lcWhere = SqlAnd(StrToSql("rs_arrdate >= %d1", ldDate), lcWhere)
					ENDIF
				ENDIF
			CASE this.nBar = 11
			*status
				this.cOrder = "rs_arrdate,rs_lname,rs_rsid"
				lcStatus = this.cbo1.Value
				ldDate = this.dtxt2.Value
				IF NOT EMPTY(lcStatus)
					lcWhere = StrToSql("rs_status = %s1", lcStatus)
					IF NOT EMPTY(ldDate)
						lcWhere = SqlAnd(StrToSql("rs_arrdate >= %d1", ldDate), lcWhere)
					ENDIF
				ENDIF
			CASE this.nBar = 12
			*reservation number
				this.cOrder = "rs_reserid"
				lnReserId = this.txt1.Value
				IF NOT EMPTY(lnReserId)
					lcSeekExpression = "rs_reserid"
					leSeekValue = lnReserId
					IF lnReserId % INT(lnReserId) <> 0
						lcWhere = StrToSql("rs_reserid = %n1", lnReserId)
					ELSE
						* Search only on INT part
						lcWhere = StrToSql("rs_reserid >= %n1 AND rs_reserid < %n2", INT(lnReserId), INT(lnReserId)+1)
					ENDIF
				ENDIF
			CASE this.nBar = 13
			*cancelation number
				this.cOrder = "rs_reserid"
				IF NOT EMPTY(this.txt1.Value)
					lcWhere = StrToSql("__STR__(rs_cxlnr,8) LIKE %s1", ALLTRIM(this.txt1.Value)+"%")
				ENDIF
			CASE this.nBar = 20
			*recurring reservation name
				this.cOrder = "rs_recur,rs_rsid"
				IF NOT EMPTY(this.txt1.Value)
					lcSeekExpression = "UPPER(rs_recur)"
					leSeekValue = UPPER(ALLTRIM(this.txt1.Value))
					lcWhere = StrToSql("UPPER(rs_recur) LIKE %s1", UPPER(ALLTRIM(this.txt1.Value))+"%")
				ENDIF
			CASE this.nBar = 22
			*memeberid
				this.cOrder = "rs_reserid"
				IF NOT EMPTY(this.txt1.Value)
					lcWhere = StrToSql("__STR__(address.ad_member,10) LIKE %s1", ALLTRIM(this.txt1.Value)+"%")
				ENDIF
			CASE this.nBar = 23
			*user fields
				this.cOrder = "rs_reserid"
				FOR lnCount = 1 TO 10
					IF SUBSTR(_screen.oGlobal.oParam.pa_setusre, lncount, 1) = "C"
						lcCtrlName = "chk" + TRANSFORM(lnCount)
						IF this.&lcCtrlName..Value = 1
							lcWhere = SqlAnd(lcWhere, StrToSql("UPPER(rs_usrres%n1) LIKE 'T%'", MOD(lnCount,10)))
						ENDIF
					ELSE
						lcCtrlName = "txt" + TRANSFORM(lnCount)
						IF NOT EMPTY(this.&lcCtrlName..Value)
							lcWhere = SqlAnd(lcWhere, StrToSql("UPPER(rs_usrres%n1) LIKE %s2", MOD(lnCount,10), UPPER(ALLTRIM(this.&lcCtrlName..Value))+"%"))
						ENDIF
					ENDIF
				NEXT
			CASE this.nBar = 24
			* ratecode
				this.cOrder = "rs_arrdate,rs_lname,rs_rsid"
				lcRatecode = this.txt1.Value
				ldDate = this.dtxt2.Value
				IF NOT EMPTY(lcRatecode)
					lcSeekExpression = "rs_ratecod"
					leSeekValue = UPPER(ALLTRIM(lcRatecode))
					lcWhere = StrToSql("(rs_ratecod LIKE %s1 OR rs_ratecod LIKE %s2 OR rs_ratecod LIKE %s3)", leSeekValue+"%", "*"+leSeekValue+"%", "!"+leSeekValue+"%")
					IF NOT EMPTY(ldDate)
						lcWhere = SqlAnd(StrToSql("rs_arrdate >= %d1", ldDate), lcWhere)
					ENDIF
				ENDIF
			CASE this.nBar = 25
			*cardauth
				this.cOrder = "rs_arrdate,rs_lname,rs_rsid"
				IF NOT EMPTY(this.txt1.Value)
					lcWhere = "rs_ccauth LIKE " + SqlCnv(UPPER(ALLTRIM(this.txt1.Value))+"%",.T.)
					IF NOT EMPTY(this.dtxt2.Value)
						lcWhere = "rs_arrdate >= " + SqlCnv(this.dtxt2.Value,.T.) + " AND " + lcWhere
					ENDIF
				ENDIF
			CASE this.nBar = 26
			*billnum
				this.cOrder = "rs_reserid"
				IF NOT EMPTY(this.txt1.Value)
					lcWhere = STRTRAN("(rs_billnr1 LIKE %s OR rs_billnr2 LIKE %s OR rs_billnr3 LIKE %s OR rs_billnr4 LIKE %s OR rs_billnr5 LIKE %s OR rs_billnr6 LIKE %s)", ;
						"%s", SqlCnv(ALLTRIM(this.txt1.Value)+"%",.T.))
				ENDIF
			CASE this.nBar = 30
			*event
				this.cOrder = "rs_arrdate,rs_lname,rs_rsid"
				IF NOT EMPTY(this.cbo1.Value)
					lcWhere = "UPPER(c_evname) = " + SqlCnv(UPPER(PADR(this.cbo1.Value,30)),.T.)
					IF NOT EMPTY(this.dtxt2.Value)
						lcWhere = "rs_arrdate >= " + SqlCnv(this.dtxt2.Value,.T.) + " AND " + lcWhere
					ENDIF
				ENDIF
			CASE this.nBar = 31
			*rs_created
				this.cOrder = "rs_rsid"
				IF NOT EMPTY(this.dtxt1.Value)
					IF EMPTY(this.dtxt12.Value)
						lcWhere = "rs_created <= " + SqlCnv(this.dtxt1.Value,.T.)
					ELSE
						lcWhere = "BETWEEN(rs_created," + SqlCnv(this.dtxt1.Value,.T.) + "," + SqlCnv(this.dtxt12.Value,.T.) + ")"
					ENDIF
				ENDIF
		
			CASE this.nBar = 50
				* Arrivals
				ldDate = this.dtxt1.Value
				lcLName = UPPER(ALLTRIM(this.txt2.Value))
				lcCompany = UPPER(ALLTRIM(this.txt3.Value))
				lcAgent = UPPER(ALLTRIM(this.txt4.Value))
				lcGroup = UPPER(ALLTRIM(this.txt5.Value))
		
				this.cOrder = "rs_arrdate,rs_lname,rs_rsid"
				lcWhere = "rs_arrdate = " + SqlCnv(ldDate,.T.)
				IF NOT EMPTY(lcLName)
					lcWhere = lcWhere + " AND (rs_lname LIKE " + SqlCnv(lcLName+"%",.T.) + " OR rs_sname LIKE " + SqlCnv(lcLName+"%",.T.) + ")"
				ENDIF
				IF NOT EMPTY(lcCompany)
					lcWhere = lcWhere + " AND rs_company LIKE " + SqlCnv(lcCompany+"%",.T.)
				ENDIF
				IF NOT EMPTY(lcAgent)
					lcWhere = lcWhere + " AND rs_agent LIKE " + SqlCnv(lcAgent+"%",.T.)
				ENDIF
				IF NOT EMPTY(lcGroup)
					lcWhere = lcWhere + " AND rs_group LIKE " + SqlCnv(lcGroup+"%",.T.)
				ENDIF
				lcWhere = lcWhere + " AND rs_in = ' ' AND rs_out = ' '"
				this.oCallingFormRef.dDateSearched = ldDate
			CASE this.nBar = 51
				* Departures
				ldDate = this.dtxt1.Value
				lcLName = UPPER(ALLTRIM(this.txt2.Value))
				lcCompany = UPPER(ALLTRIM(this.txt3.Value))
				lcAgent = UPPER(ALLTRIM(this.txt4.Value))
				lcGroup = UPPER(ALLTRIM(this.txt5.Value))
		
				this.cOrder = "rs_depdate,rs_lname,rs_rsid"
				lcWhere = "rs_depdate = " + SqlCnv(ldDate,.T.)
				IF NOT EMPTY(lcLName)
					lcWhere = lcWhere + " AND (rs_lname LIKE " + SqlCnv(lcLName+"%",.T.) + " OR rs_sname LIKE " + SqlCnv(lcLName+"%",.T.) + ")"
				ENDIF
				IF NOT EMPTY(lcCompany)
					lcWhere = lcWhere + " AND rs_company LIKE " + SqlCnv(lcCompany+"%",.T.)
				ENDIF
				IF NOT EMPTY(lcAgent)
					lcWhere = lcWhere + " AND rs_agent LIKE " + SqlCnv(lcAgent+"%",.T.)
				ENDIF
				IF NOT EMPTY(lcGroup)
					lcWhere = lcWhere + " AND rs_group LIKE " + SqlCnv(lcGroup+"%",.T.)
				ENDIF
				lcWhere = lcWhere + " AND rs_out = ' '"
				this.oCallingFormRef.dDateSearched = ldDate
			CASE this.nBar = 52
				* In house
				ldDate = this.dtxt1.Value
				lcLName = UPPER(ALLTRIM(this.txt2.Value))
				lcCompany = UPPER(ALLTRIM(this.txt3.Value))
				lcAgent = UPPER(ALLTRIM(this.txt4.Value))
				lcGroup = UPPER(ALLTRIM(this.txt5.Value))
		
				IF ldDate = g_sysdate
					this.cOrder = "rs_lname,rs_arrdate,rs_rsid"
					lcWhere = "rs_in = '1'"
					IF NOT _screen.oGlobal.oParam.pa_resall
						lcWhere = lcWhere + " AND rs_out = ' '"
					ENDIF
				ELSE
					this.cOrder = "rs_arrdate,rs_lname,rs_rsid"
					lcWhere = "rs_arrdate <= " + SqlCnv(ldDate,.T.) + " AND rs_depdate >= " + SqlCnv(ldDate,.T.)
				ENDIF
				IF NOT EMPTY(lcLName)
					lcWhere = lcWhere + " AND (rs_lname LIKE " + SqlCnv(lcLName+"%",.T.) + " OR rs_sname LIKE " + SqlCnv(lcLName+"%",.T.) + ")"
				ENDIF
				IF NOT EMPTY(lcCompany)
					lcWhere = lcWhere + " AND rs_company LIKE " + SqlCnv(lcCompany+"%",.T.)
				ENDIF
				IF NOT EMPTY(lcAgent)
					lcWhere = lcWhere + " AND rs_agent LIKE " + SqlCnv(lcAgent+"%",.T.)
				ENDIF
				IF NOT EMPTY(lcGroup)
					lcWhere = lcWhere + " AND rs_group LIKE " + SqlCnv(lcGroup+"%",.T.)
				ENDIF
				this.oCallingFormRef.dDateSearched = ldDate
			CASE this.nBar = 53
				*Bill Instruction
				LOCAL lnBillReserId, ldFrom, ldTo, lcLName, lcCompany, lcRoomName
				lnBillReserId = this.oCallingFormRef.oCallingObj.oResData.rs_reserid
		
				ldFrom = this.dtxt1.Value
				ldTo = this.dtxt12.Value
				lcLName = UPPER(TRIM(this.txt2.Value))
				lcCompany = UPPER(TRIM(this.txt3.Value))
				lcRoomName = UPPER(ALLTRIM(this.txt4.Value))
		
				this.cOrder = "rs_lname,rs_arrdate,rs_rsid"
				DO CASE
					CASE NOT EMPTY(ldFrom) AND NOT EMPTY(ldTo)
						lcWhere = "BETWEEN(rs_arrdate," + SqlCnv(ldFrom,.T.) + "," + SqlCnv(ldTo,.T.) + ")"
					CASE NOT EMPTY(ldFrom)
						lcWhere = "rs_arrdate = " + SqlCnv(ldFrom,.T.)
					CASE NOT EMPTY(ldTo)
						lcWhere = "rs_arrdate = " + SqlCnv(ldTo,.T.)
					OTHERWISE
				ENDCASE
				IF NOT EMPTY(lcLName)
					lcWhere = lcWhere + " AND (rs_lname LIKE " + SqlCnv(lcLName+"%",.T.) + " OR rs_sname LIKE " + SqlCnv(lcLName+"%",.T.) + ")"
				ENDIF
				IF NOT EMPTY(lcCompany)
					lcWhere = lcWhere + " AND rs_company LIKE " + SqlCnv(lcCompany+"%",.T.)
				ENDIF
				IF NOT EMPTY(lcRoomName)
					lcWhere = lcWhere + " AND rs_rmname LIKE " + SqlCnv(lcRoomName+"%",.T.)
				ENDIF
				lcWhere = lcWhere + " AND rs_out = ' ' AND INLIST(rs_status,'IN','DEF','ASG','6PM','OPT','TEN') AND rs_reserid <> " + SqlCnv(lnBillReserId,.T.)
			CASE this.nbar = 54
				* Search Inhouseguest
				lcRmName = UPPER(TRIM(this.txt1.Value))
				lcLName = UPPER(TRIM(this.txt2.Value))
				lcCompany = UPPER(TRIM(this.txt3.Value))
				lcGroup = UPPER(TRIM(this.txt4.Value))
		
				IF EMPTY(this.chk5.Value)
					lcWhere = "rs_in = '1' AND rs_out = ' '"
				ELSE
					lcWhere = "(rs_in = '1' OR rs_status = 'IN' OR rs_depdate = g_sysdate AND rs_status = 'OUT')"
				ENDIF
				IF NOT EMPTY(lcGroup)
					lcWhere = lcWhere + " AND rs_group LIKE " + SqlCnv(lcGroup+"%",.T.)
				ENDIF
		
				this.cOrder = "rs_lname,rs_arrdate,rs_rsid"
				DO CASE
					CASE NOT EMPTY(lcRmName)
						this.cOrder = "rs_rmname,rs_arrdate,rs_lname,rs_rsid"
						this.cSeekExpression = "UPPER(rs_rmname)"
						this.eSeekValue = lcRmName
						this.oCallingFormRef.rsbgrid.cNotLocateMessage = GetLangText("CHKOUT1","TA_NOROOM") + " !"
						this.oCallingFormRef.rsbgrid.lNotLocateMessage = .T.
					CASE NOT EMPTY(lcLName)
						this.cSeekExpression = "UPPER(rs_lname)"
						this.eSeekValue = lcLName
						this.oCallingFormRef.rsbgrid.cNotLocateMessage = GetLangText("CHKOUT1","TA_NOLNAME") + " !"
						this.oCallingFormRef.rsbgrid.lNotLocateMessage = .T.
					CASE NOT EMPTY(lcCompany)
						this.cOrder = "rs_company,rs_arrdate,rs_rsid"
						this.cSeekExpression = "UPPER(rs_company)"
						this.eSeekValue = lcCompany
						this.oCallingFormRef.rsbgrid.cNotLocateMessage = GetLangText("CHKOUT1","TA_NOCOMPANY") + " !"
						this.oCallingFormRef.rsbgrid.lNotLocateMessage = .T.
					CASE NOT EMPTY(lcGroup)
					OTHERWISE
						this.cOrder = "rs_depdate,rs_rmname,rs_rsid"
						IF NOT EMPTY(this.chk5.Value)
							this.cSeekExpression = "rs_in"
							this.eSeekValue = '1'
						ENDIF
				ENDCASE
			CASE this.nBar = 60
				* Address history reservations page
				IF EMPTY(this.txt4.Value)
					IF NOT EMPTY(this.txt3.Value)
						lcWhere = "hr_group = " + SqlCnv(UPPER(ALLTRIM(this.txt3.Value)),.T.)
					ENDIF
					IF NOT EMPTY(this.cbo1.Value)
						lcWhere = lcWhere + IIF(EMPTY(lcWhere), "", " AND ") + "UPPER(c_evname) = " + SqlCnv(UPPER(PADR(this.cbo1.Value,30)),.T.)
					ENDIF
				ELSE
					lnReserId = INT(this.txt4.Value)
					IF lnReserId = this.txt4.Value
						lcWhere = "hr_reserid >= " + SqlCnv(lnReserId,.T.) + " AND hr_reserid < " + SqlCnv(lnReserId+1,.T.)
					ELSE
						lcWhere = "hr_reserid = " + SqlCnv(this.txt4.Value,.T.)
					ENDIF
				ENDIF
				IF NOT EMPTY(this.dtxt2.Value)
					lcWhere = lcWhere + IIF(EMPTY(lcWhere), "", " AND ") + "hr_arrdate >= " + SqlCnv(this.dtxt2.Value,.T.)
				ENDIF
				IF NOT EMPTY(this.chk5.Value)
					lcWhere = lcWhere + IIF(EMPTY(lcWhere), "", " AND ") + "roomtype.rt_group = 3"
				ENDIF
		ENDCASE
		IF EMPTY(lcWhere)
			lcWhere = "1=1"
		ENDIF
		lcWhere = STRTRAN(lcWhere, "roomtype.")
		lcWhere = STRTRAN(lcWhere, "address.")
		lcWhere = STRTRAN(lcWhere, "althead.")
		lcFilter = STRTRAN(lcFilter, "roomtype.")
		lcFilter = STRTRAN(lcFilter, "address.")
		lcFilter = STRTRAN(lcFilter, "althead.")
		lcWhere = lcWhere + lcFilter
		
		IF this.nBar = 60
			* Address history reservations page
			this.nFound = 3		&& Found
			this.cFilter = lcWhere
		ELSE
			lcurRes = SqlCursor("SELECT TOP 1 " + this.oCallingFormRef.rsbgrid.cPrimaryKey + " FROM " + ;
				this.oCallingFormRef.rsbgrid.cSource + " WHERE " + lcWhere + " ORDER BY " + this.cOrder)
			IF RECCOUNT(lcurRes) = 0
				Alert(GetLangText("RESERVAT","TA_NOTFOUND")+"!")
				DO CASE
					CASE INLIST(this.nbar, 50, 51, 52)
					CASE NOT EMPTY(leSeekValue)
						this.nFound = 4		&& Found similar, seek near, leave old filter
						this.cFilter = "1=1" + lcFilter
						this.cSeekExpression = lcSeekExpression
						this.eSeekValue = leSeekValue
					OTHERWISE
						this.nFound = 2		&& Not found, leave old order and filter
				ENDCASE
			ELSE
				this.nFound = 3		&& Found
				this.cFilter = lcWhere
			ENDIF
			DClose(lcurRes)
		ENDIF
		
		this.LockScreen = .F.
		
		WAIT CLEAR
		
		this.Release()
	ENDPROC

	PROCEDURE QueryUnload
		this.OnClose()
		NODEFAULT
	ENDPROC

	PROCEDURE Unload
		DO CASE
			CASE INLIST(this.nFound, 1, 2)	&& 1 - Cancelled; 2 - Not found, leave old order and filter, just refresh
			CASE this.nBar = 60
				this.oCallingFormRef.MainPage.PageAddress.SlavePage.PageRevnue.cHrFilter = this.cFilter
			CASE INLIST(this.nFound, 3, 4)	&& 3 - Found; 4 - Found similar, seek near, leave old filter
				this.oCallingFormRef.rsbgrid.cForClause = this.cFilter
				this.oCallingFormRef.rsbgrid.cOrder = this.cOrder
				this.oCallingFormRef.rsbgrid.cSeekExpression = this.cSeekExpression
				this.oCallingFormRef.rsbgrid.eSeekValue = this.eSeekValue
			OTHERWISE
		ENDCASE
		
		this.oCallingFormRef.Enabled = .T.
		RETURN this.nFound
	ENDPROC

	PROCEDURE cbo1.value_assign
		LPARAMETERS vNewVal
		
		DODEFAULT(vNewVal)
		
		IF thisform.nbar = 5 AND NOT EMPTY(this.jCursor)
			LOCAL l_cCur
			l_cCur = this.jCursor
			IF NOT EMPTY(&l_cCur..al_fromdat)
				thisform.dtxt2.Value = MAX(&l_cCur..al_fromdat,_screen.oGlobal.oParam.pa_sysdate)
			ENDIF
		ENDIF
	ENDPROC

	PROCEDURE cmdCancel.Click
		thisform.OnClose()
	ENDPROC

	PROCEDURE cmdOK.Click
		thisform.OnSearch()
	ENDPROC

	PROCEDURE dtxt1.LostFocus
		IF INLIST(thisform.nbar, 7, 8)
			thisform.dtxt12.Value = this.Value + 7	
		ENDIF
	ENDPROC

	PROCEDURE dtxt1.Valid
		IF INLIST(thisform.nbar, 50, 51, 52)
			IF EMPTY(this.Value)
				RETURN .F.
			ENDIF
		ENDIF
		
		RETURN .T.
	ENDPROC

ENDDEFINE
