*--------------------------------------------------------------------------------------------------------------------------------------------------------
* (ES) AUTOGENERADO - ¡¡ATENCIÓN!! - ¡¡NO PENSADO PARA EJECUTAR!! USAR SOLAMENTE PARA INTEGRAR CAMBIOS Y ALMACENAR CON HERRAMIENTAS SCM!!
* (EN) AUTOGENERATED - ATTENTION!! - NOT INTENDED FOR EXECUTION!! USE ONLY FOR MERGING CHANGES AND STORING WITH SCM TOOLS!!
*--------------------------------------------------------------------------------------------------------------------------------------------------------
*< FOXBIN2PRG: Version="1.19" SourceFile="billgroup.scx" /> (Solo para binarios VFP 9 / Only for VFP 9 binaries)
*
*
DEFINE CLASS dataenvironment AS dataenvironment 
 	*< CLASSDATA: Baseclass="dataenvironment" Timestamp="" Scale="" Uniqueid="" ClassIcon="1" />

	DataSource = .NULL.
	Height = 0
	Left = 0
	Name = "Dataenvironment"
	Top = 0
	Width = 0

ENDDEFINE

DEFINE CLASS frsgroupbill AS formset 
 	*< CLASSDATA: Baseclass="formset" Timestamp="" Scale="" Uniqueid="" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="frmGroupMembers" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="frmGroupMembers.grdGroupMembers" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="frmGroupMembers.grdGroupMembers.Column1.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="frmGroupMembers.grdGroupMembers.Column1.Tbgrid1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="frmGroupMembers.grdGroupMembers.Column2.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="frmGroupMembers.grdGroupMembers.Column2.Tbgrid1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="frmGroupMembers.grdGroupMembers.Column3.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="frmGroupMembers.grdGroupMembers.Column3.Tbgrid1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="frmGroupMembers.grdGroupMembers.Column4.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="frmGroupMembers.grdGroupMembers.Column4.Tbgrid1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="frmGroupMembers.grdGroupMembers.Column5.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="frmGroupMembers.grdGroupMembers.Column5.Billgrouptxt1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="frmGroupMembers.grdGroupMembers.Column6.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="frmGroupMembers.grdGroupMembers.Column6.Billgrouptxt1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="frmGroupMembers.grdGroupMembers.Column7.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="frmGroupMembers.grdGroupMembers.Column7.Billgrouptxt1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="frmGroupMembers.grdGroupMembers.Column8.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="frmGroupMembers.grdGroupMembers.Column8.Billgrouptxt1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="frmGroupMembers.grdGroupMembers.Column9.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="frmGroupMembers.grdGroupMembers.Column9.Billgrouptxt1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="frmGroupMembers.grdGroupMembers.Column10.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="frmGroupMembers.grdGroupMembers.Column10.Billgrouptxt1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="frmGroupMembers.cmdOK" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="frmGroupMembers.cmdMark" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="frmGroupMembers.cmdMarkAll" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="frmGroupMembers.cmdMarkNone" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="frmGroupMembers.cmdClose" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="frmGroupMembers.cmdPayMehtod" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="frmGroupMembers.cmdChkOut" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="frmGroupMembers.lblMinDate" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="frmGroupMembers.dtxtMinDate" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="frmGroupMembers.lblMaxDate" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="frmGroupMembers.dtxtMaxDate" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="frmGroupMembers.cmdPreliminaryInvoice" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="frmSelectBills" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="frmSelectBills.chkBill1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="frmSelectBills.chkBill2" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="frmSelectBills.chkBill3" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="frmSelectBills.chkBill4" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="frmSelectBills.chkBill5" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="frmSelectBills.chkBill6" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="frmSelectBills.cmdOK" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="frmSelectBills.cmdCancel" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="frmGroupArticles" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="frmGroupArticles.grdGroupArticles" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="frmGroupArticles.grdGroupArticles.Column1.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="frmGroupArticles.grdGroupArticles.Column1.Billgrouptxt1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="frmGroupArticles.grdGroupArticles.Column2.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="frmGroupArticles.grdGroupArticles.Column2.Billgrouptxt1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="frmGroupArticles.grdGroupArticles.Column3.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="frmGroupArticles.grdGroupArticles.Column3.Billgrouptxt1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="frmGroupArticles.grdGroupArticles.Column4.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="frmGroupArticles.grdGroupArticles.Column4.Billgrouptxt1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="frmGroupArticles.cmdOK" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="frmGroupArticles.cmdMark" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="frmGroupArticles.cmdMarkAll" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="frmGroupArticles.cmdMarkNone" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="frmGroupArticles.cmdClose" UniqueID="" Timestamp="" />

	*<DefinedPropArrayMethod>
		*m: addtorepcursor
		*m: checkbills
		*m: createrepcursor
		*m: markbills
		*m: membersupdate
		*m: oncancel
		*m: oncheckout
		*m: ongamark
		*m: ongamarkall
		*m: ongamarknone
		*m: ongaok
		*m: ongmmark
		*m: ongmmarkall
		*m: ongmmarknone
		*m: ongmok
		*m: ongmpaymethod
		*m: onpreliminaryinvoice
		*m: postuntildate
		*m: printrepcursor
		*m: refreshlist
		*m: selectbills
		*p: cgroup		&& Group name.
		*p: cmode		&& Mode for group members assortment and for the action that shoud be done at the end.
		*p: csql		&& SELECT Sql for poulating grid
		*p: ctblarticles
		*p: ctblmembers
		*p: ctblpaymetho
		*p: ctblpayreport
		*p: ddepdate		&& Departure date.
		*p: dmaxdate
		*p: dmindate
		*p: frsbills		&& Reference to frsBills formset.
		*p: lprintbills		&& Indicator whether all bills should be printed.
		*p: lprintlist		&& Indicator whether report for all payments should be printed.
		*p: npaynum		&& Suggested pay method ID (pm_paynum).
	*</DefinedPropArrayMethod>

	AutoRelease = .T.
	cgroup = 		&& Group name.
	cmode = 		&& Mode for group members assortment and for the action that shoud be done at the end.
	csql = .F.		&& SELECT Sql for poulating grid
	ctblarticles = 
	ctblmembers = 
	ctblpaymetho = 
	ctblpayreport = 
	DataSession = 1
	frsbills = .NULL.		&& Reference to frsBills formset.
	lprintbills = .T.		&& Indicator whether all bills should be printed.
	lprintlist = .T.		&& Indicator whether report for all payments should be printed.
	Name = "frsGroupBill"
	npaynum = 0		&& Suggested pay method ID (pm_paynum).

	ADD OBJECT 'frmGroupArticles' AS tform WITH ;
		AlwaysOnTop = .F., ;
		Caption = "frmGroupArticles", ;
		ControlBox = .T., ;
		DoCreate = .T., ;
		formname = frmGroupArticles, ;
		Height = 446, ;
		Icon = ..\bitmap\icons\shoping.ico, ;
		KeyPreview = .T., ;
		Name = "frmGroupArticles", ;
		resizeheaderfont = .F., ;
		ShowTips = .T., ;
		Visible = .F., ;
		Width = 477
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="form" />

	ADD OBJECT 'frmGroupArticles.cmdClose' AS tcommandbutton WITH ;
		Caption = "", ;
		Height = 35, ;
		Left = 175, ;
		Name = "cmdClose", ;
		Picture = ..\bitmap\toolbar\close.png, ;
		TabIndex = 6, ;
		Top = 5, ;
		Width = 35
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'frmGroupArticles.cmdMark' AS tcommandbutton WITH ;
		Caption = "", ;
		Height = 35, ;
		Left = 5, ;
		Name = "cmdMark", ;
		Picture = ..\bitmap\toolbar\mark.png, ;
		TabIndex = 2, ;
		Top = 5, ;
		Width = 35
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'frmGroupArticles.cmdMarkAll' AS tcommandbutton WITH ;
		Caption = "", ;
		Height = 35, ;
		Left = 45, ;
		Name = "cmdMarkAll", ;
		Picture = ..\bitmap\toolbar\cleanall.png, ;
		TabIndex = 3, ;
		Top = 5, ;
		Width = 35
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'frmGroupArticles.cmdMarkNone' AS tcommandbutton WITH ;
		Caption = "", ;
		Height = 35, ;
		Left = 85, ;
		Name = "cmdMarkNone", ;
		Picture = ..\bitmap\toolbar\dirtyall.png, ;
		TabIndex = 4, ;
		Top = 5, ;
		Width = 35
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'frmGroupArticles.cmdOK' AS tcommandbutton WITH ;
		Caption = "", ;
		Height = 35, ;
		Left = 135, ;
		Name = "cmdOK", ;
		Picture = ..\bitmap\toolbar\save.png, ;
		TabIndex = 5, ;
		Top = 5, ;
		Width = 35
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'frmGroupArticles.grdGroupArticles' AS grdbase WITH ;
		AllowHeaderSizing = .F., ;
		AllowRowSizing = .F., ;
		ColumnCount = 4, ;
		DeleteMark = .F., ;
		GridLineColor = 192,192,192, ;
		GridLines = 2, ;
		Height = 400, ;
		Left = 1, ;
		lresizecolumns = .F., ;
		Name = "grdGroupArticles", ;
		RecordMark = .F., ;
		resizefontsize = .F., ;
		ScrollBars = 2, ;
		TabIndex = 1, ;
		Top = 45, ;
		Width = 475, ;
		Column1.Name = "Column1", ;
		Column1.Width = 60, ;
		Column2.Name = "Column2", ;
		Column2.Width = 220, ;
		Column3.Name = "Column3", ;
		Column3.Width = 80, ;
		Column4.Name = "Column4", ;
		Column4.Width = 90
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="grid" />

	ADD OBJECT 'frmGroupArticles.grdGroupArticles.Column1.Billgrouptxt1' AS billgrouptxt WITH ;
		Left = 22, ;
		Name = "Billgrouptxt1", ;
		Top = 110
		*< END OBJECT: ClassLib="..\libs\cit_bill.vcx" BaseClass="textbox" />

	ADD OBJECT 'frmGroupArticles.grdGroupArticles.Column1.Header1' AS header WITH ;
		Caption = "Header1", ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'frmGroupArticles.grdGroupArticles.Column2.Billgrouptxt1' AS billgrouptxt WITH ;
		Left = 81, ;
		Name = "Billgrouptxt1", ;
		Top = 98
		*< END OBJECT: ClassLib="..\libs\cit_bill.vcx" BaseClass="textbox" />

	ADD OBJECT 'frmGroupArticles.grdGroupArticles.Column2.Header1' AS header WITH ;
		Caption = "Header1", ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'frmGroupArticles.grdGroupArticles.Column3.Billgrouptxt1' AS billgrouptxt WITH ;
		Left = 16, ;
		Name = "Billgrouptxt1", ;
		Top = 74
		*< END OBJECT: ClassLib="..\libs\cit_bill.vcx" BaseClass="textbox" />

	ADD OBJECT 'frmGroupArticles.grdGroupArticles.Column3.Header1' AS header WITH ;
		Caption = "Header1", ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'frmGroupArticles.grdGroupArticles.Column4.Billgrouptxt1' AS billgrouptxt WITH ;
		Left = 31, ;
		Name = "Billgrouptxt1", ;
		Top = 122
		*< END OBJECT: ClassLib="..\libs\cit_bill.vcx" BaseClass="textbox" />

	ADD OBJECT 'frmGroupArticles.grdGroupArticles.Column4.Header1' AS header WITH ;
		Caption = "Header1", ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'frmGroupMembers' AS tform WITH ;
		AlwaysOnTop = .F., ;
		Caption = "frmGroupMembers", ;
		ControlBox = .T., ;
		DoCreate = .T., ;
		formname = frmGroupMembers, ;
		Height = 496, ;
		Icon = ..\bitmap\icons\misc28.ico, ;
		KeyPreview = .T., ;
		Name = "frmGroupMembers", ;
		resizeheaderfont = .F., ;
		ShowTips = .T., ;
		Width = 783
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="form" />

	ADD OBJECT 'frmGroupMembers.cmdChkOut' AS tcommandbutton WITH ;
		Caption = "", ;
		Height = 35, ;
		Left = 185, ;
		Name = "cmdChkOut", ;
		Picture = ..\bitmap\toolbar\checkout.png, ;
		TabIndex = 6, ;
		Top = 5, ;
		Width = 35
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'frmGroupMembers.cmdClose' AS tcommandbutton WITH ;
		Caption = "", ;
		Height = 35, ;
		Left = 305, ;
		Name = "cmdClose", ;
		Picture = ..\bitmap\toolbar\close.png, ;
		TabIndex = 9, ;
		Top = 5, ;
		Width = 35
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'frmGroupMembers.cmdMark' AS tcommandbutton WITH ;
		Caption = "", ;
		Height = 35, ;
		Left = 5, ;
		Name = "cmdMark", ;
		Picture = ..\bitmap\toolbar\mark.png, ;
		TabIndex = 2, ;
		Top = 5, ;
		Width = 35
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'frmGroupMembers.cmdMarkAll' AS tcommandbutton WITH ;
		Caption = "", ;
		Height = 35, ;
		Left = 45, ;
		Name = "cmdMarkAll", ;
		Picture = ..\bitmap\toolbar\cleanall.png, ;
		TabIndex = 3, ;
		Top = 5, ;
		Width = 35
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'frmGroupMembers.cmdMarkNone' AS tcommandbutton WITH ;
		Caption = "", ;
		Height = 35, ;
		Left = 85, ;
		Name = "cmdMarkNone", ;
		Picture = ..\bitmap\toolbar\dirtyall.png, ;
		TabIndex = 4, ;
		Top = 5, ;
		Width = 35
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'frmGroupMembers.cmdOK' AS tcommandbutton WITH ;
		Caption = "", ;
		Height = 35, ;
		Left = 265, ;
		Name = "cmdOK", ;
		Picture = ..\bitmap\toolbar\jump.png, ;
		TabIndex = 8, ;
		Top = 5, ;
		Width = 35
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'frmGroupMembers.cmdPayMehtod' AS tcommandbutton WITH ;
		Caption = "", ;
		Height = 35, ;
		Left = 135, ;
		Name = "cmdPayMehtod", ;
		Picture = ..\bitmap\toolbar\pay.png, ;
		TabIndex = 5, ;
		Top = 5, ;
		Width = 35
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'frmGroupMembers.cmdPreliminaryInvoice' AS tcommandbutton WITH ;
		Caption = "", ;
		Height = 35, ;
		Left = 225, ;
		Name = "cmdPreliminaryInvoice", ;
		Picture = ..\bitmap\toolbar\creditcard.png, ;
		TabIndex = 7, ;
		Top = 5, ;
		Width = 35
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'frmGroupMembers.dtxtMaxDate' AS tdatectrl WITH ;
		Left = 670, ;
		Name = "dtxtMaxDate", ;
		TabIndex = 13, ;
		Top = 11
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />

	ADD OBJECT 'frmGroupMembers.dtxtMinDate' AS tdatectrl WITH ;
		Left = 470, ;
		Name = "dtxtMinDate", ;
		TabIndex = 11, ;
		Top = 11
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />

	ADD OBJECT 'frmGroupMembers.grdGroupMembers' AS grdbase WITH ;
		AllowHeaderSizing = .F., ;
		AllowRowSizing = .F., ;
		ColumnCount = 10, ;
		DeleteMark = .F., ;
		GridLineColor = 192,192,192, ;
		GridLines = 2, ;
		Height = 450, ;
		Left = 1, ;
		lresizecolumns = .F., ;
		Name = "grdGroupMembers", ;
		ReadOnly = .T., ;
		RecordMark = .F., ;
		resizefontsize = .F., ;
		ScrollBars = 2, ;
		TabIndex = 1, ;
		Top = 45, ;
		Width = 781, ;
		Column1.ColumnOrder = 10, ;
		Column1.Name = "Column1", ;
		Column1.ReadOnly = .T., ;
		Column1.Width = 90, ;
		Column10.ColumnOrder = 9, ;
		Column10.Name = "Column10", ;
		Column10.ReadOnly = .T., ;
		Column10.Width = 65, ;
		Column2.ColumnOrder = 1, ;
		Column2.Name = "Column2", ;
		Column2.ReadOnly = .T., ;
		Column2.Width = 75, ;
		Column3.ColumnOrder = 2, ;
		Column3.Name = "Column3", ;
		Column3.ReadOnly = .T., ;
		Column3.Width = 135, ;
		Column4.ColumnOrder = 3, ;
		Column4.Name = "Column4", ;
		Column4.ReadOnly = .T., ;
		Column4.Width = 65, ;
		Column5.ColumnOrder = 4, ;
		Column5.Name = "Column5", ;
		Column5.ReadOnly = .T., ;
		Column5.Width = 65, ;
		Column6.ColumnOrder = 5, ;
		Column6.Name = "Column6", ;
		Column6.ReadOnly = .T., ;
		Column6.Width = 65, ;
		Column7.ColumnOrder = 6, ;
		Column7.Name = "Column7", ;
		Column7.ReadOnly = .T., ;
		Column7.Width = 65, ;
		Column8.ColumnOrder = 7, ;
		Column8.Name = "Column8", ;
		Column8.ReadOnly = .T., ;
		Column8.Width = 65, ;
		Column9.ColumnOrder = 8, ;
		Column9.Name = "Column9", ;
		Column9.ReadOnly = .T., ;
		Column9.Width = 65
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="grid" />

	ADD OBJECT 'frmGroupMembers.grdGroupMembers.Column1.Header1' AS header WITH ;
		Caption = "", ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'frmGroupMembers.grdGroupMembers.Column1.Tbgrid1' AS tbgrid WITH ;
		Left = 22, ;
		Name = "Tbgrid1", ;
		ReadOnly = .T., ;
		Top = 62
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />

	ADD OBJECT 'frmGroupMembers.grdGroupMembers.Column10.Billgrouptxt1' AS billgrouptxt WITH ;
		Left = 41, ;
		Name = "Billgrouptxt1", ;
		Top = 62
		*< END OBJECT: ClassLib="..\libs\cit_bill.vcx" BaseClass="textbox" />

	ADD OBJECT 'frmGroupMembers.grdGroupMembers.Column10.Header1' AS header WITH ;
		Caption = "", ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'frmGroupMembers.grdGroupMembers.Column2.Header1' AS header WITH ;
		Caption = "", ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'frmGroupMembers.grdGroupMembers.Column2.Tbgrid1' AS tbgrid WITH ;
		Left = 30, ;
		Name = "Tbgrid1", ;
		ReadOnly = .T., ;
		Top = 62
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />

	ADD OBJECT 'frmGroupMembers.grdGroupMembers.Column3.Header1' AS header WITH ;
		Caption = "", ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'frmGroupMembers.grdGroupMembers.Column3.Tbgrid1' AS tbgrid WITH ;
		Left = 50, ;
		Name = "Tbgrid1", ;
		ReadOnly = .T., ;
		Top = 50
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />

	ADD OBJECT 'frmGroupMembers.grdGroupMembers.Column4.Header1' AS header WITH ;
		Caption = "", ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'frmGroupMembers.grdGroupMembers.Column4.Tbgrid1' AS tbgrid WITH ;
		Left = 22, ;
		Name = "Tbgrid1", ;
		ReadOnly = .T., ;
		Top = 38
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />

	ADD OBJECT 'frmGroupMembers.grdGroupMembers.Column5.Billgrouptxt1' AS billgrouptxt WITH ;
		Left = 24, ;
		Name = "Billgrouptxt1", ;
		Top = 62
		*< END OBJECT: ClassLib="..\libs\cit_bill.vcx" BaseClass="textbox" />

	ADD OBJECT 'frmGroupMembers.grdGroupMembers.Column5.Header1' AS header WITH ;
		Caption = "", ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'frmGroupMembers.grdGroupMembers.Column6.Billgrouptxt1' AS billgrouptxt WITH ;
		Left = 49, ;
		Name = "Billgrouptxt1", ;
		Top = 50
		*< END OBJECT: ClassLib="..\libs\cit_bill.vcx" BaseClass="textbox" />

	ADD OBJECT 'frmGroupMembers.grdGroupMembers.Column6.Header1' AS header WITH ;
		Caption = "", ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'frmGroupMembers.grdGroupMembers.Column7.Billgrouptxt1' AS billgrouptxt WITH ;
		Left = 38, ;
		Name = "Billgrouptxt1", ;
		Top = 74
		*< END OBJECT: ClassLib="..\libs\cit_bill.vcx" BaseClass="textbox" />

	ADD OBJECT 'frmGroupMembers.grdGroupMembers.Column7.Header1' AS header WITH ;
		Caption = "", ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'frmGroupMembers.grdGroupMembers.Column8.Billgrouptxt1' AS billgrouptxt WITH ;
		Left = 51, ;
		Name = "Billgrouptxt1", ;
		Top = 62
		*< END OBJECT: ClassLib="..\libs\cit_bill.vcx" BaseClass="textbox" />

	ADD OBJECT 'frmGroupMembers.grdGroupMembers.Column8.Header1' AS header WITH ;
		Caption = "", ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'frmGroupMembers.grdGroupMembers.Column9.Billgrouptxt1' AS billgrouptxt WITH ;
		Left = 16, ;
		Name = "Billgrouptxt1", ;
		Top = 62
		*< END OBJECT: ClassLib="..\libs\cit_bill.vcx" BaseClass="textbox" />

	ADD OBJECT 'frmGroupMembers.grdGroupMembers.Column9.Header1' AS header WITH ;
		Caption = "", ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'frmGroupMembers.lblMaxDate' AS tlabel WITH ;
		Caption = "lblMaxDate", ;
		Left = 620, ;
		Name = "lblMaxDate", ;
		TabIndex = 12, ;
		Top = 14, ;
		Width = 50
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'frmGroupMembers.lblMinDate' AS tlabel WITH ;
		Caption = "lblMinDate", ;
		Left = 350, ;
		Name = "lblMinDate", ;
		TabIndex = 10, ;
		Top = 14, ;
		Width = 120
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'frmSelectBills' AS tform WITH ;
		AlwaysOnTop = .F., ;
		Caption = "frmSelectBills", ;
		ControlBox = .T., ;
		DoCreate = .T., ;
		formname = frmSelectBills, ;
		Height = 106, ;
		MaxButton = .F., ;
		MinButton = .F., ;
		Name = "frmSelectBills", ;
		Visible = .F., ;
		Width = 290
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="form" />

	ADD OBJECT 'frmSelectBills.chkBill1' AS tcheckbox WITH ;
		Alignment = 0, ;
		Caption = "chkBill1", ;
		Left = 10, ;
		Name = "chkBill1", ;
		Top = 10, ;
		Width = 135
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="checkbox" />

	ADD OBJECT 'frmSelectBills.chkBill2' AS tcheckbox WITH ;
		Alignment = 0, ;
		Caption = "chkBill2", ;
		Left = 10, ;
		Name = "chkBill2", ;
		Top = 30, ;
		Width = 135
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="checkbox" />

	ADD OBJECT 'frmSelectBills.chkBill3' AS tcheckbox WITH ;
		Alignment = 0, ;
		Caption = "chkBill3", ;
		Left = 10, ;
		Name = "chkBill3", ;
		Top = 50, ;
		Width = 135
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="checkbox" />

	ADD OBJECT 'frmSelectBills.chkBill4' AS tcheckbox WITH ;
		Alignment = 0, ;
		Caption = "chkBill4", ;
		Left = 150, ;
		Name = "chkBill4", ;
		Top = 10, ;
		Width = 135
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="checkbox" />

	ADD OBJECT 'frmSelectBills.chkBill5' AS tcheckbox WITH ;
		Alignment = 0, ;
		Caption = "chkBill5", ;
		Left = 150, ;
		Name = "chkBill5", ;
		Top = 30, ;
		Width = 135
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="checkbox" />

	ADD OBJECT 'frmSelectBills.chkBill6' AS tcheckbox WITH ;
		Alignment = 0, ;
		Caption = "chkBill6", ;
		Left = 150, ;
		Name = "chkBill6", ;
		Top = 50, ;
		Width = 135
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="checkbox" />

	ADD OBJECT 'frmSelectBills.cmdCancel' AS tcommandbutton WITH ;
		Cancel = .T., ;
		Caption = "cmdCancel", ;
		Height = 24, ;
		Left = 150, ;
		Name = "cmdCancel", ;
		Top = 75, ;
		Width = 90
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'frmSelectBills.cmdOK' AS tcommandbutton WITH ;
		Caption = "cmdOK", ;
		Default = .T., ;
		Height = 24, ;
		Left = 50, ;
		Name = "cmdOK", ;
		Top = 75, ;
		Width = 90
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="commandbutton" />
	
	PROCEDURE addtorepcursor
		LPARAMETERS lp_nReserID, lp_nWindow, lp_nPayNum, lp_nPayAmount
		LOCAL l_nSelect, l_oCurData
		
		l_nSelect = SELECT()
		SELECT(this.cTblPayReport)
		SCATTER NAME l_oCurData MEMO BLANK
		
		l_oCurData.crp_reserid = lp_nReserID
		l_oCurData.crp_window = lp_nWindow
		l_oCurData.crp_balance = Balance(l_oCurData.crp_reserid, l_oCurData.crp_window)
		l_oCurData.crp_payamount = lp_nPayAmount
		l_oCurData.crp_paynum = lp_nPayNum
		l_oCurData.crp_paymeth = dblookup("paymetho","tag1",l_oCurData.crp_paynum,"pm_paymeth")
		l_oCurData.crp_paydescript = dblookup("paymetho","tag1",l_oCurData.crp_paynum,"pm_lang"+g_langnum)
		
		SELECT * FROM reservat ;
				LEFT JOIN address ON rs_addrid = ad_addrid ;
				LEFT JOIN apartner ON rs_apid = ap_apid ;
				WHERE rs_reserid = l_oCurData.crp_reserid ;
				INTO CURSOR curResult
		IF RECCOUNT()>0
			IF NOT ISNULL(ad_lname)
				IF rs_addrid = rs_compid AND NOT ISNULL(ap_lname) AND NOT EMPTY(rs_apname)
				      l_oCurData.crp_completename = ALLTRIM(ap_title)+" "+ALLTRIM(ap_fname)+" "+flIp(ALLTRIM(ap_lname))
				ELSE
				      l_oCurData.crp_completename = ALLTRIM(ad_title)+" "+ALLTRIM(ad_fname)+" "+flIp(ALLTRIM(ad_lname))
				ENDIF
				IF rs_addrid = rs_compid AND NOT ISNULL(ap_lname) AND NOT EMPTY(rs_apname)
					l_oCurData.crp_lname = TRIM(ap_lname)
					l_oCurData.crp_fname = TRIM(ap_fname)
				ELSE
					l_oCurData.crp_lname = TRIM(ad_lname)
					l_oCurData.crp_fname = TRIM(ad_fname)
				ENDIF
				l_oCurData.crp_street = ad_street
				l_oCurData.crp_zip = ad_zip
				l_oCurData.crp_city = ad_city
			ENDIF
			l_oCurData.crp_billnum = FNGetBillData(reservat.rs_reserid, l_oCurData.crp_window, "bn_billnum")
			l_oCurData.crp_group = rs_group
		ENDIF
		USE IN curResult
		
		SELECT(this.cTblPayReport)
		APPEND BLANK
		GATHER NAME l_oCurData MEMO
		SELECT (l_nSelect)
		
		RETURN .T.
	ENDPROC

	PROCEDURE checkbills
		LPARAMETERS lp_nReserId, lp_nWindow
		LOCAL l_lAllowed
		LOCAL ARRAY l_aWin(1)
		
		IF EMPTY(lp_nWindow)
			SELECT MAX(IIF(tm_mark1,1,0)), MAX(IIF(tm_mark2,2,0)), MAX(IIF(tm_mark3,3,0)), ;
				MAX(IIF(tm_mark4,4,0)), MAX(IIF(tm_mark5,5,0)), MAX(IIF(tm_mark6,6,0)) ;
				FROM (this.cTblMembers) ;
				INTO ARRAY l_aWin
			IF ALEN(l_aWin) > 1
				FOR i = 6 TO 1 STEP -1
					IF EMPTY(l_aWin(i))
						ADEL(l_aWin, i, 2)
					ENDIF
				NEXT
			ENDIF
		ELSE
			l_aWin(1) = lp_nWindow
		ENDIF
		
		DO BillsReserCheck IN ProcBill WITH lp_nReserId, l_aWin, "POST_REDIRECT", l_lAllowed
		
		RETURN l_lAllowed
	ENDPROC

	PROCEDURE createrepcursor
		CREATE CURSOR (this.cTblPayReport) (crp_reserid n(12,3), crp_window n(1), crp_billnum c(10), crp_lname c(30), ;
				crp_completename c(254), crp_fname c(20), crp_street c(30), crp_zip c(10), crp_city c(30), crp_balance b, ;
				crp_payamount b, crp_paynum n(2), crp_paymeth c(4), crp_paydescript c(25), crp_group c(25))
		RETURN .T.
	ENDPROC

	PROCEDURE Init
		LPARAMETERS lp_frsBills, lp_cMode, lp_aParams
		IF PCOUNT() >= 3
			EXTERNAL ARRAY lp_aParams
		ENDIF
		IF PCOUNT() >= 1
			this.frsbills = lp_frsBills
			IF NOT ISNULL(this.frsbills)
				this.frsbills.frmBills.Enabled = .F.
			ENDIF
		ENDIF
		IF EMPTY(lp_cMode)
			this.cMode = "GROUP_REDIRECT_POSTS"
		ELSE
			this.cMode = lp_cMode
		ENDIF
		this.dDepDate = {}
		this.dMinDate = {}
		this.dMaxDate = {}
		this.cTblMembers = SYS(2015)
		this.cTblArticles = SYS(2015)
		this.cTblPayMetho = SYS(2015)
		this.cTblPayReport = SYS(2015)
		LOCAL l_cPayMasterCondition, l_cWhere, l_cExtraFields, l_lResPayMeth, l_nPayNum
		LOCAL l_cCursor, l_cSQL
		l_cExtraFields = ""
		l_cSQL = ""
		DO CASE
		 CASE this.cMode = "GROUP_REDIRECT_POSTS"
			* l_cPayMasterCondition will be returned by reference
			DO GetPayMasterCondition IN isdummy WITH l_cPayMasterCondition
			* Following WHERE clause optimizes query using index Tag1.
			* Query optimization level: partial.
			l_cWhere = "rs_reserid >= " + SqlCnv(INT(reservat.rs_reserid)) + ;
					" AND rs_reserid < " + SqlCnv(INT(reservat.rs_reserid) + 1) + ;
					" AND EMPTY(rs_out) AND rs_status<>[CXL] " + ;
					" AND NOT " + l_cPayMasterCondition
			this.frmGroupMembers.grdGroupMembers.RemoveObject("column1")
		 CASE this.cMode = "GROUP_CHKOUT_PAY"
			this.cGroup = ALLTRIM(lp_aParams(1))
			this.dDepDate = lp_aParams(2)
			l_lResPayMeth = lp_aParams(3)
			l_nPayNum = lp_aParams(4)
			this.lPrintList = lp_aParams(5)
			this.lPrintBills = lp_aParams(6)
			* Following WHERE clause optimizes query using index Tag19 and Tag5.
			* Query optimization level: partial.
			l_cWhere = "rs_in+DTOS(rs_depdate)+rs_roomnum+rs_out = " + "[1"
			IF NOT EMPTY(this.dDepDate)
				l_cWhere = l_cWhere + DTOS(this.dDepDate)
			ENDIF
			l_cWhere = l_cWhere + "] AND rs_group+DTOS(rs_arrdate)+rs_lname = " + ;
					"[" + this.cGroup + "] AND EMPTY(rs_out)"
			l_cExtraFields = ", rs_paymeth, paymetho.pm_paynum AS pm_paynum," + ;
					" paymetho.pm_lang" + g_LangNum + " AS pm_lang," + ;
					" paymetho.pm_copy AS pm_copy, paymetho.pm_calcrat AS pm_calcrat"
			***
			LOCAL l_nSelect, l_cOrder, l_cRoomNum
			l_nSelect = SELECT()
			SELECT reservat
			l_cOrder = ORDER()
			SET ORDER TO
			SCAN FOR &l_cWhere
				l_cRoomNum = postroom()
				DO ifcpost IN interfac WITH reservat.rs_reserid, l_cRoomNum
				* RateCode with rc_rhytm==4 shoud be posted on departure when bills are called.
				DO RateCodePost IN RatePost WITH SysDate(), "CHECKOUT"
			ENDSCAN
			SET ORDER TO &l_cOrder
			SELECT (l_nSelect)
			***
		 OTHERWISE
			l_cWhere = ".T."
		ENDCASE
		
		* SELECT DISTINCT is used to filter out duplicate reservations, when in roomtype are duplicate roomtypes
		l_cSQL = ;
			[SELECT DISTINCT rs_reserid, rs_roomnum, rs_lname, ] + ;
				[balance(rs_reserid,1) AS tm_balance1, .F. AS tm_mark1, ] + ;
				[balance(rs_reserid,2) AS tm_balance2, .F. AS tm_mark2, ] + ;
				[balance(rs_reserid,3) AS tm_balance3, .F. AS tm_mark3, ] + ;
				[balance(rs_reserid,4) AS tm_balance4, .F. AS tm_mark4, ] + ;
				[balance(rs_reserid,5) AS tm_balance5, .F. AS tm_mark5, ] + ;
				[balance(rs_reserid,6) AS tm_balance6, .F. AS tm_mark6 ] + ;
				l_cExtraFields + [, rs_arrdate, rs_depdate, rs_ratedat ] + ;
			[FROM reservat ] + ;
			[LEFT JOIN roomtype ON reservat.rs_roomtyp = roomtype.rt_roomtyp ] + ;
			[WHERE ] + l_cWhere + [ ] + ;
			[INTO CURSOR ] + this.cTblMembers + [ READWRITE]
		
		this.cSQL = l_cSQL
		
		&l_cSQL
		
		* Customize displaying of this.cTblMembers table in grdGroupMembers grid control.
		WITH this.frmGroupMembers.grdGroupMembers
			.RecordSource = this.cTblMembers
			.Column2.ControlSource = [get_rm_rmname(]+this.cTblMembers + [.rs_roomnum)]
			.Column3.ControlSource = this.cTblMembers + [.rs_lname]
			.Column4.ControlSource = this.cTblMembers + [.rs_reserid]
			.Column5.ControlSource = [ALLTRIM(TRANSFORM(ROUND(] + this.cTblMembers + [.tm_balance1, param.pa_currdec), gcCurrcyDisp))]
			.Column6.ControlSource = [ALLTRIM(TRANSFORM(ROUND(] + this.cTblMembers + [.tm_balance2, param.pa_currdec), gcCurrcyDisp))]
			.Column7.ControlSource = [ALLTRIM(TRANSFORM(ROUND(] + this.cTblMembers + [.tm_balance3, param.pa_currdec), gcCurrcyDisp))]
			.Column8.ControlSource = [ALLTRIM(TRANSFORM(ROUND(] + this.cTblMembers + [.tm_balance4, param.pa_currdec), gcCurrcyDisp))]
			.Column9.ControlSource = [ALLTRIM(TRANSFORM(ROUND(] + this.cTblMembers + [.tm_balance5, param.pa_currdec), gcCurrcyDisp))]
			.Column10.ControlSource= [ALLTRIM(TRANSFORM(ROUND(] + this.cTblMembers + [.tm_balance6, param.pa_currdec), gcCurrcyDisp))]
			.Column5.DynamicForeColor = [IIF(] + this.cTblMembers + [.tm_mark1,RGB(255,0,0),IIF(RECNO('] + this.cTblMembers + [')=thisform.grdGroupMembers.nRecNo,RGB(255,255,255),RGB(0,0,0)))]
			.Column6.DynamicForeColor = [IIF(] + this.cTblMembers + [.tm_mark2,RGB(255,0,0),IIF(RECNO('] + this.cTblMembers + [')=thisform.grdGroupMembers.nRecNo,RGB(255,255,255),RGB(0,0,0)))]
			.Column7.DynamicForeColor = [IIF(] + this.cTblMembers + [.tm_mark3,RGB(255,0,0),IIF(RECNO('] + this.cTblMembers + [')=thisform.grdGroupMembers.nRecNo,RGB(255,255,255),RGB(0,0,0)))]
			.Column8.DynamicForeColor = [IIF(] + this.cTblMembers + [.tm_mark4,RGB(255,0,0),IIF(RECNO('] + this.cTblMembers + [')=thisform.grdGroupMembers.nRecNo,RGB(255,255,255),RGB(0,0,0)))]
			.Column9.DynamicForeColor = [IIF(] + this.cTblMembers + [.tm_mark5,RGB(255,0,0),IIF(RECNO('] + this.cTblMembers + [')=thisform.grdGroupMembers.nRecNo,RGB(255,255,255),RGB(0,0,0)))]
			.Column10.DynamicForeColor= [IIF(] + this.cTblMembers + [.tm_mark6,RGB(255,0,0),IIF(RECNO('] + this.cTblMembers + [')=thisform.grdGroupMembers.nRecNo,RGB(255,255,255),RGB(0,0,0)))]
			.Column5.DynamicFontBold = this.cTblMembers + [.tm_mark1]
			.Column6.DynamicFontBold = this.cTblMembers + [.tm_mark2]
			.Column7.DynamicFontBold = this.cTblMembers + [.tm_mark3]
			.Column8.DynamicFontBold = this.cTblMembers + [.tm_mark4]
			.Column9.DynamicFontBold = this.cTblMembers + [.tm_mark5]
			.Column10.DynamicFontBold= this.cTblMembers + [.tm_mark6]
		ENDWITH
		IF this.cMode = "GROUP_CHKOUT_PAY"
			this.MembersUpdate(l_lResPayMeth, l_nPayNum)
			this.frmGroupMembers.grdGroupMembers.Column1.ControlSource = this.cTblMembers + [.pm_lang]
			this.frmGroupMembers.cmdChkOut.Visible = .T.
			this.frmGroupMembers.cmdPayMehtod.Visible = .T.
			l_cCursor = SYS(2015)
			SELECT MIN(rs_arrdate) AS dMinArrDate, MAX(rs_depdate) AS dMaxDepDate ;
					FROM (this.cTblMembers) ;
					INTO CURSOR (l_cCursor)
			this.dMinDate = MIN(dMinArrDate, SysDate())
			this.dMaxDate = MIN(dMaxDepDate, SysDate())
			SELECT MIN(IIF(ISNULL(ps_date), SysDate(), ps_date)) AS dMinPost ;
					FROM (this.cTblMembers) ;
					LEFT JOIN post ON rs_reserid = ps_reserid ;
					INTO CURSOR (l_cCursor)
			this.dMinDate = MIN(dMinPost, this.dMinDate)
			USE IN (l_cCursor)
			this.frmGroupMembers.dtxtMinDate.ControlSource = "thisformset.dMinDate"
			this.frmGroupMembers.dtxtMaxDate.ControlSource = "thisformset.dMaxDate"
			this.frmGroupMembers.cmdPreliminaryInvoice.Visible = .F.
			this.frmGroupMembers.cmdOK.Left = this.frmGroupMembers.cmdPreliminaryInvoice.Left
		ELSE
			this.frmGroupMembers.cmdChkOut.Visible = .F.
			this.frmGroupMembers.cmdPayMehtod.Visible = .F.
			this.frmGroupMembers.cmdPreliminaryInvoice.Left = 135
			this.frmGroupMembers.cmdOK.Left = 175
			this.frmGroupMembers.cmdClose.Left = 215
			this.frmGroupMembers.lblMinDate.Visible = .F.
			this.frmGroupMembers.lblMaxDate.Visible = .F.
			this.frmGroupMembers.dtxtMinDate.Visible = .F.
			this.frmGroupMembers.dtxtMaxDate.Visible = .F.
		ENDIF
	ENDPROC

	PROCEDURE Load
		DO ini
	ENDPROC

	PROCEDURE markbills
		LPARAMETERS lp_cScope, lp_aBillMark
		EXTERNAL ARRAY lp_aBillMark
		LOCAL l_nCount, l_lAllowed, l_nAmount, l_nRecNo, l_lNotified
		
		SELECT(this.cTblMembers)
		l_nRecNo = RECNO()
		SCAN &lp_cScope
			l_lAllowed = .T.
			IF this.cMode = "GROUP_CHKOUT_PAY"
				IF EMPTY(pm_paynum)
					IF NOT l_lNotified
						= Alert(GetLangText("GROUPBILL","TXT_SELECT_PAYMEHTOD"))
						l_lNotified = .T.
					ENDIF
					LOOP
				ENDIF
				FOR l_nCount = 1 TO ALEN(lp_aBillMark)
					IF lp_aBillMark(l_nCount)
						l_nAmount = EVALUATE("tm_balance" + LTRIM(STR(l_nCount)))
						DO BillPayValid IN ProcBill WITH rs_reserid, l_nCount, pm_paynum, l_nAmount, l_lAllowed
					ENDIF
				ENDFOR
				SELECT(this.cTblMembers)
			ENDIF
			IF l_lAllowed
				REPLACE tm_mark1 WITH lp_aBillMark(1), ;
						tm_mark2 WITH lp_aBillMark(2), ;
						tm_mark3 WITH lp_aBillMark(3), ;
						tm_mark4 WITH lp_aBillMark(4), ;
						tm_mark5 WITH lp_aBillMark(5), ;
						tm_mark6 WITH lp_aBillMark(6)
			ELSE
				REPLACE tm_mark1 WITH .F., ;
						tm_mark2 WITH .F., ;
						tm_mark3 WITH .F., ;
						tm_mark4 WITH .F., ;
						tm_mark5 WITH .F., ;
						tm_mark6 WITH .F.
			ENDIF
		ENDSCAN
		GO l_nRecNo
		this.frmGroupMembers.grdGroupMembers.Refresh()
	ENDPROC

	PROCEDURE membersupdate
		LPARAMETERS lp_lResPayMeth, lp_nPayNum
		LOCAL l_lPayMethodUpdate, l_nRecNo, i, l_nBalance, l_cField, l_cLang
		l_lPayMethodUpdate = PCOUNT() > 1
		l_nRecNo = RECNO(this.cTblMembers)
		SELECT(this.cTblMembers)
		SCAN
			IF l_lPayMethodUpdate
				IF (lp_lResPayMeth AND NOT EMPTY(rs_paymeth) AND ;
						NOT EMPTY(DbLookup([paymetho], [tag2], rs_paymeth, [pm_paynum], .T.))) ;
						OR (NOT EMPTY(lp_nPayNum) AND ;
						DLocate([paymetho], [pm_paynum == ] + SqlCnv(lp_nPayNum)))
					l_cLang = EVALUATE(" paymetho.pm_lang" + g_LangNum)
					REPLACE pm_paynum WITH paymetho.pm_paynum, ;
							pm_lang WITH l_cLang, ;
							pm_copy WITH paymetho.pm_copy
				ELSE
					BLANK FIELDS pm_paynum, pm_lang, pm_copy
				ENDIF
				LOOP
			ENDIF
			FOR i = 1 TO 6
				DO BillSum IN ProcBill WITH rs_reserid, i, 0, this.dMaxDate, "", l_nBalance
				l_cField = "tm_balance" + LTRIM(STR(i))
				REPLACE (l_cField) WITH l_nBalance
			ENDFOR
		ENDSCAN
		GO l_nRecNo IN (this.cTblMembers)
	ENDPROC

	PROCEDURE oncancel
	ENDPROC

	PROCEDURE oncheckout
		IF DLocate(this.cTblMembers, "tm_mark1 OR tm_mark2 OR tm_mark3 OR tm_mark4 OR tm_mark5 OR tm_mark6")
			this.CheckBills(reservat.rs_reserid, 1)
			DO CheckOutBProc IN ProcBill WITH "EXTENDED", this.cGroup
		ENDIF
		
		RETURN .T.
	ENDPROC

	PROCEDURE ongamark
		REPLACE ta_mark WITH !(ta_mark) IN (this.cTblArticles)
	ENDPROC

	PROCEDURE ongamarkall
		LOCAL l_nRecNo
		l_nRecNo = RECNO(this.cTblArticles)
		REPLACE ALL ta_mark WITH .T. IN (this.cTblArticles)
		GO l_nRecNo IN (this.cTblArticles)
	ENDPROC

	PROCEDURE ongamarknone
		LOCAL l_nRecNo
		l_nRecNo = RECNO(this.cTblArticles)
		REPLACE ALL ta_mark WITH .F. IN (this.cTblArticles)
		GO l_nRecNo IN (this.cTblArticles)
	ENDPROC

	PROCEDURE ongaok
		WAIT WINDOW NOWAIT "Transfer..."
		LOCAL l_cMarked, l_cTblMembers, l_nBalance, l_lBillChkOut, l_frmBillPrint
		LOCAL ARRAY l_aBill(6), l_aMark(6)
		
		IF this.cMode = "GROUP_REDIRECT_POSTS"
			this.CheckBills(reservat.rs_reserid)
		ENDIF
		IF this.cMode = "GROUP_CHKOUT_PAY" AND this.lPrintList
			this.CreateRepCursor()
		ENDIF
		l_cTblMembers = this.cTblMembers
		SELECT(l_cTblMembers)
		SCAN FOR tm_mark1 OR tm_mark2 OR tm_mark3 OR tm_mark4 OR tm_mark5 OR tm_mark6
			*STORE 0 TO l_aBill
			l_cMarked = IIF(tm_mark1, "ps_window = 1", "")
			l_cMarked = l_cMarked + IIF(tm_mark2, IIF(EMPTY(l_cMarked), "", " OR ") + "ps_window = 2", "")
			l_cMarked = l_cMarked + IIF(tm_mark3, IIF(EMPTY(l_cMarked), "", " OR ") + "ps_window = 3", "")
			l_cMarked = l_cMarked + IIF(tm_mark4, IIF(EMPTY(l_cMarked), "", " OR ") + "ps_window = 4", "")
			l_cMarked = l_cMarked + IIF(tm_mark5, IIF(EMPTY(l_cMarked), "", " OR ") + "ps_window = 5", "")
			l_cMarked = l_cMarked + IIF(tm_mark6, IIF(EMPTY(l_cMarked), "", " OR ") + "ps_window = 6", "")
			l_cMarked = IIF(EMPTY(l_cMarked), ".T.", l_cMarked)
			l_aMark(1) = tm_mark1
			l_aMark(2) = tm_mark2
			l_aMark(3) = tm_mark3
			l_aMark(4) = tm_mark4
			l_aMark(5) = tm_mark5
			l_aMark(6) = tm_mark6
			l_aBill(1) = 0
			l_aBill(2) = 0
			l_aBill(3) = 0
			l_aBill(4) = 0
			l_aBill(5) = 0
			l_aBill(6) = 0
			SELECT post
			SCAN FOR ps_reserid == &l_cTblMembers..rs_reserid AND ;
					NOT post.ps_cancel AND EMPTY(post.ps_paynum) AND ;
					EMPTY(ps_billnum) AND ;
					(&l_cMarked)
				SELECT(this.cTblArticles)
				LOCATE FOR ps_artinum == post.ps_artinum AND ta_mark
				IF FOUND(this.cTblArticles)
					DO CASE
					 CASE this.cMode = "GROUP_REDIRECT_POSTS"
						DO BillRedirectPosts IN ProcBill ;
							WITH reservat.rs_reserid, ;
							&l_cTblMembers..rs_roomnum, ;
							&l_cTblMembers..rs_lname, this.frsbills.activebill
					 CASE this.cMode = "GROUP_CHKOUT_PAY" AND NOT post.ps_split AND ;
							this.dMaxDate >= post.ps_date AND this.dMinDate <= post.ps_date
						l_aBill(post.ps_window) = l_aBill(post.ps_window) + ;
								post.ps_amount
						IF param.pa_exclvat
							l_aBill(post.ps_window) = l_aBill(post.ps_window) + ;
								post.ps_vat1 + post.ps_vat2 + post.ps_vat3 + post.ps_vat4 + post.ps_vat5 + ;
								post.ps_vat6 + post.ps_vat7 + post.ps_vat8 + post.ps_vat9
						ENDIF
					ENDCASE
				ENDIF
				SELECT post
			ENDSCAN
			IF this.cMode = "GROUP_CHKOUT_PAY"
				FOR i = 1 TO 6
					IF NOT EMPTY(l_aBill(i)) AND l_aMark(i)
						DO BillSum IN ProcBill WITH &l_cTblMembers..rs_reserid, i, 0, ;
								this.dMaxDate, "", l_nBalance
						l_aBill(i) = MIN(l_nBalance, l_aBill(i))
						IF l_aBill(i) < 0 OR NOT this.CheckBills(&l_cTblMembers..rs_reserid, i)
							LOOP
						ENDIF
						ProcBill("BillPayProcess", "post", &l_cTblMembers..rs_reserid, i, 0, "", "BILLGROUP", &l_cTblMembers..pm_paynum, ;
							l_aBill(i), ROUND(l_aBill(i) / paymetho.pm_calcrat, param.pa_currdec))
						IF this.lPrintBills
							l_lBillChkOut = (Balance(&l_cTblMembers..rs_reserid, i) == 0)
							DO FORM "forms\billprint" NAME l_frmBillPrint LINKED ;
									WITH &l_cTblMembers..rs_reserid, i, ;
									MAX(&l_cTblMembers..pm_copy,1), l_lBillChkOut, .F., .F., .T. ;
									NOSHOW
							l_frmBillPrint = .NULL.
						ENDIF
						IF this.lPrintList
							this.AddToRepCursor(&l_cTblMembers..rs_reserid, i, &l_cTblMembers..pm_paynum, l_aBill(i))
						ENDIF
					ENDIF
				ENDFOR
			ENDIF && this.cMode = "GROUP_CHKOUT_PAY"
			SELECT(l_cTblMembers)
		ENDSCAN
		IF this.cMode = "GROUP_CHKOUT_PAY" AND this.dDepDate <= SysDate()
			this.OnCheckOut()
		ENDIF
		IF this.cMode = "GROUP_CHKOUT_PAY" AND this.lPrintList
			this.PrintRepCursor()
		ENDIF
	ENDPROC

	PROCEDURE ongmmark
		this.frmSelectBills.SetAll("Value", .F., "tcheckbox")
		this.frmSelectBills.cScope = "NEXT 1"
		
		this.frmGroupMembers.Enabled = .F.
		this.frmSelectBills.Show()
	ENDPROC

	PROCEDURE ongmmarkall
		this.frmSelectBills.SetAll("Value", .T., "tcheckbox")
		this.frmSelectBills.cScope = "ALL"
		
		this.frmGroupMembers.Enabled = .F.
		this.frmSelectBills.Show()
	ENDPROC

	PROCEDURE ongmmarknone
		LOCAL l_nRecNo
		l_nRecNo = RECNO(this.cTblMembers)
		REPLACE tm_mark1 WITH .F., tm_mark2 WITH .F., ;
				tm_mark3 WITH .F., tm_mark4 WITH .F., ;
				tm_mark5 WITH .F., tm_mark6 WITH .F. ;
				ALL IN (this.cTblMembers)
		GO l_nRecNo IN (this.cTblMembers)
		this.frmGroupMembers.grdGroupMembers.Refresh()
	ENDPROC

	PROCEDURE ongmok
		LOCAL l_cWhereDate
		IF this.cMode = "GROUP_CHKOUT_PAY"
			l_cWhereDate = "post.ps_date <= " + SqlCnv(this.dMaxDate)
			l_cWhereDate = SqlAnd(l_cWhereDate, "post.ps_date >= " + SqlCnv(this.dMinDate))
			l_cWhereDate = l_cWhereDate + " AND"
		ELSE
			l_cWhereDate = ""
		ENDIF
		* Create cursor this.cTblArticles.
		SELECT ps_artinum, SUM(ps_units), SUM(ps_amount), .F. AS ta_mark, ;
				ar_lang1, ar_lang2, ar_lang3, ar_lang4, ar_lang5, ar_lang6, ar_lang7, ar_lang8, ar_lang9, ar_lang10, ar_lang11 ;
				FROM (this.cTblMembers) ;
				RIGHT JOIN post ON rs_reserid = post.ps_reserid ;
				LEFT JOIN article ON post.ps_artinum = article.ar_artinum ;
				WHERE &l_cWhereDate EMPTY(post.ps_paynum) AND ;
					NOT post.ps_split AND NOT post.ps_cancel AND EMPTY(ps_billnum) AND ;
					((tm_mark1 AND (post.ps_window = 1)) OR ;
					(tm_mark2 AND (post.ps_window = 2)) OR ;
					(tm_mark3 AND (post.ps_window = 3)) OR ;
					(tm_mark4 AND (post.ps_window = 4)) OR ;
					(tm_mark5 AND (post.ps_window = 5)) OR ;
					(tm_mark6 AND (post.ps_window = 6))) ;
				GROUP BY post.ps_artinum ;
				ORDER BY ps_artinum ;
				INTO CURSOR (this.cTblArticles) READWRITE
		IF RECCOUNT(this.cTblArticles) > 0
			* Set grid's ControlSource.
			WITH this.frmGroupArticles.grdGroupArticles
				.RecordSource = this.cTblArticles
				.Column1.ControlSource = this.cTblArticles + ".ps_artinum"
				.Column2.ControlSource = this.cTblArticles + ".ar_lang" + g_Langnum
				.Column3.ControlSource = this.cTblArticles + ".sum_ps_units"
				.Column4.ControlSource = this.cTblArticles + ".sum_ps_amount"
				.SetAll("DynamicForeColor", "IIF(" + this.cTblArticles + ".ta_mark,RGB(255,0,0),IIF(RECNO('" + this.cTblArticles + "')=thisform.grdGroupArticles.nRecNo,RGB(255,255,255),RGB(0,0,0)))", "Column")
				.SetAll("DynamicFontBold", this.cTblArticles + ".ta_mark", "Column")
			ENDWITH
			* Call GroupArti form.
			this.frmGroupMembers.Hide()
			this.frmGroupArticles.Show()
			this.frmGroupMembers.Release()
			this.frmSelectBills.Release()
		ELSE
			= Alert(GetLangText("GROUPBIL","TXT_NO_BILLS_SELECTED"))
		ENDIF
	ENDPROC

	PROCEDURE ongmpaymethod
		LOCAL l_nArea, l_cTblPayMetho, l_nPayNum, l_cSql, l_nRet
		LOCAL ARRAY l_aDefs(3, 4)
		l_nArea = SELECT()
		l_aDefs(1, 1) = "pm_paynum"
		l_aDefs(1, 2) = 70
		l_aDefs(1, 3) = ""
		l_aDefs(1, 4) = "TXT"
		l_aDefs(2, 1) = "pm_lang"
		l_aDefs(2, 2) = 150
		l_aDefs(2, 3) = ""
		l_aDefs(2, 4) = "TXT"
		l_aDefs(3, 1) = "pm_paymeth"
		l_aDefs(3, 2) = 70
		l_aDefs(3, 3) = ""
		l_aDefs(3, 4) = "TXT"
		l_cTblPayMetho = this.cTblPayMetho
		SELECT(this.cTblMembers)
		l_nPayNum = pm_paynum
		l_cSql = "SELECT pm_paynum, pm_lang" + g_langnum + " AS pm_lang," + ;
					" pm_paymeth, pm_copy " + ;
					"FROM paymetho " + ;
					"WHERE NOT INLIST(pm_paynum, param.pa_payonld, param.pa_rndpay)" + ;
					" AND NOT pm_inactiv AND NOT pm_aronly " + ;
					"ORDER BY pm_paynum " + ;
					"INTO CURSOR " + l_cTblPayMetho
		&l_cSql
		IF NOT EMPTY(l_nPayNum)
			LOCATE FOR pm_paynum == l_nPayNum
		ENDIF
		DO FORM forms\brwmulsel WITH l_cTblPayMetho, l_aDefs TO l_nRet
		IF NOT EMPTY(l_nRet)
			REPLACE pm_paynum WITH &l_cTblPayMetho..pm_paynum, ;
					pm_lang WITH &l_cTblPayMetho..pm_lang, ;
					pm_copy WITH &l_cTblPayMetho..pm_copy ;
					IN (this.cTblMembers)
			SELECT(this.cTblMembers)
			this.SelectBills("NEXT 1", tm_mark1 , tm_mark2 , tm_mark3 , ;
					tm_mark4, tm_mark5 , tm_mark6)
		ENDIF
		SELECT(l_nArea)
	ENDPROC

	PROCEDURE onpreliminaryinvoice
		LOCAL l_cTblMembers, l_cBillToDateCaption, l_dBillToDate, l_nSelect, l_nRecNo, l_lAllowed
		
		l_cBillToDateCaption = GetLangText("BILL","TXT_PREBILL")
		DO FORM forms\GetDateFromRange WITH "BILL_TO_DATE", reservat.rs_depdate, reservat.rs_ratedat+1, reservat.rs_depdate, l_cBillToDateCaption TO l_dBillToDate
		
		IF EMPTY(l_dBillToDate)
			RETURN .F.
		ENDIF
		
		l_nSelect = SELECT()
		l_cTblMembers = this.cTblMembers
		
		IF DLocate(this.cTblMembers, "tm_mark1 OR tm_mark2 OR tm_mark3 OR tm_mark4 OR tm_mark5 OR tm_mark6")
			this.CheckBills(reservat.rs_reserid, this.frsbills.activebill)
		ENDIF
		
		SELECT &l_cTblMembers
		l_nRecNo = RECNO()
		SCAN FOR tm_mark1 OR tm_mark2 OR tm_mark3 OR tm_mark4 OR tm_mark5 OR tm_mark6
			ProcBill("PostAllUntilDate", &l_cTblMembers..rs_reserid, this.frsbills.activebill, l_dBillToDate)
		ENDSCAN
		GO l_nRecNo
		
		this.RefreshList()
		
		SELECT(l_nSelect)
		
		RETURN .T.
	ENDPROC

	PROCEDURE postuntildate
		LPARAMETERS lp_nReserId, lp_nWindow
		LOCAL l_nSelect
		procbill("PostAllUntilDate",rs_reserid,lp_nWindow,l_dBillToDate)
		RETURN .T.
	ENDPROC

	PROCEDURE printrepcursor
		IF USED(this.cTblPayReport) AND RECCOUNT(this.cTblPayReport)>0
			SELECT(this.cTblPayReport)
			REPORT FORM (gcReportdir+"_BATCHPYNT.FRX") PREVIEW NOCONSOLE
		ENDIF
		
		RETURN .T.
	ENDPROC

	PROCEDURE refreshlist
		LOCAL l_cTempCur, l_nSelect
		
		l_nSelect = SELECT()
		
		l_cTempCur = SYS(2015)
		l_cSql = STRTRAN(this.cSql, this.cTblMembers, l_cTempCur)
		&l_cSql
		this.frmGroupMembers.cmdMark.SetFocus()
		SELECT (this.cTblMembers)
		ZAP
		APPEND FROM DBF(l_cTempCur)
		USE IN (l_cTempCur)
		this.frmGroupMembers.grdGroupMembers.SetFocus()
		SELECT (l_nSelect)
		
		RETURN .T.
		
	ENDPROC

	PROCEDURE selectbills
		LPARAMETERS lp_cScope, lp_lBill1, lp_lBill2, lp_lBill3, lp_lBill4, lp_lBill5, lp_lBill6
		LOCAL ARRAY l_aBillMark(6)
		l_aBillMark(1) = lp_lBill1
		l_aBillMark(2) = lp_lBill2
		l_aBillMark(3) = lp_lBill3
		l_aBillMark(4) = lp_lBill4
		l_aBillMark(5) = lp_lBill5
		l_aBillMark(6) = lp_lBill6
		this.MarkBills(lp_cScope, @l_aBillMark)
	ENDPROC

	PROCEDURE Unload
		IF USED(this.cTblMembers)
			USE IN (this.cTblMembers)
		ENDIF
		IF USED(this.cTblArticles)
			USE IN (this.cTblArticles)
		ENDIF
		IF USED(this.cTblPayMetho)
			USE IN (this.cTblPayMetho)
		ENDIF
		IF USED(this.cTblPayReport)
			USE IN (this.cTblPayReport)
		ENDIF
		IF NOT ISNULL(this.frsbills)
			this.frsbills.frmBills.Enabled = .T.
			this.frsbills.frmBills.Activate()
			this.frsbills.refreshbills()
		ENDIF
	ENDPROC

	PROCEDURE frmGroupArticles.Activate
		this.Caption = GetLangText("GROUPBIL","TXT_LIST_OF_ARTICLES")
	ENDPROC

	PROCEDURE frmGroupArticles.cmdClose.Click
		thisformset.Release()
	ENDPROC

	PROCEDURE frmGroupArticles.cmdMark.Click
		thisformset.ongamark()
	ENDPROC

	PROCEDURE frmGroupArticles.cmdMarkAll.Click
		thisformset.ongamarkall()
	ENDPROC

	PROCEDURE frmGroupArticles.cmdMarkNone.Click
		thisformset.ongamarknone()
	ENDPROC

	PROCEDURE frmGroupArticles.cmdOK.Click
		thisformset.ongaok()
		thisformset.Release()
	ENDPROC

	PROCEDURE frmGroupArticles.Init
		DODEFAULT()
		*
		this.grdGroupArticles.Column1.Header1.Caption = GetLangText("GROUPBIL","TXT_ARTICLE")
		this.grdGroupArticles.Column2.Header1.Caption = GetLangText("GROUPBIL","TXT_DESCRIPTION")
		this.grdGroupArticles.Column3.Header1.Caption = GetLangText("GROUPBIL","TXT_QUANTITY")
		this.grdGroupArticles.Column4.Header1.Caption = GetLangText("GROUPBIL","TXT_AMOUNT")
		this.cmdOK.ToolTipText = GetLangText("GROUPBIL","TT_SAVE")
		this.cmdMark.ToolTipText = GetLangText("GROUPBIL","TT_MARK_ONE")
		this.cmdMarkAll.ToolTipText = GetLangText("GROUPBIL","TT_MARK_ALL")
		this.cmdMarkNone.ToolTipText = GetLangText("GROUPBIL","TT_MARK_NONE")
		this.cmdClose.ToolTipText = GetLangText("BILL","TT_CLOSE")
	ENDPROC

	PROCEDURE frmGroupArticles.KeyPress
		LPARAMETERS nKeyCode, nShiftAltCtrl
		
		DO CASE
		 CASE nKeyCode = 27
			thisformset.Release()
		 CASE (nKeyCode = 13 AND nShiftAltCtrl = 2) OR ;
				(nKeyCode = 32 AND nShiftAltCtrl = 0) && SPACEBAR OR CTRL + M
			NODEFAULT
			thisformset.ongamark()
		 CASE nKeyCode = 12 AND nShiftAltCtrl = 2 && CTRL + L
			thisformset.ongamarkall()
		 CASE nKeyCode = 21 AND nShiftAltCtrl = 2 && CTRL + U
			thisformset.ongamarknone()
		 CASE nKeyCode = 19 AND nShiftAltCtrl = 2 && CTRL + S
			thisformset.ongaok()
		ENDCASE
	ENDPROC

	PROCEDURE frmGroupArticles.QueryUnload
		thisformset.Release()
		NODEFAULT
	ENDPROC

	PROCEDURE frmGroupMembers.Activate
		this.Caption = ChildTitle(GetLangText("GROUPBIL","TXT_GROUPMEMBERS"))
		IF thisformset.cMode = "GROUP_CHKOUT_PAY"
			this.Caption = this.Caption + IIF(EMPTY(thisformset.cGroup), "", " - [" + thisformset.cGroup + "]")
		ENDIF
		RETURN .T.
	ENDPROC

	PROCEDURE frmGroupMembers.cmdChkOut.Click
		thisformset.OnCheckOut()
		thisformset.Release()
	ENDPROC

	PROCEDURE frmGroupMembers.cmdClose.Click
		thisformset.Release()
	ENDPROC

	PROCEDURE frmGroupMembers.cmdMark.Click
		thisformset.ongmmark()
	ENDPROC

	PROCEDURE frmGroupMembers.cmdMarkAll.Click
		thisformset.ongmmarkall()
	ENDPROC

	PROCEDURE frmGroupMembers.cmdMarkNone.Click
		thisformset.ongmmarknone()
	ENDPROC

	PROCEDURE frmGroupMembers.cmdOK.Click
		thisformset.ongmok()
	ENDPROC

	PROCEDURE frmGroupMembers.cmdPayMehtod.Click
		thisformset.OnGmPayMethod()
	ENDPROC

	PROCEDURE frmGroupMembers.cmdPreliminaryInvoice.Click
		thisformset.OnPreliminaryInvoice()
	ENDPROC

	PROCEDURE frmGroupMembers.dtxtMaxDate.Valid
		IF this.Value < thisformset.dMinDate
			RETURN .F.
		ELSE
			thisformset.MembersUpdate()
		ENDIF
		RETURN .T.
	ENDPROC

	PROCEDURE frmGroupMembers.dtxtMinDate.Valid
		IF this.Value > thisformset.dMaxDate
			RETURN .F.
		ENDIF
		RETURN .T.
	ENDPROC

	PROCEDURE frmGroupMembers.Init
		DODEFAULT()
		
		this.grdGroupMembers.SetAll("Movable", .F., "Column")
		this.grdGroupMembers.Column2.Header1.Caption = GetLangText("GROUPBIL","TXT_ROOMNUM")
		this.grdGroupMembers.Column3.Header1.Caption = GetLangText("GROUPBIL","TXT_NAME")
		this.grdGroupMembers.Column4.Header1.Caption = GetLangText("GROUPBIL","TXT_RESERID")
		this.grdGroupMembers.Column5.Header1.Caption = GetLangText("GROUPBIL","TXT_BALANCE")+" 1"
		this.grdGroupMembers.Column6.Header1.Caption = GetLangText("GROUPBIL","TXT_BALANCE")+" 2"
		this.grdGroupMembers.Column7.Header1.Caption = GetLangText("GROUPBIL","TXT_BALANCE")+" 3"
		this.grdGroupMembers.Column8.Header1.Caption = GetLangText("GROUPBIL","TXT_BALANCE")+" 4"
		this.grdGroupMembers.Column9.Header1.Caption = GetLangText("GROUPBIL","TXT_BALANCE")+" 5"
		this.grdGroupMembers.Column10.Header1.Caption= GetLangText("GROUPBIL","TXT_BALANCE")+" 6"
		this.grdGroupMembers.Column1.Header1.Caption = GetLangText("CHKOUT2","T_PAYNUM")
		this.lblMinDate.Caption = GetLangText("GROUPBIL","TXT_CHARGES") + " " + GetLangText("RECURRES","TXT_FROM")
		this.lblMaxDate.Caption = GetLangText("RECURRES","TXT_TO")
		this.cmdOK.ToolTipText = GetLangText("GROUPBIL","TT_LIST_ARTICLES")
		this.cmdMark.ToolTipText = GetLangText("GROUPBIL","TT_MARK_ONE")
		this.cmdMarkAll.ToolTipText = GetLangText("GROUPBIL","TT_MARK_ALL")
		this.cmdMarkNone.ToolTipText = GetLangText("GROUPBIL","TT_MARK_NONE")
		this.cmdPreliminaryInvoice.ToolTipText = GetLangText("GROUPBIL","TT_PRELIMINARY_INVOICE")
		this.cmdChkOut.ToolTipText = GetLangText("BILL", "TT_QUICKOUT")
		this.cmdPayMehtod.ToolTipText = GetLangText("GROUPBIL","TT_PAY_METHOD")
		this.cmdClose.ToolTipText = GetLangText("BILL","TT_CLOSE")
	ENDPROC

	PROCEDURE frmGroupMembers.KeyPress
		LPARAMETERS nKeyCode, nShiftAltCtrl
		
		DO CASE
			CASE nKeyCode = 27
				thisformset.Release()
			CASE (nKeyCode = 13 AND nShiftAltCtrl = 2) OR ;
					(nKeyCode = 32 AND nShiftAltCtrl = 0) && SPACEBAR OR CTRL + M
				NODEFAULT
				thisformset.ongmmark()
			CASE nKeyCode = 12 AND nShiftAltCtrl = 2 && CTRL + L
				thisformset.ongmmarkall()
			CASE nKeyCode = 21 AND nShiftAltCtrl = 2 && CTRL + U
				thisformset.ongmmarknone()
			CASE nKeyCode = 6 AND nShiftAltCtrl = 2 && CTRL + F
				IF thisformset.cMode = "GROUP_CHKOUT_PAY"
					thisformset.ongmpaymethod()
				ENDIF
			CASE nKeyCode = 17 AND nShiftAltCtrl = 2 && CTRL + Q
				IF thisformset.cMode = "GROUP_CHKOUT_PAY"
					thisformset.oncheckout()
					thisformset.Release()
				ENDIF
			CASE nKeyCode = 15 AND nShiftAltCtrl = 2 && CTRL + O
				IF thisformset.cMode = "GROUP_REDIRECT_POSTS"
					thisformset.OnPreliminaryInvoice()
				ENDIF
			CASE nKeyCode = 10 AND nShiftAltCtrl = 2 && CTRL + ENTER
				thisformset.ongmok()
		ENDCASE
	ENDPROC

	PROCEDURE frmGroupMembers.QueryUnload
		thisformset.Release()
		NODEFAULT
	ENDPROC

	PROCEDURE frmSelectBills.cmdCancel.Click
		thisform.QueryUnload()
	ENDPROC

	PROCEDURE frmSelectBills.cmdOK.Click
		thisform.QueryUnload()
		thisformset.SelectBills(thisform.cScope, ;
				thisform.chkBill1.Value, thisform.chkBill2.Value, thisform.chkBill3.Value, ;
				thisform.chkBill4.Value, thisform.chkBill5.Value, thisform.chkBill6.Value)
		thisformset.frmGroupMembers.grdGroupMembers.Refresh()
	ENDPROC

	PROCEDURE frmSelectBills.Init
		DODEFAULT()
		* On CmdOk.Click cScope property will be passed to MarkBills method.
		this.AddProperty("cScope", "NEXT 1")
		*
		this.Caption = GetLangText("GROUPBIL","TXT_SELECT_BILLS")
		this.chkBill1.Caption = GetLangText("GROUPBIL","TXT_FIRST_BILL")
		this.chkBill2.Caption = GetLangText("GROUPBIL","TXT_SECOND_BILL")
		this.chkBill3.Caption = GetLangText("GROUPBIL","TXT_THIRD_BILL")
		this.chkBill4.Caption = GetLangText("GROUPBIL","TXT_FOURTH_BILL")
		this.chkBill5.Caption = GetLangText("GROUPBIL","TXT_FIFTH_BILL")
		this.chkBill6.Caption = GetLangText("GROUPBIL","TXT_SIXTH_BILL")
		this.cmdOK.Caption = GetLangText("COMMON", "TXT_OK")
		this.cmdCancel.Caption = GetLangText("COMMON", "TXT_CANCEL")
		*
		LOCAL l_lAllow
		LOCAL ARRAY l_aWin(1)
		IF thisformset.cMode = "GROUP_REDIRECT_POSTS"
			l_aWin(1) = 1
			DO BillsReserCheck IN ProcBill WITH reservat.rs_reserid, ;
					l_aWin, "POST_REDIRECT", l_lAllow, .T., .F.
			this.chkBill1.Enabled = l_lAllow
			l_aWin(1) = 2
			DO BillsReserCheck IN ProcBill WITH reservat.rs_reserid, ;
					l_aWin, "POST_REDIRECT", l_lAllow, .T., .F.
			this.chkBill2.Enabled = l_lAllow
			l_aWin(1) = 3
			DO BillsReserCheck IN ProcBill WITH reservat.rs_reserid, ;
					l_aWin, "POST_REDIRECT", l_lAllow, .T., .F.
			this.chkBill3.Enabled = l_lAllow
			l_aWin(1) = 4
			DO BillsReserCheck IN ProcBill WITH reservat.rs_reserid, ;
					l_aWin, "POST_REDIRECT", l_lAllow, .T., .F.
			this.chkBill4.Enabled = l_lAllow
			l_aWin(1) = 5
			DO BillsReserCheck IN ProcBill WITH reservat.rs_reserid, ;
					l_aWin, "POST_REDIRECT", l_lAllow, .T., .F.
			this.chkBill5.Enabled = l_lAllow
			l_aWin(1) = 6
			DO BillsReserCheck IN ProcBill WITH reservat.rs_reserid, ;
					l_aWin, "POST_REDIRECT", l_lAllow, .T., .F.
			this.chkBill6.Enabled = l_lAllow
		ENDIF && thisformset.cMode = "GROUP_REDIRECT_POSTS"
		*
	ENDPROC

	PROCEDURE frmSelectBills.KeyPress
		LPARAMETERS nKeyCode, nShiftAltCtrl
		* Overlap parent.
	ENDPROC

	PROCEDURE frmSelectBills.QueryUnload
		this.Hide()
		thisformset.frmGroupMembers.Enabled = .T.
		NODEFAULT
	ENDPROC

ENDDEFINE
