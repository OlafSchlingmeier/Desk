*--------------------------------------------------------------------------------------------------------------------------------------------------------
* (ES) AUTOGENERADO - ¡¡ATENCIÓN!! - ¡¡NO PENSADO PARA EJECUTAR!! USAR SOLAMENTE PARA INTEGRAR CAMBIOS Y ALMACENAR CON HERRAMIENTAS SCM!!
* (EN) AUTOGENERATED - ATTENTION!! - NOT INTENDED FOR EXECUTION!! USE ONLY FOR MERGING CHANGES AND STORING WITH SCM TOOLS!!
*--------------------------------------------------------------------------------------------------------------------------------------------------------
*< FOXBIN2PRG: Version="1.19" SourceFile="arselprintbills.scx" /> (Solo para binarios VFP 9 / Only for VFP 9 binaries)
*
*
DEFINE CLASS dataenvironment AS dataenvironment 
 	*< CLASSDATA: Baseclass="dataenvironment" Timestamp="" Scale="" Uniqueid="" ClassIcon="1" />

	DataSource = .NULL.
	Height = 0
	Left = 0
	Name = "Dataenvironment"
	Top = 0
	Width = 0

ENDDEFINE

DEFINE CLASS frmarselprintbills AS tform OF "..\libs\main.vcx" 
 	*< CLASSDATA: Baseclass="form" Timestamp="" Scale="" Uniqueid="" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="lblDebitorNo" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtFrom" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtTo" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblEvent" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cboevent" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtAllotFromTo" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblDebitorTyp" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cboDebitorTyp" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblSettlementDay" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtSettlementDay" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblRemainders" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cboRemainders" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblStatments" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cboStatments" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chkDisputed" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chkWriteInDocuments" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblDescText" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtDescText" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdOK" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdCancel" UniqueID="" Timestamp="" />

	*<DefinedPropArrayMethod>
		*m: lwriteindocuments_assign
		*m: onok
		*p: lwriteindocuments
		*p: oprintparams
	*</DefinedPropArrayMethod>

	aligntopedges = .T.
	Caption = "frmArSelPrintBills"
	ControlBox = .T.
	DoCreate = .T.
	Height = 280
	Name = "frmArSelPrintBills"
	Width = 510
	WindowType = 1

	ADD OBJECT 'cboDebitorTyp' AS tcombobox WITH ;
		ColumnCount = 2, ;
		ColumnLines = .F., ;
		ColumnWidths = "40,150", ;
		Format = "K", ;
		InputMask = "!!!", ;
		Left = 144, ;
		Name = "cboDebitorTyp", ;
		TabIndex = 5, ;
		Top = 60, ;
		Width = 100, ;
		ZOrderSet = 7
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="combobox" />

	ADD OBJECT 'cboevent' AS jcombobox WITH ;
		Height = 23, ;
		Left = 144, ;
		Name = "cboevent", ;
		Style = 2, ;
		TabIndex = 3, ;
		Top = 36, ;
		Visible = .F., ;
		Width = 144, ;
		ZOrderSet = 4
		*< END OBJECT: ClassLib="..\libs\jbase.vcx" BaseClass="combobox" />

	ADD OBJECT 'cboRemainders' AS tcombobox WITH ;
		BoundColumn = 2, ;
		ColumnCount = 1, ;
		ColumnLines = .F., ;
		Left = 144, ;
		Name = "cboRemainders", ;
		Style = 2, ;
		TabIndex = 7, ;
		Top = 108, ;
		Width = 360, ;
		ZOrderSet = 11
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="combobox" />

	ADD OBJECT 'cboStatments' AS tcombobox WITH ;
		BoundColumn = 2, ;
		ColumnCount = 1, ;
		ColumnLines = .F., ;
		Left = 144, ;
		Name = "cboStatments", ;
		Style = 2, ;
		TabIndex = 8, ;
		Top = 132, ;
		Width = 360, ;
		ZOrderSet = 13
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="combobox" />

	ADD OBJECT 'chkDisputed' AS tcheckbox WITH ;
		Alignment = 0, ;
		Caption = "chkDisputed", ;
		Left = 144, ;
		Name = "chkDisputed", ;
		TabIndex = 10, ;
		Top = 160, ;
		Width = 324, ;
		ZOrderSet = 14
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="checkbox" />

	ADD OBJECT 'chkWriteInDocuments' AS tcheckbox WITH ;
		Alignment = 0, ;
		Caption = "chkWriteInDocuments", ;
		Left = 144, ;
		Name = "chkWriteInDocuments", ;
		TabIndex = 11, ;
		Top = 182, ;
		Width = 360, ;
		ZOrderSet = 15
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="checkbox" />

	ADD OBJECT 'cmdCancel' AS tcommandbutton WITH ;
		Caption = "cmdCancel", ;
		Left = 252, ;
		Name = "cmdCancel", ;
		TabIndex = 14, ;
		Top = 238, ;
		ZOrderSet = 19
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'cmdOK' AS tcommandbutton WITH ;
		Caption = "cmdOK", ;
		Left = 156, ;
		Name = "cmdOK", ;
		TabIndex = 13, ;
		Top = 238, ;
		ZOrderSet = 18
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'lblDebitorNo' AS tlabel WITH ;
		Caption = "lblDebitorNo", ;
		Left = 12, ;
		Name = "lblDebitorNo", ;
		TabIndex = 15, ;
		Top = 15, ;
		Width = 120, ;
		ZOrderSet = 0
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'lblDebitorTyp' AS tlabel WITH ;
		Caption = "lblDebitorTyp", ;
		Left = 12, ;
		Name = "lblDebitorTyp", ;
		TabIndex = 17, ;
		Top = 63, ;
		Width = 120, ;
		ZOrderSet = 6
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'lblDescText' AS tlabel WITH ;
		Caption = "lblDescText", ;
		Left = 12, ;
		Name = "lblDescText", ;
		TabIndex = 21, ;
		Top = 205, ;
		Width = 120, ;
		ZOrderSet = 16
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'lblEvent' AS tlabel WITH ;
		Caption = "lblEvent", ;
		Left = 12, ;
		Name = "lblEvent", ;
		TabIndex = 16, ;
		Top = 39, ;
		Visible = .F., ;
		Width = 120, ;
		ZOrderSet = 3
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'lblRemainders' AS tlabel WITH ;
		Caption = "lblRemainders", ;
		Left = 12, ;
		Name = "lblRemainders", ;
		TabIndex = 19, ;
		Top = 111, ;
		Width = 120, ;
		ZOrderSet = 10
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'lblSettlementDay' AS tlabel WITH ;
		Caption = "lblSettlementDay", ;
		Left = 12, ;
		Name = "lblSettlementDay", ;
		TabIndex = 18, ;
		Top = 87, ;
		Width = 120, ;
		ZOrderSet = 8
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'lblStatments' AS tlabel WITH ;
		Caption = "lblStatments", ;
		Left = 12, ;
		Name = "lblStatments", ;
		TabIndex = 20, ;
		Top = 135, ;
		Width = 120, ;
		ZOrderSet = 12
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'txtAllotFromTo' AS ttext WITH ;
		BackStyle = 0, ;
		BorderStyle = 0, ;
		DisabledForeColor = 0,0,0, ;
		Enabled = .F., ;
		Height = 23, ;
		Left = 297, ;
		Name = "txtAllotFromTo", ;
		TabIndex = 4, ;
		Top = 36, ;
		Width = 207, ;
		ZOrderSet = 5
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtDescText' AS ttext WITH ;
		Enabled = .F., ;
		Format = "KR", ;
		Left = 144, ;
		Name = "txtDescText", ;
		TabIndex = 12, ;
		Top = 202, ;
		Width = 360, ;
		ZOrderSet = 17
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtFrom' AS ttext WITH ;
		Format = "KR", ;
		InputMask = (REPLICATE("9",10)), ;
		Left = 144, ;
		Name = "txtFrom", ;
		TabIndex = 1, ;
		Top = 12, ;
		ZOrderSet = 1
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtSettlementDay' AS ttext WITH ;
		Left = 144, ;
		Name = "txtSettlementDay", ;
		TabIndex = 6, ;
		Top = 84, ;
		ZOrderSet = 9
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtTo' AS ttext WITH ;
		Format = "KR", ;
		InputMask = (REPLICATE("9",10)), ;
		Left = 253, ;
		Name = "txtTo", ;
		TabIndex = 2, ;
		Top = 12, ;
		ZOrderSet = 2
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />
	
	PROCEDURE assigncaption
		IF this.oPrintParams.lCreditors
			this.Caption = GetLangText("ARSELPRI","TXT_SELECT_CREDITOR_BILLS")
			this.lblDebitorNo.Caption = GetLangText("AR","TXT_CREDITOR_NO")
			this.lblDebitorTyp.Caption = GetLangText("AR","TXT_CREDITOR_TYPE")
			this.lblRemainders.Caption = GetLangText("ARSELPRI","TXT_CREDITOR_BILL_LIST")
			STORE .F. TO ;
				this.lblStatments.Visible, ;
				this.cboStatments.Visible, ;
				this.chkWriteInDocuments.Visible, ;
				this.lblDescText.Visible, ;
				this.txtDescText.Visible
		ELSE
			this.Caption = GetLangText("ARSELPRI","TXT_SELECT_BILLS")
			this.lblDebitorNo.Caption = GetLangText("AR","T_ACCOUNT")
			this.lblDebitorTyp.Caption = GetLangText("AR","T_TYPE")
			this.lblRemainders.Caption = GetLangText("ARSELPRI","TXT_REMAINDERS")
		ENDIF
		
		this.lblEvent.Caption = GetLangText("EVENT","TXT_EVENT")
		this.lblSettlementDay.Caption = GetLangText("ARSELPRI","TXT_SETTLEMENT_DAY")
		this.lblStatments.Caption = GetLangText("ARSELPRI","TXT_STATMENTS")
		*this.chkOnlyDeposits.Caption = GetLangText("ARSELPRI","TXT_ONLY_DEPOSITS")
		this.chkDisputed.Caption = GetLangText("ARSELPRI","TXT_INCLUDE_DISPUTED")
		this.chkWriteInDocuments.Caption = GetLangText("ARSELPRI","TXT_WRITE_IN_DOCUMENTS")
		this.lblDescText.Caption = GetLangText("ARSELPRI","TXT_DESCRIPTION")
		this.cmdOK.Caption = GetLangText("AR","TB_OK")
		this.cmdCancel.Caption = GetLangText("AR","TB_CANCEL")
	ENDPROC

	PROCEDURE Destroy
		IF USED("cur_StatmentModes")
			USE IN cur_StatmentModes
		ENDIF
		IF USED("cur_RemainderModes")
			USE IN cur_RemainderModes
		ENDIF
		IF USED("cur_aceditpicklist")
			USE IN cur_aceditpicklist
		ENDIF
	ENDPROC

	PROCEDURE Init
		LPARAMETERS lp_oPrintParams
		this.oPrintParams = lp_oPrintParams
		IF g_lShips
			this.lblEvent.Visible = .T.
			this.cboevent.Visible = .T.
		ENDIF
		*!*	IF _screen.DP
		*!*		this.chkOnlyDeposits.Visible = .T.
		*!*	ENDIF
		DODEFAULT()
		this.txtFrom.ControlSource = [thisform.oPrintParams.nFrom]
		this.txtTo.ControlSource = [thisform.oPrintParams.nTo]
		this.cboDebitorTyp.ControlSource = [thisform.oPrintParams.cDebitorType]
		this.cboDebitorTyp.RowSourceType = 2
		SELECT pl_charcod, EVALUATE("pl_lang" + ALLTRIM(g_langnum)) AS pl_lang ;
				FROM picklist WHERE pl_label = [ACCTTYPE] ;
				ORDER BY pl_charcod ;
				INTO CURSOR cur_aceditpicklist READWRITE
		APPEND BLANK
		this.cboDebitorTyp.RowSource = "cur_aceditpicklist"
		this.txtSettlementDay.ControlSource = [thisform.oPrintParams.dSettlementDay]
		this.cboRemainders.ControlSource = [thisform.oPrintParams.nRemainderFilter]
		DO GetRemainderPrintModes IN ar WITH "cur_RemainderModes", this.oPrintParams.lCreditors
		this.cboRemainders.RowSourceType = 2
		this.cboRemainders.RowSource = "cur_RemainderModes.cur_name, cur_no"
		this.cboStatments.ControlSource = [thisform.oPrintParams.nStatmentFilter]
		*SELECT cur_RemainderModes
		*LOCATE FOR cur_no = 1
		*this.cboRemainders.Value = cur_name
		thisform.oPrintParams.nRemainderFilter = 1
		this.cboRemainders.Refresh()
		DO GetStatmentPrintModes IN ar WITH "cur_StatmentModes"
		this.cboStatments.RowSourceType = 2
		this.cboStatments.RowSource = "cur_StatmentModes.cur_name, cur_no"
		*SELECT cur_StatmentModes
		*LOCATE FOR cur_no = 1
		*this.cboStatments.Value = cur_name
		thisform.oPrintParams.nStatmentFilter = 1
		this.cboStatments.Refresh()
		*this.chkOnlyDeposits.ControlSource = [thisform.oPrintParams.lOnlyDeposits]
		this.chkDisputed.ControlSource = [thisform.oPrintParams.lDisputed]
		this.lwriteindocuments = thisform.oPrintParams.lWriteInDocuments
		this.chkWriteInDocuments.ControlSource = [thisform.lWriteInDocuments]
		this.txtDescText.ControlSource = [thisform.oPrintParams.cDescText]
		this.txtDescText.InputMask = REPLICATE("X",40)
		
		IF g_lShips
			LOCAL l_cSqlSelect
			this.cboevent.ControlSource = [thisform.oPrintParams.neventid]
			TEXT TO l_cSqlSelect TEXTMERGE NOSHOW PRETEXT 2 + 8
				SELECT UPPER(ev_name) AS EventName, ei_from, ei_to, ei_eiid ;
				FROM evint ;
				INNER JOIN events ON ev_evid = ei_evid ;
				UNION SELECT SPACE(30) AS EventName, {} AS ei_from, {} AS ei_to, CAST(0 AS Numeric(8)) AS ei_eiid FROM param ;
				ORDER BY EventName, ei_from
			ENDTEXT
			l_cSqlSelect = STRTRAN(l_cSqlSelect,";","")
			this.cboevent.jsql = l_cSqlSelect
			this.cboevent.jcolumnwidths = "170,80,80,0"
			this.cboevent.Init()
		ENDIF
		
		this.assigncaption()
		
		
	ENDPROC

	PROCEDURE KeyPress
		LPARAMETERS nKeyCode, nShiftAltCtrl
		IF nKeyCode = 27 AND nShiftAltCtrl = 0
			NODEFAULT
			this.onclose()
		ENDIF
	ENDPROC

	PROCEDURE lwriteindocuments_assign
		LPARAMETERS vNewVal
		
		IF vNewVal
			this.txtDescText.Enabled = .T.
		ELSE
			IF NOT EMPTY(this.oprintparams.cDescText)
				this.oprintparams.cDescText = ""
				this.txtDescText.Refresh()
			ENDIF
			this.txtDescText.Enabled = .F.
		ENDIF
		this.oPrintParams.lWriteInDocuments = vNewVal
		*To do: Modify this routine for the Assign method
		THIS.lwriteindocuments = m.vNewVal
		
	ENDPROC

	PROCEDURE onclose
		this.oPrintParams = .NULL.
		this.Release()
	ENDPROC

	PROCEDURE onok
		this.Release()
	ENDPROC

	PROCEDURE QueryUnload
		NODEFAULT
		this.onclose()
	ENDPROC

	PROCEDURE Unload
		RETURN this.oPrintParams
	ENDPROC

	PROCEDURE cboevent.value_assign
		LPARAMETERS vNewVal
		DODEFAULT(vNewVal)
		IF NOT EMPTY(this.jcursor)
			LOCAL l_cCursor
			l_cCursor = this.jcursor
			thisform.txtAllotFromTo.Value = ;
					MakeShorDateString(&l_cCursor..ei_from) + "-" + MakeShorDateString(&l_cCursor..ei_to)
		ENDIF
	ENDPROC

	PROCEDURE cboRemainders.LostFocus
		IF thisform.oPrintParams.nRemainderFilter = 6
			IF thisform.oPrintParams.nStatmentFilter = 1
				thisform.oPrintParams.nStatmentFilter = 2
			ENDIF
		ELSE
			IF thisform.oPrintParams.nStatmentFilter <> 1
				thisform.oPrintParams.nStatmentFilter = 1
			ENDIF
		ENDIF
		this.Refresh()
		this.Parent.cboStatments.Refresh()
	ENDPROC

	PROCEDURE cboStatments.LostFocus
		IF thisform.oPrintParams.nStatmentFilter = 1
			IF thisform.oPrintParams.nRemainderFilter = 6
				thisform.oPrintParams.nRemainderFilter = 1
			ENDIF
		ELSE
			IF thisform.oPrintParams.nRemainderFilter <> 6
				thisform.oPrintParams.nRemainderFilter = 6
			ENDIF
		ENDIF
		this.Refresh()
		this.Parent.cboRemainders.Refresh()
	ENDPROC

	PROCEDURE cmdCancel.Click
		thisform.onclose()
	ENDPROC

	PROCEDURE cmdOK.Click
		thisform.onok()
	ENDPROC

ENDDEFINE
