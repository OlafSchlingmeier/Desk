*--------------------------------------------------------------------------------------------------------------------------------------------------------
* (ES) AUTOGENERADO - ¡¡ATENCIÓN!! - ¡¡NO PENSADO PARA EJECUTAR!! USAR SOLAMENTE PARA INTEGRAR CAMBIOS Y ALMACENAR CON HERRAMIENTAS SCM!!
* (EN) AUTOGENERATED - ATTENTION!! - NOT INTENDED FOR EXECUTION!! USE ONLY FOR MERGING CHANGES AND STORING WITH SCM TOOLS!!
*--------------------------------------------------------------------------------------------------------------------------------------------------------
*< FOXBIN2PRG: Version="1.19" SourceFile="cashierchangedlg.scx" /> (Solo para binarios VFP 9 / Only for VFP 9 binaries)
*
*
DEFINE CLASS dataenvironment AS dataenvironment 
 	*< CLASSDATA: Baseclass="dataenvironment" Timestamp="" Scale="" Uniqueid="" ClassIcon="1" />

	DataSource = .NULL.
	Height = 0
	Left = 0
	Name = "Dataenvironment"
	Top = 0
	Width = 0

ENDDEFINE

DEFINE CLASS frmcashierchangedlg AS tform OF "..\libs\main.vcx" 
 	*< CLASSDATA: Baseclass="form" Timestamp="" Scale="" Uniqueid="" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="lblCurrency" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblChRate" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblAmount" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblRetAmount" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblSupplement" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtCurrency" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtChRate" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtAmount" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtRetAmount" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtSupplement" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdOK" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdCancel" UniqueID="" Timestamp="" />

	*<DefinedPropArrayMethod>
		*m: changeamount
		*p: cinfo
		*p: csupplement
		*p: ncurramt
		*p: nretamt
		*p: nretrate
	*</DefinedPropArrayMethod>

	Caption = "frmCashierChangeDlg"
	cinfo = ""
	ControlBox = .T.
	csupplement = ""
	DoCreate = .T.
	Height = 205
	Icon = ..\bitmap\icons\note01.ico
	MaxButton = .F.
	Name = "frmCashierChangeDlg"
	ncurramt = 0
	nretamt = 0
	nretrate = 0
	Width = 373
	WindowType = 1

	ADD OBJECT 'cmdCancel' AS tcommandbutton WITH ;
		Caption = "cmdCancel", ;
		Left = 192, ;
		Name = "cmdCancel", ;
		TabIndex = 7, ;
		Top = 168, ;
		Width = 84
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'cmdOK' AS tcommandbutton WITH ;
		Caption = "cmdOK", ;
		Left = 96, ;
		Name = "cmdOK", ;
		TabIndex = 6, ;
		Top = 168, ;
		Width = 84
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'lblAmount' AS tlabel WITH ;
		Caption = "lblAmount", ;
		Left = 14, ;
		Name = "lblAmount", ;
		TabIndex = 10, ;
		Top = 70
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'lblChRate' AS tlabel WITH ;
		Caption = "lblChRate", ;
		Left = 14, ;
		Name = "lblChRate", ;
		TabIndex = 9, ;
		Top = 42
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'lblCurrency' AS tlabel WITH ;
		Caption = "lblCurrency", ;
		Left = 14, ;
		Name = "lblCurrency", ;
		TabIndex = 8, ;
		Top = 14
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'lblRetAmount' AS tlabel WITH ;
		Caption = "lblRetAmount", ;
		Left = 14, ;
		Name = "lblRetAmount", ;
		TabIndex = 11, ;
		Top = 98
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'lblSupplement' AS tlabel WITH ;
		Caption = "lblSupplement", ;
		Left = 14, ;
		Name = "lblSupplement", ;
		TabIndex = 12, ;
		Top = 126
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />

	ADD OBJECT 'txtAmount' AS ttext WITH ;
		Alignment = 3, ;
		Format = "KB", ;
		Height = 23, ;
		InputMask = (RIGHT(gcCurrcy,12)), ;
		Left = 126, ;
		Name = "txtAmount", ;
		TabIndex = 3, ;
		Top = 70, ;
		Value = 0, ;
		Width = 150
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtChRate' AS ttext WITH ;
		Height = 23, ;
		Left = 126, ;
		Name = "txtChRate", ;
		ReadOnly = .T., ;
		TabIndex = 2, ;
		TabStop = .F., ;
		Top = 42, ;
		Width = 150
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtCurrency' AS ttext WITH ;
		Height = 23, ;
		Left = 126, ;
		Name = "txtCurrency", ;
		ReadOnly = .T., ;
		TabIndex = 1, ;
		TabStop = .F., ;
		Top = 14, ;
		Width = 150
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtRetAmount' AS ttext WITH ;
		Alignment = 3, ;
		Format = "KB", ;
		Height = 23, ;
		InputMask = "999999999999.99", ;
		Left = 126, ;
		Name = "txtRetAmount", ;
		ReadOnly = .T., ;
		TabIndex = 4, ;
		TabStop = .F., ;
		Top = 98, ;
		Value = 0, ;
		Width = 150
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtSupplement' AS ttext WITH ;
		Format = "K", ;
		Height = 23, ;
		InputMask = (REPLICATE("X", 25)), ;
		Left = 126, ;
		Name = "txtSupplement", ;
		TabIndex = 5, ;
		Top = 126, ;
		Value = (""), ;
		Width = 234
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />
	
	PROCEDURE assigncaption
		WITH this
			.Caption = GetLangText("CASHIER","TW_CHANGE")
			.cmdOK.Caption = GetLangText("COMMON","TXT_OK")
			.cmdCancel.Caption = GetLangText("COMMON","TXT_CANCEL")
			.lblCurrency.Caption = GetLangText("CASHIER","TXT_CURRENCY")
			.lblChRate.Caption = GetLangText("CASHIER","T_RATE")
			.lblAmount.Caption = GetLangText("CASHIER","T_AMOUNT")
			.lblRetAmount.Caption = GetLangText("CASHIER","T_RETAMOUNT")
			.lblSupplement.Caption = GetLangText("CASHIER","T_SUPPLEM")
			.txtCurrency.Value = EVALUATE("paymetho.pm_lang"+g_Langnum)
			IF paRam.pa_ineuro AND paymetho.pm_ineuro
				.txtChRate.Value = '1 EUR = '+ ;
					ntoc(paymetho.pm_rate)+' '+TRIM(paymetho.pm_paymeth)
			ELSE
				.txtChRate.Value = '1 '+ ;
					TRIM(paymetho.pm_paymeth)+' = '+ntoc(paymetho.pm_rate)
			ENDIF
		ENDWITH
	ENDPROC

	PROCEDURE changeamount
		LOCAL l_nCurramt, l_nRetrate, l_nRetamt, l_cSupplement, l_cInfo
		LOCAL l_nArea, l_nRec1, l_nRec2
		PRIVATE g_Rptlngnr, g_Rptlng, g_cTitle
		WITH this
			IF .nCurramt = 0
				.txtAmount.SetFocus()
				RETURN
			ENDIF
			l_nCurramt = .nCurramt
			l_nRetrate = .nRetrate
			l_nRetamt = .nRetamt
			l_cSupplement = .cSupplement
			l_cInfo = .cInfo
		ENDWITH 
		SELECT post
		SCATTER BLANK MEMO MEMVAR
		M.ps_paynum = paymetho.pm_paynum
		M.ps_units = l_nCurramt 
		M.ps_price = l_nRetrate
		M.ps_supplem = l_cSupplement
		M.ps_reserid = 0.500
		M.ps_origid = 0.500
		M.ps_date = sySdate()
		M.ps_time = TIME()
		IF param.pa_currloc<>0
			M.ps_amount = ROUND(euro(-l_nRetamt), 2)
		ELSE
			M.ps_amount = -l_nRetamt
		ENDIF
		M.ps_userid = cUserid
		M.ps_cashier = g_Cashier
		M.ps_currtxt = l_cInfo
		M.ps_postid = nextid('Post')
		INSERT INTO Post FROM MEMVAR
		FLUSH
		l_nRec1 = RECNO("Post")
		IF paRam.pa_currloc<>0
			M.ps_paynum = paRam.pa_currloc
		ELSE
			M.ps_paynum = 1
		ENDIF
		M.ps_units = -l_nRetamt
		M.ps_price = 1.00000
		M.ps_supplem = l_cSupplement
		M.ps_reserid = 0.500
		M.ps_origid = 0.500
		M.ps_date = sySdate()
		M.ps_time = TIME()
		IF paRam.pa_currloc<>0
			M.ps_amount = ROUND(euro(l_nRetamt), 2)
		ELSE
			M.ps_amount = l_nRetamt
		ENDIF
		M.ps_userid = cUserid
		M.ps_cashier = g_Cashier
		M.ps_currtxt = l_cInfo
		M.ps_postid = nextid('Post')
		INSERT INTO Post FROM MEMVAR
		FLUSH
		l_nRec2 = RECNO("Post")
		IF FILE(gcReportdir+"_cashchn.frx") .AND. yeSno(GetLangText("COMMON", ;
				"TXT_RECPRINT"))
			l_nArea = SELECT()
			SELECT * FROM Post WHERE INLIST(RECNO(), l_nRec1, l_nRec2) INTO  ;
				CURSOR Query
			IF _TALLY>0
				g_Rptlngnr = g_Langnum
				g_Rptlng = g_Language
				g_cTitle = "EXCHRCPT"
				l_Frx = gcReportdir+"_cashchn.FRX"
				l_Langdbf = STRTRAN(UPPER(l_Frx), '.FRX', '.DBF')
				IF FILE(l_Langdbf)
				     USE SHARED NOUPDATE (l_Langdbf) ALIAS rePtext IN 0
				ENDIF
				REPORT FORM (l_Frx) TO PRINTER PROMPT NOCONSOLE
				= dclose('RepText')
				DO seTstatus IN Setup
			ENDIF
			= closefile("Query")
			SELECT (l_nArea)
		ENDIF
		this.Release()
	ENDPROC

	PROCEDURE Init
		WITH this
			.nCurramt = 0
			.nRetrate = 0
			.nRetamt = 0
			.cSupplement = ""
			.cInfo = ""
		ENDWITH 
		this.assigncaption()
		DODEFAULT()
		
	ENDPROC

	PROCEDURE KeyPress
		LPARAMETERS nKeyCode, nShiftAltCtrl
		IF nKeyCode == 27
			NODEFAULT
			this.Release()
		ENDIF
	ENDPROC

	PROCEDURE cmdCancel.Click
		thisForm.Release()
	ENDPROC

	PROCEDURE cmdOK.Click
		thisform.changeamount()
	ENDPROC

	PROCEDURE txtAmount.Valid
		LOCAL l_lRet, l_nCurramt, l_nRetrate, l_nRetamt, l_cInfo
		DODEFAULT()
		l_nCurramt = this.Value
		l_nRetrate = thisform.nretrate
		l_nRetamt = thisform.nretamt
		l_cInfo = thisform.cinfo
		l_lRet = (this.Value >= 0) AND ;
			currcnv(paYmetho.pm_paynum,l_nCurramt,@l_nRetrate,@l_nRetamt,@l_cInfo)
		thisform.ncurramt = l_nCurramt
		thisform.nretrate = l_nRetrate
		thisform.nretamt = l_nRetamt
		thisform.cinfo = l_cInfo
		thisform.txtRetAmount.Value = l_nRetamt
		RETURN l_lRet
	ENDPROC

	PROCEDURE txtSupplement.Valid
		IF (thisform.txtAmount.Value <> 0) AND this.Value == ""
			RETURN .F.
		ENDIF
		thisForm.csupplement = this.Value
	ENDPROC

ENDDEFINE
