*--------------------------------------------------------------------------------------------------------------------------------------------------------
* (ES) AUTOGENERADO - ¡¡ATENCIÓN!! - ¡¡NO PENSADO PARA EJECUTAR!! USAR SOLAMENTE PARA INTEGRAR CAMBIOS Y ALMACENAR CON HERRAMIENTAS SCM!!
* (EN) AUTOGENERATED - ATTENTION!! - NOT INTENDED FOR EXECUTION!! USE ONLY FOR MERGING CHANGES AND STORING WITH SCM TOOLS!!
*--------------------------------------------------------------------------------------------------------------------------------------------------------
*< FOXBIN2PRG: Version="1.19" SourceFile="repmain.scx" /> (Solo para binarios VFP 9 / Only for VFP 9 binaries)
*
*
DEFINE CLASS dataenvironment AS dataenvironment 
 	*< CLASSDATA: Baseclass="dataenvironment" Timestamp="" Scale="" Uniqueid="" ClassIcon="1" />

	DataSource = .NULL.
	Height = 0
	Left = 0
	Name = "Dataenvironment"
	Top = 0
	Width = 0

ENDDEFINE

DEFINE CLASS frmreplist AS tform OF "..\libs\main.vcx" 
 	*< CLASSDATA: Baseclass="form" Timestamp="" Scale="" Uniqueid="" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="grdList" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grdList.Column1.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grdList.Column1.Tbgrid1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdClose" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdGo" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chkshowalllanguages" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblselectedlang" UniqueID="" Timestamp="" />

	*<DefinedPropArrayMethod>
		*m: goreport
		*m: setlangfilter
		*p: ccursorname
		*p: clangfilter
		*p: condestroy
		*p: congo
		*p: lchanged
		*p: ldeleteconf
		*p: llangfilter		&& When .T., filter on languages
		*p: lletters
		*p: luseapartner
		*p: narea
		*p: ncurrentarea
		*p: nlistsrecord
		*p: nmenugroup
		*p: noldarea
		*p: oformdata
		*p: oformref
	*</DefinedPropArrayMethod>

	AlwaysOnTop = .F.
	Caption = "frmRepList"
	clangfilter = 
	ControlBox = .T.
	DoCreate = .T.
	Height = 360
	Icon = ..\bitmap\browse.ico
	ldeleteconf = .F.
	llangfilter = .T.		&& When .T., filter on languages
	MaxButton = .F.
	MinButton = .T.
	Name = "FRMREPLIST"
	oformdata = .NULL.
	Width = 372

	ADD OBJECT 'chkshowalllanguages' AS tcheckbox WITH ;
		Alignment = 0, ;
		AutoSize = .T., ;
		Caption = "chkshowalllanguages", ;
		Height = 17, ;
		Left = 180, ;
		Name = "chkshowalllanguages", ;
		TabIndex = 2, ;
		Top = 313, ;
		Value = .F., ;
		Width = 139
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="checkbox" />

	ADD OBJECT 'cmdClose' AS tcommandbutton WITH ;
		Caption = "cmdClose", ;
		Left = 96, ;
		Name = "cmdClose", ;
		TabIndex = 3, ;
		Top = 331
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'cmdGo' AS tcommandbutton WITH ;
		Caption = "cmdGo", ;
		Left = 192, ;
		Name = "cmdGo", ;
		TabIndex = 4, ;
		Top = 331
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'grdList' AS tgrid WITH ;
		AllowHeaderSizing = .F., ;
		AllowRowSizing = .F., ;
		ColumnCount = 1, ;
		DeleteMark = .F., ;
		GridLines = 0, ;
		Height = 312, ;
		lsetgridprop = .F., ;
		Name = "grdList", ;
		ReadOnly = .T., ;
		RecordMark = .F., ;
		ScrollBars = 2, ;
		SplitBar = .F., ;
		Width = 372, ;
		Column1.ControlSource = "", ;
		Column1.Name = "Column1", ;
		Column1.ReadOnly = .T., ;
		Column1.Width = 349
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="grid" />

	ADD OBJECT 'grdList.Column1.Header1' AS header WITH ;
		Caption = "Header1", ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'grdList.Column1.Tbgrid1' AS tbgrid WITH ;
		Left = 217, ;
		Name = "Tbgrid1", ;
		ReadOnly = .T., ;
		Top = 83
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="textbox" />

	ADD OBJECT 'lblselectedlang' AS tlabel WITH ;
		AutoSize = .T., ;
		Caption = "lblselectedlang", ;
		Height = 17, ;
		Left = 4, ;
		Name = "lblselectedlang", ;
		Top = 313, ;
		Width = 86
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="label" />
	
	PROCEDURE assigncaption
		WITH this
			.lblselectedlang.Caption = GetLangText("MGRPLIST","TXT_LACODE")
			.chkshowalllanguages.Caption = GetLangText("MYLISTS","TXT_SHOW_ALL_LANGUAGES")
			.cmdClose.Caption = GetLangText("COMMON","TXT_CLOSE")
			.cmdGo.Caption = GetLangText("MYLISTS","TXT_GO")
		ENDWITH
	ENDPROC

	PROCEDURE goreport
		LOCAL l_nRecNo, l_cCursorGrid, l_cField, l_nRecnoGrid, l_lExportAndSend, l_vMin1, l_oDefaults, l_cOutputFile, l_lUseSMTP
		l_nRecNo = EVALUATE(this.ccursorname+".cur_recno")
		SELECT (this.nOldArea)
		GO l_nRecNo
		
		* Save grid settings
		l_cCursorGrid = this.grdList.recordSource
		l_cField = this.grdList.column1.ControlSource
		l_nRecnoGrid = RECNO(l_cCursorGrid)
		
		DO CASE
			CASE this.nMode = 1
				PRIVATE lUseApartner
				lUseApartner = this.lUseApartner
				IF TYPE("this.oFormData.aMin1Param(1)") = "N" AND NOT EMPTY(this.oFormData.aMin1Param(1))
					l_oDefaults = MakeStructure("Min1, Max1, Min2, Max2, Min3, Max3, Min4, Max4")
					STORE "" TO l_oDefaults.Max1, l_oDefaults.Min2, l_oDefaults.Max2, l_oDefaults.Min3, l_oDefaults.Max3, l_oDefaults.Min4, l_oDefaults.Max4
					FOR EACH l_vMin1 IN this.oFormData.aMin1Param
						l_oDefaults.Min1 = l_vMin1
						DO prtreport IN mylists WITH EVALUATE(ALLTRIM(STR(this.nMenuGroup))+" == 8"), this.lletters, l_oDefaults
					NEXT
				ELSE
					IF NOT lists.li_consent AND NOT lists.li_email OR INLIST(lists.li_lettype,3,4) OR ;
							PAAddressConsent(this.oFormData.nReserId, this.oFormData.nAddrId)
						l_cOutputFile = prTreport(EVALUATE(ALLTRIM(STR(this.nMenuGroup))+" == 8"), this.lletters)
						IF TYPE("this.oFormRef.Name") = "C" AND UPPER(ALLTRIM(this.oFormRef.Name)) = "FRMADDRESSCONSENT"
							this.oFormRef.cOutputFile = l_cOutputFile
						ENDIF
					ENDIF
				ENDIF
			CASE this.nMode = 2
				IF NOT EMPTY(picklist.pl_memo)
					l_lExportAndSend = .T.
					l_lUseSMTP = emprop.ep_usesmtp
				ENDIF
				DO vbatch IN mylists WITH l_lExportAndSend, ALLTRIM(picklist.pl_memo), ALLTRIM(picklist.pl_charcod), l_lUseSMTP
		ENDCASE
		
		* If datasession was changed in preproc, restore grid settings
		IF EMPTY(this.grdList.recordSource)
			this.grdList.recordSource = l_cCursorGrid
			this.grdList.column1.ControlSource = l_cField
			GO l_nRecnoGrid IN (l_cCursorGrid)
			this.grdList.SetFocus()
		ENDIF
		
		SELECT (this.grdList.RecordSource)
		this.lChanged = .T.
	ENDPROC

	PROCEDURE Init
		LPARAMETERS lp_nMode, lp_oFormData, lp_cCaption, lp_cField, lp_cDescription ;
			, lp_cFor, lp_cWhile, lp_nSizeOfBrowse, lp_cLangFilter
		LOCAL l_nFormH, l_cCursorGrid, l_cAliasTable, l_cKeyTable
		IF TYPE("_screen.ActiveForm.Name")="C"
			this.oFormRef = _screen.ActiveForm
		ENDIF
		this.nOldArea = SELECT()
		l_cCursorGrid = SYS(2015)
		this.ccursorname = l_cCursorGrid
		l_cAliasTable = ALIAS()
		l_cKeyTable = KEY()
		this.nMode = lp_nMode
		this.oFormData = lp_oFormData
		DO CASE
			CASE lp_nMode = 1 &&lists
				IF TYPE("lp_oFormData.lletters") <> "U"
					this.lletters = lp_oFormData.lletters
				ENDIF
				IF TYPE("lp_oFormData.ldeleteconf") <> "U"
					this.ldeleteconf = lp_oFormData.ldeleteconf
				ENDIF
				IF TYPE("lp_oFormData.nMenuGroup") <> "U"
					this.nMenuGroup = lp_oFormData.nMenuGroup
				ENDIF
				IF TYPE("lp_oFormData.nListsRecord") <> "U"
					this.nListsRecord = lp_oFormData.nListsRecord
				ENDIF
				IF TYPE("lp_oFormData.nCurrentArea") <> "U"
					this.nCurrentArea = lp_oFormData.nCurrentArea
				ENDIF
				IF TYPE("lp_oFormData.lUseApartner") <> "U"
					this.lUseApartner = lp_oFormData.lUseApartner
				ENDIF
			CASE lp_nMode = 2 &&batch
				IF TYPE("lp_oFormData.nArea") <> "U"
					this.nArea = lp_oFormData.nArea
				ENDIF
		ENDCASE
		this.Caption = lp_cCaption
		this.assigncaption()
		DODEFAULT()
		SELECT &l_cKeyTable AS cursororder,*, RECNO() AS cur_recno ;
			FROM &l_cAliasTable WHERE &lp_cFor AND &lp_cWhile ORDER BY cursororder ;
			into CURSOR &l_cCursorGrid READWRITE
		this.grdList.recordSource = l_cCursorGrid
		this.grdList.column1.ControlSource = l_cCursorGrid+"."+lp_cField
		this.grdList.column1.header1.Caption = lp_cDescription
		
		* When language filter is on, show checkbox
		IF EMPTY(lp_cLangFilter)
			* Default
			GO TOP
			this.chkshowalllanguages.Visible = .F.
			this.lblselectedlang.Visible = .F.
			l_nFormH = (lp_nSizeOfBrowse+1)*this.grdList.RowHeight+48
			this.grdList.h = l_nformH - 48
			this.cmdClose.T = l_nformH - 36
			this.cmdgo.T = l_nformH - 36
		ELSE
			* With langcode as filter
			this.clangfilter = lp_cLangFilter
			this.lblselectedlang.Caption = this.lblselectedlang.Caption +": " + ;
					dlookup("picklist","pl_label = 'LANGUAGE' AND pl_charcod = '" + this.clangfilter + "'","pl_lang"+g_langnum)
			this.setlangfilter(,.T.)
			l_nFormH = (lp_nSizeOfBrowse+1)*this.grdList.RowHeight+68
			this.grdList.h = l_nformH - 48
			this.chkshowalllanguages.T = l_nformH - 46
			this.lblselectedlang.T = this.chkshowalllanguages.T
			this.cmdClose.T = l_nformH - 28
			this.cmdgo.T = this.cmdClose.T
		ENDIF
		
		SELECT (this.nOldArea)
		this.h = l_nFormH
		this.Height = l_nFormH
		this.Resize()
		IF this.nMode = 1 AND RECCOUNT(this.grdList.RecordSource) = 1 AND INLIST(&l_cCursorGrid..li_lettype,3,4)
			this.GoReport()
			RETURN .F.
		ENDIF
		
		RETURN .T.
	ENDPROC

	PROCEDURE KeyPress
		LPARAMETERS nKeyCode, nShiftAltCtrl
		
		IF nKeyCode = 27
			this.OnClose()
		ENDIF
	ENDPROC

	PROCEDURE onclose
		this.Release()
	ENDPROC

	PROCEDURE QueryUnload
		this.OnClose()
		NODEFAULT
	ENDPROC

	PROCEDURE setlangfilter
		LPARAMETERS lp_lRefresh, lp_lCheckAvailableReportsForLanguage
		LOCAL l_cFilter, l_cCursor, l_nRecords
		l_cCursor = this.grdList.recordSource
		IF NOT this.chkshowalllanguages.Value AND NOT EMPTY(this.clangfilter)
			this.llangfilter = .T.
			IF lp_lCheckAvailableReportsForLanguage
				COUNT FOR li_alang = this.clangfilter TO l_nRecords
				IF l_nRecords = 0
					* No records for selected language. Show all reports.
					this.llangfilter = .F.
					this.chkshowalllanguages.Value = .T.
				ENDIF
			ENDIF
		ELSE
			this.llangfilter = .F.
		ENDIF
		IF this.llangfilter
			l_cFilter = "li_alang = '" + this.clangfilter + "'"
		ELSE
			l_cFilter = ""
		ENDIF
		SET FILTER TO &l_cFilter IN (l_cCursor)
		GO TOP IN (l_cCursor)
		
		IF lp_lRefresh
			this.grdList.Refresh()
		ENDIF
		
		RETURN .T.
	ENDPROC

	PROCEDURE Unload
		IF USED(this.ccursorname)
			SELECT(this.ccursorname)
			USE
		ENDIF
		DO CASE
			CASE this.nMode = 1
				DO RestoreListsEnv IN mylists WITH ;
					this.nlistsrecord, this.ncurrentarea
			CASE this.nMode = 2
				DO RestoreBatchEnv IN mylists WITH this.narea		
		ENDCASE
		IF TYPE("this.oFormRef.Name") = "C" AND UPPER(ALLTRIM(this.oFormRef.Name)) = "FWEEKFORM" AND this.lChanged
			this.oFormRef.displayContent()
		ENDIF
		DODEFAULT()
		IF this.lChanged AND TYPE("this.oFormRef.Name") = "C" AND UPPER(ALLTRIM(this.oFormRef.Name)) = "FRMADDRESSCONSENT"
			this.oFormRef.Upload()
		ENDIF
	ENDPROC

	PROCEDURE chkshowalllanguages.Click
		thisform.setlangfilter(.T.)
		
		RETURN .T.
	ENDPROC

	PROCEDURE cmdClose.Click
		thisform.OnClose()
	ENDPROC

	PROCEDURE cmdGo.Click
		thisform.GoReport()
	ENDPROC

	PROCEDURE grdList.Column1.Tbgrid1.DblClick
		DODEFAULT()
		thisform.cmdGo.SetFocus()
		thisform.GoReport()
	ENDPROC

ENDDEFINE
