*--------------------------------------------------------------------------------------------------------------------------------------------------------
* (ES) AUTOGENERADO - ¡¡ATENCIÓN!! - ¡¡NO PENSADO PARA EJECUTAR!! USAR SOLAMENTE PARA INTEGRAR CAMBIOS Y ALMACENAR CON HERRAMIENTAS SCM!!
* (EN) AUTOGENERATED - ATTENTION!! - NOT INTENDED FOR EXECUTION!! USE ONLY FOR MERGING CHANGES AND STORING WITH SCM TOOLS!!
*--------------------------------------------------------------------------------------------------------------------------------------------------------
*< FOXBIN2PRG: Version="1.19" SourceFile="srvadrmain.scx" /> (Solo para binarios VFP 9 / Only for VFP 9 binaries)
*
*
#INCLUDE "..\include\constdefines.h"

DEFINE CLASS dataenvironment AS dataenvironment 
 	*< CLASSDATA: Baseclass="dataenvironment" Timestamp="" Scale="" Uniqueid="" ClassIcon="2" />

	DataSource = .NULL.
	Height = 200
	Left = 1
	Name = "Dataenvironment"
	Top = 220
	Width = 520
	
	PROCEDURE Init
		LOCAL llNoDataOnLoad
		
		this.NewObject("oCAAdrMain", "caadrmain", "progs\cadefdesk.prg")
		llNoDataOnLoad = .T.
		this.oCAAdrMain.CursorFill(.T.,llNoDataOnLoad)
		SELECT 0
		
		RETURN .T.
	ENDPROC

ENDDEFINE

DEFINE CLASS frmadrmain AS tformcommon OF "..\libs\main.vcx" 
 	*< CLASSDATA: Baseclass="form" Timestamp="" Scale="" Uniqueid="" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="pgfMain" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfMain.pagEdit.pgfSlave" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfMain.pagEdit.pgfSlave.pagNote.edtAd_note" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfMain.pagEdit.pgfSlave.pagNote.lblAd_created" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfMain.pagEdit.pgfSlave.pagNote.dtxtAd_created" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfMain.pagEdit.pgfSlave.pagNote.txtAd_userid" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfMain.pagEdit.pgfSlave.pagNote.lblAd_adrmupd" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfMain.pagEdit.pgfSlave.pagNote.dtxtAd_adrmupd" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfMain.pagBrowse.grdAdrmain" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="oProcAddress" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="oSearchHandler" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="edttransfertoaddressdescription" UniqueID="" Timestamp="" />

	*<DefinedPropArrayMethod>
		*m: gridactivate
		*m: mode_assign
		*m: nextpage
		*m: onappendpage
		*m: onmark
		*m: ontransfer
		*m: ontransfer_get_selected_address_text
		*m: ontransfer_switch
		*m: tabreorder
		*p: cfilter
		*p: corder
		*p: mode
		*p: nadidfortransfer		&& ad_adid for transfer
		*p: oadidfortransfer		&& Scatter object with address data to which we will transfer some other address
	*</DefinedPropArrayMethod>

	cfilter = 1=1
	corder = ad_adid
	ctbrclass = ctbrsrvadrmain
	DoCreate = .T.
	doiniopenmainservertables = .T.
	formname = addressmainbook
	Height = 545
	KeyPreview = .T.
	lmainserverform = .T.
	lusecommonshortcuts = .F.
	mode = 0
	nadidfortransfer = 0		&& ad_adid for transfer
	Name = "frmAdrMain"
	oadidfortransfer = .NULL.		&& Scatter object with address data to which we will transfer some other address
	ShowTips = .T.
	Width = 800

	ADD OBJECT 'edttransfertoaddressdescription' AS teditbox WITH ;
		Anchor = 10, ;
		ForeColor = 255,0,0, ;
		Height = 96, ;
		Left = 0, ;
		Name = "edttransfertoaddressdescription", ;
		ReadOnly = .T., ;
		resizefontsize = .F., ;
		Top = 0, ;
		Visible = .F., ;
		Width = 798
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="editbox" />

	ADD OBJECT 'oProcAddress' AS procaddress WITH ;
		caddressalias = , ;
		creservatalias = , ;
		Left = 36, ;
		Name = "oProcAddress", ;
		Top = 7
		*< END OBJECT: ClassLib="..\libs\proc_address.vcx" BaseClass="custom" />

	ADD OBJECT 'oSearchHandler' AS brilliantshandler WITH ;
		enabled = .T., ;
		Left = 36, ;
		Name = "oSearchHandler", ;
		Top = 33
		*< END OBJECT: ClassLib="..\libs\cit_bridge.vcx" BaseClass="custom" />

	ADD OBJECT 'pgfMain' AS tpageframe WITH ;
		ActivePage = 1, ;
		Anchor = 15, ;
		ErasePage = .T., ;
		Height = 545, ;
		Name = "pgfMain", ;
		PageCount = 2, ;
		Width = 800, ;
		Page1.Caption = "pagEdit", ;
		Page1.Name = "pagEdit", ;
		Page2.Caption = "pagBrowse", ;
		Page2.Name = "pagBrowse"
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="pageframe" />

	ADD OBJECT 'pgfMain.pagBrowse.grdAdrmain' AS grdbasecommon WITH ;
		Anchor = 15, ;
		Height = 515, ;
		lresizecolumns = .F., ;
		MemberClassLibrary = ..\commonclasses.prg, ;
		Name = "grdAdrmain", ;
		npage = 1000, ;
		ScrollBars = 3, ;
		Width = 796
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="grid" />

	ADD OBJECT 'pgfMain.pagEdit.pgfSlave' AS tpageframe WITH ;
		ActivePage = 1, ;
		Anchor = 30, ;
		ErasePage = .T., ;
		Height = 200, ;
		Left = 2, ;
		Name = "pgfSlave", ;
		PageCount = 3, ;
		Top = 314, ;
		Width = 794, ;
		Page1.Caption = "pagNote", ;
		Page1.Name = "pagNote", ;
		Page2.Caption = "pagStats", ;
		Page2.Name = "pagStats", ;
		Page3.Caption = "pagSales", ;
		Page3.Name = "pagSales"
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="pageframe" />

	ADD OBJECT 'pgfMain.pagEdit.pgfSlave.pagNote.dtxtAd_adrmupd' AS ttextdate WITH ;
		DisabledForeColor = 0,0,0, ;
		Enabled = .F., ;
		Left = 685, ;
		Name = "dtxtAd_adrmupd", ;
		Top = 38, ;
		Width = 96, ;
		ZOrderSet = 37
		*< END OBJECT: ClassLib="..\common\libs\_lvisual.vcx" BaseClass="textbox" />

	ADD OBJECT 'pgfMain.pagEdit.pgfSlave.pagNote.dtxtAd_created' AS ttextdate WITH ;
		ControlSource = "caadrmain.ad_created", ;
		DisabledForeColor = 0,0,0, ;
		Enabled = .F., ;
		Left = 588, ;
		Name = "dtxtAd_created", ;
		Top = 14, ;
		Width = 96, ;
		ZOrderSet = 37
		*< END OBJECT: ClassLib="..\common\libs\_lvisual.vcx" BaseClass="textbox" />

	ADD OBJECT 'pgfMain.pagEdit.pgfSlave.pagNote.edtAd_note' AS teditbox WITH ;
		ControlSource = "caadrmain.ad_note", ;
		DisabledForeColor = 0,0,0, ;
		Height = 153, ;
		Left = 4, ;
		Name = "edtAd_note", ;
		ScrollBars = 2, ;
		SelectOnEntry = .T., ;
		Top = 5, ;
		Width = 496
		*< END OBJECT: ClassLib="..\libs\main.vcx" BaseClass="editbox" />

	ADD OBJECT 'pgfMain.pagEdit.pgfSlave.pagNote.lblAd_adrmupd' AS tlabel WITH ;
		AutoSize = .F., ;
		Caption = "lblAd_adrmupd", ;
		Left = 504, ;
		Name = "lblAd_adrmupd", ;
		Top = 41, ;
		Width = 84, ;
		ZOrderSet = 36
		*< END OBJECT: ClassLib="..\common\libs\_lvisual.vcx" BaseClass="label" />

	ADD OBJECT 'pgfMain.pagEdit.pgfSlave.pagNote.lblAd_created' AS tlabel WITH ;
		AutoSize = .F., ;
		Caption = "lblAd_created", ;
		Left = 504, ;
		Name = "lblAd_created", ;
		Top = 17, ;
		Width = 84, ;
		ZOrderSet = 36
		*< END OBJECT: ClassLib="..\common\libs\_lvisual.vcx" BaseClass="label" />

	ADD OBJECT 'pgfMain.pagEdit.pgfSlave.pagNote.txtAd_userid' AS ttextbox WITH ;
		ControlSource = "caadrmain.ad_userid", ;
		DisabledForeColor = 0,0,0, ;
		Enabled = .F., ;
		Left = 588, ;
		Name = "txtAd_userid", ;
		Top = 38, ;
		Width = 96, ;
		ZOrderSet = 54
		*< END OBJECT: ClassLib="..\common\libs\_lvisual.vcx" BaseClass="textbox" />
	
	PROCEDURE assigncaption
		this.Caption = GetText("ADDRESS","TXT_MAIN_SERVER_ADDRESSES")
		this.pgfMain.pagEdit.Caption = GetText("ADDRESS","PT_ADDRESSNAME")
		this.pgfMain.pagBrowse.Caption = GetText("ADDRESS","PT_ADDRESSBROWSE")
		this.pgfMain.pagEdit.pgfSlave.pagNote.Caption = GetText("ADDRESS","PT_NOTENAME")
		this.pgfMain.pagEdit.pgfSlave.pagStats.Caption = GetText("ADDRESS","PT_REVNUENAME")
		this.pgfMain.pagEdit.pgfSlave.pagSales.Caption = GetText("ADDRESS","PT_SALES")
		
		this.pgfMain.pagEdit.pgfSlave.pagNote.lblAd_created.Caption = GetText("RESERVAT","T_CREATED")
		this.pgfMain.pagEdit.pgfSlave.pagNote.lblAd_adrmupd.Caption = GetText("RESERVAT","T_CHANGED")
	ENDPROC

	PROCEDURE findnext
		this.oSearchHandler.FindNext()
	ENDPROC

	PROCEDURE findprev
		this.oSearchHandler.FindPrevious()
	ENDPROC

	PROCEDURE gridactivate
		IF this.pgfMain.ActivePage = 2 AND TYPE("this.ActiveControl") = "O" AND this.ActiveControl # this.pgfMain.pagBrowse.grdAdrmain
			this.pgfMain.pagBrowse.grdAdrmain.SetFocus()
		ENDIF
	ENDPROC

	PROCEDURE Init
		LPARAMETERS tcMode
		LOCAL llSuccess
		
		DODEFAULT()
		
		this.pgfMain.ActivePage = 2
		this.oSearchHandler.Fill()
		llSuccess = this.OnFilter()
		
		RETURN llSuccess
	ENDPROC

	PROCEDURE KeyPress
		LPARAMETERS nKeyCode, nShiftAltCtrl
		DODEFAULT(nKeyCode, nShiftAltCtrl)
	ENDPROC

	PROCEDURE Load
		DODEFAULT()
		
		openfile(.F.,"bsacct")
	ENDPROC

	PROCEDURE mode_assign
		LPARAMETERS tnNewVal
		* EDIT_MODE		1 - Edit mode
		* READONLY_MODE	5 - Show mode
		
		IF this.Mode # tnNewVal
			this.Mode = tnNewVal
			DO CASE
				CASE NOT PEMSTATUS(this.pgfMain.pagEdit, "oaddrmainedit", 5)
				CASE this.Mode = READONLY_MODE
					this.pgfMain.pagBrowse.Enabled = .T.
					this.pgfMain.pagEdit.oaddrmainedit.Enabled = .F.
					this.pgfMain.pagEdit.pgfSlave.pagNote.edtAd_note.Enabled = .F.
					this.Activatetoolbar()
				CASE this.Mode = EDIT_MODE
					this.pgfMain.pagBrowse.Enabled = .F.
					this.pgfMain.pagEdit.oaddrmainedit.Enabled = .T.
					this.pgfMain.pagEdit.pgfSlave.pagNote.edtAd_note.Enabled = .T.
					this.Activatetoolbar()
				OTHERWISE
			ENDCASE
		ENDIF
	ENDPROC

	PROCEDURE nextpage
		IF this.Mode = EDIT_MODE
			RETURN .T.
		ENDIF
		
		this.pgfMain.pagBrowse.grdAdrmain.CursorAddPage()
	ENDPROC

	PROCEDURE onappendpage
	ENDPROC

	PROCEDURE onbottom
		LOCAL lnSelect
		
		IF this.Mode = EDIT_MODE
			RETURN .T.
		ENDIF
		
		lnSelect = SELECT()
		this.GridActivate()
		SELECT (this.pgfMain.pagBrowse.grdAdrmain.cCurName)
		LOCATE FOR .F.
		TRY
			SKIP -1 IN (this.pgfMain.pagBrowse.grdAdrmain.cCurName)
		CATCH
		ENDTRY
		SELECT (lnSelect)
		
		this.OnRefresh()
		
		RETURN .T.
	ENDPROC

	PROCEDURE onclose
		IF this.Mode = EDIT_MODE
			this.OnUndo()
		ELSE
			DODEFAULT()
		ENDIF
	ENDPROC

	PROCEDURE onedit
		IF this.Mode = EDIT_MODE
			RETURN .T.
		ENDIF
		
		this.pgfMain.ActivePage = 1
		this.pgfMain.pagBrowse.grdAdrmain.CursorRequery()
		this.OnRefresh()
		this.Mode = EDIT_MODE
	ENDPROC

	PROCEDURE onfilter
		LOCAL lcFilter
		
		IF this.Mode = EDIT_MODE
			RETURN .T.
		ENDIF
		
		lcFilter = this.oSearchHandler.OnFilter()
		IF NOT EMPTY(lcFilter)
			this.cFilter = lcFilter
			this.cOrder = IIF(this.cFilter = "1=1", this.oSearchHandler.cPrimaryKeyExpr, this.oSearchHandler.cOrder)
			this.pgfMain.pagBrowse.grdAdrmain.ResetGrid()
			this.pgfMain.pagBrowse.grdAdrmain.CursorRequery()
			IF RECCOUNT(this.pgfMain.pagBrowse.grdAdrmain.cCurName) = 0
				Alert(GetText("COMMON", "TXT_FIELD_NOT_FOUND"))
			ENDIF
			this.OnRefresh()
		ENDIF
		
		RETURN NOT EMPTY(lcFilter)
	ENDPROC

	PROCEDURE onmark
		LOCAL l_cCursor, l_nSelect, l_cShowTargetAddress
		
		l_nSelect = SELECT()
		l_cCursor = this.pgfMain.pagBrowse.grdAdrmain.ccurname
		
		IF &l_cCursor..ad_adid <> this.nadidfortransfer
		
			l_cShowTargetAddress = this.ontransfer_get_selected_address_text()
		
			l_cShowTargetAddress = CHR(13) + CHR(10) + CHR(13) + CHR(10) + l_cShowTargetAddress + CHR(13) + CHR(10) + CHR(13) + CHR(10)
			IF yeSno(STRTRAN(GetLangText("MRGADDR","TA_SURE1")+" "+GetLangText("MRGADDR", ;
				"TA_SURE2"), "'%s'", l_cShowTargetAddress )+"@2")
		
				this.oprocAddress.adrmaintransfer(&l_cCursor..ad_adid, this.nadidfortransfer)
				this.pgfMain.pagBrowse.grdAdrmain.CursorRequery()
			ENDIF
		ELSE
			alert(GetLangText("KEYCARD1","TXT_BLOCKED"))
		ENDIF
		
		SELECT (l_nSelect)
		
		this.nadidfortransfer = 0
		this.ontransfer_switch(.F.)
		
		RETURN .T.
	ENDPROC

	PROCEDURE onnext
		IF this.Mode = EDIT_MODE
			RETURN .T.
		ENDIF
		
		this.GridActivate()
		TRY
			SKIP IN (this.pgfMain.pagBrowse.grdAdrmain.cCurName)
			IF EOF(this.pgfMain.pagBrowse.grdAdrmain.cCurName)
				SKIP -1 IN (this.pgfMain.pagBrowse.grdAdrmain.cCurName)
			ENDIF
		CATCH
		ENDTRY
		
		this.OnRefresh()
	ENDPROC

	PROCEDURE onprevious
		IF this.Mode = EDIT_MODE
			RETURN .T.
		ENDIF
		
		this.GridActivate()
		TRY
			SKIP -1 IN (this.pgfMain.pagBrowse.grdAdrmain.cCurName)
		CATCH
		ENDTRY
		
		this.OnRefresh()
	ENDPROC

	PROCEDURE onrefresh
		IF this.pgfMain.ActivePage = 1
			IF this.Mode # EDIT_MODE OR RECCOUNT(thisform.DataEnvironment.oCAAdrMain.Alias) = 0
				thisform.DataEnvironment.oCAAdrMain.cFilterClause = "ad_adid = " + ;
						SqlCnv(EVALUATE(this.pgfMain.pagBrowse.grdAdrmain.cCurName+".ad_adid"))
				thisform.DataEnvironment.oCAAdrMain.CursorFill()
				this.pgfMain.pagEdit.pgfSlave.pagNote.dtxtAd_adrmupd.vSelectedvalue = TTOD(caAdrmain.ad_adrmupd)
			ENDIF
			DODEFAULT()
			this.pgfMain.pagEdit.oAddrmainEdit.OnRefresh()
		ENDIF
	ENDPROC

	PROCEDURE onsave
		LOCAL llSuccess, lnErrCode
		
		IF this.Mode # EDIT_MODE
			RETURN .T.
		ENDIF
		
		this.ControlRefresh()
		
		lnErrCode = this.oProcAddress.AdrMainValid(thisform.DataEnvironment.oCAAdrMain.Alias)
		IF lnErrCode = 0
			this.oProcAddress.AdrMainChangeUpdTime(thisform.DataEnvironment.oCAAdrMain.Alias, _screen.oGlobal.oParam2.pa_hotcode)
			llSuccess = thisform.DataEnvironment.oCAAdrMain.DoTableUpdate()
		ELSE
			Alert(this.oProcAddress.cValidError)
		ENDIF
		IF llSuccess
			this.pgfMain.pagBrowse.grdAdrmain.CursorRequery()
			this.Mode = READONLY_MODE
		ENDIF
		
		RETURN llSuccess
	ENDPROC

	PROCEDURE onsearch
		this.OnFilter()
	ENDPROC

	PROCEDURE onsearchmore
		thisform.Nextpage()
	ENDPROC

	PROCEDURE ontop
		LOCAL lnSelect
		
		IF this.Mode = EDIT_MODE
			RETURN .T.
		ENDIF
		
		lnSelect = SELECT()
		this.GridActivate()
		SELECT (this.pgfMain.pagBrowse.grdAdrmain.cCurName)
		LOCATE
		SELECT (lnSelect)
		
		this.OnRefresh()
		
		RETURN .T.
	ENDPROC

	PROCEDURE ontransfer
		LOCAL l_cCursor, l_nSelect
		
		l_nSelect = SELECT()
		
		l_cCursor = this.pgfMain.pagBrowse.grdAdrmain.ccurname
		
		SELECT (l_cCursor)
		SCATTER NAME thisform.oadidfortransfer
		this.nadidfortransfer = ad_adid
		SELECT (l_nSelect)
		
		this.edttransfertoaddressdescription.Value = this.ontransfer_get_selected_address_text()
		
		this.ontransfer_switch(.T.)
		
		RETURN .T.
	ENDPROC

	PROCEDURE ontransfer_get_selected_address_text
		LOCAL l_cText, l_oData
		
		l_oData = thisform.oadidfortransfer
		
		TEXT TO l_cText TEXTMERGE NOSHOW PRETEXT 3
		ID: <<TRANSFORM(l_oData.ad_adid)>> | BMS: <<TRANSFORM(c_bsacct)>>
		<<GetText("ADDRMAIN", "TXT_TITLE")>>: <<ALLTRIM(l_oData.ad_title)>> | <<GetText("ADDRMAIN", "TXT_FNAME")>>: <<ALLTRIM(l_oData.ad_fname)>> | <<GetText("ADDRMAIN", "TXT_LNAME")>>: <<ALLTRIM(l_oData.ad_lname)>> | <<GetText("ADDRESS", "TXT_BIRTHDAY")>>: <<IIF(EMPTY(l_oData.ad_birth),"",DTOC(l_oData.ad_birth))>>
		<<GetText("ADDRMAIN", "TXT_COMPANY")>>: <<ALLTRIM(l_oData.ad_company)>>
		<<GetText("ADDRMAIN", "TXT_EMAIL")>>: <<ALLTRIM(l_oData.ad_email)>>
		<<GetText("ADDRMAIN", "TXT_STREET")>>: <<ALLTRIM(l_oData.ad_street)>>
		<<GetText("ADDRMAIN", "TXT_ZIP")>>: <<ALLTRIM(l_oData.ad_zip)>> | <<GetText("ADDRMAIN", "TXT_CITY")>>: <<ALLTRIM(l_oData.ad_city)>> | <<GetText("ADDRMAIN", "TXT_STATE")>>: <<IIF(EMPTY(l_oData.ad_state),"",ALLTRIM(l_oData.ad_state)+" ")>> | <<GetText("ADDRMAIN", "TXT_COUNTRY")>>: <<ALLTRIM(l_oData.ad_country)>>
		ENDTEXT
		
		RETURN l_cText
	ENDPROC

	PROCEDURE ontransfer_switch
		LPARAMETERS lp_lVisible
		
		IF lp_lVisible
			IF NOT this.edttransfertoaddressdescription.Visible
				this.edttransfertoaddressdescription.Visible = .T.
				this.pgfMain.Top = this.edttransfertoaddressdescription.Top + this.edttransfertoaddressdescription.Height
				this.pgfMain.t = this.pgfMain.Top
				this.pgfMain.Height = thisform.Height - this.pgfMain.Top
				this.pgfMain.h = this.pgfMain.Height
				this.Resize()
				this.ActivateToolbar()
				this.edttransfertoaddressdescription.Refresh()
			ENDIF
		ELSE
			IF this.edttransfertoaddressdescription.Visible
				this.edttransfertoaddressdescription.Visible = .F.
				this.pgfMain.Top = this.edttransfertoaddressdescription.Top
				this.pgfMain.t = this.pgfMain.Top
				this.pgfMain.Height = thisform.Height - this.pgfMain.Top
				this.pgfMain.h = this.pgfMain.Height
				this.Resize()
				this.ActivateToolbar()
			ENDIF
		ENDIF
		
		RETURN .T.
	ENDPROC

	PROCEDURE onundo
		IF this.Mode # EDIT_MODE
			RETURN .T.
		ENDIF
		
		this.Mode = READONLY_MODE
		this.OnRefresh()
	ENDPROC

	PROCEDURE resizeobjects
		LPARAMETERS toControl
		LOCAL lnFontSize
		
		lnFontSize = MIN(MAX(ROUND(9*this.sh,0), this.nMinFont), this.nMaxFont)
		
		this.pgfMain.pagEdit.pgfSlave.pagNote.SetAll("FontSize", lnFontSize)
		this.SetAll("FontSize", lnFontSize, "Page")
	ENDPROC

	PROCEDURE tabreorder
		LPARAMETERS toControl
		LOCAL loControl, lnTabIndex
		
		lnTabIndex = 0
		FOR EACH loControl IN toControl.Controls
			IF PEMSTATUS(loControl, "TabIndex", 5)
				lnTabIndex = lnTabIndex + 1
				loControl.TabIndex = lnTabIndex
			ENDIF
		NEXT
	ENDPROC

	PROCEDURE oSearchHandler.fill
		* Fill search handler on initialization with search criteriums from grid columns.
		* and put extended filter criteriums in collection like this:
		* thisform.oSearchHandler.CreateCriterium(<Caption>, <ControlSource>, <FieldSource>)
		* thisform.oSearchHandler.CreateCriterium(<Caption>, <FieldType>, <FieldSource>, .T.)
		this.cPrimaryKeyExpr = "ad_adid"
		SELECT (thisform.pgfMain.pagBrowse.grdAdrmain.cCurName)
		this.CreateCriterium(Str2Msg("<%s>", "%s", GetText("COMMON", "TXT_ALL")))
		this.CreateCriterium(GetText("ADDRMAIN", "TXT_ADDRESS_ID"), "ad_adid", "ad_adid")
		this.CreateCriterium(GetText("ADDRMAIN", "TXT_LNAME"), "ad_lname", "ad_lname")
		this.CreateCriterium(GetText("ADDRMAIN", "TXT_FNAME"), "ad_fname", "ad_fname")
		this.CreateCriterium(GetText("ADDRMAIN", "TXT_COMPANY"), "ad_company", "ad_company")
		this.CreateCriterium(GetText("ADDRMAIN", "TXT_COMPKEY"), "ad_compkey", "ad_compkey")
		this.CreateCriterium(GetText("ADDRESS", "T_KEYNR"), "ad_compnum", "ad_compnum")
		this.CreateCriterium(GetText("ADDRMAIN", "TXT_COUNTRY"), "ad_country", "ad_country")
		this.CreateCriterium(GetText("ADDRMAIN", "TXT_DEPARTMENT"), "ad_departm", "ad_departm")
		this.CreateCriterium(GetText("ADDRMAIN", "TXT_STREET"), "ad_street", "ad_street")
		this.CreateCriterium(GetText("ADDRMAIN", "TXT_CITY"), "ad_city", "ad_city")
		this.CreateCriterium(GetText("ADDRMAIN", "TXT_ZIP"), "ad_zip", "ad_zip")
		this.CreateCriterium(GetText("ADDRMAIN", "TXT_STATE"), "ad_state", "ad_state")
		this.CreateCriterium(GetText("ADDRMAIN", "TXT_EMAIL"), "ad_email", "ad_email")
		this.CreateCriterium(GetText("ADDRMAIN", "TXT_FAX"), "ad_fax", "ad_fax")
		this.CreateCriterium(GetText("ADDRMAIN", "TXT_PHONE"), "ad_phone", "ad_phone")
		this.CreateCriterium(GetText("ADDRMAIN", "TXT_WEBSITE"), "ad_website", "ad_website")
	ENDPROC

	PROCEDURE pgfMain.pagBrowse.Activate
		IF thisform.Mode = EDIT_MODE
			thisform.OnUndo()
		ENDIF
		thisform.GridActivate()
	ENDPROC

	PROCEDURE pgfMain.pagBrowse.grdAdrmain.afterrowcolchangeafter
		thisform.OnRefresh()
	ENDPROC

	PROCEDURE pgfMain.pagBrowse.grdAdrmain.cursoraddpage
		LOCAL lcSql, lcOrderMask, lnRecCount, lnAdAdid, lcFilter
		
		DO CASE
			CASE EMPTY(this.nPage)
			*CASE this.nRecordCount = 0 OR MOD(this.nRecordCount,this.nPage) > 0
		*		Alert(GetText("COMMON", "TXT_NO_MORE_RECORDS"))
			OTHERWISE
				lcOrderMask = STRTRAN(thisform.cOrder, ",", " /s,") + " /s"
				lnRecCount = this.nRecordCount+this.nPage
				IF thisform.cFilter = "1=1"
					lcFilter = "ad_adid BETWEEN 1 AND " + TRANSFORM(lnRecCount)
				ELSE
					lcFilter = thisform.cFilter
				ENDIF
				TEXT TO lcSql TEXTMERGE NOSHOW PRETEXT 15
							SELECT TOP <<TRANSFORM(lnRecCount)>> ;
								ad_adid, ad_title, ad_fname, ad_lname, ad_salute, ad_lang, ad_company, ad_compkey, ad_compnum, ad_country, ;
								ad_departm, ad_street, ad_city, ad_zip, ad_state, ad_email, ad_fax, ad_phone, ad_website, ad_birth, ad_mail1, ad_vipstat, ;
								CAST(NVL(bb_bbid,0) AS Numeric(8)) AS c_bsacct ;
								FROM adrmain ;
								LEFT JOIN bsacct ON ad_adid = bb_adid ;
								WHERE <<lcFilter>> ;
								ORDER BY <<STRTRAN(lcOrderMask, "/s", "ASC")>>
				ENDTEXT
		
				SqlCursor(lcSql, this.cCurSource,,,,.T.,,.T.,.T.)
		
		*!*			lnRecno = RECNO(this.cCurName)
		*!*			GO this.nRecordCount IN (this.cCurName)
		*!*			lnAdAdid = EVALUATE(this.cCurName+".ad_adid")
		*!*			GO lnRecno IN (this.cCurName)
		*!*			IF DLocate(this.cCurSource, "ad_adid = " + SqlCnv(lnAdAdid))
		*!*				lnRecno = RECNO(this.cCurSource)
		*!*				DELETE FOR RECNO() <= lnRecno IN (this.cCurSource)
		*!*			ENDIF
				DODEFAULT()
		
				this.Refresh()
		ENDCASE
		
		RETURN .T.
	ENDPROC

	PROCEDURE pgfMain.pagBrowse.grdAdrmain.cursorcreatebefore
		LOCAL lcSql, llReadWrite
		
		TEXT TO lcSql TEXTMERGE NOSHOW PRETEXT 15
		     SELECT ad_adid, ad_title, ad_fname, ad_lname, ;
					ad_salute, ad_lang, ad_company, ad_compkey, ad_compnum, ;
					ad_country, ad_departm, ad_street, ad_city, ad_zip, ad_state, ;
					ad_email, ad_fax, ad_phone, ad_website, ad_birth, ad_mail1, ad_vipstat, ;
					CAST(0 AS Numeric(8)) AS c_bsacct ;
					FROM adrmain ;
					WHERE 0=1
		ENDTEXT
		
		llReadWrite = .T.
		SqlCursor(lcSql, this.cCurName,, "", .NULL., .T.,, llReadWrite)
		
		RETURN .T.
	ENDPROC

	PROCEDURE pgfMain.pagBrowse.grdAdrmain.cursorrequerybefore
		LOCAL lcSql, lnRecCount, lcFilter
		
		lnRecCount = IIF(EMPTY(this.nRecordCount), this.nPage, this.nRecordCount)
		IF thisform.cFilter = "1=1"
			lcFilter = "ad_adid BETWEEN 1 AND " + TRANSFORM(lnRecCount)
		ELSE
			lcFilter = thisform.cFilter
		ENDIF
		TEXT TO lcSql TEXTMERGE NOSHOW PRETEXT 15
			SELECT TOP <<TRANSFORM(lnRecCount)>> ad_adid, ad_title, ad_fname, ad_lname, ;
					ad_salute, ad_lang, ad_company, ad_compkey, ad_compnum, ;
					ad_country, ad_departm, ad_street, ad_city, ad_zip, ad_state, ;
					ad_email, ad_fax, ad_phone, ad_website, ad_birth, ad_mail1, ad_vipstat, ;
					CAST(NVL(bb_bbid,0) AS Numeric(8)) AS c_bsacct ;
					FROM adrmain ;
					LEFT JOIN bsacct ON ad_adid = bb_adid ;
					WHERE <<lcFilter>> ;
					ORDER BY <<thisform.cOrder>>
		ENDTEXT
		
		SqlCursor(lcSql, this.cCurSource,,"",.NULL.,.T.,,,.T.)
		
		RETURN .T.
	ENDPROC

	PROCEDURE pgfMain.pagBrowse.grdAdrmain.setheadercaptionsbefore
		this.oCaptions.Add(GetText("ADDRMAIN", "TXT_ADDRESSID"),"ad_adid")
		this.oCaptions.Add(GetText("ADDRMAIN", "TXT_TITLE"),"ad_title")
		this.oCaptions.Add(GetText("ADDRMAIN", "TXT_FNAME"),"ad_fname")
		this.oCaptions.Add(GetText("ADDRMAIN", "TXT_LNAME"),"ad_lname")
		this.oCaptions.Add(GetText("ADDRMAIN", "TXT_SALUTE"),"ad_salute")
		this.oCaptions.Add(GetText("ADDRMAIN", "TXT_LANG"),"ad_lang")
		this.oCaptions.Add(GetText("ADDRMAIN", "TXT_COMPANY"),"ad_company")
		this.oCaptions.Add(GetText("ADDRMAIN", "TXT_COMPKEY"),"ad_compkey")
		this.oCaptions.Add(GetText("ADDRESS", "T_KEYNR"),"ad_compnum")
		this.oCaptions.Add(GetText("ADDRMAIN", "TXT_COUNTRY"),"ad_country")
		this.oCaptions.Add(GetText("ADDRMAIN", "TXT_DEPARTM"),"ad_departm")
		this.oCaptions.Add(GetText("ADDRMAIN", "TXT_STREET"),"ad_street")
		this.oCaptions.Add(GetText("ADDRMAIN", "TXT_CITY"),"ad_city")
		this.oCaptions.Add(GetText("ADDRMAIN", "TXT_ZIP"),"ad_zip")
		this.oCaptions.Add(GetText("ADDRMAIN", "TXT_STATE"),"ad_state")
		this.oCaptions.Add(GetText("ADDRMAIN", "TXT_EMAIL"),"ad_email")
		this.oCaptions.Add(GetText("ADDRMAIN", "TXT_FAX"),"ad_fax")
		this.oCaptions.Add(GetText("ADDRMAIN", "TXT_PHONE"),"ad_phone")
		this.oCaptions.Add(GetText("ADDRMAIN", "TXT_WEBSITE"),"ad_website")
		this.oCaptions.Add(GetText("ADDRMAIN", "TXT_BIRTH"),"ad_birth")
		this.oCaptions.Add(GetText("ADDRMAIN", "TXT_MAIL1"),"ad_mail1")
		this.oCaptions.Add(GetLangText("ADDRESS","TXT_VIP_STATUS"),"ad_vipstat")
		this.oCaptions.Add(GetLangText("MGRFINAN","TXT_BMS_ACCOUNT_NO"),"c_bsacct")
		
		RETURN .T.
	ENDPROC

	PROCEDURE pgfMain.pagEdit.Activate
		thisform.LockScreen = .T.
		IF NOT PEMSTATUS(this, "oaddrmainedit", 5)
			this.AddObject("oaddrmainedit", "addrmainedit")
			this.oAddrmainEdit.InitAfter(this.Parent.PageWidth, this.Parent.PageHeight-this.pgfSlave.Height)
			this.oAddrmainEdit.ZOrder(1)
			thisform.TabReorder(this)
			thisform.Mode = READONLY_MODE
		ENDIF
		thisform.OnRefresh()
		thisform.LockScreen = .F.
	ENDPROC

	PROCEDURE pgfMain.pagEdit.pgfSlave.pagNote.Init
		this.Enabled = paRights(110)
	ENDPROC

	PROCEDURE pgfMain.pagEdit.pgfSlave.pagSales.Init
		this.Enabled = .F.&&paRights(134) AND _screen.US
	ENDPROC

	PROCEDURE pgfMain.pagEdit.pgfSlave.pagStats.Activate
		* Temporarily disable statistics. It takes too long to show data!
		
		RETURN .T.
		
		
		thisform.LockScreen = .T.
		IF NOT PEMSTATUS(this, "oRevenuePage", 5)
			SELECT 0
			this.AddObject("oRevenuePage", "RevenuePage")
			this.oRevenuePage.cmdSum.Enabled = .F.
			this.oRevenuePage.Mode = "ADRMAIN"
			this.oRevenuePage.cSource = thisform.pgfMain.pagBrowse.grdAdrmain.cCurName
			REPLACE cur_selected WITH .T. FOR ho_hotcode = _screen.oGlobal.oParam2.pa_hotcode IN (this.oRevenuePage.cStatDataHotelsCur)
			this.oRevenuePage.InitAfter()
		ENDIF
		this.oRevenuePage.Activate()
		thisform.LockScreen = .F.
	ENDPROC

	PROCEDURE pgfMain.pagEdit.pgfSlave.pagStats.Init
		this.Enabled = .F.&&paRights(108)
	ENDPROC

ENDDEFINE
