*--------------------------------------------------------------------------------------------------------------------------------------------------------
* (ES) AUTOGENERADO - ¡¡ATENCIÓN!! - ¡¡NO PENSADO PARA EJECUTAR!! USAR SOLAMENTE PARA INTEGRAR CAMBIOS Y ALMACENAR CON HERRAMIENTAS SCM!!
* (EN) AUTOGENERATED - ATTENTION!! - NOT INTENDED FOR EXECUTION!! USE ONLY FOR MERGING CHANGES AND STORING WITH SCM TOOLS!!
*--------------------------------------------------------------------------------------------------------------------------------------------------------
*< FOXBIN2PRG: Version="1.19" SourceFile="mngargus.vcx" /> (Solo para binarios VFP 9 / Only for VFP 9 binaries)
*
*
DEFINE CLASS mngarguscontrol AS mngcontrol OF "mnglibs.vcx" 
 	*< CLASSDATA: Baseclass="custom" Timestamp="" Scale="Pixels" Uniqueid="" />

	*<DefinedPropArrayMethod>
		*m: queryargus
		*m: requerygrid
		*p: csqlquery
	*</DefinedPropArrayMethod>

	csqlquery = 
	lcopyenabled = .T.
	ldontcalltoolbardefinition = .T.
	lsearchenabled = .T.
	Name = "mngarguscontrol"
	
	PROCEDURE Init
		LPARAMETERS m.TRecNo
		
		DODEFAULT()
		
		thisform.cTbrClass = "cTbrArgusBrw"
		
		IF NOT this.QueryArgus()
			RETURN .F.
		ENDIF
	ENDPROC

	PROCEDURE queryargus
	ENDPROC

	PROCEDURE requerygrid
		LOCAL lnRecno, lcFilter
		
		IF USED(this.GTAlias)
			lnRecno = RECNO(this.GTAlias)
			lcFilter = FILTER(this.GTAlias)
		ENDIF
		thisform.MngGrid.RecordSource = []
		IF this.QueryArgus()
			this.InitGrid()
		ENDIF
		
		IF USED(this.GTAlias)
			IF NOT EMPTY(lnRecno)
				GO lnRecno IN this.GTAlias
			ENDIF
			IF NOT EMPTY(lcFilter)
				SET FILTER TO &lcFilter IN this.GTAlias
			ENDIF
		ENDIF
	ENDPROC

ENDDEFINE

DEFINE CLASS mngreadersctrl AS mngarguscontrol OF "mngargus.vcx" 
 	*< CLASSDATA: Baseclass="custom" Timestamp="" Scale="Pixels" Uniqueid="" />

	csqlquery = 
	Name = "mngreadersctrl"
	
	PROCEDURE Init
		LPARAMETERS m.TRecNo
		
		this.cSqlQuery = 'SELECT rd_readid, rd_readcnt, rd_sysdate, wt_name, SUM(ci_amount-ci_debit) AS rd_balance, rd_type ' + ;
					   'FROM AOReader ' + ;
					   'LEFT JOIN AOCashin ON AOCashin.ci_readid = AOReader.rd_readid ' + ;
					   'LEFT JOIN AOWaiter ON AOWaiter.wt_waitnr = AOReader.rd_waitnr ' + ;
					   'WHERE INLIST(rd_type, [Z1], [Z2]) ' + ;
					   'GROUP BY rd_readid ' + ;
					   'ORDER BY rd_sysdate DESC, rd_readid DESC ' + ;
					   'INTO CURSOR tblReaders'
		
		IF NOT DODEFAULT(m.TRecNo)
			RETURN .F.
		ENDIF
		
		this.MngCaption = GetLangText("ARGUS","TW_READERS")
		
		this.GTAlias = [tblReaders]
		
		this.AddProperty("GColumn(5, 3)")
		this.GColumn[1, 1] = GetLangText("ARGUS", "TH_READERNO")
		this.GColumn[1, 2] = 17
		this.GColumn[1, 3] = [rd_readcnt]
		this.GColumn[2, 1] = GetLangText("ARGUS", "TH_DATE")
		this.GColumn[2, 2] = 20
		this.GColumn[2, 3] = [rd_sysdate]
		this.GColumn[3, 1] = GetLangText("ARGUS", "TH_WAITER")
		this.GColumn[3, 2] = 35
		this.GColumn[3, 3] = [wt_name]
		this.GColumn[4, 1] = GetLangText("ARGUS", "TH_BALANCE")
		this.GColumn[4, 2] = 18
		this.GColumn[4, 3] = [TRANSFORM(rd_balance, '999,999.99 €')]
		this.GColumn[5, 1] = GetLangText("ARGUS", "TH_TYPE")
		this.GColumn[5, 2] = 10
		this.GColumn[5, 3] = [rd_type]
		
		this.GHeight = 400
		this.GWidth = 500
	ENDPROC

	PROCEDURE initgrid
		DODEFAULT()
		
		thisform.MngGrid.SetAll("DynamicForeColor", "IIF("+this.GTAlias+".rd_balance <> 0.00, RGB(255,0,0), RGB(0,0,0))", "Column")
	ENDPROC

	PROCEDURE oncmd3
		* Edit
		DODEFAULT()
		
		IF NOT EOF(this.GTAlias)
			LOCAL l_oReader
		
			SELECT (this.GTAlias)
			SCATTER NAME l_oReader
		
			CheckReader(thisform, l_oReader)
		ENDIF
	ENDPROC

	PROCEDURE oncmd5
		* Search
		DODEFAULT()
		
		DO SearchReader IN ArgusOffice
		
		thisform.MngGrid.SetFocus()
	ENDPROC

	PROCEDURE queryargus
		IF ArgusOffice("PARAM", "pa_cashctr") AND ArgusOffice() AND ArgusOffice("SqlQuery", "Reader, Waiter, Cashin", this.cSqlQuery)
			ArgusOffice("Exit")
			RETURN .T.
		ELSE
			RETURN .F.
		ENDIF
	ENDPROC

ENDDEFINE

DEFINE CLASS mngtablereserctrl AS mngarguscontrol OF "mngargus.vcx" 
 	*< CLASSDATA: Baseclass="custom" Timestamp="" Scale="Pixels" Uniqueid="" />

	#INCLUDE "..\include\constdefines.h"
	*<DefinedPropArrayMethod>
		*m: ontableselected
		*p: naddrid
		*p: nlastplanid
		*p: nreserid
	*</DefinedPropArrayMethod>

	lcolumnhasrealwidth = .T.
	lrefreshtoolbaronarc = .T.
	naddrid = 0
	Name = "mngtablereserctrl"
	nlastplanid = 0
	nmode = 0
	nreserid = 0
	
	PROCEDURE Init
		LPARAMETERS m.TRecNo
		
		OpenFile(.F.,"reservat")
		OpenFile(.F.,"address")
		OpenFile(.F.,"lists")
		
		this.cSqlQuery = [SELECT AOTableres.*, AOTblRsGrp.*, AOTblProps.*, AOLocation.*, ] + ;
						[CAST(NVL(dr_rlid,0) AS Integer) AS dr_rlid ] + ;
						[FROM AOTableres ] + ;
						[LEFT JOIN AOTblProps ON tp_tablenr = tr_tablenr ] + ;
						[LEFT JOIN AOTblRsGrp ON tg_tgid = tr_tgid ] + ;
						[LEFT JOIN AOLocation ON BETWEEN(tr_tablenr, lc_begin, lc_end) ] + ;
						[LEFT JOIN AODeskTblr ON dr_trid = tr_trid ] + ;
						[ORDER BY tr_from, tr_to ] + ;
						[INTO CURSOR tblTableres READWRITE]
		
		IF NOT DODEFAULT(m.TRecNo)
			RETURN .F.
		ENDIF
		this.MngCaption = GetLangText("ARGUS","TW_TABLERESER") + " [" + GetLangText("ARGUS","TH_DATE")+":"+TRANSFORM(sysdate()) + "]"
		TrCreateTblDayParts()
		
		this.GTAlias = [tblTableres]
		
		this.AddProperty("GColumn(9, 5)")
		this.GColumn[1, 1] = GetLangText("ARGUS", "TH_TABLE")
		this.GColumn[1, 2] = 45
		this.GColumn[1, 3] = [EVL(tr_tablenr, "")]
		this.GColumn[1, 5] = [tr_tablenr]
		this.GColumn[2, 1] = GetLangText("ARGUS", "TH_DATE")
		this.GColumn[2, 2] = 70
		this.GColumn[2, 3] = [tr_sysdate]
		this.GColumn[3, 1] = GetLangText("ARGUS", "TH_FROM")+"/"+GetLangText("ARGUS", "TH_TO")
		this.GColumn[3, 2] = 75
		this.GColumn[3, 3] = [IIF(tr_trid<0,'',LEFT(TTOC(tr_from,2),5)+'-'+LEFT(TTOC(tr_to,2),5))]
		this.GColumn[4, 1] = GetLangText("RESERVAT", "TH_STATUS")
		this.GColumn[4, 2] = 45
		this.GColumn[4, 3] = [ICASE(tr_status=]+TRANSFORM(TR_OUT)+[, 'OUT', tr_status=]+TRANSFORM(TR_IN)+[, 'IN', tr_status=]+TRANSFORM(TR_ASG)+[, 'ASG', 'DEF')]
		this.GColumn[5, 1] = GetLangText("ARGUS", "TH_GUEST_NAME")
		this.GColumn[5, 2] = 190
		this.GColumn[5, 3] = [ALLTRIM(tr_lname)+', '+ALLTRIM(tr_fname)]
		this.GColumn[6, 1] = GetLangText("ARGUS", "TH_ROOM")
		this.GColumn[6, 2] = 70
		this.GColumn[6, 3] = [rm_rmname]
		this.GColumn[7, 1] = LEFT(GetLangText("ARGUS", "TXT_PERSONS"),4)+"."
		this.GColumn[7, 2] = 50
		this.GColumn[7, 3] = [tr_persons]
		this.GColumn[8, 1] = GetLangText("ACT", "T_USER")
		this.GColumn[8, 2] = 70
		this.GColumn[8, 3] = [PADR(ProcTableReservation('PtrUser', tr_waitnr, tr_user, tr_userid, tr_usrname),30)]
		this.GColumn[9, 1] = GetLangText("ACT", "T_NOTE")
		this.GColumn[9, 2] = 300
		this.GColumn[9, 3] = [IIF(tr_trid<0,ALLTRIM(ar_article),LEFT(CHRTRAN(tr_note,CHR(13)+CHR(10)," "),100))]
		
		this.GHeight = 400
		this.GWidth = 950
	ENDPROC

	PROCEDURE oncmd1
		LPARAMETERS lp_nTableNr, lp_dDate
		* New
		LOCAL l_oTableres
		
		SELECT (this.GTAlias)
		SCATTER BLANK NAME l_oTableres MEMO
		DO CASE
			CASE this.nMode = 1
				l_oTableres.tr_rsid = this.nReserId
				IF NOT EMPTY(this.nReserId) AND SEEK(this.nReserId, "reservat", "tag33")
					l_oTableres.tr_lname = reservat.rs_lname
					l_oTableres.tr_fname = reservat.rs_fname
					l_oTableres.tr_title = reservat.rs_title
				ENDIF
			CASE this.nMode = 2
				l_oTableres.tr_addrid = this.nAddrId
				IF NOT EMPTY(this.nAddrId) AND SEEK(this.nAddrId, "address", "tag1")
					l_oTableres.tr_lname = address.ad_lname
					l_oTableres.tr_fname = address.ad_fname
					l_oTableres.tr_title = address.ad_title
				ENDIF
			OTHERWISE
		ENDCASE
		
		l_oTableres.tr_tablenr = EVL(lp_nTableNr,0)
		l_oTableres.tr_sysdate = EVL(lp_dDate,SysDate())
		l_oTableRes.tr_from = DTOT(l_oTableres.tr_sysdate)
		l_oTableRes.tr_to = DTOT(l_oTableres.tr_sysdate)
		
		DO CheckTableres IN argusoffice WITH thisform, l_oTableres
		
		this.RequeryGrid()
	ENDPROC

	PROCEDURE oncmd10
		* Order
		LOCAL l_oTableres
		
		IF NOT EOF(this.GTAlias)
			IF EMPTY(EVALUATE(this.GTAlias+".tr_tableid"))
				Alert(GetLangText("ORDER", "TA_NOT_ORDERED_YET"))
			ELSE
				SELECT (this.GtAlias)
				SCATTER NAME l_oTableres MEMO
				DO DisplayOrder IN ArgusOffice WITH thisform, l_oTableres
			ENDIF
		ENDIF
	ENDPROC

	PROCEDURE oncmd11
		* Print
		IF DLocate("lists", "li_listid = '_TR00100'")
		     SELECT lists
		     ASSERT .f.
		     PrtReport(.F.)
		ENDIF
	ENDPROC

	PROCEDURE oncmd2
		LPARAMETERS lp_cFormParams
		* Copy
		DODEFAULT()
		
		IF NOT EOF(this.GTAlias)
			LOCAL l_oTableres
		
			SELECT (this.GTAlias)
			SCATTER NAME l_oTableres MEMO
			ADDPROPERTY(l_oTableres, "nCopyTrId", l_oTableres.tr_trid)
			DO CheckTableres IN argusoffice WITH thisform, l_oTableres
		
			this.RequeryGrid()
		ENDIF
	ENDPROC

	PROCEDURE oncmd3
		* Edit
		DODEFAULT()
		
		IF NOT EOF(this.GTAlias)
			LOCAL l_oTableres
		
			SELECT (this.GTAlias)
			SCATTER NAME l_oTableres MEMO
			IF l_oTableres.tr_trid < 0
				GO TOP IN tblDayParts
				l_oTableres.tr_from = DTOT(l_oTableres.tr_sysdate) + INT(VAL(tblDayParts.c_start)) * 3600
				l_oTableres.tr_to = l_oTableres.tr_from + 3600
				IF NOT EMPTY(l_oTableres.ar_article)
					l_oTableres.tr_note = ALLTRIM(l_oTableres.ar_article)
				ENDIF
			ENDIF
			DO CheckTableres IN argusoffice WITH thisform, l_oTableres
		
			this.RequeryGrid()
		ENDIF
	ENDPROC

	PROCEDURE oncmd4
		* Delete
		LOCAL l_nMode, l_oTableres
		
		SELECT (this.GTAlias)
		SCATTER MEMO NAME l_oTableres
		
		ProcTableReservation("PtrDelete", l_oTableres, @l_nMode)
		IF INLIST(l_nMode, EDIT_MODE, DELETE_MODE)
			this.Requerygrid()
			thisform.MngGrid.SetFocus()
		ENDIF
	ENDPROC

	PROCEDURE oncmd5
		LOCAL l_oTableres, l_oTables, l_cFilter
		* Search
		DODEFAULT()
		
		DO SearchTableres IN ArgusOffice WITH thisform, l_oTableres, l_oTables
		
		IF l_oTableres.lOK
			thisform.Caption = GetLangText("ARGUS","TW_TABLERESER") + " [" + l_oTableres.cCaption + "]"
			l_cFilter = SqlFilter(l_oTableres.cFilter, l_oTables.cFilter)
			SET FILTER TO &l_cFilter IN tblTableres
		ENDIF
		
		thisform.MngGrid.SetFocus()
	ENDPROC

	PROCEDURE oncmd6
		LOCAL l_cDateSttring, l_dFilterDate, l_nPos, l_cDate, l_dDate, l_nPlanId, l_cCaption
		
		IF ArgusOffice() AND ArgusOffice("Use","plans,planobjs,plobjtyp,tableres")
			l_cCaption = thisform.Caption
			l_dFilterDate = {}
			l_cDateSttring = GetLangText("ARGUS","TH_DATE")+":"
			IF AT(l_cDateSttring, l_cCaption)>0
				l_nPos = AT(l_cDateSttring, l_cCaption) + LEN(l_cDateSttring)
				l_cDate = STRTRAN(GETWORDNUM(SUBSTR(l_cCaption,l_nPos),1," "),"]")
				l_dFilterDate = DATE(INT(VAL(GETWORDNUM(l_cDate,3,"."))),INT(VAL(GETWORDNUM(l_cDate,2,"."))),INT(VAL(GETWORDNUM(l_cDate,1,"."))))
			ENDIF
			IF EMPTY(l_dFilterDate)
				l_dFilterDate = sysdate()
			ENDIF 
		
			LOCAL ARRAY l_aDialogData(2,11)
		
			l_aDialogData(1,1) = "dtxtdate"
			l_aDialogData(1,2) = GetLangText("ARGUS","TH_DATE")
			l_aDialogData(1,3) = sqlcnv(l_dFilterDate)
			l_aDialogData(1,8) = {}
			l_aDialogData(2,1) = "cboplans"
			l_aDialogData(2,2) = GetLangText("ARGUS","TXT_TABLEPLAN")
			l_aDialogData(2,3) = "["+TRANSFORM(this.nLastPlanId)+"]"
			l_aDialogData(2,4) = "@G"
			l_aDialogData(2,5) = 20
			l_aDialogData(2,6) = ""
			l_aDialogData(2,7) = ""
			l_aDialogData(2,9) = "SELECT pl_descr, pl_planid FROM __ARGUSTABLE__plans WHERE NOT pl_deleted ORDER BY pl_planid"
			l_aDialogData(2,11) = CREATEOBJECT("collection")
			l_aDialogData(2,11).Add(2,"ColumnCount")
			l_aDialogData(2,11).Add(2,"BoundColumn")
			l_aDialogData(2,11).Add(.T.,"BoundTo")
			l_aDialogData(2,11).Add(.F.,"ColumnLines")
			l_aDialogData(2,11).Add("200,0","ColumnWidths")
			l_aDialogData(2,11).Add(3,"RowSourceType")
		
			IF Dialog(GetLangText("ARGUS","TXT_TABLEPLAN") + "?", "", @l_aDialogData)
				l_dDate = IIF(EMPTY(l_aDialogData(1,8)),sysdate(),l_aDialogData(1,8))
				l_nPlanId = INT(VAL(l_aDialogData(2,8)))
				IF NOT EMPTY(l_nPlanId)
					this.nLastPlanId = l_nPlanId
					DO FORM forms\tableplan WITH l_nPlanId, l_dDate, this
				ENDIF
			ENDIF
		ENDIF
		
		ArgusOffice("Exit")
		
		RETURN .T.
	ENDPROC

	PROCEDURE oncmd7
		* Check IN
		LOCAL l_nMode, l_oTableres
		
		SELECT (this.GTAlias)
		SCATTER MEMO NAME l_oTableres
		ProcTableReservation("PtrCheckIn", l_oTableres, @l_nMode)
		IF l_nMode = EDIT_MODE
			this.Requerygrid()
			thisform.MngGrid.SetFocus()
		ENDIF
	ENDPROC

	PROCEDURE oncmd8
		* Check OUT
		LOCAL l_nMode, l_oTableres
		
		SELECT (this.GTAlias)
		SCATTER MEMO NAME l_oTableres
		ProcTableReservation("PtrCheckOut", l_oTableres, @l_nMode)
		IF l_nMode = EDIT_MODE
			this.Requerygrid()
			thisform.MngGrid.SetFocus()
		ENDIF
	ENDPROC

	PROCEDURE oncmd9
		* History
		LOCAL lcCaption
		
		SELECT (this.gtAlias)
		
		lcCaption = "ID: " + TRANSFORM(tr_trid) + "   " + GetLangText("ARGUS","TH_GUEST_NAME") + ": " + ALLTRIM(tr_title) + " " + ALLTRIM(tr_lname) + ", " + ALLTRIM(tr_fname)
		
		DO FORM forms\rshistor WITH tr_changes, lcCaption, thisform
	ENDPROC

	PROCEDURE ontableselected
		LPARAMETERS lp_nTableNr, lp_dDate
		LOCAL l_lReserved, l_oTableRes, l_oTables, l_cCur, l_cFilter
		
		IF NOT EMPTY(lp_nTableNr) AND NOT EMPTY(lp_dDate)
			IF ArgusOffice() AND ArgusOffice("Use","tableres")
				l_cCur = sqlcursor("SELECT tr_trid FROM __ARGUSTABLE__tableres WHERE tr_sysdate = " + sqlcnv(lp_dDate,.T.) + ;
							" AND tr_tablenr = " + SqlCnv(lp_nTableNr,.T.))
				l_lReserved = RECCOUNT(l_cCur)>0
				dclose(l_cCur)
			ENDIF
			ArgusOffice("Exit")
		
			* show list with filter
			SELECT tblTableres
			SCATTER BLANK NAME l_oTableRes
			l_oTables = MakeStructure("lc_locnr,lc_deptnr,lc_descr,dp_descr,tp_feat1,cFilter")
			MakeStructure("lODBCArgus,cFilter,cFilterUn,cCaption,lOK", l_oTableRes)
			l_oTableRes.lODBCArgus = _screen.oGlobal.lODBCArgus
			l_oTableRes.tr_tablenr = lp_nTableNr
			l_oTableRes.tr_sysdate = lp_dDate
			l_oTableRes.tr_from = DTOT(lp_dDate)
			ProcTableReservation("PtrSearch", l_oTableRes, l_oTables)
			this.MngCaption = GetLangText("ARGUS","TW_TABLERESER") + " [" + l_oTableRes.cCaption + "]"
			l_cFilter = SqlFilter(l_oTableRes.cFilter, l_oTables.cFilter)
			SET FILTER TO &l_cFilter IN tblTableres
			thisform.Caption = this.MngCaption
			thisform.Refresh()
			IF NOT l_lReserved
				* New res
				this.OnCmd1(lp_nTableNr, lp_dDate)
			ENDIF
		ENDIF
	ENDPROC

	PROCEDURE queryargus
		LOCAL l_lSuccess, l_cSql, l_curTrUnassigned
		
		IF ArgusOffice() AND ArgusOffice("SqlQuery", "Tableres,TblRsGrp,TblProps,Location,DeskTblr", this.cSqlQuery)
			SELECT tblTableres.*, CAST(NVL(rm_rmname,'') AS Character(10)) AS rm_rmname, CAST('' AS Character(35)) AS ar_article ;
				FROM tblTableres ;
				LEFT JOIN Reservat ON rs_rsid = tr_rsid ;
				LEFT JOIN Room ON rs_roomnum = rm_roomnum ;
				INTO CURSOR tblTableres READWRITE
			ArgusOffice("Exit")
			l_lSuccess = .T.
		ENDIF
		IF USED("tblTableres")
			BLANK FIELDS tg_tgid, tg_tables, tg_locnr, tg_adults, tg_childs, tg_note FOR ISNULL(tg_tgid) IN tblTableres
		
			TEXT TO l_cSql TEXTMERGE NOSHOW PRETEXT 2+8
			SELECT rl_rlid, -rl_rlid AS tr_trid, rl_rsid AS tr_rsid, rl_rdate AS tr_sysdate,
				DTOT(rl_rdate) AS tr_from, DTOT(rl_rdate) AS tr_to, ad_phone AS tr_phone,
				CAST(NVL(NVL(a1.ar_lang<<g_Langnum>>, a2.ar_lang<<g_Langnum>>),'') AS Character(35)) AS ar_article,
				CAST(rs_adults AS Integer) AS tr_persons,
				CAST(rs_childs+rs_childs2+rs_childs3 AS Integer) AS tr_childs,
				CAST(EVL(rs_addrid,ad_addrid) AS Numeric(8)) AS tr_addrid,
				CAST(EVL(rs_title,ad_title) AS Character(25)) AS tr_title,
				CAST(EVL(rs_lname,ad_lname) AS Character(30)) AS tr_lname,
				CAST(EVL(rs_fname,ad_fname) AS Character(20)) AS tr_fname,
				CAST('<<g_userid>>' AS Character(10)) AS tr_userid,
				CAST(NVL(rm_rmname,'') AS Character(10)) AS rm_rmname
				FROM Ressplit
				LEFT JOIN Resrart rra ON rra.ra_rsid = rl_rsid AND rra.ra_raid = rl_raid AND rra.ra_ratecod = rl_ratecod
				LEFT JOIN Ratearti ra ON ra.ra_raid = rl_raid AND ra.ra_ratecod = rl_ratecod
				LEFT JOIN Article a1 ON a1.ar_artinum = rra.ra_artinum
				LEFT JOIN Article a2 ON a2.ar_artinum = ra.ra_artinum
				INNER JOIN Reservat ON rs_rsid = rl_rsid
				LEFT JOIN Room ON rm_roomnum = rs_roomnum
				LEFT JOIN Address ON ad_addrid = EVL(rs_addrid, rs_compid)
				WHERE NVL(NVL(rra.ra_atblres, ra.ra_atblres), 0=1) AND INLIST(rs_status, 'DEF', '6PM', 'ASG', 'IN')
			ENDTEXT
			l_curTrUnassigned = SqlCursor(l_cSql,,,,,,,.T.)
			SELECT tblTableres
			INDEX ON dr_rlid TAG dr_rlid
			SET ORDER TO
			DELETE FOR SEEK(rl_rlid, "tblTableres", "dr_rlid") IN &l_curTrUnassigned
			APPEND FROM DBF(l_curTrUnassigned)
			SELECT * FROM tblTableres ;
				ORDER BY tr_from, tr_to ;
				INTO CURSOR tblTableres READWRITE
			DClose(l_curTrUnassigned)
		ENDIF
		
		RETURN l_lSuccess
	ENDPROC

	PROCEDURE setmode
		LPARAMETERS lp_nMode
		LOCAL lcPersonName
		
		this.nMode = lp_nMode
		lcPersonName = ""
		
		DO CASE
			CASE this.nMode = 1
				this.nReserId = INT(VAL(STRTRAN(FILTER(this.GTAlias), "TR_RSID=")))
				IF NOT EMPTY(this.nReserId) AND SEEK(this.nReserId, "reservat", "tag33")
					lcPersonName = lcPersonName + IIF(EMPTY(reservat.rs_rmname), "", "("+ALLTRIM(reservat.rs_rmname)+") ")
					lcPersonName = lcPersonName + IIF(EMPTY(reservat.rs_title), "", ALLTRIM(reservat.rs_title)+" ")
					lcPersonName = lcPersonName + IIF(EMPTY(reservat.rs_fname), "", ALLTRIM(reservat.rs_fname)+" ")
					lcPersonName = lcPersonName + IIF(EMPTY(reservat.rs_lname), "", ALLTRIM(reservat.rs_lname)+" ")
				ENDIF
			CASE this.nMode = 2
				this.nAddrId = INT(VAL(STRTRAN(FILTER(this.GTAlias), "TR_ADDRID=")))
				IF NOT EMPTY(this.nAddrId) AND SEEK(this.nAddrId, "address", "tag1")
					lcPersonName = lcPersonName + IIF(EMPTY(address.ad_title), "", ALLTRIM(address.ad_title)+" ")
					lcPersonName = lcPersonName + IIF(EMPTY(address.ad_fname), "", ALLTRIM(address.ad_fname)+" ")
					lcPersonName = lcPersonName + IIF(EMPTY(address.ad_lname), "", ALLTRIM(address.ad_lname)+" ")
				ENDIF
			OTHERWISE
		ENDCASE
		
		IF NOT EMPTY(lcPersonName)
			this.MngCaption = this.MngCaption + " - [" + LEFT(lcPersonName, LEN(lcPersonName)-1) + "]"
		ENDIF
	ENDPROC

ENDDEFINE
