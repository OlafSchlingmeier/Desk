*--------------------------------------------------------------------------------------------------------------------------------------------------------
* (ES) AUTOGENERADO - ¡¡ATENCIÓN!! - ¡¡NO PENSADO PARA EJECUTAR!! USAR SOLAMENTE PARA INTEGRAR CAMBIOS Y ALMACENAR CON HERRAMIENTAS SCM!!
* (EN) AUTOGENERATED - ATTENTION!! - NOT INTENDED FOR EXECUTION!! USE ONLY FOR MERGING CHANGES AND STORING WITH SCM TOOLS!!
*--------------------------------------------------------------------------------------------------------------------------------------------------------
*< FOXBIN2PRG: Version="1.19" SourceFile="cit_address.vcx" /> (Solo para binarios VFP 9 / Only for VFP 9 binaries)
*
*
DEFINE CLASS addressedit AS tcontainer OF "..\common\libs\_lvisual.vcx" 
 	*< CLASSDATA: Baseclass="container" Timestamp="" Scale="Pixels" Uniqueid="" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="shp1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="shp2" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblAd_addrid" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtAd_addrid" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblAd_company" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtAd_company" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblAd_departm" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtAd_departm" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblAd_lname" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtAd_lname" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblAd_fname" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtAd_fname" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblAd_lang" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cboAd_lang" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cboAd_titlcod" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblAd_title" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtAd_attn" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtAd_title" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblAd_compnum" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtAd_compnum" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblAd_compkey" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtAd_compkey" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblAd_salute" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtAd_salute" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblAd_street" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtAd_street" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblAd_street2" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtAd_street2" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblAd_state" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtAd_state" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblAd_city" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cboAd_country" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cboAd_zip" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtAd_city" UniqueID="" Timestamp="" />

	*<DefinedPropArrayMethod>
		*m: assigncaption
		*m: enabled_assign
		*m: height_assign
		*m: initafter		&& Should be called after container is added to pageframe, to set initial properties.
		*m: setcontrolsource
		*m: setsize
		*p: origheight
		*p: origwidth
	*</DefinedPropArrayMethod>

	Anchor = 195
	Height = 282
	Name = "addressedit"
	Width = 397

	ADD OBJECT 'cboAd_country' AS cbodb WITH ;
		Anchor = 240, ;
		ColumnLines = .F., ;
		ControlSource = "curAddress.ad_country", ;
		controlsourcefieldtype = c(3), ;
		controlsourcefieldtype2 = c(25), ;
		InputMask = "!!!", ;
		Left = 91, ;
		Name = "cboAd_country", ;
		Top = 254, ;
		Width = 60, ;
		ZOrderSet = 31
		*< END OBJECT: ClassLib="jbase.vcx" BaseClass="combobox" />

	ADD OBJECT 'cboAd_lang' AS cbodb WITH ;
		Anchor = 240, ;
		ColumnLines = .F., ;
		ControlSource = "curAddress.ad_lang", ;
		controlsourcefieldtype = c(3), ;
		controlsourcefieldtype2 = c(25), ;
		InputMask = "!!!", ;
		Left = 91, ;
		Name = "cboAd_lang", ;
		Top = 102, ;
		Width = 60, ;
		ZOrderSet = 13
		*< END OBJECT: ClassLib="jbase.vcx" BaseClass="combobox" />

	ADD OBJECT 'cboAd_titlcod' AS cbodb WITH ;
		Anchor = 240, ;
		ColumnLines = .F., ;
		ControlSource = "curAddress.ad_titlcod", ;
		controlsourcefieldtype = n(2), ;
		controlsourcefieldtype2 = c(25), ;
		Height = 23, ;
		InputMask = "99", ;
		Left = 152, ;
		lresetrowsourceonlostfocus = .T., ;
		Name = "cboAd_titlcod", ;
		Top = 102, ;
		Width = 51, ;
		ZOrderSet = 14
		*< END OBJECT: ClassLib="jbase.vcx" BaseClass="combobox" />

	ADD OBJECT 'cboAd_zip' AS cbodb WITH ;
		Anchor = 240, ;
		ColumnLines = .F., ;
		ControlSource = "curAddress.ad_zip", ;
		controlsourcefieldtype = c(10), ;
		controlsourcefieldtype2 = c(30), ;
		InputMask = "9999999999", ;
		Left = 152, ;
		lresetrowsourceonlostfocus = .T., ;
		Name = "cboAd_zip", ;
		Top = 254, ;
		Width = 82, ;
		ZOrderSet = 32
		*< END OBJECT: ClassLib="jbase.vcx" BaseClass="combobox" />

	ADD OBJECT 'lblAd_addrid' AS tlabel WITH ;
		Anchor = 210, ;
		AutoSize = .F., ;
		Caption = "Ad_addrid", ;
		Left = 7, ;
		Name = "lblAd_addrid", ;
		Top = 9, ;
		Width = 84, ;
		ZOrderSet = 2
		*< END OBJECT: ClassLib="..\common\libs\_lvisual.vcx" BaseClass="label" />

	ADD OBJECT 'lblAd_city' AS tlabel WITH ;
		Anchor = 210, ;
		AutoSize = .F., ;
		Caption = "Ad_city", ;
		Left = 7, ;
		Name = "lblAd_city", ;
		Top = 257, ;
		Width = 84, ;
		ZOrderSet = 30
		*< END OBJECT: ClassLib="..\common\libs\_lvisual.vcx" BaseClass="label" />

	ADD OBJECT 'lblAd_company' AS tlabel WITH ;
		Anchor = 210, ;
		AutoSize = .F., ;
		Caption = "Ad_company", ;
		Left = 7, ;
		Name = "lblAd_company", ;
		Top = 33, ;
		Width = 84, ;
		ZOrderSet = 4
		*< END OBJECT: ClassLib="..\common\libs\_lvisual.vcx" BaseClass="label" />

	ADD OBJECT 'lblAd_compkey' AS tlabel WITH ;
		AutoSize = .F., ;
		Caption = "Ad_compkey", ;
		Left = 208, ;
		Name = "lblAd_compkey", ;
		Top = 129, ;
		Width = 72, ;
		ZOrderSet = 20
		*< END OBJECT: ClassLib="..\common\libs\_lvisual.vcx" BaseClass="label" />

	ADD OBJECT 'lblAd_compnum' AS tlabel WITH ;
		Anchor = 210, ;
		AutoSize = .F., ;
		Caption = "Ad_compnum", ;
		Left = 7, ;
		Name = "lblAd_compnum", ;
		Top = 129, ;
		Width = 84, ;
		ZOrderSet = 18
		*< END OBJECT: ClassLib="..\common\libs\_lvisual.vcx" BaseClass="label" />

	ADD OBJECT 'lblAd_departm' AS tlabel WITH ;
		Anchor = 210, ;
		AutoSize = .F., ;
		Caption = "Ad_departm", ;
		Left = 7, ;
		Name = "lblAd_departm", ;
		Top = 57, ;
		Width = 84, ;
		ZOrderSet = 6
		*< END OBJECT: ClassLib="..\common\libs\_lvisual.vcx" BaseClass="label" />

	ADD OBJECT 'lblAd_fname' AS tlabel WITH ;
		AutoSize = .F., ;
		Caption = "Ad_fname", ;
		Left = 208, ;
		Name = "lblAd_fname", ;
		Top = 81, ;
		Width = 72, ;
		ZOrderSet = 10
		*< END OBJECT: ClassLib="..\common\libs\_lvisual.vcx" BaseClass="label" />

	ADD OBJECT 'lblAd_lang' AS tlabel WITH ;
		Anchor = 210, ;
		AutoSize = .F., ;
		Caption = "Ad_lang", ;
		Left = 7, ;
		Name = "lblAd_lang", ;
		Top = 105, ;
		Width = 84, ;
		ZOrderSet = 12
		*< END OBJECT: ClassLib="..\common\libs\_lvisual.vcx" BaseClass="label" />

	ADD OBJECT 'lblAd_lname' AS tlabel WITH ;
		Anchor = 210, ;
		AutoSize = .F., ;
		Caption = "Ad_lname", ;
		Left = 7, ;
		Name = "lblAd_lname", ;
		Top = 81, ;
		Width = 84, ;
		ZOrderSet = 8
		*< END OBJECT: ClassLib="..\common\libs\_lvisual.vcx" BaseClass="label" />

	ADD OBJECT 'lblAd_salute' AS tlabel WITH ;
		Anchor = 210, ;
		AutoSize = .F., ;
		Caption = "Ad_salute", ;
		Left = 7, ;
		Name = "lblAd_salute", ;
		Top = 161, ;
		Width = 84, ;
		ZOrderSet = 22
		*< END OBJECT: ClassLib="..\common\libs\_lvisual.vcx" BaseClass="label" />

	ADD OBJECT 'lblAd_state' AS tlabel WITH ;
		Anchor = 210, ;
		AutoSize = .F., ;
		Caption = "Ad_state", ;
		Left = 7, ;
		Name = "lblAd_state", ;
		Top = 233, ;
		Width = 84, ;
		ZOrderSet = 28
		*< END OBJECT: ClassLib="..\common\libs\_lvisual.vcx" BaseClass="label" />

	ADD OBJECT 'lblAd_street' AS tlabel WITH ;
		Anchor = 210, ;
		AutoSize = .F., ;
		Caption = "Ad_street", ;
		Left = 7, ;
		Name = "lblAd_street", ;
		Top = 185, ;
		Width = 84, ;
		ZOrderSet = 24
		*< END OBJECT: ClassLib="..\common\libs\_lvisual.vcx" BaseClass="label" />

	ADD OBJECT 'lblAd_street2' AS tlabel WITH ;
		Anchor = 210, ;
		AutoSize = .F., ;
		Caption = "Ad_street2", ;
		Left = 7, ;
		Name = "lblAd_street2", ;
		Top = 209, ;
		Width = 84, ;
		ZOrderSet = 26
		*< END OBJECT: ClassLib="..\common\libs\_lvisual.vcx" BaseClass="label" />

	ADD OBJECT 'lblAd_title' AS tlabel WITH ;
		AutoSize = .F., ;
		Caption = "Ad_title", ;
		Left = 208, ;
		Name = "lblAd_title", ;
		Top = 105, ;
		Width = 72, ;
		ZOrderSet = 15
		*< END OBJECT: ClassLib="..\common\libs\_lvisual.vcx" BaseClass="label" />

	ADD OBJECT 'shp1' AS sh WITH ;
		Anchor = 75, ;
		BackStyle = 0, ;
		Height = 151, ;
		Left = 2, ;
		Name = "shp1", ;
		SpecialEffect = 0, ;
		Top = 2, ;
		Width = 394, ;
		ZOrderSet = 0
		*< END OBJECT: ClassLib="main.vcx" BaseClass="shape" />

	ADD OBJECT 'shp2' AS sh WITH ;
		Anchor = 30, ;
		BackStyle = 0, ;
		Height = 127, ;
		Left = 2, ;
		Name = "shp2", ;
		SpecialEffect = 0, ;
		Top = 154, ;
		Width = 394, ;
		ZOrderSet = 1
		*< END OBJECT: ClassLib="main.vcx" BaseClass="shape" />

	ADD OBJECT 'txtAd_addrid' AS ttextbox WITH ;
		ControlSource = "curAddress.ad_addrid", ;
		DisabledForeColor = 0,0,0, ;
		Left = 91, ;
		Name = "txtAd_addrid", ;
		Top = 6, ;
		Width = 84, ;
		ZOrderSet = 3
		*< END OBJECT: ClassLib="..\common\libs\_lvisual.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtAd_attn' AS ttextbox WITH ;
		ControlSource = "curAddress.ad_attn", ;
		DisabledForeColor = 0,0,0, ;
		Height = 23, ;
		Left = 279, ;
		MaxLength = 10, ;
		Name = "txtAd_attn", ;
		Top = 102, ;
		Width = 31, ;
		ZOrderSet = 16
		*< END OBJECT: ClassLib="..\common\libs\_lvisual.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtAd_city' AS ttextbox WITH ;
		ControlSource = "curAddress.ad_city", ;
		DisabledForeColor = 0,0,0, ;
		Left = 235, ;
		MaxLength = 30, ;
		Name = "txtAd_city", ;
		Top = 254, ;
		Width = 156, ;
		ZOrderSet = 33
		*< END OBJECT: ClassLib="..\common\libs\_lvisual.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtAd_company' AS ttextbox WITH ;
		ControlSource = "curAddress.ad_company", ;
		DisabledForeColor = 0,0,0, ;
		Left = 91, ;
		MaxLength = 50, ;
		Name = "txtAd_company", ;
		Top = 30, ;
		Width = 300, ;
		ZOrderSet = 5
		*< END OBJECT: ClassLib="..\common\libs\_lvisual.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtAd_compkey' AS ttextbox WITH ;
		ControlSource = "curAddress.ad_compkey", ;
		DisabledForeColor = 0,0,0, ;
		Left = 279, ;
		MaxLength = 15, ;
		Name = "txtAd_compkey", ;
		Top = 126, ;
		Width = 112, ;
		ZOrderSet = 21
		*< END OBJECT: ClassLib="..\common\libs\_lvisual.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtAd_compnum' AS ttextbox WITH ;
		ControlSource = "curAddress.ad_compnum", ;
		DisabledForeColor = 0,0,0, ;
		Height = 23, ;
		Left = 91, ;
		MaxLength = 10, ;
		Name = "txtAd_compnum", ;
		Top = 126, ;
		Width = 112, ;
		ZOrderSet = 19
		*< END OBJECT: ClassLib="..\common\libs\_lvisual.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtAd_departm' AS ttextbox WITH ;
		ControlSource = "curAddress.ad_departm", ;
		DisabledForeColor = 0,0,0, ;
		Left = 91, ;
		MaxLength = 50, ;
		Name = "txtAd_departm", ;
		Top = 54, ;
		Width = 300, ;
		ZOrderSet = 7
		*< END OBJECT: ClassLib="..\common\libs\_lvisual.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtAd_fname' AS ttextbox WITH ;
		ControlSource = "curAddress.ad_fname", ;
		DisabledForeColor = 0,0,0, ;
		Left = 279, ;
		MaxLength = 20, ;
		Name = "txtAd_fname", ;
		Top = 78, ;
		Width = 112, ;
		ZOrderSet = 11
		*< END OBJECT: ClassLib="..\common\libs\_lvisual.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtAd_lname' AS ttextbox WITH ;
		ControlSource = "curAddress.ad_lname", ;
		DisabledForeColor = 0,0,0, ;
		Height = 23, ;
		Left = 91, ;
		MaxLength = 30, ;
		Name = "txtAd_lname", ;
		Top = 78, ;
		Width = 112, ;
		ZOrderSet = 9
		*< END OBJECT: ClassLib="..\common\libs\_lvisual.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtAd_salute' AS ttextbox WITH ;
		ControlSource = "curAddress.ad_salute", ;
		DisabledForeColor = 0,0,0, ;
		Left = 91, ;
		MaxLength = 50, ;
		Name = "txtAd_salute", ;
		Top = 158, ;
		Width = 300, ;
		ZOrderSet = 23
		*< END OBJECT: ClassLib="..\common\libs\_lvisual.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtAd_state' AS ttextbox WITH ;
		ControlSource = "curAddress.ad_state", ;
		DisabledForeColor = 0,0,0, ;
		Left = 91, ;
		MaxLength = 30, ;
		Name = "txtAd_state", ;
		Top = 230, ;
		Width = 300, ;
		ZOrderSet = 29
		*< END OBJECT: ClassLib="..\common\libs\_lvisual.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtAd_street' AS ttextbox WITH ;
		ControlSource = "curAddress.ad_street", ;
		DisabledForeColor = 0,0,0, ;
		Left = 91, ;
		MaxLength = 100, ;
		Name = "txtAd_street", ;
		Top = 182, ;
		Width = 300, ;
		ZOrderSet = 25
		*< END OBJECT: ClassLib="..\common\libs\_lvisual.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtAd_street2' AS ttextbox WITH ;
		ControlSource = "curAddress.ad_street2", ;
		DisabledForeColor = 0,0,0, ;
		Left = 91, ;
		MaxLength = 100, ;
		Name = "txtAd_street2", ;
		Top = 206, ;
		Width = 300, ;
		ZOrderSet = 27
		*< END OBJECT: ClassLib="..\common\libs\_lvisual.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtAd_title' AS ttextbox WITH ;
		ControlSource = "curAddress.ad_title", ;
		DisabledForeColor = 0,0,0, ;
		Height = 23, ;
		Left = 311, ;
		MaxLength = 20, ;
		Name = "txtAd_title", ;
		Top = 102, ;
		Width = 80, ;
		ZOrderSet = 17
		*< END OBJECT: ClassLib="..\common\libs\_lvisual.vcx" BaseClass="textbox" />
	
	PROCEDURE assigncaption
		this.lblAd_addrid.Caption = GetLangText("ADDRESS","T_ADDRESSID")
		this.lblAd_company.Caption = GetLangText("ADDRESS","TXT_COMPANY")
		this.lblAd_departm.Caption = GetLangText("ADDRESS","TXT_DEPARTM")
		this.lblAd_lname.Caption = GetLangText("ADDRESS","TXT_LNAME")
		this.lblAd_fname.Caption = GetLangText("ADDRESS","TXT_FIRSTNAME")
		this.lblAd_lang.Caption = GetLangText("ADDRESS","T_LANGCOD")
		this.lblAd_title.Caption = GetLangText("ADDRESS","TXT_ATTITLE")
		this.lblAd_compnum.Caption = GetLangText("ADDRESS","T_KEYNR")
		this.lblAd_compkey.Caption = GetLangText("ADDRESS","TXT_KEYSEARCH")
		this.lblAd_salute.Caption = GetLangText("ADDRESS","TXT_SALUTE")
		this.lblAd_street.Caption = GetLangText("ADDRESS","TXT_STREET") + " 1"
		this.lblAd_street2.Caption = GetLangText("ADDRESS","TXT_STREET") + " 2"
		this.lblAd_state.Caption = GetLangText("ADDRESS","TXT_STATE")
		this.lblAd_city.Caption = GetLangText("ADDRESS","T_COUNTCITYZIP")
	ENDPROC

	PROCEDURE enabled_assign
		LPARAMETERS tlNewVal
		
		this.SetAll("Enabled", tlNewVal, "ttextbox")
		this.SetAll("Enabled", tlNewVal, "cbodb")
	ENDPROC

	PROCEDURE height_assign
		LPARAMETERS tnNewVal
		
		this.Height = tnNewVal
		IF NOT EMPTY(this.OrigHeight)
			this.SetAll("FontSize", MAX(4, ROUND(9*this.Height/this.OrigHeight,0)))
		ENDIF
	ENDPROC

	PROCEDURE Init
		this.OrigWidth = this.Width
		this.OrigHeight = this.Height
		
		DODEFAULT()
		
		this.AssignCaption()
	ENDPROC

	PROCEDURE initafter		&& Should be called after container is added to pageframe, to set initial properties.
		LPARAMETERS tnWdth, tnHeight
		
		IF PCOUNT() = 0
			tnWdth = this.Parent.Parent.PageWidth
			tnHeight = this.Parent.Parent.PageHeight
		ENDIF
		this.SetSize(tnWdth, tnHeight)
		this.Visible = .T.
	ENDPROC

	PROCEDURE setcontrolsource
	ENDPROC

	PROCEDURE setsize
		LPARAMETERS tnWdth, tnHeight
		LOCAL lnAnchor
		
		lnAnchor = this.Anchor
		this.Anchor = 0
		this.Width = tnWdth
		this.Height = tnHeight
		this.Anchor = lnAnchor
	ENDPROC

	PROCEDURE cboAd_country.getrowsourcebefore
		WITH this
			TEXT TO .jsql TEXTMERGE NOSHOW PRETEXT 15
				SELECT pl_charcod, pl_lang<<g_langnum>> AS pl_lang FROM picklist 
					WHERE pl_label = 'COUNTRY   '
					UNION SELECT CAST('' AS Char(3)), CAST('' AS Char(25)) FROM param
					ORDER BY 1
			ENDTEXT
			.jboundcolumn = 1
			.jcolumncount = 2
			.jcolumnwidths = "40,150"
		ENDWITH
		
		RETURN .T.
	ENDPROC

	PROCEDURE cboAd_lang.getrowsourcebefore
		WITH this
			TEXT TO .jsql TEXTMERGE NOSHOW PRETEXT 15
				SELECT pl_charcod, pl_lang<<g_langnum>> AS pl_lang FROM picklist
					WHERE pl_label = 'LANGUAGE  '
					UNION SELECT CAST('' AS Char(3)), CAST('' AS Char(25)) FROM param
					ORDER BY 1
			ENDTEXT
			.jboundcolumn = 1
			.jcolumncount = 2
			.jcolumnwidths = "40,150"
		ENDWITH
		
		RETURN .T.
	ENDPROC

	PROCEDURE cboAd_titlcod.getrowsourcebefore
		this.cWhere = "ti_lang = " + SqlCnv(curAddress.ad_lang,.T.)
		WITH this
			TEXT TO .jsql TEXTMERGE NOSHOW PRETEXT 15
				SELECT ti_titlcod, ti_title, ti_salute FROM title 
					WHERE <<this.cWhere>> 
					UNION SELECT 00, CAST('' AS Char(25)), CAST('' AS Char(50)) FROM param
					ORDER BY 1
			ENDTEXT
			.jboundcolumn = 1
			.jcolumncount = 3
			.jcolumnwidths = "40,150,250"
		ENDWITH
		
		RETURN .T.
	ENDPROC

	PROCEDURE cboAd_titlcod.getrowsourceconditionunchanged
		RETURN this.cWhere == "ti_lang = " + SqlCnv(curAddress.ad_lang,.T.)
	ENDPROC

	PROCEDURE cboAd_titlcod.oninteractivechange
		LOCAL l_cCurAlias, l_cPersonName, l_cNewSalute
		
		l_cCurAlias = this.jcursor
		IF curAddress.ad_title <> &l_cCurAlias..ti_title
			this.Parent.txtAd_title.Value = &l_cCurAlias..ti_title
			this.Parent.txtAd_title.Refresh()
		ENDIF
		
		l_cPersonName = ALLTRIM(Flip(curAddress.ad_lname))
		l_cNewSalute = ""
		DO MakeSalut IN Address WITH ALLTRIM(&l_cCurAlias..ti_salute), l_cPersonName, l_cNewSalute
		IF NOT EMPTY(l_cNewSalute) AND TRIM(curAddress.ad_salute) <> l_cNewSalute
			this.Parent.txtAd_salute.Value = l_cNewSalute
			this.Parent.txtAd_salute.Refresh()
		ENDIF
	ENDPROC

	PROCEDURE cboAd_zip.getrowsourcebefore
		this.cWhere = "zc_country = " + SqlCnv(curAddress.ad_country,.T.)
		this.cRowSourceBoundField = "zc_zip"
		this.lAllowAutoInsert = .T.
		
		WITH this
			TEXT TO .jsql TEXTMERGE NOSHOW PRETEXT 15
				SELECT zc_zip, zc_city FROM zipcode 
					WHERE <<this.cWhere>> 
					UNION SELECT CAST('' AS Char(10)), CAST('' AS Char(30)) FROM param
					ORDER BY 1
			ENDTEXT
			.jboundcolumn = 1
			.jcolumncount = 2
			.jcolumnwidths = "70,150"
		ENDWITH
		
		RETURN .T.
	ENDPROC

	PROCEDURE cboAd_zip.getrowsourceconditionunchanged
		RETURN this.cWhere == "zc_country = " + SqlCnv(curAddress.ad_country,.T.)
	ENDPROC

	PROCEDURE cboAd_zip.oninteractivechange
		LOCAL l_cCurAlias
		
		l_cCurAlias = this.jcursor
		IF curAddress.ad_city <> &l_cCurAlias..zc_city AND NOT EMPTY(&l_cCurAlias..zc_city)
			this.Parent.txtAd_city.Value = &l_cCurAlias..zc_city
			this.Parent.txtAd_city.Refresh()
		ENDIF
	ENDPROC

ENDDEFINE

DEFINE CLASS addresseditcom AS tcontainer OF "..\common\libs\_lvisual.vcx" 
 	*< CLASSDATA: Baseclass="container" Timestamp="" Scale="Pixels" Uniqueid="" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="lblAd_phone" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtAd_phone" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblAd_phone2" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtAd_phone2" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtAd_phone3" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblAd_fax" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtAd_fax" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblAd_email" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtAd_email" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdMail" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblAd_website" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtAd_website" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdWeb" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chkAd_save" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblAd_ustidnr" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtAd_ustidnr" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chkAd_novat" UniqueID="" Timestamp="" />

	*<DefinedPropArrayMethod>
		*m: assigncaption
		*m: enabled_assign
		*m: height_assign
		*m: initafter		&& Should be called after container is added to pageframe, to set initial properties.
		*m: onemail
		*m: onwebsite
		*m: setcontrolsource
		*m: setsize
		*p: origheight
		*p: origwidth
	*</DefinedPropArrayMethod>

	Anchor = 15
	Height = 250
	Name = "addresseditcom"
	Width = 396

	ADD OBJECT 'chkAd_novat' AS tcheckbox WITH ;
		Alignment = 1, ;
		Anchor = 240, ;
		BackStyle = 0, ;
		Caption = "chkAd_novat", ;
		ControlSource = "curAddress.ad_novat", ;
		Left = 288, ;
		Name = "chkAd_novat", ;
		SpecialEffect = 0, ;
		TabIndex = 17, ;
		Top = 133, ;
		Width = 96
		*< END OBJECT: ClassLib="main.vcx" BaseClass="checkbox" />

	ADD OBJECT 'chkAd_save' AS tcheckbox WITH ;
		Alignment = 1, ;
		Anchor = 240, ;
		BackStyle = 0, ;
		Caption = "chkAd_save", ;
		ControlSource = "curAddress.ad_save", ;
		Left = 288, ;
		Name = "chkAd_save", ;
		SpecialEffect = 0, ;
		TabIndex = 14, ;
		Top = 111, ;
		Width = 96
		*< END OBJECT: ClassLib="main.vcx" BaseClass="checkbox" />

	ADD OBJECT 'cmdMail' AS tcommandbutton WITH ;
		Anchor = 240, ;
		Caption = "", ;
		Height = 22, ;
		Left = 362, ;
		Name = "cmdMail", ;
		Picture = ..\bitmap\toolbar\mail.png, ;
		TabIndex = 10, ;
		Top = 84, ;
		Width = 22
		*< END OBJECT: ClassLib="main.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'cmdWeb' AS tcommandbutton WITH ;
		Anchor = 240, ;
		Caption = "", ;
		Height = 22, ;
		Left = 266, ;
		Name = "cmdWeb", ;
		Picture = ..\bitmap\toolbar\web16.png, ;
		TabIndex = 13, ;
		ToolTipText = "Internet Seite in Browser öffnen", ;
		Top = 108, ;
		Width = 22
		*< END OBJECT: ClassLib="main.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'lblAd_email' AS tlabel WITH ;
		AutoSize = .F., ;
		Caption = "Ad_email", ;
		Height = 17, ;
		Left = 12, ;
		Name = "lblAd_email", ;
		TabIndex = 8, ;
		Top = 87, ;
		Width = 84, ;
		ZOrderSet = 40
		*< END OBJECT: ClassLib="..\common\libs\_lvisual.vcx" BaseClass="label" />

	ADD OBJECT 'lblAd_fax' AS tlabel WITH ;
		AutoSize = .F., ;
		Caption = "Ad_fax", ;
		Height = 17, ;
		Left = 12, ;
		Name = "lblAd_fax", ;
		TabIndex = 6, ;
		Top = 63, ;
		Width = 84, ;
		ZOrderSet = 38
		*< END OBJECT: ClassLib="..\common\libs\_lvisual.vcx" BaseClass="label" />

	ADD OBJECT 'lblAd_phone' AS tlabel WITH ;
		AutoSize = .F., ;
		Caption = "Ad_phone", ;
		Height = 17, ;
		Left = 12, ;
		Name = "lblAd_phone", ;
		TabIndex = 1, ;
		Top = 15, ;
		Width = 84, ;
		ZOrderSet = 32
		*< END OBJECT: ClassLib="..\common\libs\_lvisual.vcx" BaseClass="label" />

	ADD OBJECT 'lblAd_phone2' AS tlabel WITH ;
		AutoSize = .F., ;
		Caption = "Ad_phone2", ;
		Height = 17, ;
		Left = 12, ;
		Name = "lblAd_phone2", ;
		TabIndex = 3, ;
		Top = 39, ;
		Width = 84, ;
		ZOrderSet = 34
		*< END OBJECT: ClassLib="..\common\libs\_lvisual.vcx" BaseClass="label" />

	ADD OBJECT 'lblAd_ustidnr' AS tlabel WITH ;
		AutoSize = .F., ;
		Caption = "Ad_ustidnr", ;
		Height = 17, ;
		Left = 12, ;
		Name = "lblAd_ustidnr", ;
		TabIndex = 15, ;
		Top = 135, ;
		Width = 84, ;
		ZOrderSet = 42
		*< END OBJECT: ClassLib="..\common\libs\_lvisual.vcx" BaseClass="label" />

	ADD OBJECT 'lblAd_website' AS tlabel WITH ;
		AutoSize = .F., ;
		Caption = "Ad_website", ;
		Height = 17, ;
		Left = 12, ;
		Name = "lblAd_website", ;
		TabIndex = 11, ;
		Top = 111, ;
		Width = 84, ;
		ZOrderSet = 42
		*< END OBJECT: ClassLib="..\common\libs\_lvisual.vcx" BaseClass="label" />

	ADD OBJECT 'txtAd_email' AS ttextbox WITH ;
		ControlSource = "curAddress.ad_email", ;
		DisabledForeColor = 0,0,0, ;
		Height = 23, ;
		Left = 96, ;
		MaxLength = 100, ;
		Name = "txtAd_email", ;
		TabIndex = 9, ;
		Top = 84, ;
		Width = 264, ;
		ZOrderSet = 41
		*< END OBJECT: ClassLib="..\common\libs\_lvisual.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtAd_fax' AS ttextbox WITH ;
		ControlSource = "curAddress.ad_fax", ;
		DisabledForeColor = 0,0,0, ;
		Height = 23, ;
		Left = 96, ;
		MaxLength = 100, ;
		Name = "txtAd_fax", ;
		TabIndex = 7, ;
		Top = 60, ;
		Width = 288, ;
		ZOrderSet = 39
		*< END OBJECT: ClassLib="..\common\libs\_lvisual.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtAd_phone' AS ttextbox WITH ;
		ControlSource = "curAddress.ad_phone", ;
		DisabledForeColor = 0,0,0, ;
		Height = 23, ;
		Left = 96, ;
		MaxLength = 20, ;
		Name = "txtAd_phone", ;
		TabIndex = 2, ;
		Top = 12, ;
		Width = 288, ;
		ZOrderSet = 33
		*< END OBJECT: ClassLib="..\common\libs\_lvisual.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtAd_phone2' AS ttextbox WITH ;
		ControlSource = "curAddress.ad_phone2", ;
		DisabledForeColor = 0,0,0, ;
		Height = 23, ;
		Left = 96, ;
		MaxLength = 20, ;
		Name = "txtAd_phone2", ;
		TabIndex = 4, ;
		Top = 36, ;
		Width = 144, ;
		ZOrderSet = 35
		*< END OBJECT: ClassLib="..\common\libs\_lvisual.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtAd_phone3' AS ttextbox WITH ;
		ControlSource = "curAddress.ad_phone3", ;
		DisabledForeColor = 0,0,0, ;
		Height = 23, ;
		Left = 241, ;
		MaxLength = 20, ;
		Name = "txtAd_phone3", ;
		TabIndex = 5, ;
		Top = 36, ;
		Width = 143, ;
		ZOrderSet = 37
		*< END OBJECT: ClassLib="..\common\libs\_lvisual.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtAd_ustidnr' AS ttextbox WITH ;
		ControlSource = "curAddress.ad_ustidnr", ;
		DisabledForeColor = 0,0,0, ;
		Height = 23, ;
		Left = 96, ;
		MaxLength = 20, ;
		Name = "txtAd_ustidnr", ;
		TabIndex = 16, ;
		Top = 132, ;
		Width = 192, ;
		ZOrderSet = 43
		*< END OBJECT: ClassLib="..\common\libs\_lvisual.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtAd_website' AS ttextbox WITH ;
		ControlSource = "curAddress.ad_website", ;
		DisabledForeColor = 0,0,0, ;
		Height = 23, ;
		Left = 96, ;
		MaxLength = 60, ;
		Name = "txtAd_website", ;
		TabIndex = 12, ;
		Top = 108, ;
		Width = 168, ;
		ZOrderSet = 43
		*< END OBJECT: ClassLib="..\common\libs\_lvisual.vcx" BaseClass="textbox" />
	
	PROCEDURE assigncaption
		this.lblAd_phone.Caption = GetLangText("ADDRESS","TXT_PHONE") + "1"
		this.lblAd_phone2.Caption = GetLangText("ADDRESS","TXT_PHONE") + "2/3"
		this.lblAd_fax.Caption = GetLangText("ADDRESS","TXT_FAX")
		this.lblAd_email.Caption = GetLangText("ADDRESS","TXT_EMAIL")
		this.lblAd_website.Caption = GetLangText("ADDRESS","T_WEB")
		this.lblAd_ustidnr.Caption = GetLangText("ADDRESS","TXT_FORIGN_VAT_NR")
		this.chkAd_novat.Caption = GetLangText("ADDRESS","TXT_NO_VAT")
		this.chkAd_save.Caption = GetLangText("ADDRESS","TXT_SAVEADDRESS")
		this.cmdWeb.ToolTipText = GetLangText("ADDRESS","TT_BWEBADDRESS")
	ENDPROC

	PROCEDURE enabled_assign
		LPARAMETERS tlNewVal
		
		this.SetAll("Enabled", tlNewVal, "ttextbox")
		this.SetAll("Enabled", tlNewVal, "tcheckbox")
		this.SetAll("Enabled", NOT tlNewVal, "tcommandbutton")
	ENDPROC

	PROCEDURE height_assign
		LPARAMETERS tnNewVal
		
		this.Height = tnNewVal
		IF NOT EMPTY(this.OrigHeight)
			this.SetAll("FontSize", MAX(4, ROUND(9*this.Height/this.OrigHeight,0)))
		ENDIF
	ENDPROC

	PROCEDURE Init
		this.OrigWidth = this.Width
		this.OrigHeight = this.Height
		
		DODEFAULT()
		
		this.AssignCaption()
	ENDPROC

	PROCEDURE initafter		&& Should be called after container is added to pageframe, to set initial properties.
		LPARAMETERS tnWdth, tnHeight
		
		IF PCOUNT() = 0
			tnWdth = this.Parent.Parent.PageWidth
			tnHeight = this.Parent.Parent.PageHeight
		ENDIF
		this.SetSize(tnWdth, tnHeight)
		this.Visible = .T.
	ENDPROC

	PROCEDURE onemail
	ENDPROC

	PROCEDURE onwebsite
		LOCAL lcWebAddress
		
		lcWebAddress = ALLTRIM(this.txtAd_website.Value)
		
		IF EMPTY(lcWebAddress)
			Alert("Keine Internet Adresse!")
		ELSE
			thisform.oHyperlink.NavigateTo(lcWebAddress)
		ENDIF
	ENDPROC

	PROCEDURE setcontrolsource
	ENDPROC

	PROCEDURE setsize
		LPARAMETERS tnWdth, tnHeight
		LOCAL lnAnchor
		
		lnAnchor = this.Anchor
		this.Anchor = 0
		this.Width = tnWdth
		this.Height = tnHeight
		this.Anchor = lnAnchor
	ENDPROC

	PROCEDURE cmdMail.Click
		this.Parent.OnEMail()
	ENDPROC

	PROCEDURE cmdWeb.Click
		this.Parent.OnWebsite()
	ENDPROC

ENDDEFINE

DEFINE CLASS addresseditgst AS tcontainer OF "..\common\libs\_lvisual.vcx" 
 	*< CLASSDATA: Baseclass="container" Timestamp="" Scale="Pixels" Uniqueid="" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="lblAd_mail" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cboAd_mail1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cboAd_mail2" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cboAd_mail3" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cboAd_mail4" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cboAd_mail5" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblAd_ratecod" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cboAd_ratecod" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblAd_billins" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtAd_billins" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chkAd_vip" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblAd_feat" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cboAd_feat1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cboAd_feat2" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cboAd_feat3" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblAd_roomnum" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cboAd_roomnum" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblAd_birth" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="dtxtAd_birth" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chkAd_nomail" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chkAd_vip2" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblAd_adrtype" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cboAd_adrtype" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblAd_vipstat" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cboAd_vipstat" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblTotalPoints" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtTotalPoints" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblCollectedPoints" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtCollectedPoints" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblAd_member" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtAd_member" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblAd_memdat" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="dtxtAd_memdat" UniqueID="" Timestamp="" />

	*<DefinedPropArrayMethod>
		*m: assigncaption
		*m: enabled_assign
		*m: height_assign
		*m: initafter		&& Should be called after container is added to pageframe, to set initial properties.
		*m: setbonuspoints
		*m: setcontrolsource
		*m: setsize
		*p: origheight
		*p: origwidth
	*</DefinedPropArrayMethod>

	Anchor = 15
	Height = 250
	Name = "addresseditgst"
	Width = 396

	ADD OBJECT 'cboAd_adrtype' AS cbodb WITH ;
		Anchor = 240, ;
		ColumnLines = .F., ;
		ControlSource = "curAddress.ad_adrtype", ;
		controlsourcefieldtype = c(25), ;
		controlsourcefieldtype2 = c(3), ;
		InputMask = "!!!", ;
		lboundto2column = .T., ;
		Left = 96, ;
		Name = "cboAd_adrtype", ;
		Top = 108, ;
		Width = 115, ;
		ZOrderSet = 22
		*< END OBJECT: ClassLib="jbase.vcx" BaseClass="combobox" />

	ADD OBJECT 'cboAd_feat1' AS cbodb WITH ;
		Anchor = 240, ;
		ColumnLines = .F., ;
		ControlSource = "curAddress.ad_feat1", ;
		controlsourcefieldtype = c(3), ;
		controlsourcefieldtype2 = c(25), ;
		InputMask = "!!!", ;
		Left = 96, ;
		Name = "cboAd_feat1", ;
		Top = 60, ;
		Width = 57, ;
		ZOrderSet = 12
		*< END OBJECT: ClassLib="jbase.vcx" BaseClass="combobox" />

	ADD OBJECT 'cboAd_feat2' AS cbodb WITH ;
		Anchor = 240, ;
		ColumnLines = .F., ;
		ControlSource = "curAddress.ad_feat2", ;
		controlsourcefieldtype = c(3), ;
		controlsourcefieldtype2 = c(25), ;
		InputMask = "!!!", ;
		Left = 154, ;
		Name = "cboAd_feat2", ;
		Top = 60, ;
		Width = 57, ;
		ZOrderSet = 13
		*< END OBJECT: ClassLib="jbase.vcx" BaseClass="combobox" />

	ADD OBJECT 'cboAd_feat3' AS cbodb WITH ;
		Anchor = 240, ;
		ColumnLines = .F., ;
		ControlSource = "curAddress.ad_feat3", ;
		controlsourcefieldtype = c(3), ;
		controlsourcefieldtype2 = c(25), ;
		InputMask = "!!!", ;
		Left = 212, ;
		Name = "cboAd_feat3", ;
		Top = 60, ;
		Width = 57, ;
		ZOrderSet = 14
		*< END OBJECT: ClassLib="jbase.vcx" BaseClass="combobox" />

	ADD OBJECT 'cboAd_mail1' AS cbodb WITH ;
		Anchor = 240, ;
		ColumnLines = .F., ;
		ControlSource = "curAddress.ad_mail1", ;
		controlsourcefieldtype = c(3), ;
		controlsourcefieldtype2 = c(25), ;
		InputMask = "!!!", ;
		Left = 96, ;
		Name = "cboAd_mail1", ;
		Top = 12, ;
		Width = 57, ;
		ZOrderSet = 1
		*< END OBJECT: ClassLib="jbase.vcx" BaseClass="combobox" />

	ADD OBJECT 'cboAd_mail2' AS cbodb WITH ;
		Anchor = 240, ;
		ColumnLines = .F., ;
		ControlSource = "curAddress.ad_mail2", ;
		controlsourcefieldtype = c(3), ;
		controlsourcefieldtype2 = c(25), ;
		InputMask = "!!!", ;
		Left = 154, ;
		Name = "cboAd_mail2", ;
		Top = 12, ;
		Width = 57, ;
		ZOrderSet = 2
		*< END OBJECT: ClassLib="jbase.vcx" BaseClass="combobox" />

	ADD OBJECT 'cboAd_mail3' AS cbodb WITH ;
		Anchor = 240, ;
		ColumnLines = .F., ;
		ControlSource = "curAddress.ad_mail3", ;
		controlsourcefieldtype = c(3), ;
		controlsourcefieldtype2 = c(25), ;
		InputMask = "!!!", ;
		Left = 212, ;
		Name = "cboAd_mail3", ;
		Top = 12, ;
		Width = 57, ;
		ZOrderSet = 3
		*< END OBJECT: ClassLib="jbase.vcx" BaseClass="combobox" />

	ADD OBJECT 'cboAd_mail4' AS cbodb WITH ;
		Anchor = 240, ;
		ColumnLines = .F., ;
		ControlSource = "curAddress.ad_mail4", ;
		controlsourcefieldtype = c(3), ;
		controlsourcefieldtype2 = c(25), ;
		InputMask = "!!!", ;
		Left = 270, ;
		Name = "cboAd_mail4", ;
		Top = 12, ;
		Width = 57, ;
		ZOrderSet = 4
		*< END OBJECT: ClassLib="jbase.vcx" BaseClass="combobox" />

	ADD OBJECT 'cboAd_mail5' AS cbodb WITH ;
		Anchor = 240, ;
		ColumnLines = .F., ;
		ControlSource = "curAddress.ad_mail5", ;
		controlsourcefieldtype = c(3), ;
		controlsourcefieldtype2 = c(25), ;
		InputMask = "!!!", ;
		Left = 328, ;
		Name = "cboAd_mail5", ;
		Top = 12, ;
		Width = 56, ;
		ZOrderSet = 5
		*< END OBJECT: ClassLib="jbase.vcx" BaseClass="combobox" />

	ADD OBJECT 'cboAd_ratecod' AS cbodb WITH ;
		Anchor = 240, ;
		ColumnLines = .F., ;
		ControlSource = "curAddress.ad_ratecod", ;
		controlsourcefieldtype = c(10), ;
		controlsourcefieldtype2 = c(35), ;
		InputMask = (REPLICATE("!",10)), ;
		Left = 96, ;
		Name = "cboAd_ratecod", ;
		Top = 36, ;
		Width = 115, ;
		ZOrderSet = 7
		*< END OBJECT: ClassLib="jbase.vcx" BaseClass="combobox" />

	ADD OBJECT 'cboAd_roomnum' AS cboroomname WITH ;
		Anchor = 240, ;
		ccontrolsource = curAddress.ad_roomnum, ;
		ColumnLines = .F., ;
		InputMask = (REPLICATE("!",10)), ;
		Left = 324, ;
		Name = "cboAd_roomnum", ;
		Top = 60, ;
		Width = 60, ;
		ZOrderSet = 16
		*< END OBJECT: ClassLib="cit_ctrl.vcx" BaseClass="combobox" />

	ADD OBJECT 'cboAd_vipstat' AS cbodb WITH ;
		Anchor = 240, ;
		ColumnLines = .F., ;
		ControlSource = "curAddress.ad_vipstat", ;
		controlsourcefieldtype = c(25), ;
		controlsourcefieldtype2 = n(3), ;
		Height = 23, ;
		lboundto2column = .T., ;
		Left = 288, ;
		Name = "cboAd_vipstat", ;
		Top = 108, ;
		Width = 96, ;
		ZOrderSet = 24
		*< END OBJECT: ClassLib="jbase.vcx" BaseClass="combobox" />

	ADD OBJECT 'chkAd_nomail' AS tcheckbox WITH ;
		Alignment = 1, ;
		Anchor = 240, ;
		BackStyle = 0, ;
		Caption = "Ad_nomail", ;
		ControlSource = "curAddress.ad_nomail", ;
		Left = 204, ;
		Name = "chkAd_nomail", ;
		SpecialEffect = 0, ;
		Top = 87, ;
		Width = 120, ;
		ZOrderSet = 19
		*< END OBJECT: ClassLib="main.vcx" BaseClass="checkbox" />

	ADD OBJECT 'chkAd_vip' AS tcheckbox WITH ;
		Alignment = 1, ;
		Anchor = 240, ;
		BackStyle = 0, ;
		Caption = "VIP", ;
		ControlSource = "curAddress.ad_vip", ;
		Height = 17, ;
		Left = 348, ;
		Name = "chkAd_vip", ;
		SpecialEffect = 0, ;
		Top = 39, ;
		Width = 36, ;
		ZOrderSet = 10
		*< END OBJECT: ClassLib="main.vcx" BaseClass="checkbox" />

	ADD OBJECT 'chkAd_vip2' AS tcheckbox WITH ;
		Alignment = 1, ;
		Anchor = 240, ;
		BackStyle = 0, ;
		Caption = "VIP2", ;
		ControlSource = "curAddress.ad_vip2", ;
		Left = 324, ;
		Name = "chkAd_vip2", ;
		SpecialEffect = 0, ;
		Top = 87, ;
		Width = 60, ;
		ZOrderSet = 20
		*< END OBJECT: ClassLib="main.vcx" BaseClass="checkbox" />

	ADD OBJECT 'dtxtAd_birth' AS tdatectrl WITH ;
		Anchor = 240, ;
		ControlSource = "curAddress.ad_birth", ;
		DisabledForeColor = 0,0,0, ;
		InputMask = "K", ;
		Left = 96, ;
		Name = "dtxtAd_birth", ;
		Top = 84, ;
		Width = 115, ;
		ZOrderSet = 18
		*< END OBJECT: ClassLib="main.vcx" BaseClass="textbox" />

	ADD OBJECT 'dtxtAd_memdat' AS tdatectrl WITH ;
		Anchor = 240, ;
		ControlSource = "curAddress.ad_memdat", ;
		DisabledForeColor = 0,0,0, ;
		Height = 23, ;
		InputMask = "99.99.9999", ;
		Left = 288, ;
		Name = "dtxtAd_memdat", ;
		Top = 132, ;
		Width = 96, ;
		ZOrderSet = 28
		*< END OBJECT: ClassLib="main.vcx" BaseClass="textbox" />

	ADD OBJECT 'lblAd_adrtype' AS tlabel WITH ;
		AutoSize = .F., ;
		Caption = "Ad_adrtype", ;
		Left = 12, ;
		Name = "lblAd_adrtype", ;
		Top = 111, ;
		Width = 84, ;
		ZOrderSet = 21
		*< END OBJECT: ClassLib="..\common\libs\_lvisual.vcx" BaseClass="label" />

	ADD OBJECT 'lblAd_billins' AS tlabel WITH ;
		AutoSize = .F., ;
		Caption = "Ad_billins", ;
		Left = 213, ;
		Name = "lblAd_billins", ;
		Top = 39, ;
		Width = 58, ;
		ZOrderSet = 8
		*< END OBJECT: ClassLib="..\common\libs\_lvisual.vcx" BaseClass="label" />

	ADD OBJECT 'lblAd_birth' AS tlabel WITH ;
		AutoSize = .F., ;
		Caption = "Ad_birth", ;
		Left = 12, ;
		Name = "lblAd_birth", ;
		Top = 87, ;
		Width = 84, ;
		ZOrderSet = 17
		*< END OBJECT: ClassLib="..\common\libs\_lvisual.vcx" BaseClass="label" />

	ADD OBJECT 'lblAd_feat' AS tlabel WITH ;
		AutoSize = .F., ;
		Caption = "Ad_feat", ;
		Left = 12, ;
		Name = "lblAd_feat", ;
		Top = 63, ;
		Width = 84, ;
		ZOrderSet = 11
		*< END OBJECT: ClassLib="..\common\libs\_lvisual.vcx" BaseClass="label" />

	ADD OBJECT 'lblAd_mail' AS tlabel WITH ;
		AutoSize = .F., ;
		Caption = "Ad_mail", ;
		Left = 12, ;
		Name = "lblAd_mail", ;
		Top = 15, ;
		Width = 84, ;
		ZOrderSet = 0
		*< END OBJECT: ClassLib="..\common\libs\_lvisual.vcx" BaseClass="label" />

	ADD OBJECT 'lblAd_member' AS tlabel WITH ;
		AutoSize = .F., ;
		Caption = "Ad_member", ;
		Left = 12, ;
		Name = "lblAd_member", ;
		Top = 135, ;
		Width = 84, ;
		ZOrderSet = 25
		*< END OBJECT: ClassLib="..\common\libs\_lvisual.vcx" BaseClass="label" />

	ADD OBJECT 'lblAd_memdat' AS tlabel WITH ;
		AutoSize = .F., ;
		Caption = "Ad_memdat", ;
		Height = 17, ;
		Left = 213, ;
		Name = "lblAd_memdat", ;
		Top = 135, ;
		Width = 75, ;
		ZOrderSet = 27
		*< END OBJECT: ClassLib="..\common\libs\_lvisual.vcx" BaseClass="label" />

	ADD OBJECT 'lblAd_ratecod' AS tlabel WITH ;
		AutoSize = .F., ;
		Caption = "Ad_ratecod", ;
		Left = 12, ;
		Name = "lblAd_ratecod", ;
		Top = 39, ;
		Width = 84, ;
		ZOrderSet = 6
		*< END OBJECT: ClassLib="..\common\libs\_lvisual.vcx" BaseClass="label" />

	ADD OBJECT 'lblAd_roomnum' AS tlabel WITH ;
		AutoSize = .F., ;
		Caption = "Ad_roomnum", ;
		Left = 271, ;
		Name = "lblAd_roomnum", ;
		Top = 63, ;
		Width = 53, ;
		ZOrderSet = 15
		*< END OBJECT: ClassLib="..\common\libs\_lvisual.vcx" BaseClass="label" />

	ADD OBJECT 'lblAd_vipstat' AS tlabel WITH ;
		AutoSize = .F., ;
		Caption = "Ad_vipstat", ;
		Height = 17, ;
		Left = 213, ;
		Name = "lblAd_vipstat", ;
		Top = 111, ;
		Width = 75, ;
		ZOrderSet = 23
		*< END OBJECT: ClassLib="..\common\libs\_lvisual.vcx" BaseClass="label" />

	ADD OBJECT 'lblCollectedPoints' AS tlabel WITH ;
		AutoSize = .F., ;
		Caption = "lblCollectedPoints", ;
		Left = 12, ;
		Name = "lblCollectedPoints", ;
		Top = 159, ;
		Width = 84, ;
		ZOrderSet = 25
		*< END OBJECT: ClassLib="..\common\libs\_lvisual.vcx" BaseClass="label" />

	ADD OBJECT 'lblTotalPoints' AS tlabel WITH ;
		AutoSize = .F., ;
		Caption = "lblTotalPoints", ;
		Left = 12, ;
		Name = "lblTotalPoints", ;
		Top = 183, ;
		Width = 84, ;
		ZOrderSet = 25
		*< END OBJECT: ClassLib="..\common\libs\_lvisual.vcx" BaseClass="label" />

	ADD OBJECT 'txtAd_billins' AS ttextbox WITH ;
		ControlSource = "curAddress.ad_billins", ;
		DisabledForeColor = 0,0,0, ;
		Left = 270, ;
		MaxLength = 40, ;
		Name = "txtAd_billins", ;
		Top = 36, ;
		Width = 77, ;
		ZOrderSet = 9
		*< END OBJECT: ClassLib="..\common\libs\_lvisual.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtAd_member' AS ttextbox WITH ;
		ControlSource = "curAddress.ad_member", ;
		DisabledForeColor = 0,0,0, ;
		InputMask = (REPLICATE("9",10)), ;
		Left = 96, ;
		MaxLength = 10, ;
		Name = "txtAd_member", ;
		Top = 132, ;
		Width = 115, ;
		ZOrderSet = 26
		*< END OBJECT: ClassLib="..\common\libs\_lvisual.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtCollectedPoints' AS ttextbox WITH ;
		DisabledForeColor = 0,0,0, ;
		Enabled = .F., ;
		Left = 96, ;
		Name = "txtCollectedPoints", ;
		Top = 156, ;
		vselectedvalue = 0, ;
		Width = 115, ;
		ZOrderSet = 26
		*< END OBJECT: ClassLib="..\common\libs\_lvisual.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtTotalPoints' AS ttextbox WITH ;
		DisabledForeColor = 0,0,0, ;
		Enabled = .F., ;
		Left = 96, ;
		Name = "txtTotalPoints", ;
		Top = 180, ;
		vselectedvalue = 0, ;
		Width = 115, ;
		ZOrderSet = 26
		*< END OBJECT: ClassLib="..\common\libs\_lvisual.vcx" BaseClass="textbox" />
	
	PROCEDURE assigncaption
		this.lblAd_mail.Caption = GetLangText("ADDRESS","TXT_MAILING")
		this.lblAd_ratecod.Caption = GetLangText("RATES","TXT_RATECODE")
		this.lblAd_billins.Caption = GetLangText("ADDRESS","TXT_BILLINS")
		this.lblAd_feat.Caption = GetLangText("ROOMFEAT","TW_FEATURE")
		this.lblad_roomnum.Caption = GetLangText("ADDRESS","T_WISHROOMNUM")
		this.lblAd_birth.Caption = GetLangText("ADDRESS","TXT_BIRTHDAY")
		this.chkAd_nomail.Caption = GetLangText("ADDRESS","TXT_NOMAIL")
		this.chkAd_vip2.Caption = GetLangText("ADDRESS","TXT_VIP_2")
		this.lblAd_adrtype.Caption = GetLangText("ADDRESS","TXT_ADDRESS_TYPE")
		this.lblAd_vipstat.Caption = GetLangText("ADDRESS","TXT_VIP_STATUS")
		this.lblAd_member.Caption = GetLangText("ADDRESS","TXT_MEMBER")
		this.lblAd_memdat.Caption = GetLangText("ADDRESS","TXT_MEMDAT")
		this.lblCollectedPoints.Caption = GetLangText("ARTICLE","TXT_COLLECTED_POINTS")
		this.lblTotalPoints.Caption = GetLangText("ARTICLE","TXT_TOTAL_POINTS")
	ENDPROC

	PROCEDURE enabled_assign
		LPARAMETERS tlNewVal
		
		this.SetAll("Enabled", tlNewVal, "ttextbox")
		this.SetAll("Enabled", tlNewVal, "tdatectrl")
		this.SetAll("Enabled", tlNewVal, "cbodb")
		this.SetAll("Enabled", tlNewVal, "tcheckbox")
		this.cboAd_roomnum.Enabled = tlNewVal
	ENDPROC

	PROCEDURE height_assign
		LPARAMETERS tnNewVal
		
		this.Height = tnNewVal
		IF NOT EMPTY(this.OrigHeight)
			this.SetAll("FontSize", MAX(4, ROUND(9*this.Height/this.OrigHeight,0)))
		ENDIF
	ENDPROC

	PROCEDURE Init
		this.OrigWidth = this.Width
		this.OrigHeight = this.Height
		
		DODEFAULT()
		STORE _screen.BMS TO this.lblCollectedPoints.Visible, this.txtCollectedPoints.Visible, ;
			this.lblTotalPoints.Visible, this.txtTotalPoints.Visible
		
		this.AssignCaption()
	ENDPROC

	PROCEDURE initafter		&& Should be called after container is added to pageframe, to set initial properties.
		LPARAMETERS tnWdth, tnHeight
		
		IF PCOUNT() = 0
			tnWdth = this.Parent.Parent.PageWidth
			tnHeight = this.Parent.Parent.PageHeight
		ENDIF
		this.SetSize(tnWdth, tnHeight)
		this.Visible = .T.
	ENDPROC

	PROCEDURE setbonuspoints
		LOCAL loBMSHandler, lnBb_bbid, lnAvailablePoints, lnCollectedPoints, lnSpentPoints
		
		IF _screen.BMS
			loBMSHandler = NEWOBJECT("cBMSHandler", "common\progs\bmshandler.prg", "", SysDate(), g_userid, 1, ;
				_screen.oGlobal.oParam2.pa_bmstype, _screen.oGlobal.oParam2.pa_bsdays)
			lnBb_bbid = loBMSHandler.GetBonusAccountByAddress(curAddress.ad_addrid, curAddress.ad_adid)
			IF lnBb_bbid > 0
				loBMSHandler.GetBonusPoints(lnBb_bbid, @lnAvailablePoints, @lnCollectedPoints, @lnSpentPoints)
			ELSE
				STORE 0 TO lnCollectedPoints, lnAvailablePoints, lnSpentPoints
			ENDIF
			this.txtCollectedPoints.Value = lnCollectedPoints
			this.txtTotalPoints.Value = lnAvailablePoints
		ENDIF
	ENDPROC

	PROCEDURE setcontrolsource
	ENDPROC

	PROCEDURE setsize
		LPARAMETERS tnWdth, tnHeight
		LOCAL lnAnchor
		
		lnAnchor = this.Anchor
		this.Anchor = 0
		this.Width = tnWdth
		this.Height = tnHeight
		this.Anchor = lnAnchor
	ENDPROC

	PROCEDURE cboAd_adrtype.getrowsourcebefore
		WITH this
			TEXT TO .jsql TEXTMERGE NOSHOW PRETEXT 15
				SELECT pl_lang<<g_langnum>> AS pl_lang, pl_charcod FROM picklist
					WHERE pl_label = 'ADRTYPE   '
					UNION SELECT CAST('' AS Char(25)), CAST('' AS Char(3)) FROM param
					ORDER BY 2
			ENDTEXT
			.jboundcolumn = 2
			.jcolumncount = 2
			.jcolumnwidths = "150,40"
		ENDWITH
		
		RETURN .T.
	ENDPROC

	PROCEDURE cboAd_feat1.getrowsourcebefore
		WITH this
			TEXT TO .jsql TEXTMERGE NOSHOW PRETEXT 15
				SELECT pl_charcod, pl_lang<<g_langnum>> AS pl_lang FROM picklist
					WHERE pl_label = 'FEATURE   '
					UNION SELECT CAST('' AS Char(3)), CAST('' AS Char(25)) FROM param
					ORDER BY 1
			ENDTEXT
			.jboundcolumn = 1
			.jcolumncount = 2
			.jcolumnwidths = "40,150"
		ENDWITH
		
		RETURN .T.
	ENDPROC

	PROCEDURE cboAd_feat2.getrowsourcebefore
		WITH this
			TEXT TO .jsql TEXTMERGE NOSHOW PRETEXT 15
				SELECT pl_charcod, pl_lang<<g_langnum>> AS pl_lang FROM picklist
					WHERE pl_label = 'FEATURE   '
					UNION SELECT CAST('' AS Char(3)), CAST('' AS Char(25)) FROM param
					ORDER BY 1
			ENDTEXT
			.jboundcolumn = 1
			.jcolumncount = 2
			.jcolumnwidths = "40,150"
		ENDWITH
		
		RETURN .T.
	ENDPROC

	PROCEDURE cboAd_feat3.getrowsourcebefore
		WITH this
			TEXT TO .jsql TEXTMERGE NOSHOW PRETEXT 15
				SELECT pl_charcod, pl_lang<<g_langnum>> AS pl_lang FROM picklist
					WHERE pl_label = 'FEATURE   '
					UNION SELECT CAST('' AS Char(3)), CAST('' AS Char(25)) FROM param
					ORDER BY 1
			ENDTEXT
			.jboundcolumn = 1
			.jcolumncount = 2
			.jcolumnwidths = "40,150"
		ENDWITH
		
		RETURN .T.
	ENDPROC

	PROCEDURE cboAd_mail1.getrowsourcebefore
		WITH this
			TEXT TO .jsql TEXTMERGE NOSHOW PRETEXT 15
				SELECT pl_charcod, pl_lang<<g_langnum>> AS pl_lang FROM picklist
					WHERE pl_label = 'MAILING   '
					UNION SELECT CAST('' AS Char(3)), CAST('' AS Char(25)) FROM param
					ORDER BY 1
			ENDTEXT
			.jboundcolumn = 1
			.jcolumncount = 2
			.jcolumnwidths = "40,150"
		ENDWITH
		
		RETURN .T.
	ENDPROC

	PROCEDURE cboAd_mail2.getrowsourcebefore
		WITH this
			TEXT TO .jsql TEXTMERGE NOSHOW PRETEXT 15
				SELECT pl_charcod, pl_lang<<g_langnum>> AS pl_lang FROM picklist
					WHERE pl_label = 'MAILING   '
					UNION SELECT CAST('' AS Char(3)), CAST('' AS Char(25)) FROM param
					ORDER BY 1
			ENDTEXT
			.jboundcolumn = 1
			.jcolumncount = 2
			.jcolumnwidths = "40,150"
		ENDWITH
		
		RETURN .T.
	ENDPROC

	PROCEDURE cboAd_mail3.getrowsourcebefore
		WITH this
			TEXT TO .jsql TEXTMERGE NOSHOW PRETEXT 15
				SELECT pl_charcod, pl_lang<<g_langnum>> AS pl_lang FROM picklist
					WHERE pl_label = 'MAILING   '
					UNION SELECT CAST('' AS Char(3)), CAST('' AS Char(25)) FROM param
					ORDER BY 1
			ENDTEXT
			.jboundcolumn = 1
			.jcolumncount = 2
			.jcolumnwidths = "40,150"
		ENDWITH
		
		RETURN .T.
	ENDPROC

	PROCEDURE cboAd_mail4.getrowsourcebefore
		WITH this
			TEXT TO .jsql TEXTMERGE NOSHOW PRETEXT 15
				SELECT pl_charcod, pl_lang<<g_langnum>> AS pl_lang FROM picklist
					WHERE pl_label = 'MAILING   '
					UNION SELECT CAST('' AS Char(3)), CAST('' AS Char(25)) FROM param
					ORDER BY 1
			ENDTEXT
			.jboundcolumn = 1
			.jcolumncount = 2
			.jcolumnwidths = "40,150"
		ENDWITH
		
		RETURN .T.
	ENDPROC

	PROCEDURE cboAd_mail5.getrowsourcebefore
		WITH this
			TEXT TO .jsql TEXTMERGE NOSHOW PRETEXT 15
				SELECT pl_charcod, pl_lang<<g_langnum>> AS pl_lang FROM picklist
					WHERE pl_label = 'MAILING   '
					UNION SELECT CAST('' AS Char(3)), CAST('' AS Char(25)) FROM param
					ORDER BY 1
			ENDTEXT
			.jboundcolumn = 1
			.jcolumncount = 2
			.jcolumnwidths = "40,150"
		ENDWITH
		
		RETURN .T.
	ENDPROC

	PROCEDURE cboAd_ratecod.getrowsourcebefore
		WITH this
			TEXT TO .jsql TEXTMERGE NOSHOW PRETEXT 15
				SELECT rc_ratecod, rc_lang<<g_langnum>> AS rc_lang, rc_fromdat, rc_todat, rc_amnt1 FROM ratecode
					ORDER BY 1
			ENDTEXT
			.jboundcolumn = 1
			.jcolumncount = 5
			.jcolumnwidths = "50,130,85,85,120"
		ENDWITH
		
		RETURN .T.
	ENDPROC

	PROCEDURE cboAd_vipstat.beforevalueinsertintorowsource
		LPARAMETERS lp_cNewDisplayValue
		RETURN ""
	ENDPROC

	PROCEDURE cboAd_vipstat.getrowsourcebefore
		WITH this
			TEXT TO .jsql TEXTMERGE NOSHOW PRETEXT 15
				SELECT pl_lang<<g_langnum>> AS pl_lang, pl_numcod FROM picklist
					WHERE pl_label = 'VIPSTATUS '
					UNION SELECT CAST('' AS Char(25)), 000 FROM param
					ORDER BY 2
			ENDTEXT
			.jboundcolumn = 2
			.jcolumncount = 2
			.jcolumnwidths = "150,0"
		ENDWITH
		
		RETURN .T.
	ENDPROC

ENDDEFINE

DEFINE CLASS addrmainedit AS tcontainer OF "..\common\libs\_lvisual.vcx" 
 	*< CLASSDATA: Baseclass="container" Timestamp="" Scale="Pixels" Uniqueid="" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="shp1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="shp2" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="shp3" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblAd_adid" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtAd_adid" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblAd_company" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtAd_company" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblAd_departm" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtAd_departm" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblAd_lname" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtAd_lname" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblAd_fname" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtAd_fname" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblAd_lang" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cboAd_lang" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cboAd_titlcod" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblAd_title" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtAd_title" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblAd_compnum" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtAd_compnum" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblAd_compkey" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtAd_compkey" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblAd_salute" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtAd_salute" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblAd_street" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtAd_street" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblAd_street2" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtAd_street2" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblAd_state" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtAd_state" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblAd_city" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cboAd_country" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cboAd_zip" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtAd_city" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfInfoPage" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfInfoPage.pagCommunication.lblAd_phone" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfInfoPage.pagCommunication.txtAd_phone" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfInfoPage.pagCommunication.lblAd_phone2" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfInfoPage.pagCommunication.txtAd_phone2" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfInfoPage.pagCommunication.txtAd_phone3" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfInfoPage.pagCommunication.lblAd_fax" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfInfoPage.pagCommunication.txtAd_fax" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfInfoPage.pagCommunication.lblAd_email" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfInfoPage.pagCommunication.txtAd_email" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfInfoPage.pagCommunication.cmdMail" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfInfoPage.pagCommunication.lblAd_website" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfInfoPage.pagCommunication.txtAd_website" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfInfoPage.pagCommunication.cmdBrowse" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfInfoPage.pagCommunication.lblAd_mail" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfInfoPage.pagCommunication.cboAd_mail1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfInfoPage.pagCommunication.cboAd_mail2" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfInfoPage.pagCommunication.cboAd_mail3" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfInfoPage.pagCommunication.cboAd_mail4" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfInfoPage.pagCommunication.cboAd_mail5" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfInfoPage.pagGuestInfo.lblAd_birth" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfInfoPage.pagGuestInfo.dtxtAd_birth" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfInfoPage.pagGuestInfo.lblBmsAccount" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfInfoPage.pagGuestInfo.txtBmsAccount" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfInfoPage.pagGuestInfo.lblCollectedPoints" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfInfoPage.pagGuestInfo.txtCollectedPoints" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfInfoPage.pagGuestInfo.lblTotalPoints" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfInfoPage.pagGuestInfo.txtTotalPoints" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfInfoPage.pagGuestInfo.lblAd_webpass" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfInfoPage.pagGuestInfo.txtAd_webpass" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblAd_vipstatus" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cboad_vipstat" UniqueID="" Timestamp="" />

	*<DefinedPropArrayMethod>
		*m: assigncaption
		*m: enabled_assign
		*m: height_assign
		*m: initafter		&& Should be called after container is added to pageframe, to set initial properties.
		*m: onrefresh
		*m: setbonuspoints
		*m: setcontrolsource
		*m: setsize
		*p: origheight
		*p: origwidth
	*</DefinedPropArrayMethod>

	Anchor = 75
	Height = 282
	Name = "addrmainedit"
	Width = 793

	ADD OBJECT 'cboAd_country' AS cbodb WITH ;
		Anchor = 240, ;
		ColumnLines = .F., ;
		ControlSource = "caadrmain.ad_country", ;
		DisabledForeColor = 0,0,0, ;
		InputMask = "!!!", ;
		Left = 91, ;
		Name = "cboAd_country", ;
		Top = 254, ;
		Width = 60, ;
		ZOrderSet = 31
		*< END OBJECT: ClassLib="jbase.vcx" BaseClass="combobox" />

	ADD OBJECT 'cboAd_lang' AS cbodb WITH ;
		Anchor = 240, ;
		ColumnLines = .F., ;
		ControlSource = "caadrmain.ad_lang", ;
		DisabledForeColor = 0,0,0, ;
		InputMask = "!!!", ;
		Left = 91, ;
		Name = "cboAd_lang", ;
		Top = 102, ;
		Width = 60, ;
		ZOrderSet = 14
		*< END OBJECT: ClassLib="jbase.vcx" BaseClass="combobox" />

	ADD OBJECT 'cboAd_titlcod' AS cbodb WITH ;
		Anchor = 240, ;
		ColumnLines = .F., ;
		ControlSource = "caadrmain.ad_titlcod", ;
		controlsourcefieldtype = n(2), ;
		DisabledForeColor = 0,0,0, ;
		InputMask = "99", ;
		Left = 152, ;
		lresetrowsourceonlostfocus = .T., ;
		Name = "cboAd_titlcod", ;
		Top = 102, ;
		Width = 51, ;
		ZOrderSet = 15
		*< END OBJECT: ClassLib="jbase.vcx" BaseClass="combobox" />

	ADD OBJECT 'cboad_vipstat' AS cbodb WITH ;
		Anchor = 240, ;
		ColumnLines = .F., ;
		ControlSource = "caadrmain.ad_vipstat", ;
		controlsourcefieldtype2 = N(2), ;
		DisabledForeColor = 0,0,0, ;
		lboundto2column = .T., ;
		Left = 492, ;
		Name = "cboad_vipstat", ;
		Style = 2, ;
		Top = 204, ;
		Width = 90, ;
		ZOrderSet = 36
		*< END OBJECT: ClassLib="jbase.vcx" BaseClass="combobox" />

	ADD OBJECT 'cboAd_zip' AS cbodb WITH ;
		Anchor = 240, ;
		ColumnLines = .F., ;
		ControlSource = "caadrmain.ad_zip", ;
		DisabledForeColor = 0,0,0, ;
		InputMask = "9999999999", ;
		Left = 152, ;
		lresetrowsourceonlostfocus = .T., ;
		Name = "cboAd_zip", ;
		Top = 254, ;
		Width = 82, ;
		ZOrderSet = 32
		*< END OBJECT: ClassLib="jbase.vcx" BaseClass="combobox" />

	ADD OBJECT 'lblAd_adid' AS tlabel WITH ;
		AutoSize = .F., ;
		Caption = "Ad_adid", ;
		Left = 7, ;
		Name = "lblAd_adid", ;
		Top = 9, ;
		Width = 84, ;
		ZOrderSet = 3
		*< END OBJECT: ClassLib="..\common\libs\_lvisual.vcx" BaseClass="label" />

	ADD OBJECT 'lblAd_city' AS tlabel WITH ;
		AutoSize = .F., ;
		Caption = "Ad_city", ;
		Left = 7, ;
		Name = "lblAd_city", ;
		Top = 257, ;
		Width = 84, ;
		ZOrderSet = 30
		*< END OBJECT: ClassLib="..\common\libs\_lvisual.vcx" BaseClass="label" />

	ADD OBJECT 'lblAd_company' AS tlabel WITH ;
		AutoSize = .F., ;
		Caption = "Ad_company", ;
		Left = 7, ;
		Name = "lblAd_company", ;
		Top = 33, ;
		Width = 84, ;
		ZOrderSet = 5
		*< END OBJECT: ClassLib="..\common\libs\_lvisual.vcx" BaseClass="label" />

	ADD OBJECT 'lblAd_compkey' AS tlabel WITH ;
		AutoSize = .F., ;
		Caption = "Ad_compkey", ;
		Left = 205, ;
		Name = "lblAd_compkey", ;
		Top = 129, ;
		Width = 74, ;
		ZOrderSet = 20
		*< END OBJECT: ClassLib="..\common\libs\_lvisual.vcx" BaseClass="label" />

	ADD OBJECT 'lblAd_compnum' AS tlabel WITH ;
		AutoSize = .F., ;
		Caption = "Ad_compnum", ;
		Left = 7, ;
		Name = "lblAd_compnum", ;
		Top = 129, ;
		Width = 84, ;
		ZOrderSet = 18
		*< END OBJECT: ClassLib="..\common\libs\_lvisual.vcx" BaseClass="label" />

	ADD OBJECT 'lblAd_departm' AS tlabel WITH ;
		AutoSize = .F., ;
		Caption = "Ad_departm", ;
		Left = 7, ;
		Name = "lblAd_departm", ;
		Top = 57, ;
		Width = 84, ;
		ZOrderSet = 7
		*< END OBJECT: ClassLib="..\common\libs\_lvisual.vcx" BaseClass="label" />

	ADD OBJECT 'lblAd_fname' AS tlabel WITH ;
		AutoSize = .F., ;
		Caption = "Ad_fname", ;
		Left = 205, ;
		Name = "lblAd_fname", ;
		Top = 81, ;
		Width = 74, ;
		ZOrderSet = 11
		*< END OBJECT: ClassLib="..\common\libs\_lvisual.vcx" BaseClass="label" />

	ADD OBJECT 'lblAd_lang' AS tlabel WITH ;
		AutoSize = .F., ;
		Caption = "Ad_lang", ;
		Left = 7, ;
		Name = "lblAd_lang", ;
		Top = 105, ;
		Width = 84, ;
		ZOrderSet = 13
		*< END OBJECT: ClassLib="..\common\libs\_lvisual.vcx" BaseClass="label" />

	ADD OBJECT 'lblAd_lname' AS tlabel WITH ;
		AutoSize = .F., ;
		Caption = "Ad_lname", ;
		Left = 7, ;
		Name = "lblAd_lname", ;
		Top = 81, ;
		Width = 84, ;
		ZOrderSet = 9
		*< END OBJECT: ClassLib="..\common\libs\_lvisual.vcx" BaseClass="label" />

	ADD OBJECT 'lblAd_salute' AS tlabel WITH ;
		AutoSize = .F., ;
		Caption = "Ad_salute", ;
		Left = 7, ;
		Name = "lblAd_salute", ;
		Top = 161, ;
		Width = 84, ;
		ZOrderSet = 22
		*< END OBJECT: ClassLib="..\common\libs\_lvisual.vcx" BaseClass="label" />

	ADD OBJECT 'lblAd_state' AS tlabel WITH ;
		AutoSize = .F., ;
		Caption = "Ad_state", ;
		Left = 7, ;
		Name = "lblAd_state", ;
		Top = 233, ;
		Width = 84, ;
		ZOrderSet = 28
		*< END OBJECT: ClassLib="..\common\libs\_lvisual.vcx" BaseClass="label" />

	ADD OBJECT 'lblAd_street' AS tlabel WITH ;
		AutoSize = .F., ;
		Caption = "Ad_street", ;
		Left = 7, ;
		Name = "lblAd_street", ;
		Top = 185, ;
		Width = 84, ;
		ZOrderSet = 24
		*< END OBJECT: ClassLib="..\common\libs\_lvisual.vcx" BaseClass="label" />

	ADD OBJECT 'lblAd_street2' AS tlabel WITH ;
		AutoSize = .F., ;
		Caption = "Ad_street2", ;
		Left = 7, ;
		Name = "lblAd_street2", ;
		Top = 209, ;
		Width = 84, ;
		ZOrderSet = 26
		*< END OBJECT: ClassLib="..\common\libs\_lvisual.vcx" BaseClass="label" />

	ADD OBJECT 'lblAd_title' AS tlabel WITH ;
		AutoSize = .F., ;
		Caption = "Ad_title", ;
		Left = 205, ;
		Name = "lblAd_title", ;
		Top = 105, ;
		Width = 74, ;
		ZOrderSet = 16
		*< END OBJECT: ClassLib="..\common\libs\_lvisual.vcx" BaseClass="label" />

	ADD OBJECT 'lblAd_vipstatus' AS tlabel WITH ;
		AutoSize = .F., ;
		Caption = "lblAd_vipstatus", ;
		Left = 408, ;
		Name = "lblAd_vipstatus", ;
		Top = 207, ;
		Width = 84, ;
		ZOrderSet = 35
		*< END OBJECT: ClassLib="..\common\libs\_lvisual.vcx" BaseClass="label" />

	ADD OBJECT 'pgfInfoPage' AS tpageframe WITH ;
		ActivePage = 1, ;
		Anchor = 105, ;
		ErasePage = .T., ;
		Height = 190, ;
		Left = 397, ;
		Name = "pgfInfoPage", ;
		PageCount = 2, ;
		Top = 2, ;
		Width = 396, ;
		ZOrderSet = 34, ;
		Page1.Caption = "pagCommunication", ;
		Page1.Name = "pagCommunication", ;
		Page2.Caption = "pagGuestInfo", ;
		Page2.Name = "pagGuestInfo"
		*< END OBJECT: ClassLib="main.vcx" BaseClass="pageframe" />

	ADD OBJECT 'pgfInfoPage.pagCommunication.cboAd_mail1' AS cbodb WITH ;
		Anchor = 240, ;
		ColumnLines = .F., ;
		ControlSource = "caAdrmain.ad_mail1", ;
		controlsourcefieldtype = c(3), ;
		controlsourcefieldtype2 = c(25), ;
		InputMask = "!!!", ;
		Left = 94, ;
		Name = "cboAd_mail1", ;
		Top = 126, ;
		Width = 57, ;
		ZOrderSet = 46
		*< END OBJECT: ClassLib="jbase.vcx" BaseClass="combobox" />

	ADD OBJECT 'pgfInfoPage.pagCommunication.cboAd_mail2' AS cbodb WITH ;
		Anchor = 240, ;
		ColumnLines = .F., ;
		ControlSource = "caAdrmain.ad_mail2", ;
		controlsourcefieldtype = c(3), ;
		controlsourcefieldtype2 = c(25), ;
		InputMask = "!!!", ;
		Left = 152, ;
		Name = "cboAd_mail2", ;
		Top = 126, ;
		Width = 57, ;
		ZOrderSet = 47
		*< END OBJECT: ClassLib="jbase.vcx" BaseClass="combobox" />

	ADD OBJECT 'pgfInfoPage.pagCommunication.cboAd_mail3' AS cbodb WITH ;
		Anchor = 240, ;
		ColumnLines = .F., ;
		ControlSource = "caAdrmain.ad_mail3", ;
		controlsourcefieldtype = c(3), ;
		controlsourcefieldtype2 = c(25), ;
		InputMask = "!!!", ;
		Left = 210, ;
		Name = "cboAd_mail3", ;
		Top = 126, ;
		Width = 57, ;
		ZOrderSet = 48
		*< END OBJECT: ClassLib="jbase.vcx" BaseClass="combobox" />

	ADD OBJECT 'pgfInfoPage.pagCommunication.cboAd_mail4' AS cbodb WITH ;
		Anchor = 240, ;
		ColumnLines = .F., ;
		ControlSource = "caAdrmain.ad_mail4", ;
		controlsourcefieldtype = c(3), ;
		controlsourcefieldtype2 = c(25), ;
		InputMask = "!!!", ;
		Left = 268, ;
		Name = "cboAd_mail4", ;
		Top = 126, ;
		Width = 57, ;
		ZOrderSet = 49
		*< END OBJECT: ClassLib="jbase.vcx" BaseClass="combobox" />

	ADD OBJECT 'pgfInfoPage.pagCommunication.cboAd_mail5' AS cbodb WITH ;
		Anchor = 240, ;
		ColumnLines = .F., ;
		ControlSource = "caAdrmain.ad_mail5", ;
		controlsourcefieldtype = c(3), ;
		controlsourcefieldtype2 = c(25), ;
		InputMask = "!!!", ;
		Left = 326, ;
		Name = "cboAd_mail5", ;
		Top = 126, ;
		Width = 56, ;
		ZOrderSet = 50
		*< END OBJECT: ClassLib="jbase.vcx" BaseClass="combobox" />

	ADD OBJECT 'pgfInfoPage.pagCommunication.cmdBrowse' AS tcommandbutton WITH ;
		Caption = "", ;
		Height = 23, ;
		Left = 360, ;
		Name = "cmdBrowse", ;
		Picture = ..\bitmap\toolbar\web16.png, ;
		ToolTipText = "Internet Seite in Browser öffnen", ;
		Top = 102, ;
		Width = 23
		*< END OBJECT: ClassLib="..\common\libs\_lvisual.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'pgfInfoPage.pagCommunication.cmdMail' AS tcommandbutton WITH ;
		Caption = "", ;
		Height = 23, ;
		Left = 360, ;
		Name = "cmdMail", ;
		Picture = ..\bitmap\toolbar\mail.png, ;
		Top = 78, ;
		Width = 23
		*< END OBJECT: ClassLib="..\common\libs\_lvisual.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'pgfInfoPage.pagCommunication.lblAd_email' AS tlabel WITH ;
		AutoSize = .F., ;
		Caption = "lblAd_email", ;
		Left = 10, ;
		Name = "lblAd_email", ;
		Top = 81, ;
		Width = 84, ;
		ZOrderSet = 41
		*< END OBJECT: ClassLib="..\common\libs\_lvisual.vcx" BaseClass="label" />

	ADD OBJECT 'pgfInfoPage.pagCommunication.lblAd_fax' AS tlabel WITH ;
		AutoSize = .F., ;
		Caption = "lblAd_fax", ;
		Left = 10, ;
		Name = "lblAd_fax", ;
		Top = 57, ;
		Width = 84, ;
		ZOrderSet = 39
		*< END OBJECT: ClassLib="..\common\libs\_lvisual.vcx" BaseClass="label" />

	ADD OBJECT 'pgfInfoPage.pagCommunication.lblAd_mail' AS tlabel WITH ;
		AutoSize = .F., ;
		Caption = "lblAd_mail", ;
		Left = 10, ;
		Name = "lblAd_mail", ;
		Top = 129, ;
		Width = 84, ;
		ZOrderSet = 45
		*< END OBJECT: ClassLib="..\common\libs\_lvisual.vcx" BaseClass="label" />

	ADD OBJECT 'pgfInfoPage.pagCommunication.lblAd_phone' AS tlabel WITH ;
		AutoSize = .F., ;
		Caption = "lblAd_phone", ;
		Left = 10, ;
		Name = "lblAd_phone", ;
		Top = 9, ;
		Width = 84, ;
		ZOrderSet = 34
		*< END OBJECT: ClassLib="..\common\libs\_lvisual.vcx" BaseClass="label" />

	ADD OBJECT 'pgfInfoPage.pagCommunication.lblAd_phone2' AS tlabel WITH ;
		AutoSize = .F., ;
		Caption = "lblAd_phone2", ;
		Left = 10, ;
		Name = "lblAd_phone2", ;
		Top = 33, ;
		Width = 84, ;
		ZOrderSet = 36
		*< END OBJECT: ClassLib="..\common\libs\_lvisual.vcx" BaseClass="label" />

	ADD OBJECT 'pgfInfoPage.pagCommunication.lblAd_website' AS tlabel WITH ;
		AutoSize = .F., ;
		Caption = "lblAd_website", ;
		Left = 10, ;
		Name = "lblAd_website", ;
		Top = 105, ;
		Width = 84, ;
		ZOrderSet = 43
		*< END OBJECT: ClassLib="..\common\libs\_lvisual.vcx" BaseClass="label" />

	ADD OBJECT 'pgfInfoPage.pagCommunication.txtAd_email' AS ttextbox WITH ;
		ControlSource = "caadrmain.ad_email", ;
		DisabledForeColor = 0,0,0, ;
		Left = 94, ;
		MaxLength = 100, ;
		Name = "txtAd_email", ;
		Top = 78, ;
		Width = 265, ;
		ZOrderSet = 42
		*< END OBJECT: ClassLib="..\common\libs\_lvisual.vcx" BaseClass="textbox" />

	ADD OBJECT 'pgfInfoPage.pagCommunication.txtAd_fax' AS ttextbox WITH ;
		ControlSource = "caadrmain.ad_fax", ;
		DisabledForeColor = 0,0,0, ;
		Left = 94, ;
		MaxLength = 100, ;
		Name = "txtAd_fax", ;
		Top = 54, ;
		Width = 288, ;
		ZOrderSet = 40
		*< END OBJECT: ClassLib="..\common\libs\_lvisual.vcx" BaseClass="textbox" />

	ADD OBJECT 'pgfInfoPage.pagCommunication.txtAd_phone' AS ttextbox WITH ;
		ControlSource = "caadrmain.ad_phone", ;
		DisabledForeColor = 0,0,0, ;
		Left = 94, ;
		MaxLength = 20, ;
		Name = "txtAd_phone", ;
		Top = 6, ;
		Width = 288, ;
		ZOrderSet = 35
		*< END OBJECT: ClassLib="..\common\libs\_lvisual.vcx" BaseClass="textbox" />

	ADD OBJECT 'pgfInfoPage.pagCommunication.txtAd_phone2' AS ttextbox WITH ;
		ControlSource = "caadrmain.ad_phone2", ;
		DisabledForeColor = 0,0,0, ;
		Left = 94, ;
		MaxLength = 20, ;
		Name = "txtAd_phone2", ;
		Top = 30, ;
		Width = 144, ;
		ZOrderSet = 37
		*< END OBJECT: ClassLib="..\common\libs\_lvisual.vcx" BaseClass="textbox" />

	ADD OBJECT 'pgfInfoPage.pagCommunication.txtAd_phone3' AS ttextbox WITH ;
		ControlSource = "caadrmain.ad_phone3", ;
		DisabledForeColor = 0,0,0, ;
		Left = 239, ;
		MaxLength = 20, ;
		Name = "txtAd_phone3", ;
		Top = 30, ;
		Width = 143, ;
		ZOrderSet = 38
		*< END OBJECT: ClassLib="..\common\libs\_lvisual.vcx" BaseClass="textbox" />

	ADD OBJECT 'pgfInfoPage.pagCommunication.txtAd_website' AS ttextbox WITH ;
		ControlSource = "caadrmain.ad_website", ;
		DisabledForeColor = 0,0,0, ;
		Left = 94, ;
		MaxLength = 60, ;
		Name = "txtAd_website", ;
		Top = 102, ;
		Width = 265, ;
		ZOrderSet = 44
		*< END OBJECT: ClassLib="..\common\libs\_lvisual.vcx" BaseClass="textbox" />

	ADD OBJECT 'pgfInfoPage.pagGuestInfo.dtxtAd_birth' AS ttextdate WITH ;
		ControlSource = "caAdrmain.ad_birth", ;
		DisabledForeColor = 0,0,0, ;
		Left = 94, ;
		Name = "dtxtAd_birth", ;
		Top = 6, ;
		Width = 96, ;
		ZOrderSet = 37
		*< END OBJECT: ClassLib="..\common\libs\_lvisual.vcx" BaseClass="textbox" />

	ADD OBJECT 'pgfInfoPage.pagGuestInfo.lblAd_birth' AS tlabel WITH ;
		AutoSize = .F., ;
		Caption = "lblAd_birth", ;
		Left = 10, ;
		Name = "lblAd_birth", ;
		Top = 9, ;
		Width = 84, ;
		ZOrderSet = 36
		*< END OBJECT: ClassLib="..\common\libs\_lvisual.vcx" BaseClass="label" />

	ADD OBJECT 'pgfInfoPage.pagGuestInfo.lblAd_webpass' AS tlabel WITH ;
		AutoSize = .F., ;
		Caption = "lblAd_webpass", ;
		Left = 10, ;
		Name = "lblAd_webpass", ;
		Top = 81, ;
		Width = 84, ;
		ZOrderSet = 36
		*< END OBJECT: ClassLib="..\common\libs\_lvisual.vcx" BaseClass="label" />

	ADD OBJECT 'pgfInfoPage.pagGuestInfo.lblBmsAccount' AS tlabel WITH ;
		AutoSize = .F., ;
		Caption = "lblBmsAccount", ;
		Left = 10, ;
		Name = "lblBmsAccount", ;
		Top = 33, ;
		Width = 84, ;
		ZOrderSet = 53
		*< END OBJECT: ClassLib="..\common\libs\_lvisual.vcx" BaseClass="label" />

	ADD OBJECT 'pgfInfoPage.pagGuestInfo.lblCollectedPoints' AS tlabel WITH ;
		AutoSize = .F., ;
		Caption = "lblCollectedPoints", ;
		Left = 198, ;
		Name = "lblCollectedPoints", ;
		Top = 33, ;
		Width = 84, ;
		ZOrderSet = 53
		*< END OBJECT: ClassLib="..\common\libs\_lvisual.vcx" BaseClass="label" />

	ADD OBJECT 'pgfInfoPage.pagGuestInfo.lblTotalPoints' AS tlabel WITH ;
		AutoSize = .F., ;
		Caption = "lblTotalPoints", ;
		Left = 10, ;
		Name = "lblTotalPoints", ;
		Top = 57, ;
		Width = 84, ;
		ZOrderSet = 55
		*< END OBJECT: ClassLib="..\common\libs\_lvisual.vcx" BaseClass="label" />

	ADD OBJECT 'pgfInfoPage.pagGuestInfo.txtAd_webpass' AS ttextbox WITH ;
		ControlSource = "caadrmain.ad_webpass", ;
		DisabledForeColor = 0,0,0, ;
		Height = 23, ;
		Left = 94, ;
		MaxLength = 6, ;
		Name = "txtAd_webpass", ;
		Top = 78, ;
		Width = 96, ;
		ZOrderSet = 37
		*< END OBJECT: ClassLib="..\common\libs\_lvisual.vcx" BaseClass="textbox" />

	ADD OBJECT 'pgfInfoPage.pagGuestInfo.txtBmsAccount' AS ttextbox WITH ;
		DisabledForeColor = 0,0,0, ;
		Enabled = .F., ;
		Left = 94, ;
		Name = "txtBmsAccount", ;
		Top = 30, ;
		vselectedvalue = 0, ;
		Width = 96, ;
		ZOrderSet = 54
		*< END OBJECT: ClassLib="..\common\libs\_lvisual.vcx" BaseClass="textbox" />

	ADD OBJECT 'pgfInfoPage.pagGuestInfo.txtCollectedPoints' AS ttextbox WITH ;
		DisabledForeColor = 0,0,0, ;
		Enabled = .F., ;
		Left = 282, ;
		Name = "txtCollectedPoints", ;
		Top = 30, ;
		vselectedvalue = 0, ;
		Width = 100, ;
		ZOrderSet = 54
		*< END OBJECT: ClassLib="..\common\libs\_lvisual.vcx" BaseClass="textbox" />

	ADD OBJECT 'pgfInfoPage.pagGuestInfo.txtTotalPoints' AS ttextbox WITH ;
		DisabledForeColor = 0,0,0, ;
		Enabled = .F., ;
		Left = 94, ;
		Name = "txtTotalPoints", ;
		Top = 54, ;
		vselectedvalue = 0, ;
		Width = 96, ;
		ZOrderSet = 56
		*< END OBJECT: ClassLib="..\common\libs\_lvisual.vcx" BaseClass="textbox" />

	ADD OBJECT 'shp1' AS sh WITH ;
		Anchor = 195, ;
		BackStyle = 0, ;
		Height = 151, ;
		Left = 2, ;
		Name = "shp1", ;
		SpecialEffect = 0, ;
		Top = 2, ;
		Width = 394, ;
		ZOrderSet = 0
		*< END OBJECT: ClassLib="main.vcx" BaseClass="shape" />

	ADD OBJECT 'shp2' AS sh WITH ;
		Anchor = 150, ;
		BackStyle = 0, ;
		Height = 127, ;
		Left = 2, ;
		Name = "shp2", ;
		SpecialEffect = 0, ;
		Top = 154, ;
		Width = 394, ;
		ZOrderSet = 1
		*< END OBJECT: ClassLib="main.vcx" BaseClass="shape" />

	ADD OBJECT 'shp3' AS sh WITH ;
		Anchor = 60, ;
		BackStyle = 0, ;
		Height = 88, ;
		Left = 397, ;
		Name = "shp3", ;
		SpecialEffect = 0, ;
		Top = 193, ;
		Width = 394, ;
		ZOrderSet = 2
		*< END OBJECT: ClassLib="main.vcx" BaseClass="shape" />

	ADD OBJECT 'txtAd_adid' AS ttextbox WITH ;
		ControlSource = "caadrmain.ad_adid", ;
		DisabledForeColor = 0,0,0, ;
		Left = 91, ;
		Name = "txtAd_adid", ;
		Top = 6, ;
		Width = 84, ;
		ZOrderSet = 4
		*< END OBJECT: ClassLib="..\common\libs\_lvisual.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtAd_city' AS ttextbox WITH ;
		ControlSource = "caadrmain.ad_city", ;
		DisabledForeColor = 0,0,0, ;
		Left = 235, ;
		MaxLength = 30, ;
		Name = "txtAd_city", ;
		Top = 254, ;
		Width = 156, ;
		ZOrderSet = 33
		*< END OBJECT: ClassLib="..\common\libs\_lvisual.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtAd_company' AS ttextbox WITH ;
		ControlSource = "caadrmain.ad_company", ;
		DisabledForeColor = 0,0,0, ;
		Left = 91, ;
		MaxLength = 50, ;
		Name = "txtAd_company", ;
		Top = 30, ;
		Width = 300, ;
		ZOrderSet = 6
		*< END OBJECT: ClassLib="..\common\libs\_lvisual.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtAd_compkey' AS ttextbox WITH ;
		ControlSource = "caadrmain.ad_compkey", ;
		DisabledForeColor = 0,0,0, ;
		Left = 279, ;
		MaxLength = 15, ;
		Name = "txtAd_compkey", ;
		Top = 126, ;
		Width = 112, ;
		ZOrderSet = 21
		*< END OBJECT: ClassLib="..\common\libs\_lvisual.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtAd_compnum' AS ttextbox WITH ;
		ControlSource = "caadrmain.ad_compnum", ;
		DisabledForeColor = 0,0,0, ;
		Left = 91, ;
		Name = "txtAd_compnum", ;
		Top = 126, ;
		Width = 112, ;
		ZOrderSet = 19
		*< END OBJECT: ClassLib="..\common\libs\_lvisual.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtAd_departm' AS ttextbox WITH ;
		ControlSource = "caadrmain.ad_departm", ;
		DisabledForeColor = 0,0,0, ;
		Left = 91, ;
		MaxLength = 50, ;
		Name = "txtAd_departm", ;
		Top = 54, ;
		Width = 300, ;
		ZOrderSet = 8
		*< END OBJECT: ClassLib="..\common\libs\_lvisual.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtAd_fname' AS ttextbox WITH ;
		ControlSource = "caadrmain.ad_fname", ;
		DisabledForeColor = 0,0,0, ;
		Left = 279, ;
		MaxLength = 20, ;
		Name = "txtAd_fname", ;
		Top = 78, ;
		Width = 112, ;
		ZOrderSet = 12
		*< END OBJECT: ClassLib="..\common\libs\_lvisual.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtAd_lname' AS ttextbox WITH ;
		ControlSource = "caadrmain.ad_lname", ;
		DisabledForeColor = 0,0,0, ;
		Left = 91, ;
		MaxLength = 30, ;
		Name = "txtAd_lname", ;
		Top = 78, ;
		Width = 112, ;
		ZOrderSet = 10
		*< END OBJECT: ClassLib="..\common\libs\_lvisual.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtAd_salute' AS ttextbox WITH ;
		ControlSource = "caadrmain.ad_salute", ;
		DisabledForeColor = 0,0,0, ;
		Left = 91, ;
		MaxLength = 50, ;
		Name = "txtAd_salute", ;
		Top = 158, ;
		Width = 300, ;
		ZOrderSet = 23
		*< END OBJECT: ClassLib="..\common\libs\_lvisual.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtAd_state' AS ttextbox WITH ;
		ControlSource = "caadrmain.ad_state", ;
		DisabledForeColor = 0,0,0, ;
		Left = 91, ;
		MaxLength = 30, ;
		Name = "txtAd_state", ;
		Top = 230, ;
		Width = 300, ;
		ZOrderSet = 29
		*< END OBJECT: ClassLib="..\common\libs\_lvisual.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtAd_street' AS ttextbox WITH ;
		ControlSource = "caadrmain.ad_street", ;
		DisabledForeColor = 0,0,0, ;
		Left = 91, ;
		Name = "txtAd_street", ;
		Top = 182, ;
		Width = 300, ;
		ZOrderSet = 25
		*< END OBJECT: ClassLib="..\common\libs\_lvisual.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtAd_street2' AS ttextbox WITH ;
		ControlSource = "caadrmain.ad_street2", ;
		DisabledForeColor = 0,0,0, ;
		Left = 91, ;
		Name = "txtAd_street2", ;
		Top = 206, ;
		Width = 300, ;
		ZOrderSet = 27
		*< END OBJECT: ClassLib="..\common\libs\_lvisual.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtAd_title' AS ttextbox WITH ;
		ControlSource = "caadrmain.ad_title", ;
		DisabledForeColor = 0,0,0, ;
		Left = 279, ;
		MaxLength = 20, ;
		Name = "txtAd_title", ;
		Top = 102, ;
		Width = 112, ;
		ZOrderSet = 17
		*< END OBJECT: ClassLib="..\common\libs\_lvisual.vcx" BaseClass="textbox" />
	
	PROCEDURE assigncaption
		this.lblAd_adid.Caption = GetText("ADDRMAIN","TXT_ADDRESS_ID")
		this.lblAd_company.Caption = GetText("ADDRMAIN","TXT_COMPANY")
		this.lblAd_departm.Caption = GetText("ADDRMAIN","TXT_DEPARTMENT")
		this.lblAd_lname.Caption = GetText("ADDRMAIN","TXT_LNAME")
		this.lblAd_fname.Caption = GetText("ADDRMAIN","TXT_FNAME")
		this.lblAd_lang.Caption = GetText("ADDRESS","T_LANGCOD")
		this.lblAd_title.Caption = GetText("ADDRMAIN","TXT_TITLE")
		this.lblAd_compkey.Caption = GetText("ADDRMAIN","TXT_COMPKEY")
		this.lblAd_compnum.Caption = GetText("ADDRESS","T_KEYNR")
		this.lblAd_salute.Caption = GetText("ADDRMAIN","TXT_SALUTE")
		this.lblAd_street.Caption = GetText("ADDRMAIN","TXT_STREET") + " 1"
		this.lblAd_street2.Caption = GetText("ADDRMAIN","TXT_STREET") + " 2"
		this.lblAd_state.Caption = GetText("ADDRMAIN","TXT_STATE")
		this.lblAd_city.Caption = GetText("ADDRESS","T_COUNTCITYZIP")
		
		this.pgfInfoPage.pagCommunication.Caption = GetText("ADDRESS","TXT_ADDRCOMM")
		this.pgfInfoPage.pagGuestInfo.Caption = GetText("ADDRESS","TXT_GUESTINFO")
		this.pgfInfoPage.pagCommunication.lblAd_phone.Caption = GetText("ADDRMAIN","TXT_PHONE") + " 1"
		this.pgfInfoPage.pagCommunication.lblAd_phone2.Caption = GetText("ADDRMAIN","TXT_PHONE") + " 2/3"
		this.pgfInfoPage.pagCommunication.lblAd_fax.Caption = GetText("ADDRMAIN","TXT_FAX")
		this.pgfInfoPage.pagCommunication.lblAd_email.Caption = GetText("ADDRMAIN","TXT_EMAIL")
		this.pgfInfoPage.pagCommunication.lblAd_website.Caption = GetText("ADDRMAIN","TXT_WEBSITE")
		this.pgfInfoPage.pagCommunication.lblAd_mail.Caption = GetText("ADDRMAIN","TXT_MAILCODE")
		this.pgfInfoPage.pagGuestInfo.lblAd_birth.Caption = GetText("ADDRESS","TXT_BIRTHDAY")
		this.pgfInfoPage.pagGuestInfo.lblBmsAccount.Caption = GetText("MGRFINAN","TXT_BMS_ACCOUNT_NO")
		this.pgfInfoPage.pagGuestInfo.lblCollectedPoints.Caption = GetText("ARTICLE","TXT_COLLECTED_POINTS")
		this.pgfInfoPage.pagGuestInfo.lblTotalPoints.Caption = GetText("ARTICLE","TXT_TOTAL_POINTS")
		this.pgfInfoPage.pagGuestInfo.lblAd_webpass.Caption = "Web " + GetText("MGRSYS","TXT_USPASS")
		this.lblAd_vipstatus.Caption = GetText("ADDRESS","TXT_VIP_STATUS")
	ENDPROC

	PROCEDURE enabled_assign
		LPARAMETERS tlNewVal
		
		this.SetAll("Enabled", tlNewVal, "ttextbox")
		this.SetAll("Enabled", tlNewVal, "ttextdate")
		this.SetAll("Enabled", tlNewVal, "cbodb")
		this.pgfInfoPage.pagCommunication.cmdMail.Enabled = NOT (this.pgfInfoPage.pagCommunication.txtAd_email.Enabled OR EMPTY(this.pgfInfoPage.pagCommunication.txtAd_email.Value))
		this.pgfInfoPage.pagCommunication.cmdBrowse.Enabled = NOT (this.pgfInfoPage.pagCommunication.txtAd_website.Enabled OR EMPTY(this.pgfInfoPage.pagCommunication.txtAd_website.Value))
		IF tlNewVal
			this.pgfInfoPage.pagGuestInfo.txtbmsaccount.Enabled = .F.
			this.pgfInfoPage.pagGuestInfo.txtCollectedPoints.Enabled = .F.
			this.pgfInfoPage.pagGuestInfo.txtTotalPoints.Enabled = .F.
		ENDIF
	ENDPROC

	PROCEDURE height_assign
		LPARAMETERS tnNewVal
		
		this.Height = tnNewVal
		IF NOT EMPTY(this.OrigHeight)
			this.SetAll("FontSize", MAX(4, ROUND(9*this.Height/this.OrigHeight,0)))
		ENDIF
	ENDPROC

	PROCEDURE Init
		this.OrigWidth = this.Width
		this.OrigHeight = this.Height
		DODEFAULT()
		WITH this.pgfInfoPage.pagGuestInfo
			STORE _screen.BMS TO .lblCollectedPoints.Visible, .txtCollectedPoints.Visible, .lblTotalPoints.Visible, .txtTotalPoints.Visible, .lblbmsaccount.Visible, .txtbmsaccount.Visible
		ENDWITH
		this.AssignCaption()
	ENDPROC

	PROCEDURE initafter		&& Should be called after container is added to pageframe, to set initial properties.
		LPARAMETERS tnWdth, tnHeight
		
		IF PCOUNT() = 0
			tnWdth = this.Parent.Parent.PageWidth
			tnHeight = this.Parent.Parent.PageHeight
		ENDIF
		this.SetSize(tnWdth, tnHeight)
		this.Visible = .T.
	ENDPROC

	PROCEDURE onrefresh
		this.SetBonusPoints()
		this.pgfInfoPage.pagCommunication.cmdMail.Enabled = NOT (this.pgfInfoPage.pagCommunication.txtAd_email.Enabled OR EMPTY(this.pgfInfoPage.pagCommunication.txtAd_email.Value))
		this.pgfInfoPage.pagCommunication.cmdBrowse.Enabled = NOT (this.pgfInfoPage.pagCommunication.txtAd_website.Enabled OR EMPTY(this.pgfInfoPage.pagCommunication.txtAd_website.Value))
	ENDPROC

	PROCEDURE setbonuspoints
		LOCAL loBMSHandler, lnBb_bbid, lnAvailablePoints, lnCollectedPoints, lnSpentPoints
		
		IF _screen.BMS
			loBMSHandler = NEWOBJECT("cBMSHandler", "common\progs\bmshandler.prg", "", SysDate(), g_userid, 1, ;
				_screen.oGlobal.oParam2.pa_bmstype, _screen.oGlobal.oParam2.pa_bsdays)
			lnBb_bbid = loBMSHandler.GetBonusAccountByAddress(,caAdrmain.ad_adid)
			IF lnBb_bbid > 0
				loBMSHandler.GetBonusPoints(lnBb_bbid, @lnAvailablePoints, @lnCollectedPoints, @lnSpentPoints)
			ELSE
				STORE 0 TO lnCollectedPoints, lnAvailablePoints, lnSpentPoints
			ENDIF
			this.pgfInfoPage.pagGuestInfo.txtbmsaccount.Value = TRANSFORM(lnBb_bbid)
			this.pgfInfoPage.pagGuestInfo.txtCollectedPoints.Value = lnCollectedPoints
			this.pgfInfoPage.pagGuestInfo.txtTotalPoints.Value = lnAvailablePoints
		ENDIF
	ENDPROC

	PROCEDURE setcontrolsource
	ENDPROC

	PROCEDURE setsize
		LPARAMETERS tnWidth, tnHeight
		
		this.Anchor = 0
		this.Width = tnWidth
		this.Height = tnHeight
		this.Anchor = 75
	ENDPROC

	PROCEDURE cboAd_country.getrowsourcebefore
		WITH this
			TEXT TO .jsql TEXTMERGE NOSHOW PRETEXT 15
				SELECT pl_charcod, pl_lang<<g_langnum>> AS pl_lang
					FROM picklist 
					WHERE pl_label = 'COUNTRY   ' ORDER BY 1
			ENDTEXT
			.jboundcolumn = 1
			.jcolumncount = 2
			.jcolumnwidths = "60,150"
		ENDWITH
		
		RETURN .T.
	ENDPROC

	PROCEDURE cboAd_lang.getrowsourcebefore
		WITH this
			TEXT TO .jsql TEXTMERGE NOSHOW PRETEXT 15
				SELECT pl_charcod, pl_lang<<g_langnum>> AS pl_lang
					FROM picklist 
					WHERE pl_label = 'LANGUAGE  ' ORDER BY 1
			ENDTEXT
			.jboundcolumn = 1
			.jcolumncount = 2
			.jcolumnwidths = "60,150"
		ENDWITH
		
		RETURN .T.
	ENDPROC

	PROCEDURE cboAd_titlcod.getrowsourcebefore
		this.cWhere = "ti_lang = " + sqlcnv(caadrmain.ad_lang,.T.)
		WITH this
			TEXT TO .jsql TEXTMERGE NOSHOW PRETEXT 15
				SELECT ti_titlcod, ti_title, ti_salute
					FROM title 
					WHERE <<this.cWhere>> 
					ORDER BY ti_titlcod
			ENDTEXT
			.jboundcolumn = 1
			.jcolumncount = 2
			.jcolumnwidths = "60,150,250"
		ENDWITH
		
		RETURN .T.
	ENDPROC

	PROCEDURE cboAd_titlcod.getrowsourceconditionunchanged
		LOCAL l_cNewWhere
		l_cNewWhere = "ti_lang = " + sqlcnv(caadrmain.ad_lang,.T.)
		IF this.cWhere == l_cNewWhere
			RETURN .T.
		ELSE
			RETURN .F.
		ENDIF
	ENDPROC

	PROCEDURE cboAd_titlcod.oninteractivechange
		LOCAL l_cCurAlias, l_cPersonName, l_cNewSalute
		
		l_cCurAlias = this.jcursor
		IF caadrmain.ad_title <> &l_cCurAlias..ti_title
			REPLACE ad_title WITH &l_cCurAlias..ti_title IN caadrmain
			this.Parent.txtAd_title.Refresh()
		ENDIF
		
		IF caadrmain.ad_title <> &l_cCurAlias..ti_title
			REPLACE ad_title WITH &l_cCurAlias..ti_title IN caadrmain
			this.Parent.txtAd_title.Refresh()
		ENDIF
		
		l_cPersonName = TRIM(flip(caadrmain.ad_lname))
		l_cNewSalute = ""
		DO makesalut IN address WITH TRIM(&l_cCurAlias..ti_salute), l_cPersonName, l_cNewSalute
		IF NOT EMPTY(l_cNewSalute) AND TRIM(caadrmain.ad_salute) <> l_cNewSalute
			REPLACE ad_salute WITH l_cNewSalute IN caadrmain
			this.Parent.txtAd_salute.Refresh()
		ENDIF
	ENDPROC

	PROCEDURE cboad_vipstat.beforevalueinsertintorowsource
		LPARAMETERS lp_cNewDisplayValue
		IF EMPTY(lp_cNewDisplayValue)
			RETURN ""
		ELSE
			RETURN dlookup("picklist", "pl_label = 'VIPSTATUS' AND pl_numcod = " + TRANSFORM(lp_cNewDisplayValue),"pl_lang"+g_langnum)
		ENDIF
	ENDPROC

	PROCEDURE cboad_vipstat.getrowsourcebefore
		WITH this
			TEXT TO .jsql TEXTMERGE NOSHOW PRETEXT 15
				SELECT pl_lang<<g_langnum>> AS pl_lang, pl_numcod
					FROM picklist 
					WHERE pl_label = 'VIPSTATUS '
					UNION SELECT CAST('' AS Char(25)), CAST(0 AS Numeric(2)) FROM param 
					ORDER BY 2
			ENDTEXT
			.jboundcolumn = 2
			.jcolumncount = 2
			.jcolumnwidths = "150,0"
		ENDWITH
		
		RETURN .T.
	ENDPROC

	PROCEDURE cboAd_zip.getrowsourcebefore
		this.cWhere = "zc_country = " + sqlcnv(caadrmain.ad_country,.T.)
		this.cRowSourceBoundField = "zc_zip"
		this.lAllowAutoInsert = .T.
		
		WITH this
			TEXT TO .jsql TEXTMERGE NOSHOW PRETEXT 15
				SELECT zc_zip, zc_city 
					FROM zipcode 
					WHERE <<this.cWhere>> 
					ORDER BY zc_zip
			ENDTEXT
			.jboundcolumn = 1
			.jcolumncount = 2
			.jcolumnwidths = "70,150"
		ENDWITH
		
		RETURN .T.
	ENDPROC

	PROCEDURE cboAd_zip.getrowsourceconditionunchanged
		LOCAL l_cNewWhere
		l_cNewWhere = "zc_country = " + sqlcnv(caadrmain.ad_country,.T.)
		IF this.cWhere == l_cNewWhere
			RETURN .T.
		ELSE
			RETURN .F.
		ENDIF
	ENDPROC

	PROCEDURE cboAd_zip.oninteractivechange
		LOCAL l_cCurAlias
		
		l_cCurAlias = this.jcursor
		IF caadrmain.ad_city <> &l_cCurAlias..zc_city AND NOT EMPTY(&l_cCurAlias..zc_city)
			REPLACE ad_city WITH &l_cCurAlias..zc_city IN caadrmain
			this.Parent.txtAd_city.Refresh()
		ENDIF
	ENDPROC

	PROCEDURE pgfInfoPage.pagCommunication.cboAd_mail1.getrowsourcebefore
		WITH this
			TEXT TO .jsql TEXTMERGE NOSHOW PRETEXT 15
				SELECT pl_charcod, pl_lang<<g_langnum>> AS pl_lang
					FROM picklist
					WHERE pl_label = 'MAILING   '
					UNION SELECT CAST('' AS Char(3)), CAST('' AS Char(25)) FROM param
					ORDER BY 1
			ENDTEXT
			.jboundcolumn = 1
			.jcolumncount = 2
			.jcolumnwidths = "60,150"
		ENDWITH
		
		RETURN .T.
	ENDPROC

	PROCEDURE pgfInfoPage.pagCommunication.cboAd_mail2.getrowsourcebefore
		WITH this
			TEXT TO .jsql TEXTMERGE NOSHOW PRETEXT 15
				SELECT pl_charcod, pl_lang<<g_langnum>> AS pl_lang
					FROM picklist
					WHERE pl_label = 'MAILING   '
					UNION SELECT CAST('' AS Char(3)), CAST('' AS Char(25)) FROM param
					ORDER BY 1
			ENDTEXT
			.jboundcolumn = 1
			.jcolumncount = 2
			.jcolumnwidths = "60,150"
		ENDWITH
		
		RETURN .T.
	ENDPROC

	PROCEDURE pgfInfoPage.pagCommunication.cboAd_mail3.getrowsourcebefore
		WITH this
			TEXT TO .jsql TEXTMERGE NOSHOW PRETEXT 15
				SELECT pl_charcod, pl_lang<<g_langnum>> AS pl_lang
					FROM picklist
					WHERE pl_label = 'MAILING   '
					UNION SELECT CAST('' AS Char(3)), CAST('' AS Char(25)) FROM param
					ORDER BY 1
			ENDTEXT
			.jboundcolumn = 1
			.jcolumncount = 2
			.jcolumnwidths = "60,150"
		ENDWITH
		
		RETURN .T.
	ENDPROC

	PROCEDURE pgfInfoPage.pagCommunication.cboAd_mail4.getrowsourcebefore
		WITH this
			TEXT TO .jsql TEXTMERGE NOSHOW PRETEXT 15
				SELECT pl_charcod, pl_lang<<g_langnum>> AS pl_lang
					FROM picklist
					WHERE pl_label = 'MAILING   '
					UNION SELECT CAST('' AS Char(3)), CAST('' AS Char(25)) FROM param
					ORDER BY 1
			ENDTEXT
			.jboundcolumn = 1
			.jcolumncount = 2
			.jcolumnwidths = "60,150"
		ENDWITH
		
		RETURN .T.
	ENDPROC

	PROCEDURE pgfInfoPage.pagCommunication.cboAd_mail5.getrowsourcebefore
		WITH this
			TEXT TO .jsql TEXTMERGE NOSHOW PRETEXT 15
				SELECT pl_charcod, pl_lang<<g_langnum>> AS pl_lang
					FROM picklist
					WHERE pl_label = 'MAILING   '
					UNION SELECT CAST('' AS Char(3)), CAST('' AS Char(25)) FROM param
					ORDER BY 1
			ENDTEXT
			.jboundcolumn = 1
			.jcolumncount = 2
			.jcolumnwidths = "60,150"
		ENDWITH
		
		RETURN .T.
	ENDPROC

	PROCEDURE pgfInfoPage.pagCommunication.cboAd_mail5.KeyPress
		LPARAMETERS nKeyCode, nShiftAltCtrl
		
		DO CASE
			CASE nShiftAltCtrl = 0 AND INLIST(nKeyCode, 9, 13)
				NODEFAULT
				this.Parent.Parent.ActivePage = 2
				this.Parent.Parent.pagGuestInfo.dtxtAd_birth.SetFocus()
			OTHERWISE
				DODEFAULT(nKeyCode, nShiftAltCtrl)
		ENDCASE
	ENDPROC

	PROCEDURE pgfInfoPage.pagCommunication.cmdBrowse.Click
		LOCAL l_cWebAddress, l_cWebName
		
		l_cWebAddress = ALLTRIM(this.Parent.txtAd_website.Value)
		l_cWebName = ALLTRIM(this.Parent.Parent.Parent.txtAd_company.Value)
		IF EMPTY(l_cWebName) 
			l_cWebName = ALLTRIM(this.Parent.Parent.Parent.txtAd_lname.Value) + " " + ALLTRIM(this.Parent.Parent.Parent.txtAd_fname.Value)
		ENDIF
		
		IF EMPTY(l_cWebAddress)
			MESSAGEBOX("Keine Internet Adresse!", 48, GetLangText("RESERV2","TW_INFO"))
		ELSE
			thisform.Mail.NavigateTo(l_cWebAddress)
		ENDIF
	ENDPROC

	PROCEDURE pgfInfoPage.pagCommunication.cmdMail.Click
		LPARAMETERS lp_lApartner
		LOCAL l_cEmail, l_cDisplayName
		
		l_cEmail = ALLTRIM(this.Parent.txtAd_email.Value)
		l_cDisplayName = ALLTRIM(this.Parent.Parent.Parent.txtAd_company.Value)
		IF EMPTY(l_cDisplayName) 
			l_cDisplayName = ALLTRIM(this.Parent.Parent.Parent.txtAd_lname.Value) + " " + ALLTRIM(this.Parent.Parent.Parent.txtAd_fname.Value)
		ENDIF
		ProcEmail("PESendMail", l_cEmail,,l_cDisplayName)
		
		RETURN .T.
	ENDPROC

	PROCEDURE txtAd_city.KeyPress
		LPARAMETERS nKeyCode, nShiftAltCtrl
		
		DO CASE
			CASE nShiftAltCtrl = 0 AND INLIST(nKeyCode, 9, 13)
				NODEFAULT
				this.Parent.pgfInfoPage.ActivePage = 1
				this.Parent.pgfInfoPage.pagCommunication.txtAd_phone.SetFocus()
			OTHERWISE
				DODEFAULT(nKeyCode, nShiftAltCtrl)
		ENDCASE
	ENDPROC

ENDDEFINE

DEFINE CLASS cad_vipstat AS jcombobox OF "jbase.vcx" 
 	*< CLASSDATA: Baseclass="combobox" Timestamp="" Scale="Pixels" Uniqueid="" />

	jboundcolumn = 2
	jcolumncount = 2
	jcolumnwidths = 150,40
	Name = "cad_vipstat"
	Style = 2
	Value = 0
	
	PROCEDURE Init
		TEXT TO this.jsql TEXTMERGE NOSHOW PRETEXT 15
		SELECT pl_lang<<g_langnum>> AS pl_lang, pl_numcod FROM picklist WHERE pl_label = 'VIPSTATUS'
		UNION 
		SELECT '                         ' AS pl_lang, 000 AS pl_numcod FROM param WHERE 1=1
		ORDER BY 2
		ENDTEXT
		
		DODEFAULT()
		
		RETURN .T.
	ENDPROC

ENDDEFINE

DEFINE CLASS cadrrefview AS sftreeviewcursor OF "..\common\misc\sfwtreeview\sftreeview.vcx" 
 	*< CLASSDATA: Baseclass="container" Timestamp="" Scale="Pixels" Uniqueid="" />

	*<DefinedPropArrayMethod>
		*m: addreferral
		*m: onselectaddress
		*p: naddrid
	*</DefinedPropArrayMethod>

	ccursorstructure = ID C(60), TYPE C(60), PARENTID C(60), PARENTTYPE C(60), TEXT C(60), IMAGE C(20), SELIMAGE C(20), EXPIMAGE C(20), SORTED L, NODEKEY C(60), addrid I
	naddrid = 0
	Name = "cadrrefview"
	oImageList.Left = 160
	oImageList.Name = "oImageList"
	oImageList.Top = 0
	oStack.Name = "oStack"
	oTree.Height = 200
	oTree.Name = "oTree"
	oTree.Width = 210
	tmrSync.Name = "tmrSync"
	
	PROCEDURE addreferral
		LPARAMETERS lp_nAddrId, lp_cParentType, lp_nCounter, lp_cParentId
		LOCAL l_nSelect, l_nRecno, l_cType, l_nCounter
		
		l_nSelect = SELECT()
		SELECT referral
		l_nRecno = RECNO()
		lp_nCounter = lp_nCounter + 1
		SCAN FOR re_from = lp_nAddrId AND SEEK(referral.re_to,"address","tag1") AND NOT SEEK(referral.re_to,Thisform.oTreeView.cCursorAlias,"addrid")
			l_cType = "referral"+TRANSFORM(lp_nCounter)
			INSERT INTO (Thisform.oTreeView.cCursorAlias) ;
					(ID, ;
					TYPE, ;
					PARENTID, ;
					PARENTTYPE, ;
					TEXT, ;
					IMAGE, ;
					ADDRID) ;
				VALUES ;
					(transform(referral.re_id), ;
					l_cType, ;
					lp_cParentId, ;
					lp_cParentType, ;
					TRIM(IIF(EMPTY(address.ad_company),address.ad_lname,address.ad_company)) + " " + ALLTRIM(address.ad_street), ;
					"referral", ;
					address.ad_addrid)
		
					this.addreferral(referral.re_to, l_cType, lp_nCounter, transform(referral.re_id))
					
		ENDSCAN
		GO l_nRecno IN referral
		SELECT (l_nSelect)
		
		RETURN .T.
	ENDPROC

	PROCEDURE createtreeviewcursor
		DODEFAULT()
		SELECT (this.cCursorAlias)
		INDEX ON addrid TAG addrid
	ENDPROC

	PROCEDURE filltreeviewcursor
		LOCAL lcAlias, l_nCounter, l_cWhere, l_cSql, l_cCur
		lcAlias = This.cCursorAlias
		l_nCounter = 0
		IF EMPTY(this.naddrid)
			l_cWhere = ".T."
		ELSE
			l_cWhere = "re_from = " + sqlcnv(this.naddrid)
		ENDIF
		l_cSql = "SELECT re_from FROM referral WHERE " + l_cWhere + " GROUP BY 1 ORDER BY re_from"
		l_cCur = sqlcursor(l_cSql,"",.F.,"",.NULL.,.T.)
		SELECT (l_cCur)
		SCAN ALL
			* Here add addresses to root
			= SEEK(&l_cCur..re_from,"address","tag1")
			
			INSERT INTO (This.cCursorAlias) ;
				(ID, ;
				TYPE, ;
				TEXT, ;
				IMAGE, ;
				SORTED, ;
				ADDRID) ;
			VALUES ;
				(TRANSFORM(&l_cCur..re_from), ;
				"referralroot", ;
				TRIM(IIF(EMPTY(address.ad_company),address.ad_lname,address.ad_company)) + " " + ALLTRIM(address.ad_street), ;
				"address", ;
				.T., ;
				address.ad_addrid)
		
			this.addreferral(&l_cCur..re_from, "referralroot", l_nCounter, TRANSFORM(&l_cCur..re_from))
		ENDSCAN
		
		dclose(l_cCur)
		
		RETURN .T.
	ENDPROC

	PROCEDURE loadimages
		with This.oImageList
		  .ListImages.Add(1, "address", ;
		    loadpicture("bitmap\icons\rootaddress.ico"))
		  .ListImages.Add(2, "referral", ;
		    loadpicture("bitmap\icons\openaddress.ico"))
		endwith
	ENDPROC

	PROCEDURE onselectaddress
	ENDPROC

	PROCEDURE oTree.DblClick
		*** ActiveX Control Event ***
		this.Parent.OnSelectAddress()
	ENDPROC

	PROCEDURE oTree.Refresh
		*** ActiveX Control Method ***
		
	ENDPROC

ENDDEFINE

DEFINE CLASS ccbotitle AS tcombobox OF "main.vcx" 
 	*< CLASSDATA: Baseclass="combobox" Timestamp="" Scale="Pixels" Uniqueid="" />

	*<DefinedPropArrayMethod>
		*m: changesalute
		*m: changetitle
		*m: checksalute
		*m: checktitle
		*p: ctablelangfield		&& ad_lang
		*p: ctablelnamefield		&& ad_lname, ap_lname
		*p: ctablesalutefield		&& ad_salute, ap_salute
		*p: ctabletitlefield		&& ad_title, ap_title
		*p: ctxttitlelangname		&& Name of textbox which is used to detect language change
		*p: jcursor
	*</DefinedPropArrayMethod>

	BoundTo = .T.
	ColumnCount = 2
	ColumnWidths = "30,200"
	ctablelangfield = address.ad_lang		&& ad_lang
	ctablelnamefield = address.ad_lname		&& ad_lname, ap_lname
	ctablesalutefield = address.ad_salute		&& ad_salute, ap_salute
	ctabletitlefield = address.ad_title		&& ad_title, ap_title
	ctxttitlelangname = 		&& Name of textbox which is used to detect language change
	DisabledForeColor = 0,0,0
	jcursor = 
	Name = "ccbotitle"
	SelectOnEntry = .T.
	
	PROCEDURE changesalute
		LPARAMETERS lp_cNewSalute
	ENDPROC

	PROCEDURE changetitle
		LPARAMETERS lp_cNewTitle
	ENDPROC

	PROCEDURE checksalute
		LPARAMETERS lp_lChange
		LOCAL l_cOldSalute, l_cNewSalute, l_cPersonName
		l_cOldSalute = TRIM(EVALUATE(this.ctablesalutefield))
		
		l_cPersonName = TRIM(flip(EVALUATE(this.ctablelnamefield)))
		l_cNewSalute = TRIM(EVALUATE(this.jcursor+".ti_salute"))
		IF NOT EMPTY(l_cNewSalute)
			DO makesalut IN address WITH l_cNewSalute, l_cPersonName, l_cNewSalute
			*l_cNewSalute = l_cNewSalute + IIF(EMPTY(l_cPersonName),[],[ ]) + l_cPersonName + [,]
		ENDIF
		
		IF NOT EMPTY(l_cNewSalute)
			IF EMPTY(l_cOldSalute) OR ;
					(l_cNewSalute<> l_cOldSalute AND (lp_lChange OR yesno(GetLangText("ADDRESS","TXT_OVERWRITE_SALUTE"))))
				
				this.ChangeSalute(l_cNewSalute)
			ENDIF
		ENDIF
		
		RETURN .T.
	ENDPROC

	PROCEDURE checktitle
		LOCAL l_cOldTitle, l_cNewTitle, l_lChange
		l_cOldTitle = EVALUATE(this.ctabletitlefield)
		l_cNewTitle = EVALUATE(this.jcursor+".ti_title")
		
		IF EMPTY(l_cOldTitle) OR ;
				(l_cNewTitle <> l_cOldTitle AND yesno(GetLangText("ADDRESS","TXT_OVERWRITE_TITLE")))
			l_lChange = .T.
			this.ChangeTitle(l_cNewTitle)
		ENDIF
			
		RETURN l_lChange
	ENDPROC

	PROCEDURE Destroy
		DODEFAULT()
		dclose(this.jcursor)
		
		RETURN .T.
	ENDPROC

	PROCEDURE Init
		LOCAL l_cRowSource
		
		DODEFAULT()
		
		this.ctxttitlelangname = "otxttitlelang"+SYS(2015)
		this.Parent.AddObject(this.ctxttitlelangname,"ctxttitlelang",this.Name,this.ctablelangfield)
		
		this.jcursor = SYS(2015)
		this.RowSourceType = 3
		
		TEXT TO l_cRowSource TEXTMERGE NOSHOW PRETEXT 2 + 8
		SELECT ti_titlcod, ti_title, ti_salute ;
		     FROM title ;
		     WHERE ti_lang = <<EVALUATE("this.Parent."+this.ctxttitlelangname+".ControlSource")>> ;
		     UNION ;
		     SELECT 00 AS ti_titlcod, SPACE(25) AS ti_title, SPACE(50) AS ti_salute ;
		     FROM param ;
		     ORDER BY ti_titlcod ;
		     INTO CURSOR <<this.jcursor>>
		ENDTEXT
		
		this.RowSource = STRTRAN(l_cRowSource,";","")
		
		RETURN .T.
	ENDPROC

	PROCEDURE LostFocus
		LOCAL l_lChange
		l_lChange = this.CheckTitle()
		this.CheckSalute(l_lChange)
		RETURN .T.
	ENDPROC

	PROCEDURE Refresh
		LOCAL l_oTxtRef
		l_oTxtRef = EVALUATE("this.Parent."+this.ctxttitlelangname)
		l_oTxtRef.Refresh()
		DODEFAULT()
		
		RETURN .T.
	ENDPROC

ENDDEFINE

DEFINE CLASS ctxttitlelang AS ttext OF "main.vcx" 
 	*< CLASSDATA: Baseclass="textbox" Timestamp="" Scale="Pixels" Uniqueid="" />

	*<DefinedPropArrayMethod>
		*m: value_assign
		*p: ctitlecodecomboname
	*</DefinedPropArrayMethod>

	ControlSource = "address.ad_lang"
	ctitlecodecomboname = .F.
	Enabled = .F.
	Name = "ctxttitlelang"
	TabStop = .F.
	
	PROCEDURE Init
		LPARAMETERS lp_cTitleCodeComboName, lp_cTableLangField
		this.cTitleCodeComboName = lp_cTitleCodeComboName
		IF NOT EMPTY(lp_cTableLangField)
			this.ControlSource = lp_cTableLangField
		ENDIF
		DODEFAULT()
		
		RETURN .T.
	ENDPROC

	PROCEDURE value_assign
		LPARAMETERS vNewVal
		LOCAL l_oComboRef, l_lRefresh
		IF this.Value <> vNewVal
			l_lRefresh = .T.
		ENDIF
		this.Value = vNewVal
		
		IF l_lRefresh
			l_oComboRef = EVALUATE("this.Parent."+this.cTitleCodeComboName)
			l_oComboRef.Requery()
			l_oComboRef.Refresh()
		ENDIF
		
		RETURN .T.
	ENDPROC

ENDDEFINE

DEFINE CLASS pa_guest_info AS tform OF "main.vcx" 
 	*< CLASSDATA: Baseclass="form" Timestamp="" Scale="Pixels" Uniqueid="" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="lblLastFirstName" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtto" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtfrom" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtcountry" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtLastName" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtFirstName" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblLangTitleCode" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cboLanguage" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblfromto" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cboTitleCode" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblCountry" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblTitle" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtTitle" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdOK" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cbocountry" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grdresaddr" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grdresaddr.Column1.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grdresaddr.Column1.Tcbogrid1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grdresaddr.Column2.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grdresaddr.Column2.Ttext1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grdresaddr.Column3.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grdresaddr.Column3.Ttext1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grdresaddr.Column4.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grdresaddr.Column4.Tcbogrid1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdEdit" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdExit" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdSave" UniqueID="" Timestamp="" />

	#INCLUDE "..\include\constdefines.h"
	*<DefinedPropArrayMethod>
		*m: changeenable
		*m: cmdsavecolor
		*m: filldefaultvalues
		*m: getgriddata
		*m: getreservationsetdates
		*m: gridrefresh
		*m: initgrid
		*m: onapply
		*m: oncancel
		*m: ondisable
		*m: onenable
		*m: onexit
		*m: onrefreshuppercontrols
		*m: onrowchange
		*m: onsavefromgrid
		*m: onupdatereservation
		*m: preparemode
		*m: refreshcontrolsources
		*m: savenow
		*m: setcontrolsource
		*m: setfocusfirsttime
		*p: clang
		*p: cmode		&& NEW, EDIT
		*p: cnewname
		*p: cresalias
		*p: dfrom
		*p: dto
		*p: lfirsttime
		*p: lforceedit
		*p: lstandalone		&& True when not called from reservat edit form
		*p: ntitlecode
		*p: ocheckreservat
		*p: oresaddrdata
		*p: oresdata
	*</DefinedPropArrayMethod>

	clang = 
	cmode = 		&& NEW, EDIT
	cnewname = 
	ControlBox = .T.
	cresalias = reservat
	dfrom = {}
	DoCreate = .T.
	dto = {}
	Height = 392
	Icon = ..\bitmap\icons\crdfle03.ico
	KeyPreview = .T.
	lfirsttime = .T.
	lforceedit = .F.
	lstandalone = .F.		&& True when not called from reservat edit form
	MaxButton = .T.
	MinButton = .F.
	Name = "pa_guest_info"
	ntitlecode = 0
	ocheckreservat = .NULL.
	oresaddrdata = .NULL.
	oresdata = .NULL.
	saveformsize = .T.
	savegridwidths = .T.
	ShowTips = .T.
	Width = 387
	WindowType = 1

	ADD OBJECT 'cbocountry' AS jcombobox WITH ;
		DisabledForeColor = 0,0,0, ;
		Height = 23, ;
		InputMask = "!!!", ;
		Left = 144, ;
		Name = "cbocountry", ;
		TabIndex = 7, ;
		Top = 84, ;
		Width = 60
		*< END OBJECT: ClassLib="jbase.vcx" BaseClass="combobox" />

	ADD OBJECT 'cboLanguage' AS tcombobox WITH ;
		BoundTo = .T., ;
		ColumnCount = 2, ;
		ColumnLines = .F., ;
		ColumnWidths = "50,100", ;
		DisabledForeColor = 0,0,0, ;
		Left = 144, ;
		Name = "cboLanguage", ;
		RowSourceType = 6, ;
		Style = 2, ;
		TabIndex = 4, ;
		Top = 36, ;
		ZOrderSet = 4
		*< END OBJECT: ClassLib="main.vcx" BaseClass="combobox" />

	ADD OBJECT 'cboTitleCode' AS tcombobox WITH ;
		BoundTo = .T., ;
		ColumnCount = 2, ;
		ColumnLines = .F., ;
		ColumnWidths = "50,100", ;
		DisabledForeColor = 0,0,0, ;
		Left = 245, ;
		Name = "cboTitleCode", ;
		RowSourceType = 6, ;
		Style = 2, ;
		TabIndex = 5, ;
		Top = 36, ;
		ZOrderSet = 5
		*< END OBJECT: ClassLib="main.vcx" BaseClass="combobox" />

	ADD OBJECT 'cmdEdit' AS tcommandbutton WITH ;
		Caption = "", ;
		Left = 15, ;
		Name = "cmdEdit", ;
		Picture = ..\bitmap\toolbar\edit.bmp, ;
		TabIndex = 14, ;
		Top = 168, ;
		Width = 27
		*< END OBJECT: ClassLib="main.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'cmdExit' AS tcommandbutton WITH ;
		Caption = "", ;
		Left = 73, ;
		Name = "cmdExit", ;
		Picture = ..\bitmap\toolbar\exit.bmp, ;
		TabIndex = 16, ;
		Top = 168, ;
		Width = 27
		*< END OBJECT: ClassLib="main.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'cmdOK' AS tcommandbutton WITH ;
		Caption = "cmdOK", ;
		Default = .T., ;
		Height = 27, ;
		Left = 282, ;
		Name = "cmdOK", ;
		TabIndex = 11, ;
		Top = 130, ;
		Width = 97, ;
		ZOrderSet = 8
		*< END OBJECT: ClassLib="main.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'cmdSave' AS tcommandbutton WITH ;
		Caption = "", ;
		Left = 44, ;
		Name = "cmdSave", ;
		Picture = ..\bitmap\toolbar\save.bmp, ;
		TabIndex = 16, ;
		Top = 168, ;
		Width = 27
		*< END OBJECT: ClassLib="main.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'grdresaddr' AS tgrid WITH ;
		ColumnCount = 4, ;
		DeleteMark = .F., ;
		Height = 178, ;
		Left = 12, ;
		lresizecolumns = .F., ;
		Name = "grdresaddr", ;
		setcolumns = .T., ;
		TabIndex = 17, ;
		Top = 206, ;
		Width = 372, ;
		Column1.Name = "Column1", ;
		Column1.Visible = .T., ;
		Column2.Name = "Column2", ;
		Column2.Visible = .T., ;
		Column3.Name = "Column3", ;
		Column3.Visible = .T., ;
		Column4.Name = "Column4", ;
		Column4.Visible = .T.
		*< END OBJECT: ClassLib="main.vcx" BaseClass="grid" />

	ADD OBJECT 'grdresaddr.Column1.Header1' AS header WITH ;
		Caption = "Header1", ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'grdresaddr.Column1.Tcbogrid1' AS tcbogrid WITH ;
		ColumnCount = 2, ;
		ColumnLines = .F., ;
		ColumnWidths = "150,50", ;
		Left = 58, ;
		Name = "Tcbogrid1", ;
		Top = 41
		*< END OBJECT: ClassLib="main.vcx" BaseClass="combobox" />

	ADD OBJECT 'grdresaddr.Column2.Header1' AS header WITH ;
		Caption = "Header1", ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'grdresaddr.Column2.Ttext1' AS ttext WITH ;
		Left = 42, ;
		Name = "Ttext1", ;
		Top = 29
		*< END OBJECT: ClassLib="main.vcx" BaseClass="textbox" />

	ADD OBJECT 'grdresaddr.Column3.Header1' AS header WITH ;
		Caption = "Header1", ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'grdresaddr.Column3.Ttext1' AS ttext WITH ;
		Left = 50, ;
		Name = "Ttext1", ;
		Top = 29
		*< END OBJECT: ClassLib="main.vcx" BaseClass="textbox" />

	ADD OBJECT 'grdresaddr.Column4.Header1' AS header WITH ;
		Caption = "Header1", ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'grdresaddr.Column4.Tcbogrid1' AS tcbogrid WITH ;
		ColumnCount = 2, ;
		ColumnLines = .F., ;
		ColumnWidths = "40,150", ;
		Left = 23, ;
		Name = "Tcbogrid1", ;
		Top = 21
		*< END OBJECT: ClassLib="main.vcx" BaseClass="combobox" />

	ADD OBJECT 'lblCountry' AS tlabel WITH ;
		AutoSize = .T., ;
		Caption = "lblCountry", ;
		Height = 17, ;
		Left = 12, ;
		Name = "lblCountry", ;
		TabIndex = 20, ;
		Top = 85, ;
		Width = 57, ;
		ZOrderSet = 6
		*< END OBJECT: ClassLib="main.vcx" BaseClass="label" />

	ADD OBJECT 'lblfromto' AS tlabel WITH ;
		AutoSize = .T., ;
		Caption = "lblfromto", ;
		Height = 17, ;
		Left = 12, ;
		Name = "lblfromto", ;
		TabIndex = 21, ;
		Top = 108, ;
		Width = 50, ;
		ZOrderSet = 6
		*< END OBJECT: ClassLib="main.vcx" BaseClass="label" />

	ADD OBJECT 'lblLangTitleCode' AS tlabel WITH ;
		AutoSize = .T., ;
		Caption = "lblLangTitle", ;
		Left = 12, ;
		Name = "lblLangTitleCode", ;
		TabIndex = 18, ;
		Top = 36, ;
		ZOrderSet = 3
		*< END OBJECT: ClassLib="main.vcx" BaseClass="label" />

	ADD OBJECT 'lblLastFirstName' AS tlabel WITH ;
		AutoSize = .T., ;
		Caption = "lblLastFirstName", ;
		Left = 12, ;
		Name = "lblLastFirstName", ;
		TabIndex = 1, ;
		Top = 15, ;
		ZOrderSet = 0
		*< END OBJECT: ClassLib="main.vcx" BaseClass="label" />

	ADD OBJECT 'lblTitle' AS tlabel WITH ;
		AutoSize = .T., ;
		Caption = "lblTitle", ;
		Left = 12, ;
		Name = "lblTitle", ;
		TabIndex = 19, ;
		Top = 60, ;
		ZOrderSet = 6
		*< END OBJECT: ClassLib="main.vcx" BaseClass="label" />

	ADD OBJECT 'txtcountry' AS ttext WITH ;
		DisabledForeColor = 0,0,0, ;
		Enabled = .F., ;
		FontBold = .T., ;
		Height = 23, ;
		Left = 206, ;
		Name = "txtcountry", ;
		TabIndex = 8, ;
		Top = 84, ;
		Width = 139, ;
		ZOrderSet = 1
		*< END OBJECT: ClassLib="main.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtFirstName' AS ttext WITH ;
		DisabledForeColor = 0,0,0, ;
		Format = "K", ;
		InputMask = (REPLICATE("X",20)), ;
		Left = 245, ;
		Name = "txtFirstName", ;
		TabIndex = 3, ;
		Top = 12, ;
		ZOrderSet = 2
		*< END OBJECT: ClassLib="main.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtfrom' AS tdatectrl WITH ;
		Height = 23, ;
		Left = 144, ;
		Name = "txtfrom", ;
		TabIndex = 9, ;
		Top = 108, ;
		Width = 120, ;
		ZOrderSet = 1
		*< END OBJECT: ClassLib="main.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtLastName' AS ttext WITH ;
		DisabledForeColor = 0,0,0, ;
		FontBold = .T., ;
		InputMask = (REPLICATE("X",30)), ;
		Left = 144, ;
		Name = "txtLastName", ;
		TabIndex = 2, ;
		Top = 12, ;
		ZOrderSet = 1
		*< END OBJECT: ClassLib="main.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtTitle' AS ttext WITH ;
		DisabledForeColor = 0,0,0, ;
		Enabled = .F., ;
		Left = 144, ;
		Name = "txtTitle", ;
		TabIndex = 6, ;
		Top = 60, ;
		Width = 201, ;
		ZOrderSet = 7
		*< END OBJECT: ClassLib="main.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtto' AS tdatectrl WITH ;
		Height = 23, ;
		Left = 144, ;
		Name = "txtto", ;
		TabIndex = 10, ;
		Top = 132, ;
		Width = 120, ;
		ZOrderSet = 1
		*< END OBJECT: ClassLib="main.vcx" BaseClass="textbox" />
	
	PROCEDURE Activate
		IF this.lFirstTime
			this.lFirstTime = .F.
			this.GridRefresh(.F.)
			this.PrepareMode()
			this.SetFocusFirstTime()
		ENDIF
	ENDPROC

	PROCEDURE assigncaption
		LOCAL l_cResAlias
		l_cResAlias = this.cResAlias
		
		* don't show departure date to user
		this.Caption = GetLangText("PHONE","TXT_GUEST") + " " + ;
				DTOC(this.oResData.setarrdate) + " - " + DTOC(this.oResData.setdepdate-1) + ;
				"   " + ;
				Get_rm_rmname(&l_cResAlias..rs_roomnum) + " " + get_rt_roomtyp(&l_cResAlias..rs_roomtyp)
		
		this.lblLastFirstName.Caption = GetLangText("RESERV2","TH_LNAME")+"/"+GetLangText("RESERV2","TH_FNAME")
		this.lblLangTitleCode.Caption = GetLangText("RESERV2","TH_LANG")+"/"+GetLangText("RESERV2","TH_TITLECODE")
		this.lblTitle.Caption = GetLangText("RESERV2","TH_TITLE")
		this.lblCountry.Caption = GetLangText("RESERVAT","T_COUNTRY")
		this.lblfromto.Caption = GetLangText("MGRFINAN","T_FROMTO")
		this.cmdoK.Caption = GetLangText("BILL","T_APPLY")
		
		this.grdresaddr.Column0.Header1.Caption = GetLangText("ACT","T_DATE")
		this.grdresaddr.Column1.Header1.Caption = GetLangText("ADDRESS","TXT_TITLE")
		this.grdresaddr.Column2.Header1.Caption = GetLangText("ADDRESS","TXT_LNAME")
		this.grdresaddr.Column3.Header1.Caption = GetLangText("ADDRESS","TXT_FIRSTNAME")
		this.grdresaddr.Column4.Header1.Caption = GetLangText("ADDRESS","TXT_COUNTRY")
		
		this.cmdedit.ToolTipText = GetLangText("MANAGER","TT_EDIT")
		this.cmdsave.ToolTipText = GetLangText("GROUPBIL","TT_SAVE")
		this.cmdexit.ToolTipText = GetLangText("MANAGER","TT_EXIT")
	ENDPROC

	PROCEDURE changeenable
		LPARAMETERS lp_lEnable
		
		STORE lp_lEnable TO ;
			this.txtLastName.Enabled, ;
			this.txtFirstName.Enabled, ;
			this.cboLanguage.Enabled, ;
			this.cboTitleCode.Enabled, ;
			this.cbocountry.Enabled, ;
			this.txtfrom.Enabled, ;
			this.txtto.Enabled, ;
			this.cmdoK.Enabled
		
		RETURN .T.
	ENDPROC

	PROCEDURE cmdsavecolor
		LPARAMETERS lp_lRed
		IF NOT this.lStandAlone
			RETURN .T.
		ENDIF
		IF lp_lRed
			this.cmdSave.BackColor = RGB(255,0,0)
		ELSE
			this.cmdSave.BackColor = RGB(235,233,237)
		ENDIF
		
		RETURN .T.
	ENDPROC

	PROCEDURE filldefaultvalues
		#DEFINE C_FORCE_LANG_COMBO .T.
		LOCAL l_cResAlias
		l_cResAlias = this.cResAlias
		IF EMPTY(this.oResAddrData.rg_country)
			this.oResAddrData.rg_country = DLookUp("address", "ad_addrid = " + SqlCnv(&l_cResAlias..rs_compid), "ad_country")
		ENDIF
		IF ALLTRIM(this.oResAddrData.rg_lname) == RESADDR_GUEST_NOT_SELECTED
			this.oResAddrData.rg_lname = ""
			this.txtLastName.Refresh()
		ENDIF
		this.Refreshcontrolsources(C_FORCE_LANG_COMBO)
		RETURN .T.
	ENDPROC

	PROCEDURE getgriddata
		LOCAL l_cCur
		l_cCur = PAResAddrGetData(this.cResAlias)
		
		RETURN l_cCur
	ENDPROC

	PROCEDURE getreservationsetdates
		LOCAL l_cCur
		
		l_cCur = PAResAddrGetResDates(this.cResAlias, this.oCheckReservat)
		SCATTER NAME this.oResData
		dclose(l_cCur)
		
		RETURN .T.
	ENDPROC

	PROCEDURE gridrefresh
		LPARAMETERS lp_lDontRemoveFocus
		LOCAL l_nSelect, l_cCur, l_nRecNo, i, l_dDate, l_oData, l_dLastDate, l_dFirstDate
		l_nSelect = SELECT()
		IF NOT lp_lDontRemoveFocus
			this.cmdEdit.SetFocus()
		ENDIF
		l_cCur = this.GetGridData()
		SELECT curresaddrgrid
		l_nRecNo = RECNO()
		ZAP
		*APPEND FROM DBF(l_cCur)
		SCATTER NAME l_oData BLANK
		FOR i = 1 TO this.oResData.setdepdate - this.oResData.setarrdate + 1
			l_oData.cur_date = this.oResData.setarrdate + i - 1
			INSERT INTO curresaddrgrid FROM NAME l_oData
		ENDFOR
		SELECT &l_cCur
		SCAN ALL
			l_dLastDate = PAResAddrGetToDate(this.oResData.setarrdate,&l_cCur..rg_today)
			l_dFirstDate = PAResAddrGetFromDate(this.oResData.setarrdate,&l_cCur..rg_fromday)
			IF l_dFirstDate = l_dLastDate
				l_dLastDate = l_dLastDate + 1
			ENDIF
			FOR i = 1 TO l_dLastDate - l_dFirstDate + 1
				l_dDate = PAResAddrGetFromDate(l_dFirstDate,i)
				IF l_dDate = l_dLastDate AND l_dLastDate <> this.oResData.setdepdate
					* don't get last date of interval, when this is not last date of reservation,
					* to prevent overlapping
					EXIT
				ENDIF
				SELECT curresaddrgrid
				LOCATE FOR cur_date = l_dDate
				SELECT &l_cCur
				SCATTER NAME l_oData
				ADDPROPERTY(l_oData,"cur_date",l_dDate)
				IF NOT FOUND("curresaddrgrid")
					INSERT INTO curresaddrgrid FROM NAME l_oData
				ELSE
					SELECT curresaddrgrid
					GATHER NAME l_oData
				ENDIF
				SELECT &l_cCur
			ENDFOR
		ENDSCAN
		
		* delete last day
		GO BOTTOM IN curresaddrgrid
		DELETE IN curresaddrgrid
		
		GO l_nRecNo IN curresaddrgrid
		
		SELECT curresaddrgridedit
		ZAP
		APPEND FROM DBF("curresaddrgrid")
		GO l_nRecNo IN curresaddrgridedit
		IF NOT lp_lDontRemoveFocus
			this.grdresaddr.SetFocus()
		ENDIF
		dclose(l_cCur)
		SELECT (l_nSelect)
		
		RETURN .T.
	ENDPROC

	PROCEDURE Init
		LPARAMETERS lp_cResAlias, lp_oCheckReservat, lp_lStandAlone, lp_cNewName, lp_lForceEdit
		this.cResAlias = lp_cResAlias
		this.oCheckReservat = lp_oCheckReservat
		this.lStandAlone = lp_lStandAlone
		this.lForceEdit = lp_lForceEdit
		
		*!*	IF NOT this.lStandAlone
		*!*		STORE .F. TO this.cmdSave.Enabled, this.cmdSave.Visible
		*!*	ENDIF
		
		* Here adjust to date in last interval. It can happen, when user changed rs_depdate in new reservation,
		* that this was'nt changed in resaddr interval.
		this.ocheckreservat.rs_rgid_check(this.cresalias)
		
		
		this.GetReservationSetDates()
		this.InitGrid()
		this.SetControlSource()
		
		DODEFAULT()
		
		this.AssignCaption()
		
		IF EMPTY(lp_cNewName)
			this.cnewname = PROPER(ALLTRIM(&lp_cResAlias..rs_lname))
		ELSE
			this.cnewname = PROPER(ALLTRIM(lp_cNewName))
		ENDIF
	ENDPROC

	PROCEDURE initgrid
		LOCAL l_cCur, i, l_cSql
		l_cCur = this.GetGridData()
		
		SELECT *, {} AS cur_date FROM &l_cCur WHERE .F. INTO CURSOR curresaddrgrid READWRITE
		INDEX ON cur_date TAG TAG1
		SELECT * FROM curresaddrgrid INTO CURSOR curresaddrgridedit READWRITE
		INDEX ON cur_date TAG TAG1
		
		this.grdresaddr.RecordSource = "curresaddrgridedit"
		this.grdresaddr.column0.ControlSource = "curresaddrgridedit.cur_date"
		
		this.grdresaddr.column1.tcbogrid1.RowSourceType = 6
		this.grdresaddr.column1.tcbogrid1.BoundTo = .T.
		this.grdresaddr.column1.tcbogrid1.RowSource = "title_gs_grid.ti_title, ti_titlcod"
		this.grdresaddr.column1.ControlSource = "curresaddrgridedit.rg_title"
		
		this.grdresaddr.column2.ControlSource = "curresaddrgridedit.rg_lname"
		this.grdresaddr.column3.ControlSource = "curresaddrgridedit.rg_fname"
		
		l_cSql = ""
		TEXT TO l_cSql TEXTMERGE NOSHOW PRETEXT 15
			SELECT pl_charcod, pl_lang<<g_langnum>> AS pl_lang FROM picklist 
				WHERE pl_label = <<sqlcnv("COUNTRY",.T.)>> 
				UNION 
				SELECT CAST(<<sqlcnv("",.T.)>> AS Char(3)) AS pl_charcod, 
				CAST(<<sqlcnv("",.T.)>> AS Char(25)) AS pl_lang 
				FROM param 
				WHERE <<sqlcnv(.T.,.T.)>>
				ORDER BY pl_charcod
		ENDTEXT
		sqlcursor(l_cSql,"cur_country_grid",.F.,"",.NULL.,.T.)
		this.grdresaddr.column4.tcbogrid1.RowSourceType = 6
		this.grdresaddr.column4.tcbogrid1.BoundTo = .T.
		this.grdresaddr.column4.tcbogrid1.RowSource = "cur_country_grid.pl_charcod, pl_lang"
		this.grdresaddr.column4.ControlSource = "curresaddrgridedit.rg_country"
		
		dclose(l_cCur)
		
		this.grdresaddr.Init()
		this.grdresaddr.SetAll("ReadOnly",.F.,"Column")
		
		RETURN .T.
	ENDPROC

	PROCEDURE KeyPress
		LPARAMETERS nKeyCode, nShiftAltCtrl
		DO CASE
			CASE nKeyCode = 5 AND nShiftAltCtrl = 2 AND this.cmdEdit.Enabled && Ctrl + E Edit
				this.cmdEdit.Click()
				NODEFAULT
			CASE nKeyCode = 19 AND nShiftAltCtrl = 2 AND this.cmdSave.Enabled && Ctrl + S Save 
				this.cmdSave.Click()
				NODEFAULT
			CASE nKeyCode = 27 && Esc Close
				this.cmdExit.Click()
				NODEFAULT
		ENDCASE
	ENDPROC

	PROCEDURE Load
		LOCAL l_cMacro
		l_cMacro = "pl_lang" + g_langnum
		SELECT pl_charcod, &l_cMacro AS pl_lang FROM picklist ;
			INNER JOIN title ON pl_charcod = ti_lang ;
			WHERE pl_label = "LANGUAGE" ;
			GROUP BY pl_charcod, pl_lang ;
			INTO CURSOR lang_gs
		SELECT ti_titlcod, ti_title, ti_lang FROM title ;
			ORDER BY ti_titlcod ;
			INTO CURSOR title_gs
		SELECT * FROM title_gs INTO CURSOR title_gs_grid
	ENDPROC

	PROCEDURE onapply
		this.OnSave()
		this.OnEdit(.T.)
		this.grdresaddr.SetFocus()
	ENDPROC

	PROCEDURE oncancel
		this.cMode = "SAVED"
		this.RefreshControlSources()
		*this.GridRefresh()
		
		RETURN .T.
	ENDPROC

	PROCEDURE ondelete
		LOCAL l_nSelect
		IF EMPTY(curresaddrgrid.rg_rgid)
			RETURN .T.
		ENDIF
		
		l_nSelect = SELECT()
		
		IF INLIST(this.cMode, "NEW","EDIT")
			this.OnCancel()
		ENDIF
		
		SELECT curresaddrgrid
		SCATTER NAME this.oResaddrData MEMO
		
		this.oResaddrdata.rg_lname = RESADDR_GUEST_NOT_SELECTED
		this.oResaddrdata.rg_fname= ""
		this.oResaddrdata.rg_title = ""
		this.oResaddrdata.rg_country = ""
		
		this.OnSave()
		
		SELECT (l_nSelect)
		
		RETURN .T.
	ENDPROC

	PROCEDURE ondisable
		
		*this.ChangeEnable(.F.)
		
		RETURN .T.
	ENDPROC

	PROCEDURE onedit
		LPARAMETERS lp_lNoSetFocus
		LOCAL l_nSelect
		
		*!*	IF this.cMode = "EDIT"
		*!*		thisform.Refresh()
		*!*		RETURN .T.
		*!*	ENDIF
		
		IF .F.&&EMPTY(this.oResaddrData.rg_rgid)
			this.OnNew("",curresaddrgrid.cur_date)
		ELSE
			
			l_nSelect = SELECT()
		
			SELECT curresaddrgrid
			SCATTER NAME this.oResaddrData MEMO
		
			this.cMode = "EDIT"
		
			this.RefreshControlSources()
		
			this.FillDefaultValues()
			
		
			thisform.Refresh()
		
			SELECT (l_nSelect)
			IF NOT lp_lNoSetFocus
				this.txtLastName.SetFocus()	
			ENDIF
		ENDIF
	ENDPROC

	PROCEDURE onenable
		this.ChangeEnable(.T.)
		
		RETURN .T.
	ENDPROC

	PROCEDURE onexit
		LOCAL l_cCur, l_cResAlias, l_nSelect, l_cSql
		IF this.lStandAlone AND this.cmdSave.BackColor <> RGB(235,233,237)
			* Changes not saved
			IF NOT yesno(GetLangText("RESERVAT","TXT_LOSECHANGES"))
				this.cmdSave.SetFocus()
				RETURN .T.
			ENDIF
		ENDIF
		
		l_cResAlias = this.cResAlias
		l_cCur = SYS(2015)
		l_nSelect = SELECT()
		TEXT TO l_cSql TEXTMERGE NOSHOW PRETEXT 15
		SELECT MIN(PAResAddrGetFromDate(<<sqlcnv(this.oResData.setarrdate)>>, rg_fromday)) AS arrdate, 
			MAX(PAResAddrGetToDate(<<sqlcnv(this.oResData.setarrdate)>>, rg_today)) AS depdate 
			FROM curresaddrgrid 
			INTO CURSOR (l_cCur)
		ENDTEXT
		&l_cSql
		IF RECCOUNT()>0
			IF arrdate < this.oResData.setarrdate OR depdate > this.oResData.setdepdate
				alert(GetLangText("RECURRES","TXT_DATE_NOT_VALID"))
			ENDIF
		ENDIF
		
		dclose(l_cCur)
		
		IF this.lStandAlone
			DoTableRevert(.T.,"resaddr")
		ELSE
			this.OnUpdateReservation()
		ENDIF
		
		SELECT (l_nSelect)
		
		this.Release()
	ENDPROC

	PROCEDURE onnew
		LPARAMETERS lp_cLName, lp_dDate
		LOCAL l_cResAlias, l_nSelect
		LOCAL ARRAY l_aResult(1)
		l_cResAlias = this.cResAlias
		l_nSelect = SELECT()
		
		IF EMPTY(lp_cLName)
			lp_cLName = ""
		ENDIF
		
		SELECT curresaddrgrid
		SCATTER NAME this.oResaddrData MEMO BLANK
		this.oResaddrData.rg_reserid = &l_cResAlias..rs_reserid
		this.oResaddrData.rg_lname = lp_cLName
		
		IF EMPTY(lp_dDate)
			SELECT MAX(rg_today) FROM curresaddrgrid INTO ARRAY l_aResult
		
			IF EMPTY(l_aResult(1))
				l_aResult(1) = 1
			ENDIF
			
			this.oResaddrData.rg_fromday = l_aResult(1)
			this.oResaddrData.rg_today = this.oResData.setdepdate - this.oResData.setarrdate + 1
			
		ELSE
			this.oResaddrData.rg_fromday = lp_dDate - this.oResData.setarrdate + 1
			this.oResaddrData.rg_today = this.oResaddrData.rg_fromday + 1
		ENDIF
		
		this.oResaddrdata.rg_country = DLookUp("address", "ad_addrid = " + SqlCnv(&l_cResAlias..rs_compid), "ad_country")
		this.cMode = "NEW"
		
		this.RefreshControlSources()
		
		this.FillDefaultValues()
		
		thisform.Refresh()
		
		SELECT (l_nSelect)
		
		this.txtLastName.SetFocus()
	ENDPROC

	PROCEDURE onrefreshuppercontrols
		this.txtLastName.Refresh()
		this.txtFirstName.Refresh()
		this.cboTitleCode.Refresh()
		this.txtTitle.Refresh()
		this.cbocountry.Refresh()
		this.txtcountry.Refresh()
	ENDPROC

	PROCEDURE onrowchange
		LOCAL l_nSelect
		l_nSelect = SELECT()
		*!*	IF INLIST(this.cMode, "NEW","EDIT")
		*!*		this.OnCancel()
		*!*	ENDIF
		SELECT curresaddrgrid
		LOCATE FOR cur_date = curresaddrgridedit.cur_date
		*SCATTER NAME this.oResaddrData MEMO
		
		this.GridRefresh()
		*this.RefreshControlSources()
		*thisform.Refresh()
		
		this.OnEdit(.T.)
		
		SELECT(l_nSelect)
	ENDPROC

	PROCEDURE onsave
		LPARAMETERS lp_lDontRefreshGrid
		LOCAL l_cResAlias, l_nSelect, l_nValid, l_oReservat, l_cResAddrCur, l_nOldFromDay, l_nNewFromDay, ;
				l_nOldToDay, l_nNewToDay
		*!*	IF this.cMode = "SAVED"
		*!*		RETURN .T.
		*!*	ENDIF
		
		l_cResAlias = thisform.cResAlias
		l_nSelect = SELECT()
		
		l_nOldFromDay = this.oresaddrdata.rg_fromday
		l_nNewFromDay = this.dFrom - this.oResData.setarrdate + 1
		this.oresaddrdata.rg_fromday = l_nNewFromDay
		
		* add departure date here
		l_nOldToDay = this.oresaddrdata.rg_today
		l_nNewToDay = this.dTo - this.oResData.setarrdate + 1 + 1
		this.oresaddrdata.rg_today = l_nNewToDay
		
		DO PAResAddrValid IN procaddress WITH l_nValid, this.oResAddrData, this.oResData.setarrdate, this.oResData.setdepdate
		DO CASE
			CASE l_nValid = 1
				thisform.txtfrom.SetFocus()
				RETURN .F.
			CASE l_nValid = 2
				thisform.txtto.SetFocus()
				RETURN .F.
			CASE l_nValid = 3
				thisform.txtto.SetFocus()
				alert(GetLangText("RESERVAT","TXT_NIGHTS_NOT_GREATER"))
				RETURN .F.
			OTHERWISE
				* OK
		ENDCASE
				
		* Determine save mode. If user changed guest data only for some part of existing interval, then must
		* insert new interval.
		*!*	IF ALLTRIM(curresaddrgrid.rg_lname) <> RESADDR_GUEST_NOT_SELECTED AND ;
		*!*			(this.oresaddrdata.rg_lname <> curresaddrgrid.rg_lname OR ;
		*!*			this.oresaddrdata.rg_fname <> curresaddrgrid.rg_fname) AND ;
		*!*			(this.oresaddrdata.rg_fromday <> curresaddrgrid.rg_fromday OR ;
		*!*			this.oresaddrdata.rg_today <> curresaddrgrid.rg_today)
		*!*		this.cMode = "NEW"
		*!*	ENDIF
		
		IF (this.oresaddrdata.rg_lname <> curresaddrgrid.rg_lname OR ;
				this.oresaddrdata.rg_fname <> curresaddrgrid.rg_fname) AND ;
				(this.oresaddrdata.rg_fromday <> curresaddrgrid.rg_fromday OR ;
				this.oresaddrdata.rg_today <> curresaddrgrid.rg_today)
			this.cMode = "NEW"
		ENDIF
		
		
		IF this.cMode = "NEW"
			PAResAddrNew(this.oResAddrData)
		ELSE
			PAResAddrUpdate(this.oResAddrData, &l_cResAlias..rs_reserid)
		ENDIF
		
		* Adjust overlaped other intervals
		PAResAddrAdjust(this.oResAddrData, &l_cResAlias..rs_reserid, l_cResAlias)
		
		* Check and adjust all intervals, to eleminate "time holes"
		PAResAddrAdjustAllIntervals(l_cResAlias, this.oResData.setarrdate, this.oResData.setdepdate)
		
		this.cMode = "SAVED"
		
		*this.SaveNow()
		
		IF NOT lp_lDontRefreshGrid
			this.GridRefresh()
			this.RefreshControlSources()
		ENDIF
		
		*this.OnEdit(.T.)
		
		this.CmdSaveColor(.T.)
		
		SELECT (l_nSelect)
		
		RETURN .T.
	ENDPROC

	PROCEDURE onsavefromgrid
		IF curresaddrgrid.rg_lname <> curresaddrgridedit.rg_lname OR ;
				curresaddrgrid.rg_fname <> curresaddrgridedit.rg_fname OR ;
				curresaddrgrid.rg_title <> curresaddrgridedit.rg_title OR ;
				curresaddrgrid.rg_country <> curresaddrgridedit.rg_country
		
			this.oresaddrdata.rg_lname = curresaddrgridedit.rg_lname
			this.oresaddrdata.rg_fname = curresaddrgridedit.rg_fname
			this.oresaddrdata.rg_title = curresaddrgridedit.rg_title
			this.oresaddrdata.rg_country = curresaddrgridedit.rg_country
		
			this.OnSave(.T.)
			
			this.OnRefreshUpperControls()
		ENDIF
	ENDPROC

	PROCEDURE onupdatereservation
		LOCAL l_oReservat, l_cResAlias
		l_cResAlias = this.cresalias
		
		* check if we should now update reservation
		SELECT &l_cResAlias
		SCATTER NAME l_oReservat MEMO
		
		IF PAResAddrChangeGuest(this.oCheckReservat, l_oReservat, MAX(this.oResData.setarrdate,sysdate()),l_cResAlias)
		
			GATHER NAME l_oReservat MEMO
		
		ENDIF
		
	ENDPROC

	PROCEDURE preparemode
		LOCAL l_cCur, l_nSelect, l_cResAlias, l_cWhere
		LOCAL ARRAY l_aResult(1)
		l_cResAlias = this.cResAlias
		l_nSelect = SELECT()
		
		SELECT COUNT(*) FROM curresaddrgrid WHERE rg_rgid > 0 INTO ARRAY l_aResult
		IF l_aResult(1)>0
			* We have some guests. Now position on right one, and go in edit mode.
			IF &l_cResAlias..rs_arrdate = &l_cResAlias..rs_depdate
				* Day reservation, just jump to first record
				l_cWhere = sqlcnv(.T.)
			ELSE
				l_cWhere = PaResAddrGetUpdateWhere(MAX(this.oResData.setarrdate,sysdate()), this.oResData.setarrdate)
			ENDIF
			SELECT curresaddrgrid
			LOCATE FOR &l_cWhere
			IF FOUND()
				IF this.lForceEdit OR UPPER(ALLTRIM(rg_lname)) <> UPPER(ALLTRIM(this.cnewname)) OR ALLTRIM(rg_lname) == RESADDR_GUEST_NOT_SELECTED
					this.ONrowchange()
					this.OnEdit()
					IF UPPER(ALLTRIM(rg_lname)) <> UPPER(ALLTRIM(this.cnewname))
						this.oResaddrData.rg_lname = this.cnewname
					ENDIF
				ELSE
					this.ONrowchange()
				ENDIF
			ELSE
				GO BOTTOM
				this.ONrowchange()
			ENDIF
		ELSE
			ASSERT .F. MESSAGE "NEW"
			* New mode, get as default guest data from reservation.
			this.OnNew(this.cnewname)
		ENDIF
		
		SELECT (l_nSelect)
		
		RETURN .T.
	ENDPROC

	PROCEDURE QueryUnload
		NODEFAULT
		this.OnExit()
	ENDPROC

	PROCEDURE refreshcontrolsources
		LPARAMETERS lp_lForceLangCombo
		* Refresh lang and title combos sources
		LOCAL l_cResAlias, l_cMacro
		l_cResAlias = this.cResAlias
		SET FILTER TO IN title_gs
		DO CASE
			CASE NOT lp_lForceLangCombo AND ALLTRIM(this.oResAddrData.rg_lname) == RESADDR_GUEST_NOT_SELECTED
				this.cLang = ""
				this.nTitleCode = 0
			CASE NOT EMPTY(this.oResAddrData.rg_title) AND ;
					DLocate("title_gs", "UPPER(ti_title) = " + SqlCnv(TRIM(UPPER(this.oResAddrData.rg_title))))
				this.cLang = title_gs.ti_lang
				this.nTitleCode = title_gs.ti_titlcod
			OTHERWISE
				this.cLang = DLookUp("address", "ad_addrid = " + SqlCnv(&l_cResAlias..rs_compid), "ad_lang")
		ENDCASE
		
		l_cMacro = "SET FILTER TO ti_lang = " + sqlcnv(this.cLang) + " IN title_gs"
		&l_cMacro
		l_cMacro = "SET FILTER TO ti_lang = " + sqlcnv(this.cLang) + " IN title_gs_grid"
		&l_cMacro
		
		this.cboLanguage.Refresh()
		this.cboTitleCode.Requery()
		this.cboTitleCode.Refresh()
		
		this.cbocountry.Refresh()
		this.cbocountry.LostFocus()
		
		STORE curresaddrgrid.cur_date TO this.dFrom, this.dTo
		*!*	IF EMPTY(this.oResaddrData.rg_fromday)
		*!*		this.dFrom = curresaddrgrid.cur_date
		*!*	ELSE
		*!*		this.dFrom = PAResAddrGetFromDate(this.oResData.setarrdate, this.oresaddrdata.rg_fromday)
		*!*	ENDIF
		*!*	IF EMPTY(this.oResaddrData.rg_today)
		*!*		this.dTo = curresaddrgrid.cur_date
		*!*	ELSE
		*!*		* don't take departure date
		*!*		this.dTo = PAResAddrGetToDate(this.oResData.setarrdate, this.oresaddrdata.rg_today) - 1
		*!*	ENDIF
		
		this.txtfrom.Refresh()
		this.txtto.Refresh()
		
		IF INLIST(this.cMode,"NEW","EDIT")
			this.OnEnable()
		ELSE
			this.OnDisable()
		ENDIF
		
		RETURN .T.
	ENDPROC

	PROCEDURE savenow
		IF NOT this.lStandAlone
			thisform.OnSaveFromGrid()
		ELSE
		
			this.OnUpdateReservation()
			this.oCheckReservat.lResrateUpdateFromReservat = .T.
			this.oCheckReservat.CheckAndSave()
			this.oCheckReservat.lResrateUpdateFromReservat = .F.
		ENDIF
		
		this.CmdSaveColor(.F.)
		
		RETURN .T.
	ENDPROC

	PROCEDURE setcontrolsource
		LOCAL l_nSelect
		l_nSelect = SELECT()
		
		SELECT resaddr
		SCATTER NAME this.oResaddrData MEMO BLANK
		
		this.txtLastName.ControlSource = [thisform.oResaddrData.rg_lname]
		this.txtFirstName.ControlSource = [thisform.oResaddrData.rg_fname]
		this.cboLanguage.RowSource = [lang_gs.pl_charcod,pl_lang]
		this.cboLanguage.ControlSource = [thisform.cLang]
		this.cboTitleCode.RowSource = [title_gs.ti_titlcod,ti_title]
		this.cboTitleCode.ControlSource = [thisform.nTitleCode]
		this.txtTitle.ControlSource = [thisform.oResaddrData.rg_title]
		
		TEXT TO this.cbocountry.jsql TEXTMERGE NOSHOW PRETEXT 15
			SELECT pl_charcod, pl_lang<<g_langnum>> AS pl_lang FROM picklist 
				WHERE pl_label = <<sqlcnv("COUNTRY",.T.)>> 
				UNION 
				SELECT CAST(<<sqlcnv("",.T.)>> AS Char(3)) AS pl_charcod, 
				CAST(<<sqlcnv("",.T.)>> AS Char(25)) AS pl_lang 
				FROM param 
				WHERE <<sqlcnv(.T.,.T.)>>
				ORDER BY pl_charcod
		ENDTEXT
		this.cbocountry.jboundcolumn = 1
		this.cbocountry.jcolumncount = 2
		this.cbocountry.jcolumnwidths = "40,150"
		this.cbocountry.ControlSource  = [thisform.oResaddrData.rg_country]
		this.cbocountry.Init()
		
		this.txtcountry.ControlSource = this.cbocountry.jcursor + ".pl_lang"
		
		this.txtfrom.ControlSource = [thisform.dfrom]
		this.txtto.ControlSource = [thisform.dto]
		
		SELECT (l_nSelect)
		
		RETURN .T.
	ENDPROC

	PROCEDURE setfocusfirsttime
		IF this.lStandAlone
			this.grdresaddr.column1.SetFocus()
		ELSE
			this.txtLastName.SetFocus()
		ENDIF
	ENDPROC

	PROCEDURE Unload
		dclose("lang_gs")
		dclose("title_gs")
		dclose("cur_country_grid")
		dclose("curresaddrgridedit")
		dclose("title_gs_grid")
		IF VARTYPE(this.oCallingObj)="O" AND PEMSTATUS(this.oCallingObj,"displaycontent",5)
			this.oCallingObj.DisplayContent()
			this.oCallingObj.oGuestInfo = .NULL.
			this.oCallingObj = .NULL.
		ENDIF
	ENDPROC

	PROCEDURE cbocountry.LostFocus
		DODEFAULT()
		thisform.txtcountry.Refresh()
	ENDPROC

	PROCEDURE cboLanguage.LostFocus
		SET FILTER TO ti_lang = lang_gs.pl_charcod IN title_gs
		thisform.cboTitleCode.Requery()
	ENDPROC

	PROCEDURE cboTitleCode.LostFocus
		thisform.oResAddrData.rg_title = title_gs.ti_title
		thisform.txtTitle.Refresh()
	ENDPROC

	PROCEDURE cboTitleCode.Valid
		thisform.nTitleCode = INT(title_gs.ti_titlcod)
	ENDPROC

	PROCEDURE cmdEdit.Click
		thisform.txtLastName.SetFocus()
		*thisform.OnEdit()
	ENDPROC

	PROCEDURE cmdExit.Click
		thisform.onexit()
	ENDPROC

	PROCEDURE cmdOK.Click
		thisform.onapply()
	ENDPROC

	PROCEDURE cmdSave.Click
		thisform.SaveNow()
	ENDPROC

	PROCEDURE grdresaddr.AfterRowColChange
		LPARAMETERS nColIndex
		IF INLIST(this.RowColChange, 1, 3)
			thisform.OnRowChange()
		ENDIF
	ENDPROC

	PROCEDURE grdresaddr.Column1.Tcbogrid1.InteractiveChange
		IF (this.Parent.ControlSource) <> title_gs_grid.ti_title
			REPLACE (this.Parent.ControlSource) WITH title_gs_grid.ti_title IN (this.Parent.Parent.RecordSource)
		ENDIF
		thisform.OnSaveFromGrid()
	ENDPROC

	PROCEDURE grdresaddr.Column2.Ttext1.InteractiveChange
		REPLACE (this.Parent.ControlSource) WITH this.Value IN (this.Parent.Parent.RecordSource)
		thisform.OnSaveFromGrid()
	ENDPROC

	PROCEDURE grdresaddr.Column2.Ttext1.When
		WITH This.Parent.Parent
			.nRecNo = RECNO(.RecordSource)
		ENDWITH
	ENDPROC

	PROCEDURE grdresaddr.Column3.Ttext1.InteractiveChange
		REPLACE (this.Parent.ControlSource) WITH this.Value IN (this.Parent.Parent.RecordSource)
		thisform.OnSaveFromGrid()
	ENDPROC

	PROCEDURE grdresaddr.Column3.Ttext1.When
		WITH This.Parent.Parent
			.nRecNo = RECNO(.RecordSource)
		ENDWITH
	ENDPROC

	PROCEDURE grdresaddr.Column4.Tcbogrid1.InteractiveChange
		IF (this.Parent.ControlSource) <> cur_country_grid.pl_charcod
			REPLACE (this.Parent.ControlSource) WITH cur_country_grid.pl_charcod IN (this.Parent.Parent.RecordSource)
		ENDIF
		thisform.OnSaveFromGrid()
	ENDPROC

ENDDEFINE

DEFINE CLASS ppdateuserfield AS tdatectrl OF "main.vcx" 
 	*< CLASSDATA: Baseclass="textbox" Timestamp="" Scale="Pixels" Uniqueid="" />

	Name = "ppdateuserfield"
	
	PROCEDURE ProgrammaticChange
		LOCAL lcName
		
		IF this.lDatePickerActive
			lcName = SUBSTR(this.Name,2)
			this.Parent.&lcName..Value = DTOC(this.Value)
		ENDIF
	ENDPROC

ENDDEFINE

DEFINE CLASS privacypolicy AS tcontainer OF "..\common\libs\_lvisual.vcx" 
 	*< CLASSDATA: Baseclass="container" Timestamp="" Scale="Pixels" Uniqueid="" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="lblAp_consent" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cboAp_consent" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblAp_issued" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="dtxtAp_issued" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblAp_userid" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtAp_userid" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblAp_issudby" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtAp_issudby" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblAp_note" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtAp_note" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblAp_user1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="dtxtAp_user1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtAp_user1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chkAp_user1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblAp_user2" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="dtxtAp_user2" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtAp_user2" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chkAp_user2" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblAp_user3" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="dtxtAp_user3" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtAp_user3" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chkAp_user3" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblAp_user4" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="dtxtAp_user4" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtAp_user4" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chkAp_user4" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblAp_user5" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="dtxtAp_user5" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtAp_user5" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chkAp_user5" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblAp_cnfalas" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtAp_cnfalas" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdUpload" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdDownload" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdPreview" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdRemove" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chkAp_nomail" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdAddressHistory" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdConsent" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdDeleteConfirmation" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdSave" UniqueID="" Timestamp="" />

	*<DefinedPropArrayMethod>
		*m: disablefields
		*m: enablefields
		*m: enable_disable_controls
		*m: getaddressid
		*m: height_assign
		*m: ondownload
		*m: onsave
		*m: onupload
		*m: requery		&& Requeries the row source to which the ListBox or ComboBox control is bound.
		*m: setcaption
		*m: setcontrolsource
		*m: user_fields_init
		*m: user_fields_setcontrolsource
		*p: cdatavar
		*p: origheight
	*</DefinedPropArrayMethod>

	Height = 173
	Name = "privacypolicy"
	Width = 714

	ADD OBJECT 'cboAp_consent' AS tcombobox WITH ;
		Anchor = 240, ;
		BoundColumn = 2, ;
		BoundTo = .T., ;
		ColumnCount = 2, ;
		ColumnLines = .F., ;
		ColumnWidths = "150,0", ;
		DisabledForeColor = 0,0,0, ;
		FontSize = 8, ;
		Format = "", ;
		Height = 21, ;
		Left = 192, ;
		Name = "cboAp_consent", ;
		RowSourceType = 6, ;
		Style = 2, ;
		Top = 12, ;
		Value = 0, ;
		Width = 372, ;
		ZOrderSet = 1
		*< END OBJECT: ClassLib="main.vcx" BaseClass="combobox" />

	ADD OBJECT 'chkAp_nomail' AS tcheckbox WITH ;
		Alignment = 0, ;
		Anchor = 240, ;
		Caption = "chkAp_nomail", ;
		Enabled = .F., ;
		FontSize = 8, ;
		Height = 16, ;
		Left = 192, ;
		Name = "chkAp_nomail", ;
		Top = 145, ;
		Width = 372, ;
		ZOrderSet = 36
		*< END OBJECT: ClassLib="main.vcx" BaseClass="checkbox" />

	ADD OBJECT 'chkAp_user1' AS tcheckbox WITH ;
		Alignment = 0, ;
		Anchor = 240, ;
		AutoSize = .T., ;
		Caption = "chkAp_user1", ;
		FontSize = 8, ;
		Height = 16, ;
		Left = 444, ;
		Name = "chkAp_user1", ;
		nlineheight = 0, ;
		Top = 15, ;
		Visible = .F., ;
		Width = 83, ;
		ZOrderSet = 13
		*< END OBJECT: ClassLib="main.vcx" BaseClass="checkbox" />

	ADD OBJECT 'chkAp_user2' AS tcheckbox WITH ;
		Alignment = 0, ;
		Anchor = 240, ;
		AutoSize = .T., ;
		Caption = "chkAp_user2", ;
		FontSize = 8, ;
		Height = 16, ;
		Left = 444, ;
		Name = "chkAp_user2", ;
		nlineheight = 0, ;
		Top = 37, ;
		Visible = .F., ;
		Width = 83, ;
		ZOrderSet = 17
		*< END OBJECT: ClassLib="main.vcx" BaseClass="checkbox" />

	ADD OBJECT 'chkAp_user3' AS tcheckbox WITH ;
		Alignment = 0, ;
		Anchor = 240, ;
		AutoSize = .T., ;
		Caption = "chkAp_user3", ;
		FontSize = 8, ;
		Height = 16, ;
		Left = 444, ;
		Name = "chkAp_user3", ;
		nlineheight = 0, ;
		Top = 59, ;
		Visible = .F., ;
		Width = 83, ;
		ZOrderSet = 21
		*< END OBJECT: ClassLib="main.vcx" BaseClass="checkbox" />

	ADD OBJECT 'chkAp_user4' AS tcheckbox WITH ;
		Alignment = 0, ;
		Anchor = 240, ;
		AutoSize = .T., ;
		Caption = "chkAp_user4", ;
		FontSize = 8, ;
		Height = 16, ;
		Left = 444, ;
		Name = "chkAp_user4", ;
		nlineheight = 0, ;
		Top = 81, ;
		Visible = .F., ;
		Width = 83, ;
		ZOrderSet = 25
		*< END OBJECT: ClassLib="main.vcx" BaseClass="checkbox" />

	ADD OBJECT 'chkAp_user5' AS tcheckbox WITH ;
		Alignment = 0, ;
		Anchor = 240, ;
		AutoSize = .T., ;
		Caption = "chkAp_user5", ;
		FontSize = 8, ;
		Height = 16, ;
		Left = 444, ;
		Name = "chkAp_user5", ;
		nlineheight = 0, ;
		Top = 103, ;
		Visible = .F., ;
		Width = 83, ;
		ZOrderSet = 29
		*< END OBJECT: ClassLib="main.vcx" BaseClass="checkbox" />

	ADD OBJECT 'cmdAddressHistory' AS tcommandbutton WITH ;
		Anchor = 240, ;
		Caption = "Auskuntsdatenblatt", ;
		FontSize = 8, ;
		Left = 576, ;
		Name = "cmdAddressHistory", ;
		Top = 12, ;
		Width = 120, ;
		ZOrderSet = 37
		*< END OBJECT: ClassLib="main.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'cmdConsent' AS tcommandbutton WITH ;
		Anchor = 240, ;
		Caption = "Einwilligungserklärung", ;
		FontSize = 8, ;
		Left = 576, ;
		Name = "cmdConsent", ;
		Top = 48, ;
		Width = 120, ;
		ZOrderSet = 38
		*< END OBJECT: ClassLib="main.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'cmdDeleteConfirmation' AS tcommandbutton WITH ;
		Anchor = 240, ;
		Caption = "Löschbestätigung", ;
		FontSize = 8, ;
		Left = 576, ;
		Name = "cmdDeleteConfirmation", ;
		Top = 84, ;
		Width = 120, ;
		ZOrderSet = 39
		*< END OBJECT: ClassLib="main.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'cmdDownload' AS tcommandbutton WITH ;
		Anchor = 240, ;
		Caption = "", ;
		DisabledForeColor = 0,0,0, ;
		FontSize = 8, ;
		Height = 23, ;
		Left = 498, ;
		Name = "cmdDownload", ;
		Picture = ..\bitmap\toolbar\download.png, ;
		Top = 121, ;
		Width = 23, ;
		ZOrderSet = 33
		*< END OBJECT: ClassLib="main.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'cmdPreview' AS tcommandbutton WITH ;
		Anchor = 240, ;
		Caption = "", ;
		DisabledForeColor = 0,0,0, ;
		FontSize = 8, ;
		Height = 23, ;
		Left = 520, ;
		Name = "cmdPreview", ;
		Picture = ..\bitmap\toolbar\preview.png, ;
		Top = 121, ;
		Width = 23, ;
		ZOrderSet = 34
		*< END OBJECT: ClassLib="main.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'cmdRemove' AS tcommandbutton WITH ;
		Anchor = 240, ;
		Caption = "", ;
		DisabledForeColor = 0,0,0, ;
		FontSize = 8, ;
		Height = 23, ;
		Left = 542, ;
		Name = "cmdRemove", ;
		Picture = ..\bitmap\toolbar\delete.png, ;
		Top = 121, ;
		Width = 23, ;
		ZOrderSet = 35
		*< END OBJECT: ClassLib="main.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'cmdSave' AS tcommandbutton WITH ;
		Anchor = 240, ;
		Caption = "Speichern", ;
		FontSize = 8, ;
		Left = 576, ;
		Name = "cmdSave", ;
		Top = 120, ;
		Width = 120, ;
		ZOrderSet = 40
		*< END OBJECT: ClassLib="main.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'cmdUpload' AS tcommandbutton WITH ;
		Anchor = 240, ;
		Caption = "", ;
		DisabledForeColor = 0,0,0, ;
		FontSize = 8, ;
		Height = 23, ;
		Left = 476, ;
		Name = "cmdUpload", ;
		Picture = ..\bitmap\toolbar\upload.png, ;
		Top = 121, ;
		Width = 23, ;
		ZOrderSet = 32
		*< END OBJECT: ClassLib="main.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'dtxtAp_issued' AS tdatectrl WITH ;
		Anchor = 240, ;
		DisabledForeColor = 0,0,0, ;
		FontSize = 8, ;
		Height = 21, ;
		InputMask = "", ;
		Left = 192, ;
		Name = "dtxtAp_issued", ;
		Top = 34, ;
		Width = 372, ;
		ZOrderSet = 3
		*< END OBJECT: ClassLib="main.vcx" BaseClass="textbox" />

	ADD OBJECT 'dtxtAp_user1' AS ppdateuserfield WITH ;
		Anchor = 240, ;
		DisabledForeColor = 0,0,0, ;
		FontSize = 8, ;
		Format = "KR", ;
		Height = 21, ;
		InputMask = "", ;
		Left = 444, ;
		Name = "dtxtAp_user1", ;
		nlineheight = 0, ;
		Top = 12, ;
		Visible = .F., ;
		Width = 120, ;
		ZOrderSet = 11
		*< END OBJECT: ClassLib="cit_address.vcx" BaseClass="textbox" />

	ADD OBJECT 'dtxtAp_user2' AS ppdateuserfield WITH ;
		Anchor = 240, ;
		DisabledForeColor = 0,0,0, ;
		FontSize = 8, ;
		Format = "KR", ;
		Height = 21, ;
		InputMask = "", ;
		Left = 444, ;
		Name = "dtxtAp_user2", ;
		nlineheight = 0, ;
		Top = 34, ;
		Visible = .F., ;
		Width = 120, ;
		ZOrderSet = 15
		*< END OBJECT: ClassLib="cit_address.vcx" BaseClass="textbox" />

	ADD OBJECT 'dtxtAp_user3' AS ppdateuserfield WITH ;
		Anchor = 240, ;
		DisabledForeColor = 0,0,0, ;
		FontSize = 8, ;
		Format = "KR", ;
		Height = 21, ;
		InputMask = "", ;
		Left = 444, ;
		Name = "dtxtAp_user3", ;
		nlineheight = 0, ;
		Top = 56, ;
		Visible = .F., ;
		Width = 120, ;
		ZOrderSet = 19
		*< END OBJECT: ClassLib="cit_address.vcx" BaseClass="textbox" />

	ADD OBJECT 'dtxtAp_user4' AS ppdateuserfield WITH ;
		Anchor = 240, ;
		DisabledForeColor = 0,0,0, ;
		FontSize = 8, ;
		Format = "KR", ;
		Height = 21, ;
		InputMask = "", ;
		Left = 444, ;
		Name = "dtxtAp_user4", ;
		nlineheight = 0, ;
		Top = 78, ;
		Visible = .F., ;
		Width = 120, ;
		ZOrderSet = 23
		*< END OBJECT: ClassLib="cit_address.vcx" BaseClass="textbox" />

	ADD OBJECT 'dtxtAp_user5' AS ppdateuserfield WITH ;
		Anchor = 240, ;
		DisabledForeColor = 0,0,0, ;
		FontSize = 8, ;
		Format = "KR", ;
		Height = 21, ;
		InputMask = "", ;
		Left = 444, ;
		Name = "dtxtAp_user5", ;
		nlineheight = 0, ;
		Top = 100, ;
		Visible = .F., ;
		Width = 120, ;
		ZOrderSet = 27
		*< END OBJECT: ClassLib="cit_address.vcx" BaseClass="textbox" />

	ADD OBJECT 'lblAp_cnfalas' AS tlabel WITH ;
		Alignment = 1, ;
		Anchor = 240, ;
		Caption = "lblAp_cnfalas", ;
		FontSize = 8, ;
		Height = 16, ;
		Name = "lblAp_cnfalas", ;
		Top = 125, ;
		Width = 180, ;
		ZOrderSet = 30
		*< END OBJECT: ClassLib="main.vcx" BaseClass="label" />

	ADD OBJECT 'lblAp_consent' AS tlabel WITH ;
		Alignment = 1, ;
		Anchor = 240, ;
		Caption = "lblAp_consent", ;
		FontSize = 8, ;
		Height = 16, ;
		Name = "lblAp_consent", ;
		Top = 15, ;
		Width = 180, ;
		ZOrderSet = 0
		*< END OBJECT: ClassLib="main.vcx" BaseClass="label" />

	ADD OBJECT 'lblAp_issudby' AS tlabel WITH ;
		Alignment = 1, ;
		Anchor = 240, ;
		Caption = "lblAp_issudby", ;
		FontSize = 8, ;
		Height = 16, ;
		Name = "lblAp_issudby", ;
		Top = 81, ;
		Width = 180, ;
		ZOrderSet = 6
		*< END OBJECT: ClassLib="main.vcx" BaseClass="label" />

	ADD OBJECT 'lblAp_issued' AS tlabel WITH ;
		Alignment = 1, ;
		Anchor = 240, ;
		Caption = "lblAp_issued", ;
		FontSize = 8, ;
		Height = 16, ;
		Name = "lblAp_issued", ;
		Top = 37, ;
		Width = 180, ;
		ZOrderSet = 2
		*< END OBJECT: ClassLib="main.vcx" BaseClass="label" />

	ADD OBJECT 'lblAp_note' AS tlabel WITH ;
		Alignment = 1, ;
		Anchor = 240, ;
		Caption = "lblAp_note", ;
		FontSize = 8, ;
		Height = 16, ;
		Name = "lblAp_note", ;
		Top = 103, ;
		Width = 180, ;
		ZOrderSet = 8
		*< END OBJECT: ClassLib="main.vcx" BaseClass="label" />

	ADD OBJECT 'lblAp_user1' AS tlabel WITH ;
		Alignment = 1, ;
		Anchor = 240, ;
		Caption = "lblAp_user1", ;
		FontSize = 8, ;
		Height = 16, ;
		Left = 324, ;
		Name = "lblAp_user1", ;
		Top = 15, ;
		Visible = .F., ;
		Width = 108, ;
		ZOrderSet = 10
		*< END OBJECT: ClassLib="main.vcx" BaseClass="label" />

	ADD OBJECT 'lblAp_user2' AS tlabel WITH ;
		Alignment = 1, ;
		Anchor = 240, ;
		Caption = "lblAp_user2", ;
		FontSize = 8, ;
		Height = 16, ;
		Left = 324, ;
		Name = "lblAp_user2", ;
		Top = 37, ;
		Visible = .F., ;
		Width = 108, ;
		ZOrderSet = 14
		*< END OBJECT: ClassLib="main.vcx" BaseClass="label" />

	ADD OBJECT 'lblAp_user3' AS tlabel WITH ;
		Alignment = 1, ;
		Anchor = 240, ;
		Caption = "lblAp_user3", ;
		FontSize = 8, ;
		Height = 16, ;
		Left = 324, ;
		Name = "lblAp_user3", ;
		Top = 59, ;
		Visible = .F., ;
		Width = 108, ;
		ZOrderSet = 18
		*< END OBJECT: ClassLib="main.vcx" BaseClass="label" />

	ADD OBJECT 'lblAp_user4' AS tlabel WITH ;
		Alignment = 1, ;
		Anchor = 240, ;
		Caption = "lblAp_user4", ;
		FontSize = 8, ;
		Height = 16, ;
		Left = 324, ;
		Name = "lblAp_user4", ;
		Top = 81, ;
		Visible = .F., ;
		Width = 108, ;
		ZOrderSet = 22
		*< END OBJECT: ClassLib="main.vcx" BaseClass="label" />

	ADD OBJECT 'lblAp_user5' AS tlabel WITH ;
		Alignment = 1, ;
		Anchor = 240, ;
		Caption = "lblAp_user5", ;
		FontSize = 8, ;
		Height = 16, ;
		Left = 324, ;
		Name = "lblAp_user5", ;
		Top = 103, ;
		Visible = .F., ;
		Width = 108, ;
		ZOrderSet = 26
		*< END OBJECT: ClassLib="main.vcx" BaseClass="label" />

	ADD OBJECT 'lblAp_userid' AS tlabel WITH ;
		Alignment = 1, ;
		Anchor = 240, ;
		Caption = "lblAp_userid", ;
		FontSize = 8, ;
		Height = 16, ;
		Name = "lblAp_userid", ;
		Top = 59, ;
		Width = 180, ;
		ZOrderSet = 4
		*< END OBJECT: ClassLib="main.vcx" BaseClass="label" />

	ADD OBJECT 'txtAp_cnfalas' AS ttext WITH ;
		Anchor = 240, ;
		DisabledForeColor = 0,0,0, ;
		Enabled = .F., ;
		FontSize = 8, ;
		Height = 21, ;
		Left = 192, ;
		Name = "txtAp_cnfalas", ;
		Top = 122, ;
		Width = 284, ;
		ZOrderSet = 31
		*< END OBJECT: ClassLib="main.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtAp_issudby' AS ttext WITH ;
		Anchor = 240, ;
		DisabledForeColor = 0,0,0, ;
		FontSize = 8, ;
		Height = 21, ;
		Left = 192, ;
		Name = "txtAp_issudby", ;
		Top = 78, ;
		Width = 372, ;
		ZOrderSet = 7
		*< END OBJECT: ClassLib="main.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtAp_note' AS ttext WITH ;
		Anchor = 240, ;
		DisabledForeColor = 0,0,0, ;
		FontSize = 8, ;
		Height = 21, ;
		Left = 192, ;
		Name = "txtAp_note", ;
		Top = 100, ;
		Width = 372, ;
		ZOrderSet = 9
		*< END OBJECT: ClassLib="main.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtAp_user1' AS ttext WITH ;
		Anchor = 240, ;
		DisabledForeColor = 0,0,0, ;
		FontSize = 8, ;
		Format = "KR", ;
		Height = 21, ;
		Left = 444, ;
		Name = "txtAp_user1", ;
		nlineheight = 0, ;
		Top = 12, ;
		Visible = .F., ;
		Width = 120, ;
		ZOrderSet = 12
		*< END OBJECT: ClassLib="main.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtAp_user2' AS ttext WITH ;
		Anchor = 240, ;
		DisabledForeColor = 0,0,0, ;
		FontSize = 8, ;
		Format = "KR", ;
		Height = 21, ;
		Left = 444, ;
		Name = "txtAp_user2", ;
		nlineheight = 0, ;
		Top = 34, ;
		Visible = .F., ;
		Width = 120, ;
		ZOrderSet = 16
		*< END OBJECT: ClassLib="main.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtAp_user3' AS ttext WITH ;
		Anchor = 240, ;
		DisabledForeColor = 0,0,0, ;
		FontSize = 8, ;
		Format = "KR", ;
		Height = 21, ;
		Left = 444, ;
		Name = "txtAp_user3", ;
		nlineheight = 0, ;
		Top = 56, ;
		Visible = .F., ;
		Width = 120, ;
		ZOrderSet = 20
		*< END OBJECT: ClassLib="main.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtAp_user4' AS ttext WITH ;
		Anchor = 240, ;
		DisabledForeColor = 0,0,0, ;
		FontSize = 8, ;
		Format = "KR", ;
		Height = 21, ;
		Left = 444, ;
		Name = "txtAp_user4", ;
		nlineheight = 0, ;
		Top = 78, ;
		Visible = .F., ;
		Width = 120, ;
		ZOrderSet = 24
		*< END OBJECT: ClassLib="main.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtAp_user5' AS ttext WITH ;
		Anchor = 240, ;
		DisabledForeColor = 0,0,0, ;
		FontSize = 8, ;
		Format = "KR", ;
		Height = 21, ;
		Left = 444, ;
		Name = "txtAp_user5", ;
		nlineheight = 0, ;
		Top = 100, ;
		Visible = .F., ;
		Width = 120, ;
		ZOrderSet = 28
		*< END OBJECT: ClassLib="main.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtAp_userid' AS ttext WITH ;
		Anchor = 240, ;
		DisabledForeColor = 0,0,0, ;
		Enabled = .F., ;
		FontSize = 8, ;
		Height = 21, ;
		Left = 192, ;
		Name = "txtAp_userid", ;
		Top = 56, ;
		Width = 372, ;
		ZOrderSet = 5
		*< END OBJECT: ClassLib="main.vcx" BaseClass="textbox" />
	
	PROCEDURE disablefields
		this.enable_disable_controls(.F.)
	ENDPROC

	PROCEDURE enablefields
		this.enable_disable_controls(.T.)
	ENDPROC

	PROCEDURE enable_disable_controls
		LPARAMETERS lp_lEnabled
		this.cboAp_consent.Enabled = lp_lEnabled
		this.dtxtAp_issued.Enabled = lp_lEnabled
		this.txtAp_issudby.Enabled = lp_lEnabled
		this.txtAp_note.Enabled = lp_lEnabled
		this.cmdUpload.Enabled = lp_lEnabled
		this.cmdRemove.Enabled = lp_lEnabled
		this.dtxtAp_user1.Enabled = lp_lEnabled
		this.dtxtAp_user2.Enabled = lp_lEnabled
		this.dtxtAp_user3.Enabled = lp_lEnabled
		this.dtxtAp_user4.Enabled = lp_lEnabled
		this.dtxtAp_user5.Enabled = lp_lEnabled
		this.chkAp_user1.Enabled = lp_lEnabled
		this.chkAp_user2.Enabled = lp_lEnabled
		this.chkAp_user3.Enabled = lp_lEnabled
		this.chkAp_user4.Enabled = lp_lEnabled
		this.chkAp_user5.Enabled = lp_lEnabled
		
		RETURN .T.
	ENDPROC

	PROCEDURE getaddressid
		LOCAL l_oData
		
		l_oData = EVALUATE(this.cDataVar)
		
		RETURN l_oData.ap_addrid
	ENDPROC

	PROCEDURE height_assign
		LPARAMETERS tnNewVal
		
		this.Height = tnNewVal
		IF NOT EMPTY(this.OrigHeight)
			this.SetAll("FontSize", MAX(4, ROUND(9*this.Height/this.OrigHeight,0)))
		ENDIF
	ENDPROC

	PROCEDURE Init
		this.OrigHeight = this.Height
		
		DODEFAULT()
		
		this.SetCaption()
		this.user_fields_init()
	ENDPROC

	PROCEDURE ondownload
		LOCAL l_oData, l_cFile
		
		l_oData = EVALUATE(this.cDataVar)
		l_cFile = PUTFILE("", l_oData.ap_cnfalas)
		IF NOT EMPTY(l_cFile)
			COPY FILE (FULLPATH(gcDocumentdir+ALLTRIM(l_oData.ap_cnfname))) TO (l_cFile)
		ENDIF
	ENDPROC

	PROCEDURE onsave
		LOCAL i, l_oData, l_cWhere, loTextBox, loDateBox, loCheckBox
		
		l_oData = EVALUATE(this.cDataVar)
		
		IF NOT this.cmdSave.Visible AND EMPTY(l_oData.ap_consent) AND EMPTY(l_oData.ap_issued) && Called from address mask
			* Nothing entered. Ignore changes.
			RETURN .T.
		ENDIF
		
		IF EMPTY(l_oData.ap_consent)
			this.cboAp_consent.SetFocus()
			Alert(GetLangText("ADDRESS","TA_PRIVACY_CONSENT"))
			RETURN .F.
		ENDIF
		IF EMPTY(l_oData.ap_issudby) AND l_oData.ap_consent <> 1
			this.txtAp_issudby.SetFocus()
			Alert(GetLangText("ADDRESS","TA_PRIVACY_ISSUDBY"))
			RETURN .F.
		ENDIF
		IF EMPTY(l_oData.ap_issued)
			l_oData.ap_issued = DATETIME()
			this.dtxtAp_issued.Refresh()
		ENDIF
		
		FOR i = 1 TO 5
			loTextBox = EVALUATE("this.txtAp_user" + TRANSFORM(i))
			DO CASE
				CASE loTextBox.cType = "Y"
					loCheckBox = EVALUATE("this.chkAp_user" + TRANSFORM(i))
					loTextBox.Value = TRANSFORM(loCheckBox.Value)
				CASE loTextBox.cType = "D"
					loDateBox = EVALUATE("this.dtxtAp_user" + TRANSFORM(i))
					loTextBox.Value = DTOC(loDateBox.Value)
				OTHERWISE
			ENDCASE
		ENDFOR
		
		l_cWhere = "ap_addrid = " + SqlCnv(l_oData.ap_addrid,.T.)
		
		IF NOT Dlocate("adrprvcy",l_cWhere)
			l_oData.ap_userid = g_userid
			this.txtAp_userid.Refresh()
			l_oData.ap_apid = NextId("ADRPRVCY")
			INSERT INTO adrprvcy (ap_apid, ap_addrid) VALUES (l_oData.ap_apid, l_oData.ap_addrid) 
		ENDIF
		
		SELECT adrprvcy
		GATHER NAME l_oData FIELDS EXCEPT ap_delgdpr, ap_deluser MEMO
		
		RETURN .T.
	ENDPROC

	PROCEDURE onupload
		LPARAMETERS lp_oConsent
		LOCAL l_oData
		
		l_oData = EVALUATE(this.cDataVar)
		
		IF PANewExternalDocument(l_oData.ap_addrid, @lp_oConsent)
			l_oData.ap_cnfname = lp_oConsent.cFileName
			l_oData.ap_cnfalas = lp_oConsent.cAlias
			this.txtAp_cnfalas.Refresh()
			STORE .T. TO this.cmdDownload.Enabled, this.cmdPreview.Enabled, this.cmdRemove.Enabled
		ENDIF
	ENDPROC

	PROCEDURE Refresh
		LPARAMETERS lp_lRefreshAddress
		LOCAL i, l_nRecno, l_oData, l_lFileExists, loTextBox, loDateBox, loCheckBox, loComboBox
		
		l_oData = EVALUATE(this.cDataVar)
		l_nRecno = RECNO("address")
		
		l_lFileExists = NOT EMPTY(l_oData.ap_cnfname) AND FILE(FULLPATH(gcDocumentdir+ALLTRIM(l_oData.ap_cnfname)))
		STORE l_lFileExists TO this.cmdDownload.Enabled, this.cmdPreview.Enabled, this.cmdRemove.Enabled
		
		this.cboAp_consent.Requery()
		this.cboAp_consent.Refresh()
		this.txtap_userid.Refresh()
		this.txtap_issudby.Refresh()
		this.txtap_note.Refresh()
		this.txtAp_cnfalas.Refresh()
		this.chkAp_nomail.Value = Dlocate("address", "ad_addrid = " + SqlCnv(l_oData.ap_addrid,.T.), .T.) AND address.ad_nomail
		this.cmdDeleteConfirmation.BackColor = IIF(EMPTY(l_oData.ap_delgdpr), RGB(240,240,240), RGB(255,128,128))
		
		FOR i = 1 TO 5
			loTextBox = EVALUATE("this.txtAp_user" + TRANSFORM(i))
			loTextBox.Refresh()
			DO CASE
				CASE loTextBox.cType = "Y"
					loCheckBox = EVALUATE("this.chkAp_user" + TRANSFORM(i))
					loCheckBox.Value = (loTextBox.Value = ".T.")
					loCheckBox.Refresh()
				CASE loTextBox.cType = "D"
					loDateBox = EVALUATE("this.dtxtAp_user" + TRANSFORM(i))
					loDateBox.Value = CTOD(loTextBox.Value)
					loDateBox.Refresh()
				CASE loTextBox.cType = "L"
					loComboBox = EVALUATE("this.cboAp_user" + TRANSFORM(i))
					loComboBox.Refresh()
				OTHERWISE
					loTextBox.Refresh()
			ENDCASE
		ENDFOR
		GO l_nRecno IN address
		
		RETURN .T.
	ENDPROC

	PROCEDURE requery		&& Requeries the row source to which the ListBox or ComboBox control is bound.
		this.Refresh()
	ENDPROC

	PROCEDURE setcaption
		this.lblAp_consent.Caption = GetLangText("ADDRESS","TXT_PRIVACY_CONSENT") + ":"
		this.lblAp_issued.Caption = GetLangText("ADDRESS","TXT_PRIVACY_ISSUED") + ":"
		this.lblAp_userid.Caption = GetLangText("ADDRESS","TXT_PRIVACY_USERID") + ":"
		this.lblAp_issudby.Caption = GetLangText("ADDRESS","TXT_PRIVACY_ISSUDBY") + ":"
		this.lblAp_note.Caption = GetLangText("ADDRESS","PT_NOTENAME") + ":"
		this.lblAp_cnfalas.Caption = GetLangText("ADDRESS","TXT_PRIVACY_CNFPATH") + ":"
		this.chkAp_nomail.Caption = GetLangText("ADDRESS","TXT_PRIVACY_NOMAIL")
		this.cmdAddressHistory.Caption = GetLangText("ADDRESS","TT_PRIVACY_BADDRESSHISTORY")
		this.cmdConsent.Caption = GetLangText("ADDRESS","TT_PRIVACY_BCONSENT")
		this.cmdDeleteConfirmation.Caption = GetLangText("ADDRESS","TT_PRIVACY_BDELETECONFIRMATION")
		this.cmdSave.Caption = GetLangText("COMMON","TXT_SAVE")
		this.cmdUpload.ToolTipText = GetLangText("ADDRESS","TT_PRIVACY_UPLOAD")
		this.cmdDownload.ToolTipText = GetLangText("ADDRESS","TT_PRIVACY_DOWNLOAD")
		this.cmdPreview.ToolTipText = GetLangText("ADDRESS","TT_PRIVACY_PREVIEW")
		this.cmdRemove.ToolTipText = GetLangText("ADDRESS","TT_PRIVACY_REMOVE")
	ENDPROC

	PROCEDURE setcontrolsource
		LOCAL l_cLang
		
		l_cLang = "pl_lang" + g_langnum
		SELECT pl_numcod, &l_cLang AS pl_lang FROM picklist WHERE pl_label = "GSGVO     " INTO CURSOR gsgvo_picklist
		this.cboAp_consent.RowSource = [gsgvo_picklist.pl_lang, pl_numcod]
		this.cboAp_consent.ControlSource = this.cDataVar+[.ap_consent]
		this.dtxtap_issued.ControlSource = this.cDataVar+[.ap_issued]
		this.txtap_userid.ControlSource = this.cDataVar+[.ap_userid]
		this.txtap_issudby.ControlSource = this.cDataVar+[.ap_issudby]
		this.txtap_note.ControlSource = this.cDataVar+[.ap_note]
		this.txtAp_cnfalas.ControlSource = this.cDataVar+[.ap_cnfalas]
		this.user_fields_setcontrolsource()
	ENDPROC

	PROCEDURE user_fields_init
		LOCAL i, loLabel, loTextBox, loDateBox, loCheckBox, loComboBox
		
		FOR i = 1 TO 5
			loLabel = EVALUATE("this.lblAp_user" + TRANSFORM(i))
			loTextBox = EVALUATE("this.txtAp_user" + TRANSFORM(i))
			loLabel.Caption = ALLTRIM(EVALUATE("_screen.oGlobal.oparam2.pa_ppuser" + TRANSFORM(i)))
			loTextBox.AddProperty("cType", EVALUATE("_screen.oGlobal.oparam2.pa_ppuset" + TRANSFORM(i)))
			IF NOT EMPTY(loLabel.Caption)
				loLabel.Visible = .T.
				loDateBox = EVALUATE("this.dtxtAp_user" + TRANSFORM(i))
				loCheckBox = EVALUATE("this.chkAp_user" + TRANSFORM(i))
				DO CASE
					CASE loTextBox.cType = "Y"
						loCheckBox.Caption = ""
						loCheckBox.Visible = .T.
					CASE loTextBox.cType = "C"
						loTextBox.InputMask = REPLICATE("X",50)
						loTextBox.Visible = .T.
					CASE loTextBox.cType = "N"
						loTextBox.InputMask = REPLICATE("9",50)
						loTextBox.Visible = .T.
					CASE loTextBox.cType = "T"
						loTextBox.InputMask = "99:99 - 99:99"
						loTextBox.Visible = .T.
					CASE loTextBox.cType = "D"
						loDateBox.Visible = .T.
					CASE loTextBox.cType = "L"
						this.NewObject("cboAp_user" + TRANSFORM(i),"jcborauser","libs\cit_ctrl.vcx")
						loComboBox = EVALUATE("this.cboAp_user" + TRANSFORM(i))
						loComboBox.Top = loTextBox.Top
						loComboBox.Left = loTextBox.Left
						loComboBox.Width = loTextBox.Width
						loComboBox.Height = loTextBox.Height
						loComboBox.Anchor = loTextBox.Anchor
						loComboBox.w = loTextBox.w
						loComboBox.h = loTextBox.h
						loComboBox.t = loTextBox.t
						loComboBox.l = loTextBox.l
						loComboBox.f = loTextBox.f
						loComboBox.cFilter = "AP_USER" + TRANSFORM(i)
						loComboBox.TabIndex = loTextBox.TabIndex
						loComboBox.Init(.T.)
						loComboBox.Visible = .T.
					OTHERWISE
				ENDCASE
				DO CASE
					CASE i = 1
						this.cboAp_consent.Anchor = 0
						STORE loLabel.Left-this.cboAp_consent.Left-12 TO this.cboAp_consent.Width, this.cboAp_consent.W
						this.cboAp_consent.Anchor = 240
					CASE i = 2
						this.dtxtAp_issued.Anchor = 0
						STORE loLabel.Left-this.dtxtAp_issued.Left-12 TO this.dtxtAp_issued.Width, this.dtxtAp_issued.W
						this.dtxtAp_issued.Anchor = 240
						this.dtxtAp_issued.Positionbutton()
					CASE i = 3
						this.txtAp_userid.Anchor = 0
						STORE loLabel.Left-this.txtAp_userid.Left-12 TO this.txtAp_userid.Width, this.txtAp_userid.W
						this.txtAp_userid.Anchor = 240
					CASE i = 4
						this.txtAp_issudby.Anchor = 0
						STORE loLabel.Left-this.txtAp_issudby.Left-12 TO this.txtAp_issudby.Width, this.txtAp_issudby.W
						this.txtAp_issudby.Anchor = 240
					CASE i = 5
						this.txtAp_note.Anchor = 0
						STORE loLabel.Left-this.txtAp_note.Left-12 TO this.txtAp_note.Width, this.txtAp_note.W
						this.txtAp_note.Anchor = 240
					OTHERWISE
				ENDCASE
			ENDIF
		ENDFOR
		
		RETURN .T.
	ENDPROC

	PROCEDURE user_fields_setcontrolsource
		LOCAL i, loTextBox, loDateBox, loCheckBox, loComboBox
		
		FOR i = 1 TO 5
			loTextBox = EVALUATE("this.txtAp_user" + TRANSFORM(i))
			IF NOT EMPTY(loTextBox.cType)
				loTextBox.ControlSource = this.cDataVar+[.ap_user] + TRANSFORM(i)
				DO CASE
					CASE loTextBox.cType = "Y"
						loCheckBox = EVALUATE("this.chkAp_user" + TRANSFORM(i))
						loCheckBox.Value = (loTextBox.Value = ".T.")
					CASE loTextBox.cType = "D"
						loDateBox = EVALUATE("this.dtxtAp_user" + TRANSFORM(i))
						loDateBox.Value = CTOD(loTextBox.Value)
					CASE loTextBox.cType = "L"
						loComboBox = EVALUATE("this.cboAp_user" + TRANSFORM(i))
						loComboBox.ControlSource = loTextBox.ControlSource
					OTHERWISE
				ENDCASE
			ENDIF
		ENDFOR
		
		RETURN .T.
	ENDPROC

	PROCEDURE cboAp_consent.LostFocus
		LOCAL l_cDataVar
		
		l_cDataVar = this.Parent.cDataVar
		
		IF NOT EMPTY(&l_cDataVar..ap_consent)
			IF EMPTY(&l_cDataVar..ap_issued)
				&l_cDataVar..ap_issued = DATETIME()
				this.Parent.dtxtap_issued.Refresh()
			ENDIF
		ENDIF
	ENDPROC

	PROCEDURE cboAp_consent.Valid
		LOCAL l_cDataVar
		
		l_cDataVar = this.Parent.cDataVar
		&l_cDataVar..ap_consent = INT(this.Value)
		
		RETURN .T.
	ENDPROC

	PROCEDURE cmdAddressHistory.Click
		*IF DLocate("lists", "li_listid = '_AH00100'")
		*	SELECT lists
		*	PrtReport()
		*ENDIF
		*return
		LOCAL l_oData
		PRIVATE p_selectform
		p_selectform = .null.
		
		l_oData = EVALUATE(this.Parent.cDataVar)
		
		DECLARE l_aParam(4,1)
		l_aParam(1,1) = l_oData.ap_addrid
		l_aParam(2,1) = 16	&& li_menu
		l_aParam(3,1) = 1
		l_aParam(4,1) = "_AH00100"
		DOform('selectreport','forms\selectreport','NAME p_selectform NOSHOW WITH 1,"addresshistory",0,l_aParam,1')
		p_selectform.release()
		
		RETURN .T.
	ENDPROC

	PROCEDURE cmdConsent.Click
		IF NOT EMPTY(DlookUp("address", "ad_addrid = " + SqlCnv(EVALUATE(this.Parent.cDataVar+".ap_addrid"),.T.), "ad_company"))
			MsgBox(GetLangText("ADDRESS","TXT_PRIVACY_COMPANY_CONSENT"),GetLangText("FUNC","TXT_MESSAGE"),64)
		ELSE
			DO Lists IN MyLists WITH 8, this.Caption,,3
		ENDIF
	ENDPROC

	PROCEDURE cmdDeleteConfirmation.Click
		LOCAL l_cDataVar, l_oAdrprvcy
		
		l_cDataVar = this.Parent.cDataVar
		DO CASE
			CASE NOT EMPTY(DlookUp("address", "ad_addrid = " + SqlCnv(&l_cDataVar..ap_addrid,.T.), "ad_company"))
				MsgBox(GetLangText("ADDRESS","TXT_PRIVACY_COMPANY_CONSENT"),GetLangText("FUNC","TXT_MESSAGE"),64)
			CASE YesNo(GetLangText("ADDRESS","TXT_PRIVACY_ADRDEL"))
				l_oAdrprvcy = &l_cDataVar
				PAAddressDeleteMarkOn(,@l_oAdrprvcy)
				&l_cDataVar = l_oAdrprvcy
				this.Parent.Refresh(.T.)
		
				DO Lists IN MyLists WITH 8, this.Caption,,4
			OTHERWISE
		ENDCASE
	ENDPROC

	PROCEDURE cmdDownload.Click
		this.Parent.OnDownload()
	ENDPROC

	PROCEDURE cmdPreview.Click
		LOCAL l_cOutputFile, l_cExtension, l_cForbbiden
		
		l_oData = EVALUATE(this.Parent.cDataVar)
		l_cFile = FULLPATH(gcDocumentdir+ALLTRIM(l_oData.ap_cnfname))
		l_cExtension = JUSTEXT(l_cFile)
		l_cForbbiden = PAGetDangerouseFilesList()
		IF ["]+UPPER(ALLTRIM(l_cExtension))+["] $ l_cForbbiden
			Alert(GetLangText("KEYCARD1","TXT_BLOCKED")+"!")
		ELSE
			WinExecute(l_cFile)
		ENDIF
	ENDPROC

	PROCEDURE cmdRemove.Click
		LOCAL l_oData
		
		l_oData = EVALUATE(this.Parent.cDataVar)
		
		IF YesNo(GetLangText("ADDRESS","TXT_PRIVACY_CNSDEL"),GetLangText("FUNC","TXT_QUESTION"),ALLTRIM(l_oData.ap_cnfalas))
			DELETE FILE (FULLPATH(gcDocumentdir+ALLTRIM(l_oData.ap_cnfname)))
			STORE "" TO l_oData.ap_cnfname, l_oData.ap_cnfalas
			IF NOT EMPTY(l_oData.ap_apid)
				l_oData.ap_consent = 5
				this.Parent.OnSave()
				this.Parent.cboAp_consent.Refresh()
			ENDIF
			this.Parent.txtAp_cnfalas.Refresh()
			STORE .F. TO this.Parent.cmdDownload.Enabled, this.Parent.cmdPreview.Enabled, this.Parent.cmdRemove.Enabled
		ENDIF
	ENDPROC

	PROCEDURE cmdSave.Click
		this.Parent.OnSave()
	ENDPROC

	PROCEDURE cmdUpload.Click
		this.Parent.OnUpload()
	ENDPROC

ENDDEFINE

DEFINE CLASS revenuepage AS tcontainer OF "..\common\libs\_lvisual.vcx" 
 	*< CLASSDATA: Baseclass="container" Timestamp="" Scale="Pixels" Uniqueid="" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="cntChartView" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cntChartView.fchtBoundRevnue" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cntChartView.fchtBoundRes" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cntChartView.fchtBoundNights" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cntGridView" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cntGridView.shpLastStay" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cntGridView.lblLast" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cntGridView.lblStay" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cntGridView.lblRoomType" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cntGridView.lblRoom" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cntGridView.lblRateCode" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cntGridView.lblRate" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cntGridView.lblMarket" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cntGridView.lblSource" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cntGridView.tgridCompare" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cntGridView.tgridYears" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdSettings" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdSwitch" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdPrint" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdSum" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdSumEvents" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdSumHotels" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="oProcAddressStat" UniqueID="" Timestamp="" />

	#INCLUDE "..\include\constdefines.h"
	*<DefinedPropArrayMethod>
		*m: activate		&& Occurs when a FormSet, Form, or Page object becomes active or when a ToolBar object is shown.
		*m: changeview
		*m: getstatisticsaddress
		*m: graphview_assign
		*m: initafter
		*m: keypress		&& Occurs when the user presses and releases a key.
		*m: lhotelsselected_assign
		*m: oleinit
		*m: oneventswitch
		*m: onhotels
		*m: onprint
		*m: onreferralswitch
		*m: refreshcharts
		*m: refreshgrids
		*m: refreshstatistics
		*m: selecteventsum
		*m: selectreferraladdresssum
		*m: setcontrolsource
		*m: setsize
		*m: settings
		*p: csource
		*p: cstatdatahotelscur
		*p: filterevents
		*p: graphrefresh
		*p: graphview
		*p: lhotelsselected
		*p: mode
		*p: naddrid
		*p: nadid
		*p: nrevfilterflags
		*p: oleinitiated
		*p: referralsalso
		*p: refreshdata
	*</DefinedPropArrayMethod>

	csource = ADDRESS
	cstatdatahotelscur = 
	graphrefresh = .T.
	Height = 175
	mode = ADDRESS
	naddrid = 0
	nadid = 0
	Name = "revenuepage"
	nrevfilterflags = 0
	refreshdata = .T.
	Width = 786

	ADD OBJECT 'cmdPrint' AS tcommandbutton WITH ;
		Anchor = 240, ;
		Caption = "", ;
		FontName = "Arial", ;
		FontSize = 8, ;
		Height = 23, ;
		Left = 47, ;
		Name = "cmdPrint", ;
		Picture = ..\bitmap\toolbar\print.png, ;
		PicturePosition = 14, ;
		resizefontsize = .F., ;
		Top = 1, ;
		Width = 23, ;
		ZOrderSet = 4
		*< END OBJECT: ClassLib="main.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'cmdSettings' AS tcommandbutton WITH ;
		Anchor = 240, ;
		Caption = "", ;
		FontName = "Arial", ;
		FontSize = 8, ;
		Height = 23, ;
		Left = 1, ;
		Name = "cmdSettings", ;
		Picture = ..\bitmap\toolbar\settings.png, ;
		PicturePosition = 14, ;
		resizefontsize = .F., ;
		Top = 1, ;
		Width = 23, ;
		ZOrderSet = 2
		*< END OBJECT: ClassLib="main.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'cmdSum' AS tcommandbutton WITH ;
		Anchor = 240, ;
		Caption = "", ;
		FontSize = 8, ;
		Height = 23, ;
		Left = 70, ;
		Name = "cmdSum", ;
		Picture = ..\bitmap\toolbar\sum.png, ;
		PicturePosition = 14, ;
		resizefontsize = .F., ;
		Top = 1, ;
		Width = 23, ;
		ZOrderSet = 5
		*< END OBJECT: ClassLib="main.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'cmdSumEvents' AS tcommandbutton WITH ;
		Anchor = 240, ;
		Caption = "", ;
		FontSize = 8, ;
		Height = 23, ;
		Left = 93, ;
		Name = "cmdSumEvents", ;
		Picture = ..\bitmap\toolbar\event.png, ;
		PicturePosition = 14, ;
		resizefontsize = .F., ;
		Top = 1, ;
		Width = 23, ;
		ZOrderSet = 6
		*< END OBJECT: ClassLib="main.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'cmdSumHotels' AS tcommandbutton WITH ;
		Anchor = 240, ;
		Caption = "H", ;
		FontSize = 8, ;
		Height = 23, ;
		Left = 116, ;
		Name = "cmdSumHotels", ;
		Picture = ..\bitmap\toolbar\multiproper.png, ;
		PicturePosition = 14, ;
		resizefontsize = .F., ;
		Top = 1, ;
		Visible = .F., ;
		Width = 23, ;
		ZOrderSet = 7
		*< END OBJECT: ClassLib="main.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'cmdSwitch' AS tcommandbutton WITH ;
		Anchor = 240, ;
		Caption = "", ;
		FontName = "Arial", ;
		FontSize = 8, ;
		Height = 23, ;
		Left = 24, ;
		Name = "cmdSwitch", ;
		Picture = ..\bitmap\toolbar\graph07.png, ;
		PicturePosition = 14, ;
		resizefontsize = .F., ;
		Top = 1, ;
		Width = 23, ;
		ZOrderSet = 3
		*< END OBJECT: ClassLib="main.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'cntChartView' AS tcontainer WITH ;
		Height = 175, ;
		Left = 0, ;
		Name = "cntChartView", ;
		Top = 0, ;
		Width = 786, ;
		ZOrderSet = 0
		*< END OBJECT: ClassLib="..\common\libs\_lvisual.vcx" BaseClass="container" />

	ADD OBJECT 'cntChartView.fchtBoundNights' AS foxcharts WITH ;
		Anchor = 240, ;
		Height = 166, ;
		Left = 570, ;
		Name = "fchtBoundNights", ;
		Top = 9, ;
		Width = 214, ;
		ZOrderSet = 2, ;
		_memberdata = <VFPData>

		</VFPData>, ;
		AxisLegend2.Name = "AxisLegend2", ;
		ChartCanvas.Name = "ChartCanvas", ;
		Fields.Name = "Fields", ;
		ScaleLegend.Name = "ScaleLegend", ;
		ShapeLegend.Name = "ShapeLegend", ;
		SideLegend.Name = "SideLegend", ;
		SubTitle.Name = "SubTitle", ;
		Title.Name = "Title", ;
		ToolTip.Name = "ToolTip", ;
		XAxis.Name = "XAxis", ;
		YAxis.Name = "YAxis"
		*< END OBJECT: ClassLib="..\common\misc\foxcharts\foxcharts.vcx" BaseClass="container" />

	ADD OBJECT 'cntChartView.fchtBoundRes' AS foxcharts WITH ;
		Anchor = 240, ;
		Height = 166, ;
		Left = 308, ;
		Name = "fchtBoundRes", ;
		Top = 9, ;
		Width = 262, ;
		ZOrderSet = 1, ;
		AxisLegend2.Name = "AxisLegend2", ;
		ChartCanvas.Name = "ChartCanvas", ;
		Fields.Name = "Fields", ;
		ScaleLegend.Name = "ScaleLegend", ;
		ShapeLegend.Name = "ShapeLegend", ;
		SideLegend.Name = "SideLegend", ;
		SubTitle.Name = "SubTitle", ;
		Title.Name = "Title", ;
		ToolTip.Name = "ToolTip", ;
		XAxis.Name = "XAxis", ;
		YAxis.Name = "YAxis"
		*< END OBJECT: ClassLib="..\common\misc\foxcharts\foxcharts.vcx" BaseClass="container" />

	ADD OBJECT 'cntChartView.fchtBoundRevnue' AS foxcharts WITH ;
		Anchor = 240, ;
		Height = 166, ;
		Left = 0, ;
		Name = "fchtBoundRevnue", ;
		Top = 9, ;
		Width = 308, ;
		ZOrderSet = 0, ;
		_memberdata = <VFPData>

		</VFPData>, ;
		AxisLegend2.Name = "AxisLegend2", ;
		ChartCanvas.Name = "ChartCanvas", ;
		Fields.Name = "Fields", ;
		ScaleLegend.Name = "ScaleLegend", ;
		ShapeLegend.Name = "ShapeLegend", ;
		SideLegend.Name = "SideLegend", ;
		SubTitle.Name = "SubTitle", ;
		Title.Left = 135, ;
		Title.Name = "Title", ;
		Title.Top = 8, ;
		ToolTip.Name = "ToolTip", ;
		XAxis.Name = "XAxis", ;
		YAxis.Name = "YAxis"
		*< END OBJECT: ClassLib="..\common\misc\foxcharts\foxcharts.vcx" BaseClass="container" />

	ADD OBJECT 'cntGridView' AS tcontainer WITH ;
		Height = 175, ;
		Left = 0, ;
		Name = "cntGridView", ;
		Top = 0, ;
		Width = 786, ;
		ZOrderSet = 1
		*< END OBJECT: ClassLib="..\common\libs\_lvisual.vcx" BaseClass="container" />

	ADD OBJECT 'cntGridView.lblLast' AS tlabel WITH ;
		Anchor = 240, ;
		Caption = "lblLast", ;
		FontBold = .T., ;
		FontName = "Arial Narrow", ;
		Height = 17, ;
		Left = 140, ;
		Name = "lblLast", ;
		Top = 7, ;
		Width = 22, ;
		ZOrderSet = 1
		*< END OBJECT: ClassLib="main.vcx" BaseClass="label" />

	ADD OBJECT 'cntGridView.lblMarket' AS tlabel WITH ;
		Anchor = 240, ;
		Caption = "lblMarket", ;
		FontName = "Arial Narrow", ;
		Height = 17, ;
		Left = 615, ;
		Name = "lblMarket", ;
		Top = 8, ;
		Width = 72, ;
		ZOrderSet = 7
		*< END OBJECT: ClassLib="main.vcx" BaseClass="label" />

	ADD OBJECT 'cntGridView.lblRate' AS tlabel WITH ;
		Anchor = 240, ;
		Caption = "lblRate", ;
		FontName = "Arial Narrow", ;
		Height = 17, ;
		Left = 538, ;
		Name = "lblRate", ;
		Top = 8, ;
		Width = 70, ;
		ZOrderSet = 6
		*< END OBJECT: ClassLib="main.vcx" BaseClass="label" />

	ADD OBJECT 'cntGridView.lblRateCode' AS tlabel WITH ;
		Anchor = 240, ;
		Caption = "lblRateCode", ;
		FontName = "Arial Narrow", ;
		Height = 17, ;
		Left = 402, ;
		Name = "lblRateCode", ;
		Top = 8, ;
		Width = 132, ;
		ZOrderSet = 5
		*< END OBJECT: ClassLib="main.vcx" BaseClass="label" />

	ADD OBJECT 'cntGridView.lblRoom' AS tlabel WITH ;
		Anchor = 240, ;
		Caption = "lblRoom", ;
		FontName = "Arial Narrow", ;
		Height = 17, ;
		Left = 335, ;
		Name = "lblRoom", ;
		Top = 8, ;
		Width = 62, ;
		ZOrderSet = 4
		*< END OBJECT: ClassLib="main.vcx" BaseClass="label" />

	ADD OBJECT 'cntGridView.lblRoomType' AS tlabel WITH ;
		Anchor = 240, ;
		Caption = "lblRoomType", ;
		FontName = "Arial Narrow", ;
		Height = 17, ;
		Left = 263, ;
		Name = "lblRoomType", ;
		Top = 8, ;
		Width = 66, ;
		ZOrderSet = 3
		*< END OBJECT: ClassLib="main.vcx" BaseClass="label" />

	ADD OBJECT 'cntGridView.lblSource' AS tlabel WITH ;
		Anchor = 240, ;
		Caption = "lblSource", ;
		FontName = "Arial Narrow", ;
		Height = 17, ;
		Left = 693, ;
		Name = "lblSource", ;
		Top = 8, ;
		Width = 84, ;
		ZOrderSet = 8
		*< END OBJECT: ClassLib="main.vcx" BaseClass="label" />

	ADD OBJECT 'cntGridView.lblStay' AS tlabel WITH ;
		Anchor = 240, ;
		Caption = "lblStay", ;
		FontName = "Arial Narrow", ;
		Height = 17, ;
		Left = 165, ;
		Name = "lblStay", ;
		Top = 8, ;
		Width = 119, ;
		ZOrderSet = 2
		*< END OBJECT: ClassLib="main.vcx" BaseClass="label" />

	ADD OBJECT 'cntGridView.shpLastStay' AS sh WITH ;
		Anchor = 240, ;
		Height = 24, ;
		Left = 162, ;
		Name = "shpLastStay", ;
		Top = 2, ;
		Width = 620, ;
		ZOrderSet = 0
		*< END OBJECT: ClassLib="main.vcx" BaseClass="shape" />

	ADD OBJECT 'cntGridView.tgridCompare' AS grdbasesort WITH ;
		Anchor = 240, ;
		DeleteMark = .F., ;
		GridLineColor = 192,192,192, ;
		Height = 57, ;
		lcolumncountnocolumnsremove = .T., ;
		Left = 1, ;
		lresizecolumns = .F., ;
		luseudpopupmenu = .T., ;
		Name = "tgridCompare", ;
		ReadOnly = .T., ;
		RecordMark = .F., ;
		ScrollBars = 2, ;
		setcolumns = .T., ;
		Themes = .F., ;
		Top = 27, ;
		Width = 783, ;
		ZOrderSet = 9
		*< END OBJECT: ClassLib="main.vcx" BaseClass="grid" />

	ADD OBJECT 'cntGridView.tgridYears' AS grdbasesort WITH ;
		Anchor = 240, ;
		DeleteMark = .F., ;
		GridLineColor = 192,192,192, ;
		HeaderHeight = 17, ;
		Height = 73, ;
		lcolumncountnocolumnsremove = .T., ;
		Left = 1, ;
		lresizecolumns = .F., ;
		luseudpopupmenu = .T., ;
		MemberClassLibrary = ..\commonclasses.prg, ;
		Name = "tgridYears", ;
		ReadOnly = .T., ;
		RecordMark = .F., ;
		ScrollBars = 2, ;
		setcolumns = .T., ;
		Themes = .F., ;
		Top = 86, ;
		Width = 783, ;
		ZOrderSet = 10
		*< END OBJECT: ClassLib="main.vcx" BaseClass="grid" />

	ADD OBJECT 'oProcAddressStat' AS procaddressstat WITH ;
		Left = 0, ;
		Name = "oProcAddressStat", ;
		Top = 24
		*< END OBJECT: ClassLib="proc_address.vcx" BaseClass="custom" />
	
	PROCEDURE activate		&& Occurs when a FormSet, Form, or Page object becomes active or when a ToolBar object is shown.
		this.RefreshStatistics()
	ENDPROC

	PROCEDURE changeview
		this.GraphView = NOT this.GraphView
		this.RefreshStatistics(.T.)
	ENDPROC

	PROCEDURE Destroy
		IF VARTYPE(thisform.TbrCtrl) = "O" AND INLIST(thisform.TbrCtrl.oCurrentGrid, this.cntGridView.TgridYears, this.cntGridView.TgridCompare)
			thisform.TbrCtrl.oCurrentGrid = .NULL.
		ENDIF
		DODEFAULT()
	ENDPROC

	PROCEDURE getstatisticsaddress
		LOCAL lnRecNo, loActiveControl, llMoveFocus
		
		IF NOT this.RefreshData
			RETURN
		ENDIF
		this.RefreshData = .F.
		
		IF TYPE("this.ActiveControl") = "O"
			loActiveControl = this.ActiveControl
			llMoveFocus = INLIST(loActiveControl, this.cntGridView.TgridCompare, this.cntGridView.TgridYears)
		ENDIF
		IF llMoveFocus
			this.cmdSwitch.SetFocus()
		ENDIF
		
		lnRecNo = RECNO(this.cSource)
		
		DO CASE
			CASE this.ReferralsAlso
				thisform.oProcAddress.RequeryAllReferralsCursor()
				this.oProcAddressStat.GetStatisticsAddress("curLinkedAddress", this.FilterEvents, this.nRevFilterFlags)
			CASE this.lHotelsSelected
				this.oProcAddressStat.GetStatisticsAdrMain(this.nAdId, this.cStatDataHotelsCur, this.FilterEvents, this.nRevFilterFlags)
			OTHERWISE
				this.oProcAddressStat.GetStatisticsAddress(this.nAddrId, this.FilterEvents, this.nRevFilterFlags)
		ENDCASE
		
		IF RECNO(this.cSource) <> lnRecNo
			GO lnRecNo IN (this.cSource)
		ENDIF
		
		IF llMoveFocus
			loActiveControl.SetFocus()
		ENDIF
	ENDPROC

	PROCEDURE graphview_assign
		LPARAMETERS tlNewVal
		
		this.GraphView = tlNewVal
		
		this.cmdSwitch.Picture = "bitmap\toolbar\" + IIF(this.GraphView, "graph05.png", "graph07.png")
		this.cntChartView.Visible = this.GraphView
		this.cntGridView.Visible = NOT this.GraphView
	ENDPROC

	PROCEDURE Init
		this.Parent.ToolTipText = GetLangText("ADDRESS","TT_PREVNUE")
		this.cmdSettings.ToolTipText = GetLangText("TABLERES","TXT_SETTINGS")
		this.cmdSwitch.ToolTipText = GetLangText("ADDRESS","TXT_SWITCH")
		this.cmdSum.ToolTipText = GetLangText("ADDRESS","TXT_SWITCH_REFERRAL")
		this.cmdPrint.ToolTipText = GetLangText("ADDRESS","TT_PRINT_HISTORY")
		this.cmdSumHotels.ToolTipText = GetLangText("ADDRESS","TT_HOTELS_REVNUE")
		this.cmdSumEvents.ToolTipText = GetLangText("ADDRESS","TXT_FILTER_EVENTS")
		
		this.Parent.Caption = GetLangText("ADDRESS","PT_REVNUENAME")
		this.cmdSettings.Caption = this.cmdSettings.ToolTipText
		this.cmdSwitch.Caption = this.cmdSwitch.ToolTipText
		this.cmdSum.Caption = this.cmdSum.ToolTipText
		this.cmdPrint.Caption = this.cmdPrint.ToolTipText
		this.cmdSumHotels.Caption = this.cmdSumHotels.ToolTipText
		this.cmdSumEvents.Caption = this.cmdSumEvents.ToolTipText
		
		this.cmdSwitch.Enabled = paRights(130)
		this.cmdPrint.Enabled = paRights(132)
		this.cmdSumHotels.Enabled = paRights(136)
		this.cmdSumHotels.Visible = _screen.oGlobal.lUseMainServer
		
		this.nRevFilterFlags = 0x0E	&& 00001110b	>>	0 bit - filter events; 1 bit - As Guest; 2 bit - As Guest; 3 bit - As Guest; 4 bit - Also forecast (from ressplit.ebf); 
		
		this.SetControlSource()
		
		this.GraphView = .F.
	ENDPROC

	PROCEDURE initafter
		this.lHotelsSelected = NOT EMPTY(this.cStatDataHotelsCur) AND USED(this.cStatDataHotelsCur) AND DLookUp(this.cStatDataHotelsCur, "cur_selected", "cur_selected")
		IF thisform.SaveGridWidths
			thisform.mSetGridWidths(this)
		ENDIF
		this.SetSize(this.Parent.Parent.PageWidth, this.Parent.Parent.PageHeight)
		this.Visible = .T.
	ENDPROC

	PROCEDURE keypress		&& Occurs when the user presses and releases a key.
		LPARAMETERS nKeyCode, nShiftAltCtrl
		
		DO CASE
			CASE nKeyCode = 16 AND nShiftAltCtrl = 2 AND this.cmdPrint.Enabled
				this.OnPrint()
			CASE nKeyCode = 15 AND nShiftAltCtrl = 2 AND this.cmdSumHotels.Visible AND this.cmdSumHotels.Enabled
				this.OnHotels()
			OTHERWISE
		ENDCASE
	ENDPROC

	PROCEDURE lhotelsselected_assign
		LPARAMETERS tlNewVal
		
		this.lHotelsSelected = tlNewVal
		this.cmdSumHotels.BackColor = IIF(this.lHotelsSelected, RGB(128,255,128), this.cmdSum.BackColor)
	ENDPROC

	PROCEDURE oleinit
		IF NOT this.OleInitiated
			this.OleInitiated = .T.
		
			WITH this.cntChartView.fchtBoundRevnue
				.BarType = 1
				.ChartType = 9
				.SourceAlias = [StatChartCursor]
				.FieldAxis2 = "aa_year"
				.Title.Caption = GetLangText('GSTSTAT','T_REV')		&& Setting the title and subtitle
				.Title.FontUnderline = .T.
				.SubTitle.Caption = .Title.Caption + " " + GetLangText('ADDRESS','TXT_FOR_ADDR')
				.FontName = "Tahoma"
				.Depth = 10						&& Setting the Chart Depth (3D effect)
				.BackColor = RGB(255,255,255)	&& Set the BackColor
				.ColorType = 21					&& Set the colors to some palette
				.BrushType = 2					&& Set Colors to Gradient
				.XAxis.Caption = GetLangText('EMPLOYEE','TXT_YEAR')	&& Set the captions for the X axis
				.YAxis.Caption = GetLangText('AR','T_AMOUNT')		&& Set the captions for the Y axis
				.AxisLegend2.Alignment = 0		&& Set the 2nd legend to Left
				.AxisLegend2.Rotation = 45
				.AxisLegend2.FontName = "Verdana"
				.AxisLegend2.FontSize = 6
			ENDWITH
		
			WITH this.cntChartView.fchtBoundRes
				.BarType = 1
				.ChartType = 9
				.SourceAlias = [StatChartCursor]
				.FieldAxis2 = "aa_year"
				.Title.Caption = GetLangText('OR','TXT_OCCUPANCY')	&& Setting the title and subtitle
				.Title.FontUnderline = .T.
				.SubTitle.Caption = .Title.Caption + " " + GetLangText('ADDRESS','TXT_FOR_ADDR')
				.FontName = "Tahoma"
				.Depth = 10						&& Setting the Chart Depth (3D effect)
				.BackColor = RGB(255,255,255)	&& Set the BackColor
				.ColorType = 21					&& Set the colors to some palette
				.BrushType = 2					&& Set Colors to Gradient
				.XAxis.Caption = GetLangText('EMPLOYEE','TXT_YEAR')	&& Set the captions for the X axis
				.YAxis.Caption = GetLangText('AR','T_QUANTITY')		&& Set the captions for the Y axis
				.AxisLegend2.Alignment = 0		&& Set the 2nd legend to Left
				.AxisLegend2.Rotation = 45
				.AxisLegend2.FontName = "Verdana"
				.AxisLegend2.FontSize = 6
				.ChartsCount = 3
				.Fields(1).FieldValue = "aa_goodres"
				.Fields(1).Legend = GetLangText("ADDRESS","T_GOODRES")
				.Fields(2).FieldValue = "aa_cns"
				.Fields(2).Legend = GetLangText("ADDRESS","T_NOSHOWS")
				.Fields(3).FieldValue = "aa_ccxl"
				.Fields(3).Legend = GetLangText("ADDRESS","T_CANCELS")
			ENDWITH
		
			WITH this.cntChartView.fchtBoundNights
				.BarType = 1
				.ChartType = 9
				.SourceAlias = [StatChartCursor]
				.FieldAxis2 = "aa_year"
				.Title.Caption = GetLangText('RESERVAT','T_STAY')	&& Setting the title and subtitle
				.Title.FontUnderline = .T.
				.SubTitle.Caption = .Title.Caption + " " + GetLangText('ADDRESS','TXT_FOR_ADDR')
				.FontName = "Tahoma"
				.Depth = 10						&& Setting the Chart Depth (3D effect)
				.BackColor = RGB(255,255,255)	&& Set the BackColor
				.ColorType = 21					&& Set the colors to some palette
				.BrushType = 2					&& Set Colors to Gradient
				.XAxis.Caption = GetLangText('EMPLOYEE','TXT_YEAR')	&& Set the captions for the X axis
				.YAxis.Caption = GetLangText('AR','T_QUANTITY')		&& Set the captions for the Y axis
				.AxisLegend2.Alignment = 0		&& Set the 2nd legend to Left
				.AxisLegend2.Rotation = 45
				.AxisLegend2.FontName = "Verdana"
				.AxisLegend2.FontSize = 6
				.ChartsCount = 1
				.Fields(1).FieldValue = "aa_cnights"
				.Fields(1).Legend = GetLangText("ADDRESS","T_NIGHTS")
			ENDWITH
		ENDIF
	ENDPROC

	PROCEDURE oneventswitch
		LPARAMETERS tlFilterEvents
		
		this.FilterEvents = IIF(PCOUNT() = 0, NOT this.FilterEvents, tlFilterEvents)
		IF this.FilterEvents
			this.nRevFilterFlags = BITSET(this.nRevFilterFlags,0)
		ELSE
			this.nRevFilterFlags = BITCLEAR(this.nRevFilterFlags,0)
		ENDIF
		
		this.cmdSumEvents.Picture = "bitmap\toolbar\" + IIF(this.FilterEvents, "notevent.png", "event.png")
		IF TYPE("_screen.ActiveForm.cntUni.cmdUniButton") = "O"
			_screen.ActiveForm.cntUni.cmdUniButton.Picture = this.cmdSumEvents.Picture
		ENDIF
	ENDPROC

	PROCEDURE onhotels
		LOCAL lnSelect, lnRet, lcTmpCur
		LOCAL ARRAY laDefs[2,4]
		
		IF NOT USED(this.cStatDataHotelsCur)
			alert(Str2Msg(getapplangtext("MAIN","CANT_OPEN_TABLE"), "%s", "hotel"))
			RETURN .T.
		ENDIF
		
		lnSelect = SELECT()
		
		lcTmpCur = SYS(2015)
		SELECT * FROM (this.cStatDataHotelsCur) INTO CURSOR (lcTmpCur) READWRITE
		laDefs[1,1] = "ho_hotcode"
		laDefs[1,2] = 150
		laDefs[1,3] = ""
		laDefs[1,4] = "TXT"
		laDefs[2,1] = "cur_selected"
		laDefs[2,2] = 40
		laDefs[2,3] = ""
		laDefs[2,4] = "CHK"
		GO TOP IN (lcTmpCur)
		SELECT 0
		DO FORM Forms\Brwmulsel WITH lcTmpCur, laDefs TO lnRet
		
		IF lnRet = 1
			SELECT (lcTmpCur)
			SCAN FOR DLocate(this.cStatDataHotelsCur, "ho_hotcode = " + SqlCnv(&lcTmpCur..ho_hotcode))
				REPLACE cur_selected WITH &lcTmpCur..cur_selected IN (this.cStatDataHotelsCur)
			ENDSCAN
			DClose(lcTmpCur)
			this.lHotelsSelected = DLookUp(this.cStatDataHotelsCur, "cur_selected", "cur_selected")
			this.RefreshData = .T.
			this.OnEventSwitch(.F.)
			this.OnReferralSwitch(.F.)
			this.RefreshStatistics()
		ENDIF
		
		SELECT (lnSelect)
	ENDPROC

	PROCEDURE onprint
		LOCAL lnSelected, i, loDefaults
		
		lnSelected = SELECT()
		PRIVATE poCompareCur1, poCompareCur2, paCompareHeader, paYearHeader, poAddress, pofchtBoundRevnue, pofchtBoundRes, pofchtBoundNights
		
		SELECT (this.cSource)
		SCATTER NAME poAddress
		
		loDefaults = MakeStructure("nPeferedType, cSystemID, aStruct(1), aContent(1), cOutPutFile, cArchive, Min1, Max1, Min2, Max2, Min3, Max3, Min4, Max4")
		loDefaults.nPeferedType = 0
		AFIELDS(loDefaults.aStruct, "StatYearCursor")
		SELECT * FROM StatYearCursor ORDER BY aa_year DESC INTO ARRAY loDefaults.aContent
		loDefaults.cArchive = ""
		loDefaults.Min1 = IIF(this.ReferralsAlso OR this.FilterEvents, " - (" + ;
							IIF(this.ReferralsAlso, GetLangText("ADDRESS","TXT_SUM_REFERRAL"), "") + ;
							IIF(this.ReferralsAlso AND this.FilterEvents, "; ", "") + ;
							IIF(this.FilterEvents, GetLangText("ADDRESS","TXT_EVENT_FILTER"), "") + ")", "")
		loDefaults.Max1 = ""
		loDefaults.Min2 = ""
		loDefaults.Max2 = ""
		loDefaults.Min3 = ""
		loDefaults.Max3 = ""
		loDefaults.Min4 = ""
		loDefaults.Max4 = ""
		IF this.GraphView
			loDefaults.cSystemID = "_ADRCHRT"
			pofchtBoundRevnue = this.cntChartView.fchtBoundRevnue.ChartCanvas
			pofchtBoundRes = this.cntChartView.fchtBoundRes.ChartCanvas
			pofchtBoundNights = this.cntChartView.fchtBoundNights.ChartCanvas
		ELSE
			loDefaults.cSystemID = "_ADRSTAT"
			SELECT StatCompareCursor
			LOCATE
			SCATTER NAME poCompare1
			SKIP
			SCATTER NAME poCompare2
			DIMENSION paCompareHeader(16), paYearHeader(16)
			FOR i = 1 TO MIN(16, this.cntGridView.TgridCompare.ColumnCount)
				paCompareHeader(i) = this.cntGridView.TgridCompare.Columns(i).Header1.Caption
				paYearHeader(i) = this.cntGridView.TgridYears.Columns(i).Header1.Caption
			NEXT
		ENDIF
		PreviewOrPrintReport(loDefaults)
		
		RELEASE poCompareCur1, poCompareCur2, paCompareHeader, paYearHeader, poAddress, pofchtBoundRevnue, pofchtBoundRes, pofchtBoundNights
		SELECT (lnSelected)
	ENDPROC

	PROCEDURE onreferralswitch
		LPARAMETERS tlReferralsAlso
		
		this.ReferralsAlso = IIF(PCOUNT() = 0, NOT this.ReferralsAlso, tlReferralsAlso)
		
		this.cntGridView.TgridCompare.Grdbasesortcolumn1.Header1.ForeColor = IIF(this.ReferralsAlso, 255, 0)
		this.cntGridView.TgridYears.Grdbasesortcolumn1.Header1.ForeColor = IIF(this.ReferralsAlso, 255, 0)
		
		this.cmdSum.Picture = "bitmap\toolbar\" + IIF(this.ReferralsAlso, "notsum.png", "sum.png")
		IF TYPE("_screen.ActiveForm.cntUni.cmdUniButton") = "O"
			_screen.ActiveForm.cntUni.cmdUniButton.Picture = this.cmdSum.Picture
		ENDIF
	ENDPROC

	PROCEDURE Refresh
		this.RefreshStatistics()
	ENDPROC

	PROCEDURE refreshcharts
		IF NOT this.GraphRefresh
			RETURN
		ENDIF
		this.GraphRefresh = .F.
		
		IF NOT this.GraphView
			RETURN
		ENDIF
		
		LOCAL lnSelect, i, lcCaption, lcLangField, lnRow, lcColumn, lcField
		LOCAL ARRAY laChartParams[1,2]
		
		lnSelect = SELECT()
		thisform.LockScreen = .T.
		
		this.OleInit()
		
		SELECT StatChartCursor
		ZAP
		APPEND FROM DBF("StatYearCursor")
		REPLACE aa_goodres WITH aa_cres-aa_cns-aa_ccxl ALL
		
		lcCaption = GetLangText('BUDGET','T_MAINGRP')
		lcLangField = "picklist.pl_lang" + g_langnum
		lnRow = 0
		FOR i = 1 TO 10
			lcColumn = "Grdbasesortcolumn"+PADR(i+1,2)
			IF this.cntGridView.TgridYears.&lcColumn..Visible
				lcField = 'aa_camt' + TRANSFORM(MOD(i,10))
				REPLACE &lcField WITH MAX(0,&lcField) ALL IN StatChartCursor
				lnRow = IIF(lnRow = 0, 1, Aadd(@laChartParams))
				laChartParams[lnRow,1] = lcField
				laChartParams[lnRow,2] = IIF(SEEK("MAINGROUP "+STR(i,3),"picklist","tag3"), &lcLangField, lcCaption + TRANSFORM(i))
			ENDIF
		NEXT
		IF lnRow = 0
			FOR i = 1 TO 10
				lcField = 'aa_camt' + TRANSFORM(MOD(i,10))
				REPLACE &lcField WITH MAX(0,&lcField) ALL IN StatChartCursor
				lnRow = IIF(lnRow = 0, 1, Aadd(@laChartParams))
				laChartParams[lnRow,1] = lcField
				laChartParams[lnRow,2] = IIF(SEEK("MAINGROUP "+STR(i,3),"picklist","tag3"), &lcLangField, lcCaption + TRANSFORM(i))
			NEXT
		ENDIF
		this.cntChartView.fchtBoundRevnue.ChartsCount = lnRow
		FOR i = 1 TO lnRow
			this.cntChartView.fchtBoundRevnue.Fields(i).FieldValue = laChartParams[i,1]
			this.cntChartView.fchtBoundRevnue.Fields(i).Legend = ALLTRIM(laChartParams[i,2])
		NEXT
		
		this.cntChartView.fchtBoundRevnue.DrawChart()
		this.cntChartView.fchtBoundRes.DrawChart()
		this.cntChartView.fchtBoundNights.DrawChart()
		
		thisform.LockScreen = .F.
		SELECT (lnSelect)
	ENDPROC

	PROCEDURE refreshgrids
		LOCAL ldArrdate, ldDepdate, lcRoomtype, lcRoomname, lcRatecode, lnRate, lcMarketcode, lcSourcecode
		
		GO TOP IN StatYearCursor
		GO TOP IN StatCompareCursor
		
		this.cntGridView.lblLast.Caption = GetLangText("ADDRESS","TXT_LAST") + ": "
		this.cntGridView.lblStay.Caption = GetLangText("RESERVAT","T_STAY") + ": "
		this.cntGridView.lblRoomType.Caption = GetLangText("RESERVAT","T_ROOMTYPE") + ": "
		this.cntGridView.lblRoom.Caption = GetLangText("DP","T_ROOM") + ": "
		this.cntGridView.lblRatecode.Caption = GetLangText("RESERVAT","T_RATECODE") + ": "
		this.cntGridView.lblRate.Caption = GetLangText("RESERVAT","T_PRICE") + ": "
		this.cntGridView.lblMarket.Caption = GetLangText("DENIAL","T_MARKET") + ": "
		this.cntGridView.lblSource.Caption = GetLangText("DENIAL","T_SOURCE") + ": "
		
		IF thisform.oProcAddress.AdrmainLastStay(this.Mode, ICASE(this.Mode = "ADDRESS", this.nAddrId, this.Mode = "ADRMAIN", this.nAdId, 0), ;
				@ldArrdate, @ldDepdate, @lcRoomtype, @lcRoomname, @lcRatecode, @lnRate, @lcMarketcode, @lcSourcecode)
			this.cntGridView.lblStay.Caption = this.cntGridView.lblStay.Caption + LEFT(MakeShorDateString(ldArrdate),6) + " - " + MakeShorDateString(ldDepdate)
			this.cntGridView.lblRoomType.Caption = this.cntGridView.lblRoomType.Caption + lcRoomtype
			this.cntGridView.lblRoom.Caption = this.cntGridView.lblRoom.Caption + lcRoomname
			this.cntGridView.lblRatecode.Caption = this.cntGridView.lblRatecode.Caption + lcRatecode
			this.cntGridView.lblRate.Caption = this.cntGridView.lblRate.Caption + ALLTRIM(STR(lnRate,8,2))
			this.cntGridView.lblMarket.Caption = this.cntGridView.lblMarket.Caption + lcMarketcode
			this.cntGridView.lblSource.Caption = this.cntGridView.lblSource.Caption + lcSourcecode
		ENDIF
		
		this.cntGridView.TgridYears.Refresh()
		this.cntGridView.TgridCompare.Refresh()
	ENDPROC

	PROCEDURE refreshstatistics
		LPARAMETERS lp_lForceRefresh
		DO CASE
			CASE this.Mode = "ADDRESS"
				IF this.nAddrId # EVALUATE(this.cSource+".ad_addrid") OR lp_lForceRefresh
					this.nAddrId = EVALUATE(this.cSource+".ad_addrid")
					this.nAdId = EVALUATE(this.cSource+".ad_adid")
					this.RefreshData = .T.
					thisform.oProcAddress.RequeryAllReferralCursors = this.ReferralsAlso
				ENDIF
			CASE this.Mode = "ADRMAIN"
				IF this.nAdId # EVALUATE(this.cSource+".ad_adid") OR lp_lForceRefresh
					this.nAdId = EVALUATE(this.cSource+".ad_adid")
					this.RefreshData = .T.
					thisform.oProcAddress.RequeryAllReferralCursors = this.ReferralsAlso
				ENDIF
			OTHERWISE
		ENDCASE
		
		IF this.RefreshData
			this.GraphRefresh = .T.
			this.GetStatisticsAddress()
			IF this.GraphView
				this.RefreshCharts()
			ELSE
				this.RefreshGrids()
			ENDIF
		ENDIF
	ENDPROC

	PROCEDURE selecteventsum
		LOCAL ARRAY laGridProperty[3,4], laButtonProperty[5]
		LOCAL lnReturnValue, llOldFilterEvents
		
		llOldFilterEvents = this.FilterEvents
		
		laGridProperty[1,1] = 'ev_mark'
		laGridProperty[1,2] = 35
		laGridProperty[1,3] = GetLangText("EMBROWS","TXT_MARK")
		laGridProperty[1,4] = 'CHK'
		laGridProperty[2,1] = 'ev_name'
		laGridProperty[2,2] = 120
		laGridProperty[2,3] = GetLangText("EVENT", "TXT_EVENT")
		laGridProperty[2,4] = 'TXT'
		laGridProperty[3,1] = 'ev_city'
		laGridProperty[3,2] = 120
		laGridProperty[3,3] = GetLangText("EVENT", "TXT_CITY")
		laGridProperty[3,4] = 'TXT'
		
		laButtonProperty[1] = this
		laButtonProperty[2] = 'OnEventSwitch()'
		laButtonProperty[3] = this.cmdSumEvents.Picture
		laButtonProperty[4] = GetLangText("ADDRESS","TXT_FILTER_EVENTS")
		laButtonProperty[5] = .F.
		
		SELECT curChooseEvents
		LOCATE
		DO FORM forms\brwmulsel WITH "curChooseEvents", laGridProperty, GetLangText("ALLOTT", "TXT_SELECT_EVENTS"), laButtonProperty TO lnReturnValue
		
		DO CASE
			CASE lnReturnValue = 0	&& Cancel pressed
				this.OnEventSwitch(llOldFilterEvents)
			CASE lnReturnValue = 1	&& OK pressed
				this.RefreshData = .T.
				this.RefreshStatistics()
			OTHERWISE				&& UniButton pressed
		ENDCASE
	ENDPROC

	PROCEDURE selectreferraladdresssum
		LOCAL ARRAY laGridProperty[4,4], laButtonProperty[5]
		LOCAL lnReturnValue, llOldReferralsAlso
		
		thisform.oProcAddress.RequeryAllReferralCursors = .T.
		thisform.oProcAddress.RequeryAllReferralsCursor()
		llOldReferralsAlso = this.ReferralsAlso
		
		laGridProperty[1,1] = 're_mark'
		laGridProperty[1,2] = 35
		laGridProperty[1,3] = GetLangText("EMBROWS","TXT_MARK")
		laGridProperty[1,4] = 'CHK'
		laGridProperty[2,1] = 're_addrid'
		laGridProperty[2,2] = 75
		laGridProperty[2,3] = GetLangText("ADDRESS","T_ADDRESSID")
		laGridProperty[2,4] = 'TXT'
		laGridProperty[3,1] = 're_addtext'
		laGridProperty[3,2] = 120
		laGridProperty[3,3] = GetLangText("ADDRESS","TXT_LNAME")
		laGridProperty[3,4] = 'TXT'
		laGridProperty[4,1] = 're_city'
		laGridProperty[4,2] = 120
		laGridProperty[4,3] = GetLangText("ADDRESS","TXT_CITY")
		laGridProperty[4,4] = 'TXT'
		
		laButtonProperty[1] = this
		laButtonProperty[2] = 'OnReferralSwitch()'
		laButtonProperty[3] = this.cmdSum.Picture
		laButtonProperty[4] = GetLangText("ADDRESS","TXT_SWITCH_REFERRAL")
		laButtonProperty[5] = .F.
		
		SELECT curLinkedAddress
		LOCATE
		DO FORM forms\brwmulsel WITH "curLinkedAddress", laGridProperty, GetLangText("ADDRESS","TXT_SELECT_SUM_ADDRESS"), laButtonProperty TO lnReturnValue
		
		DO CASE
			CASE lnReturnValue = 0	&& Cancel pressed
				this.OnReferralSwitch(llOldReferralsAlso)
			CASE lnReturnValue = 1	&& OK pressed
				this.RefreshData = .T.
				this.RefreshStatistics()
			OTHERWISE				&& UniButton pressed
		ENDCASE
	ENDPROC

	PROCEDURE setcontrolsource
		LOCAL i, lcCaption, lcLangField
		
		IF _screen.oGlobal.lUseMainServer
			this.cStatDataHotelsCur = SqlCursor("SELECT ho_hotcode FROM __#SRV.HOTEL#__ ORDER BY 1",,,,,,,.T.)
			IF USED(this.cStatDataHotelsCur)
				SELECT *, .F. AS cur_selected FROM (this.cStatDataHotelsCur) INTO CURSOR (this.cStatDataHotelsCur) READWRITE
			ENDIF
		ENDIF
		SqlCursor("SELECT ev_name, ev_city, ev_evid, 0=1 AS ev_mark FROM events ORDER BY 1", "curChooseEvents",,,,,,.T.)
		
		CREATE CURSOR StatChartCursor (aa_year n(4), aa_cnights n(10), aa_cres n(10), aa_goodres n(10), aa_cns n(10), aa_ccxl n(10), aa_camount b(2), ;
			aa_camt0 b(2), aa_camt1 b(2), aa_camt2 b(2), aa_camt3 b(2), aa_camt4 b(2), aa_camt5 b(2), aa_camt6 b(2), aa_camt7 b(2), aa_camt8 b(2), aa_camt9 b(2))
		SELECT * FROM StatChartCursor WHERE 0 = 1 INTO CURSOR StatCompareCursor READWRITE
		INDEX ON aa_year TAG tag1
		SET ORDER TO tag1 DESCENDING
		SELECT * FROM StatChartCursor WHERE 0 = 1 INTO CURSOR StatYearCursor READWRITE
		INDEX ON aa_year TAG tag1
		SET ORDER TO tag1 DESCENDING
		
		this.cntGridView.TgridCompare.RecordSource = [StatCompareCursor]
		this.cntGridView.TgridCompare.SetAll('Movable',.F.,'Grdbasesortcolumn')
		this.cntGridView.TgridYears.RecordSource = [StatYearCursor]
		this.cntGridView.TgridYears.SetAll('Movable',.F.,'Grdbasesortcolumn')
		
		SELECT StatCompareCursor
		this.cntGridView.TgridCompare.Grdbasesortcolumn1.ControlSource = [aa_year]
		this.cntGridView.TgridCompare.Grdbasesortcolumn2.ControlSource = [aa_camt1]
		this.cntGridView.TgridCompare.Grdbasesortcolumn3.ControlSource = [aa_camt2]
		this.cntGridView.TgridCompare.Grdbasesortcolumn4.ControlSource = [aa_camt3]
		this.cntGridView.TgridCompare.Grdbasesortcolumn5.ControlSource = [aa_camt4]
		this.cntGridView.TgridCompare.Grdbasesortcolumn6.ControlSource = [aa_camt5]
		this.cntGridView.TgridCompare.Grdbasesortcolumn7.ControlSource = [aa_camt6]
		this.cntGridView.TgridCompare.Grdbasesortcolumn8.ControlSource = [aa_camt7]
		this.cntGridView.TgridCompare.Grdbasesortcolumn9.ControlSource = [aa_camt8]
		this.cntGridView.TgridCompare.Grdbasesortcolumn10.ControlSource = [aa_camt9]
		this.cntGridView.TgridCompare.Grdbasesortcolumn11.ControlSource = [aa_camt0]
		this.cntGridView.TgridCompare.Grdbasesortcolumn12.ControlSource = [aa_camount]
		this.cntGridView.TgridCompare.Grdbasesortcolumn13.ControlSource = [aa_cres]
		this.cntGridView.TgridCompare.Grdbasesortcolumn14.ControlSource = [aa_cnights]
		this.cntGridView.TgridCompare.Grdbasesortcolumn15.ControlSource = [aa_cns]
		this.cntGridView.TgridCompare.Grdbasesortcolumn16.ControlSource = [aa_ccxl]
		
		lcCaption = GetLangText('BUDGET','T_MAINGRP')
		lcLangField = "picklist.pl_lang" + g_langnum
		this.cntGridView.TgridCompare.Grdbasesortcolumn1.Header1.Caption = GetLangText("PLAN","TXT_YEAR")
		FOR i = 1 TO 10
			this.cntGridView.TgridCompare.Columns(i+1).Header1.Caption = ALLTRIM(IIF(SEEK("MAINGROUP "+STR(i,3),"picklist","tag3"), &lcLangField, lcCaption + TRANSFORM(i)))
		NEXT
		this.cntGridView.TgridCompare.Grdbasesortcolumn12.Header1.Caption = GetLangText("ADDRESS","T_REVNUE")
		this.cntGridView.TgridCompare.Grdbasesortcolumn13.Header1.Caption = GetLangText("ADDRESS","T_RESERVATIONS")
		this.cntGridView.TgridCompare.Grdbasesortcolumn14.Header1.Caption = GetLangText("ADDRESS","T_NIGHTS")
		this.cntGridView.TgridCompare.Grdbasesortcolumn15.Header1.Caption = GetLangText("ADDRESS","T_NOSHOWS")
		this.cntGridView.TgridCompare.Grdbasesortcolumn16.Header1.Caption = GetLangText("ADDRESS","T_CANCELS")
		
		SELECT StatYearCursor
		FOR i = 1 TO this.cntGridView.TgridCompare.ColumnCount
			this.cntGridView.TgridYears.Columns(i).Header1.Caption = this.cntGridView.TgridCompare.Columns(i).Header1.Caption
			this.cntGridView.TgridYears.Columns(i).ControlSource = this.cntGridView.TgridCompare.Columns(i).ControlSource
		NEXT
	ENDPROC

	PROCEDURE setsize
		LPARAMETERS tnWdth, tnHeight
		
		this.Anchor = 0
		this.Width = tnWdth
		this.Height = tnHeight
		this.Anchor = 240
	ENDPROC

	PROCEDURE settings
		LOCAL i, l_nRevFilterFlags
		LOCAL ARRAY l_aDlg[4,8]
		
		l_aDlg[1,1] = "guest"
		l_aDlg[1,2] = GetLangText("ADDRESS","TXT_AS_GUEST")
		l_aDlg[1,3] = SqlCnv(BITTEST(this.nRevFilterFlags,1))
		l_aDlg[1,4] = '@*C'
		l_aDlg[2,1] = "company"
		l_aDlg[2,2] = GetLangText("ADDRESS","TXT_AS_COMPANY")
		l_aDlg[2,3] = SqlCnv(BITTEST(this.nRevFilterFlags,2))
		l_aDlg[2,4] = '@*C'
		l_aDlg[3,1] = "agent"
		l_aDlg[3,2] = GetLangText("ADDRESS","TXT_AS_AGENT")
		l_aDlg[3,3] = SqlCnv(BITTEST(this.nRevFilterFlags,3))
		l_aDlg[3,4] = '@*C'
		l_aDlg[4,1] = "forecast"
		l_aDlg[4,2] = GetLangText("ADDRESS","TXT_ALSO_FORECAST")
		l_aDlg[4,3] = SqlCnv(BITTEST(this.nRevFilterFlags,4))
		l_aDlg[4,4] = '@*C'
		
		IF Dialog(GetLangText("ADDRESS","TW_SETTINGS"),'',@l_aDlg)
			l_nRevFilterFlags = this.nRevFilterFlags
			FOR i = 1 TO 4
				IF l_aDlg(i,8)
					this.nRevFilterFlags = BITSET(this.nRevFilterFlags,i)
				ELSE
					this.nRevFilterFlags = BITCLEAR(this.nRevFilterFlags,i)
				ENDIF
			ENDFOR
			IF l_nRevFilterFlags <> this.nRevFilterFlags
				this.RefreshData = .T.
				this.RefreshStatistics()
			ENDIF
		ENDIF
	ENDPROC

	PROCEDURE cmdPrint.Click
		this.Parent.OnPrint()
	ENDPROC

	PROCEDURE cmdSettings.Click
		this.Parent.Settings()
	ENDPROC

	PROCEDURE cmdSum.Click
		this.Parent.SelectReferralAddressSum()
	ENDPROC

	PROCEDURE cmdSumEvents.Click
		this.Parent.SelectEventSum()
	ENDPROC

	PROCEDURE cmdSumHotels.Click
		this.Parent.OnHotels()
	ENDPROC

	PROCEDURE cmdSwitch.Click
		this.Parent.ChangeView()
	ENDPROC

	PROCEDURE cntGridView.tgridCompare.defineudpopupmenu
		DIMENSION this.aPopupMenu[6]
		this.aPopupMenu[1] = this.Parent.Parent.cmdSwitch
		this.aPopupMenu[2] = this.Parent.Parent.cmdPrint
		this.aPopupMenu[3] = this.Parent.Parent.cmdSum
		this.aPopupMenu[4] = this.Parent.Parent.cmdSumHotels
		this.aPopupMenu[5] = this.Parent.Parent.cmdSumEvents
		this.aPopupMenu[6] = P_COLUMNS
	ENDPROC

	PROCEDURE cntGridView.tgridCompare.Init
		this.ColumnCount = 16
		DODEFAULT()
		SELECT 0
	ENDPROC

	PROCEDURE cntGridView.tgridCompare.When
		IF VARTYPE(thisform.TbrCtrl) = "O"
			thisform.TbrCtrl.GetGridRef(this)
		ENDIF
	ENDPROC

	PROCEDURE cntGridView.tgridYears.changeprop
		LPARAMETERS tcProperty, toColumn
		
		this.Parent.Parent.GraphRefresh = .T.
	ENDPROC

	PROCEDURE cntGridView.tgridYears.defineudpopupmenu
		DIMENSION this.aPopupMenu[ALEN(this.Parent.tgridCompare.aPopupMenu)]
		ACOPY(this.Parent.tgridCompare.aPopupMenu, this.aPopupMenu)
	ENDPROC

	PROCEDURE cntGridView.tgridYears.Init
		this.ColumnCount = 16
		DODEFAULT()
		SELECT 0
	ENDPROC

	PROCEDURE cntGridView.tgridYears.When
		IF VARTYPE(thisform.TbrCtrl) = "O"
			thisform.TbrCtrl.GetGridRef(this)
		ENDIF
	ENDPROC

ENDDEFINE
