*--------------------------------------------------------------------------------------------------------------------------------------------------------
* (ES) AUTOGENERADO - ¡¡ATENCIÓN!! - ¡¡NO PENSADO PARA EJECUTAR!! USAR SOLAMENTE PARA INTEGRAR CAMBIOS Y ALMACENAR CON HERRAMIENTAS SCM!!
* (EN) AUTOGENERATED - ATTENTION!! - NOT INTENDED FOR EXECUTION!! USE ONLY FOR MERGING CHANGES AND STORING WITH SCM TOOLS!!
*--------------------------------------------------------------------------------------------------------------------------------------------------------
*< FOXBIN2PRG: Version="1.19" SourceFile="cit_ctrl.vcx" /> (Solo para binarios VFP 9 / Only for VFP 9 binaries)
*
*
DEFINE CLASS cbo_free_roomnum AS cbo_rs_roomnum OF "cit_ctrl.vcx" 
 	*< CLASSDATA: Baseclass="combobox" Timestamp="" Scale="Pixels" Uniqueid="" />

	BoundColumn = 6
	ColumnCount = 5
	ColumnWidths = "100,30,70,150,100"
	crowsource = rm_rmname,rm_free,rm_rmtype,rm_lang,cur_feat,rm_roomnum
	Name = "cbo_free_roomnum"
	
	PROCEDURE initsqlproperties
		TEXT TO this.cSql TEXTMERGE NOSHOW PRETEXT 2 + 8
		SELECT <<this.croomcur>>.*, rm_lang<<g_langnum>> AS rm_lang, ;
			CAST(ALLTRIM(rd_roomtyp)+[ ]+rt_buildng AS C(14)) AS rm_rmtype, [   ] AS rm_free, CAST('' AS C(254)) AS cur_feat FROM <<this.croomcur>> ;
			LEFT JOIN <<this.crtcur>> ON rt_roomtyp = rm_roomtyp ;
			LEFT JOIN <<this.crtdcur>> ON rd_rdid = rt_rdid
		ENDTEXT
		this.cSql = STRTRAN(this.cSql, ";")
	ENDPROC

	PROCEDURE requerycursor
		LOCAL l_oEnvironment, l_nReserId, l_dResArrDate, l_dResDepDate, l_dDepdate, l_cRoomtype, l_cStatus, l_oResRooms, l_cSql, l_curConflicted, l_curRoomplan
		
		DODEFAULT()
		
		IF EMPTY(this.cReservatAlias)
			RETURN .T.
		ENDIF
		
		l_oEnvironment = SetEnvironment(this.cReservatAlias + ", roomfeat, resrooms, outoford, outofser")
		l_dSysdate = SysDate()
		SELECT (this.cReservatAlias)
		l_nReserId = rs_reserid
		l_dDepdate = rs_depdate
		l_cRoomtype = rs_roomtyp
		l_cStatus = rs_status
		l_dResArrDate = MAX(l_dSysdate,rs_arrdate)
		IF _screen.oGlobal.lVehicleRentMode AND NOT EMPTY(l_cRoomtype)
			l_curRoomplan = SYS(2015)
			VehicleRent("VehicleRentRM", l_dResArrDate, l_dDepdate-1, l_curRoomplan)
			TEXT TO l_cSql TEXTMERGE NOSHOW PRETEXT 2 + 8
			SELECT *, rm_lang<<g_langnum>> AS rm_lang,
				CAST(ALLTRIM(rd_roomtyp)+[ ]+tf_homeport AS C(14)) AS rm_rmtype
				FROM <<l_curRoomplan>>
				WHERE tf_porttyp = <<SqlCnv(l_cRoomtype)>> AND tf_hometyp <> tf_porttyp AND tf_fromdat <= <<SqlCnv(l_dResArrDate)>> AND tf_todat >= <<SqlCnv(l_dDepdate-1)>>
			ENDTEXT
			&l_cSql INTO CURSOR &l_curRoomplan
			SELECT (this.cCursorName)
			APPEND FROM DBF(l_curRoomplan)
			DClose(l_curRoomplan)
			SELECT (this.cReservatAlias)
		ENDIF
		RiGetRoom(rs_reserid, l_dResArrDate, @l_oResRooms)
		
		IF ISNULL(l_oResRooms)
			l_dResDepDate = MAX(rs_arrdate, rs_depdate-1)
		ELSE
			l_dResDepDate = l_oResRooms.ri_todate
		ENDIF
		
		IF EMPTY(l_dResDepDate)
			RETURN .T.
		ENDIF
		
		l_curConflicted = SYS(2015)
		l_cAlias = this.cCursorName
		
		TEXT TO l_cSql TEXTMERGE NOSHOW PRETEXT 2 + 8
			SELECT DISTINCT ri_roomnum FROM resrooms
				INNER JOIN <<this.cReservatAlias>> ON rs_reserid = ri_reserid
				WHERE ri_reserid <> <<SqlCnv(l_nReserId,.T.)>> AND NOT INLIST(rs_status,'NS','CXL','OUT') AND
					ri_date <= <<IIF(l_cStatus = "IN" AND l_dDepdate = l_dSysdate AND l_dDepdate <= l_dResDepDate+1, "IIF(rs_status = 'IN', "+SqlCnv(l_dDepdate,.T.)+", "+SqlCnv(l_dResDepDate,.T.)+")", SqlCnv(l_dResDepDate,.T.))>> AND
					<<IIF(l_cStatus = "IN", "IIF(rs_status = 'IN' AND rs_depdate = "+SqlCnv(l_dSysdate,.T.)+" AND rs_depdate <= ri_todate+1, rs_depdate, ri_todate)", "ri_todate")>> >= <<SqlCnv(l_dResArrDate,.T.)>>
		ENDTEXT
		SqlCursor(l_cSql,l_curConflicted,,,,,,.T.)
		INDEX on ri_roomnum TAG ri_roomnum
		
		SELECT (this.cCursorName)
		SCAN FOR NOT EMPTY(rm_roomnum)
			DO CASE
				CASE _screen.oGlobal.oParam.pa_rmstat AND DLocate("outoford", "oo_roomnum+DTOS(oo_fromdat) = " + SqlCnv(rm_roomnum) + ;
						" AND NOT oo_cancel AND oo_fromdat <= " + SqlCnv(l_dResDepDate) + " AND oo_todat > " + SqlCnv(MAX(l_dSysdate,l_dResArrDate)))
					DELETE
				CASE _screen.oGlobal.oParam.pa_rmstat AND DLocate("outofser", "os_roomnum+DTOS(os_fromdat) = " + SqlCnv(rm_roomnum) + ;
						" AND NOT os_cancel AND os_fromdat <= " + SqlCnv(l_dResDepDate) + " AND os_todat > " + SqlCnv(MAX(l_dSysdate,l_dResArrDate)))
					REPLACE rm_free WITH "OOS"
				OTHERWISE
					IF SEEK(rm_roomnum, l_curConflicted, "ri_roomnum")
						REPLACE rm_free WITH "*"
					ENDIF
			ENDCASE
			l_cResult = ""
			SELECT roomfeat
			SET ORDER TO tag1
			SCAN FOR rf_roomnum = &l_cAlias..rm_roomnum AND NOT EMPTY(rf_feature)
				IF LEN(l_cResult) < 250
					l_cResult = l_cResult + "," + ALLTRIM(rf_feature)
				ENDIF
			ENDSCAN
			REPLACE cur_feat WITH SUBSTR(l_cResult,2) IN (l_cAlias)
		ENDSCAN
		DClose(l_curConflicted)
		
		RETURN .T.
	ENDPROC

ENDDEFINE

DEFINE CLASS cbo_rs_lfinish AS cbobuilding OF "cit_ctrl.vcx" 
 	*< CLASSDATA: Baseclass="combobox" Timestamp="" Scale="Pixels" Uniqueid="" />

	*<DefinedPropArrayMethod>
		*m: nrdid_assign
		*p: cfinish
		*p: creservatalias
		*p: nrdid
	*</DefinedPropArrayMethod>

	cfinish = 
	ControlSource = "this.cfinish"
	creservatalias = 
	Name = "cbo_rs_lfinish"
	nlineheight = 0
	nrdid = 0
	
	PROCEDURE Init
		LPARAMETERS lp_oParent
		
		openfiledirect(.F.,"building")
		
		this.cCursor = SYS(2015)
		
		tCombobox::Init()
		
		RETURN .T.
	ENDPROC

	PROCEDURE initsqlproperties
		DODEFAULT()
		IF NOT EMPTY(this.nRdId)
			this.cSqlSelect = this.cSqlSelect + " INNER JOIN roomtype ON rt_buildng = bu_buildng AND rt_rdid = " + SqlCnv(this.nRdId)
		ENDIF
	ENDPROC

	PROCEDURE LostFocus
		DODEFAULT()
		
		REPLACE rs_lfinish WITH this.cfinish IN (this.cReservatAlias)
		
		RETURN .T.
	ENDPROC

	PROCEDURE nrdid_assign
		LPARAMETERS tnNewVal
		
		this.nRdId = tnNewVal
		
		this.InitSqlProperties()
		this.RequeryCursor()
	ENDPROC

	PROCEDURE value_assign
		LPARAMETERS lp_cNewVal
		LOCAL l_lAdded, l_cDisplayValue
		l_lAdded = this.Insertvalueintorowsource(lp_cNewVal, @l_cDisplayValue)
		this.Value = lp_cNewVal
		IF l_lAdded
			this.DisplayValue = l_cDisplayValue
		ENDIF
	ENDPROC

ENDDEFINE

DEFINE CLASS cbo_rs_ratecod AS cboratecode OF "cit_ctrl.vcx" 
 	*< CLASSDATA: Baseclass="combobox" Timestamp="" Scale="Pixels" Uniqueid="" />

	*<DefinedPropArrayMethod>
		*m: insertvalueintorowsource
		*m: value_assign
		*p: creservatalias
		*p: linsertvalueinlist		&& When .T., when value assigned to combo, and value not fount in list, add it directly to combobox, to prevent not display value
		*p: ocheckreservat
	*</DefinedPropArrayMethod>

	ColumnCount = 7
	ColumnWidths = "70,120,55,55,80,80,80"
	creservatalias = reservat
	crowsource = rs_ratecod,rc_lang,rc_fromdat,rc_todat,rc_base,rc_amnt1,rc_amnt2
	Name = "cbo_rs_ratecod"
	ocheckreservat = .NULL.
	
	PROCEDURE checklistvalues
		LPARAMETERS lp_cValueMacro
		LOCAL i
		
		IF NOT EMPTY(lp_cValueMacro)
			this.DisplayValue = EVALUATE(lp_cValueMacro)
		ENDIF
		
		IF EMPTY(this.DisplayValue)
			RETURN .T.
		ELSE
			FOR i = 1 TO this.ListCount
				IF ALLTRIM(UPPER(this.DisplayValue)) == ALLTRIM(UPPER(this.List(i,1))) OR ;
						ALLTRIM(UPPER(this.DisplayValue)) == this.cUdrChar+ALLTRIM(UPPER(this.List(i,1)))
					IF NOT EMPTY(lp_cValueMacro)
						this.ListIndex = i
					ENDIF
					RETURN .T.
				ENDIF
			NEXT
			FOR i = 1 TO this.ListCount
				IF ALLTRIM(UPPER(this.List(i,1))) = ALLTRIM(UPPER(this.DisplayValue)) OR ;
						this.cUdrChar+ALLTRIM(UPPER(this.List(i,1))) = ALLTRIM(UPPER(this.DisplayValue))
					this.ListIndex = i
					EXIT
				ENDIF
			NEXT
		ENDIF
		
		RETURN .F.
	ENDPROC

	PROCEDURE GotFocus
		DODEFAULT()
		this.RequeryCursor()
	ENDPROC

	PROCEDURE initsqlproperties
		LOCAL i, l_nArea, l_dCurrentResDate, l_cRTFilter, l_cColumnWidths, l_oReservat, l_dPostDepDate
		
		l_nArea = SELECT()
		SELECT (this.cReservatAlias)
		SCATTER MEMO NAME l_oReservat
		l_dCurrentResDate = MIN(rs_depdate, MAX(rs_arrdate, SysDate()))
		l_dPostDepDate = RrGetRsDepDate(l_oReservat)
		
		TEXT TO this.cSqlUnion TEXTMERGE NOSHOW PRETEXT 2 + 8
			UNION SELECT [] AS rs_ratecod, [] AS rc_ratecod, 0 AS rc_base, 0 AS rc_amnt1, 0 AS rc_amnt2, [] AS rc_lang, [] AS rc_roomtyp, {} AS rc_fromdat, ;
			{} AS rc_todat, [] AS rc_rckey, [] AS rc_rttype FROM ratecode
		ENDTEXT
		this.cSqlUnion = STRTRAN(this.cSqlUnion, ";", "")
		
		IF _screen.oGlobal.lAgency
			l_cRTFilter = "(rc_roomtyp = '*' OR " + IIF(EMPTY(rs_roomnum), "rc_roomtyp = " + sqlcnv(rs_roomtyp), "rc_ratecod = " + sqlcnv(Get_rm_rmname(rs_roomnum))) + ")"
		ELSE
			l_cRTFilter = "INLIST(rc_roomtyp, '*', '" + rs_roomtyp + "')"
		ENDIF
		
		IF EMPTY(rs_altid)
			TEXT TO this.cSqlSelect TEXTMERGE NOSHOW PRETEXT 2 + 8
				SELECT rc_ratecod+[ ] AS rs_ratecod, rc_ratecod, rc_base, rc_amnt1, rc_amnt2, rc_lang<<g_langnum>> AS rc_lang, ;
					rc_roomtyp, rc_fromdat, rc_todat, rc_key AS rc_rckey, ;
					CAST(IIF(ISNULL(rd_roomtyp), "*", ALLTRIM(rd_roomtyp)+[ ]+rt_buildng) AS Char(12)) AS rc_rttype FROM ratecode ;
					INNER JOIN (SELECT MAX(rc_ratecod+rc_roomtyp+rc_season+DTOS(rc_fromdat)) AS ord FROM ratecode GROUP BY rc_ratecod __WHERE__) rc ON rc_key = STUFF(rc.ord,15,1,"")+SUBSTR(rc.ord,15,1) ;
					LEFT JOIN roomtype ON rt_roomtyp = rc_roomtyp ;
					LEFT JOIN rtypedef ON rd_rdid = rt_rdid ;
					ORDER BY rc_ratecod, rc_roomtyp DESC, rc_season DESC, rc_fromdat DESC
			ENDTEXT
			this.cSqlSelect = STRTRAN(this.cSqlSelect, ";", "")
		
			TEXT TO this.cWhere TEXTMERGE NOSHOW PRETEXT 2 + 8
				<<l_cRTFilter>> AND 
				BETWEEN(<<SqlCnv(l_dCurrentResDate)>>, rc_fromdat, rc_todat - 1) AND 
				INLIST(rc_season, [ ], <<SqlCnv(DLookUp("season", "se_date = " + SqlCnv(l_dCurrentResDate), "se_season"))>>) AND 
				rc_minstay <= <<SqlCnv(l_dPostDepDate+1-rs_arrdate)>> AND 
				(rc_maxstay = 0 OR rc_maxstay >= <<SqlCnv(l_dPostDepDate+1-rs_arrdate)>>) AND 
				NOT rc_inactiv
			ENDTEXT
			this.cWhere = STRTRAN(this.cWhere, ";", "")
		ELSE
			TEXT TO this.cSqlSelect TEXTMERGE NOSHOW PRETEXT 2 + 8
				SELECT rcc.*, rc_lang<<g_langnum>> AS rc_lang, rc_roomtyp, rc_fromdat, rc_todat, rc_key AS rc_rckey, ;
					CAST(IIF(ISNULL(rd_roomtyp), "*", ALLTRIM(rd_roomtyp)+[ ]+rt_buildng) AS Char(12)) AS rc_rttype FROM ( ;
					SELECT rc_ratecod+[ ] AS rs_ratecod, rc_ratecod, rc_base, rc_amnt1, rc_amnt2 FROM ratecode ;
						UNION SELECT [<<this.cAltChar>>]+as_ratecod, as_ratecod, 0, as_rate1, as_rate2 FROM altsplit ;
						WHERE PADR(as_altid,8)+DTOS(as_date)+as_roomtyp+as_ratecod = <<SqlCnv(PADR(rs_altid,8)+DTOS(l_dCurrentResDate)+rs_roomtyp)>> OR
						PADR(as_altid,8)+DTOS(as_date)+as_roomtyp+as_ratecod = <<SqlCnv(PADR(rs_altid,8)+DTOS(l_dCurrentResDate)+"*")>>) rcc ;
					LEFT JOIN ratecode ON ratecode.rc_ratecod = rcc.rc_ratecod ;
					LEFT JOIN roomtype ON rt_roomtyp = rc_roomtyp ;
					LEFT JOIN rtypedef ON rd_rdid = rt_rdid ;
					ORDER BY ratecode.rc_ratecod, rc_roomtyp DESC, rc_season DESC, rc_fromdat DESC
			ENDTEXT
			this.cSqlSelect = STRTRAN(this.cSqlSelect, ";", "")
		
			TEXT TO this.cWhere TEXTMERGE NOSHOW PRETEXT 2 + 8
				<<l_cRTFilter>> AND 
				BETWEEN(<<SqlCnv(l_dCurrentResDate)>>, rc_fromdat, rc_todat - 1) AND 
				INLIST(rc_season, [ ], <<SqlCnv(DLookUp("season", "se_date = " + SqlCnv(l_dCurrentResDate), "se_season"))>>) AND 
				rc_minstay <= <<SqlCnv(l_dPostDepDate+1-rs_arrdate)>> AND 
				(rc_maxstay = 0 OR rc_maxstay >= <<SqlCnv(l_dPostDepDate+1-rs_arrdate)>>) AND 
				NOT rc_inactiv
			ENDTEXT
			this.cWhere = STRTRAN(this.cWhere, ";", "")
		ENDIF
		
		IF NOT _screen.oGlobal.oParam2.pa_shbsprc
			* Hide rc_base column by switching ColumnWidths for this field with "0".
			l_cColumnWidths = ""
			FOR i = 1 TO GETWORDCOUNT(this.cRowSource,",")
				l_cColumnWidths = l_cColumnWidths + IIF(EMPTY(l_cColumnWidths), "", ",") + ;
					IIF(LOWER(GETWORDNUM(this.cRowSource,i,",")) == "rc_base", "0", TRANSFORM(GETWORDNUM(this.ColumnWidths,i,",")))
			NEXT
			this.ColumnWidths = l_cColumnWidths
		ENDIF
		
		SELECT (l_nArea)
	ENDPROC

	PROCEDURE insertvalueintorowsource
		LPARAMETERS vNewVal
		LOCAL l_cNewDisplayValue, l_nId, i, l_lAdded
			
		IF this.linsertvalueinlist
			l_cNewDisplayValue = TRANSFORM(vNewVal)
			l_lAdded = .T.
			FOR i = 1 TO this.ListCount
				IF ALLTRIM(UPPER(this.List(i,1))) == ALLTRIM(UPPER(l_cNewDisplayValue))
					l_lAdded = .F.
					EXIT
				ENDIF
			ENDFOR
			IF l_lAdded
				l_nId = INT(VAL(RIGHT(STRTRAN(STRTRAN(TRANSFORM(SECONDS()),",",""),".",""),4)))
				this.AddListItem(l_cNewDisplayValue,l_nId)
			ENDIF
		ENDIF
		
		RETURN l_lAdded
	ENDPROC

	PROCEDURE KeyPress
		LPARAMETERS nKeyCode, nShiftAltCtrl
		
		DO CASE
			CASE nShiftAltCtrl = 0 AND nKeyCode = 7
				this.DisplayValue = Blank(this.Value)
				NODEFAULT
			OTHERWISE
				DODEFAULT(nKeyCode, nShiftAltCtrl)
		ENDCASE
	ENDPROC

	PROCEDURE requerycursor
		this.InitSqlProperties()
		
		DODEFAULT()
	ENDPROC

	PROCEDURE Valid
		LOCAL l_cCurVal
		
		l_cCurVal = this.DisplayValue
		IF EMPTY(DODEFAULT())
			RETURN 0
		ENDIF
		this.Value = l_cCurVal
		
		IF EMPTY(this.Value) OR VARTYPE(this.oCheckreservat) = "O" AND ;
				NOT (SEEK(EVALUATE(this.cCursor+".rc_rckey"), "ratecode", "tag1") AND this.oCheckreservat.CheckRatecode(this.Value, this.cReservatAlias))
			this.Value = this.cOldVal
			KEYBOARD '{ALT+DNARROW}'
			RETURN 0
		ENDIF
		
		RETURN .T.
	ENDPROC

	PROCEDURE value_assign
		LPARAMETERS lp_cNewVal
		LOCAL l_lAdded
		l_lAdded = this.Insertvalueintorowsource(lp_cNewVal)
		this.Value = lp_cNewVal
		IF LEFT(lp_cNewVal,1) = this.cUdrChar OR l_lAdded
			this.DisplayValue = lp_cNewVal
		ENDIF
	ENDPROC

ENDDEFINE

DEFINE CLASS cbo_rs_roomnum AS cboroomname OF "cit_ctrl.vcx" 
 	*< CLASSDATA: Baseclass="combobox" Timestamp="" Scale="Pixels" Uniqueid="" />

	*<DefinedPropArrayMethod>
		*m: insertvalueintorowsource
		*m: searchallroomtypes
		*m: value_assign
		*p: coldval
		*p: creservatalias
		*p: linsertvalueinlist
		*p: ocheckreservat
	*</DefinedPropArrayMethod>

	creservatalias = reservat
	Name = "cbo_rs_roomnum"
	ocheckreservat = .NULL.
	
	PROCEDURE GotFocus
		this.cOldVal = this.Value
		
		DODEFAULT()
	ENDPROC

	PROCEDURE insertvalueintorowsource
		LPARAMETERS vNewVal, lp_cDisplayValue
		LOCAL l_cNewDisplayValue, l_nId, i, l_lAdded, l_cDisplayValue
			
		IF this.linsertvalueinlist
			l_cNewDisplayValue = TRANSFORM(vNewVal)
			l_lAdded = .T.
			FOR i = 1 TO this.ListCount
				IF ALLTRIM(UPPER(this.List(i,5))) == ALLTRIM(UPPER(l_cNewDisplayValue))
					l_lAdded = .F.
					EXIT
				ENDIF
			ENDFOR
			IF l_lAdded
				l_nId = INT(VAL(RIGHT(STRTRAN(STRTRAN(TRANSFORM(SECONDS()),",",""),".",""),4)))
				l_cDisplayValue =  _screen.oGlobal.get_room("rm_roomnum = " + SqlCnv(PADR(l_cNewDisplayValue,4)), "rm_rmname")
				this.AddListItem(l_cDisplayValue,l_nId)
				lp_cDisplayValue = l_cDisplayValue
			ENDIF
		ENDIF
		
		RETURN l_lAdded
	ENDPROC

	PROCEDURE requerycursor
		IF TYPE(this.cReservatAlias + ".rs_roomtyp") == "C"
			DODEFAULT(ALLTRIM(EVALUATE(this.cReservatAlias + ".rs_roomtyp")))
		ELSE
			DODEFAULT()
		ENDIF
		
		RETURN .T.
	ENDPROC

	PROTECTED PROCEDURE searchallroomtypes
		LPARAMETERS lp_cRMName
		
		IF EMPTY(this.cReservatAlias)
			RETURN .T.
		ENDIF
		IF EMPTY(lp_cRMName)
			RETURN .F.
		ENDIF
		
		LOCAL ARRAY l_aRoomData(1,2)
		
		l_aRoomData(1,1) = ""
		l_aRoomData(1,2) = ""
		lp_cRMName = UPPER(PADR(lp_cRMName,10))
		SELECT rm_roomnum, rm_roomtyp FROM (this.croomcur) WHERE rm_rmname == lp_cRMName INTO ARRAY l_aRoomData
		* pick a first result
		IF NOT EMPTY(l_aRoomData(1,1))
			REPLACE rs_roomnum WITH l_aRoomData(1,1), ;
					rs_roomtyp WITH l_aRoomData(1,2) IN this.cReservatAlias
			RETURN .T.
		ENDIF
		
		RETURN .F.
	ENDPROC

	PROCEDURE Valid
		LOCAL l_lValid, l_lReplaced, l_lNewRoomType
		LOCAL l_nSelect, l_lnCheckResult, l_lUsingCheckReservatObj, l_nAdults
		* l_lnCheckResult can be 
		* .T. - Valid OK
		*  0  - Not Valid, show combo list
		l_lnCheckResult = DODEFAULT()
		l_lValid = NOT EMPTY(l_lnCheckResult)
		l_lUsingCheckReservatObj = NOT EMPTY(this.cReservatAlias) AND NOT ISNULL(this.oCheckReservat)
		
		* Added addtitional check NOT EMPTY(EVALUATE(this.cCursorName + ".rm_roomnum")), before checking if wrong room number is selected, for
		* selected room type, to prevent l_lValid = .F., because rs_adults wasn't set for selected room type, when pa_autadul = .T.
		IF NOT l_lValid OR EMPTY(EVALUATE(this.cReservatAlias+".rs_roomtyp")) OR ;
				(NOT EMPTY(EVALUATE(this.cCursorName + ".rm_roomnum")) AND EVALUATE(this.cReservatAlias+".rs_roomtyp") <> EVALUATE(this.cCursorName + ".rm_roomtyp"))
			l_lValid = this.SearchAllRoomtypes(this.DisplayValue)
			IF l_lValid
				l_lReplaced = .T.
				l_lNewRoomType = .T.
			ENDIF
		ENDIF
		
		IF l_lUsingCheckReservatObj
			IF l_lValid
				IF NOT l_lNewRoomType
					l_lReplaced = .T.
					REPLACE rs_roomnum WITH EVALUATE(this.cCursorName+".rm_roomnum") IN this.cReservatAlias
				ENDIF
				l_lValid = this.oCheckReservat.rs_roomnum_valid(this.cReservatAlias)
			ENDIF
			IF l_lValid
				l_nSelect = SELECT()
				SELECT (this.cReservatAlias)
				SCATTER NAME this.oCheckReservat.CurrRes
				IF NOT l_lNewRoomType AND NOT EMPTY(EVALUATE(this.cCursorName + ".rm_roomtyp"))
					REPLACE rs_roomtyp WITH EVALUATE(this.cCursorName + ".rm_roomtyp") IN this.cReservatAlias
				ENDIF
				this.oCheckReservat.OnFeatureToResfix(this.cReservatAlias, this.cOldVal)
				IF RECNO(this.cReservatAlias) < 0 AND (this.cOldVal <> EVALUATE(this.cReservatAlias+".rs_roomnum") OR EMPTY(EVALUATE(this.cReservatAlias+".rs_adults")))
					l_nAdults = this.oCheckReservat.GetNewAdults(EVALUATE(this.cReservatAlias+".rs_roomnum"),;
						EVALUATE(this.cReservatAlias+".rs_roomtyp"),this.cReservatAlias,EVALUATE(this.cReservatAlias+".rs_adults"))
					REPLACE rs_adults WITH l_nAdults IN this.cReservatAlias
				ENDIF
				* Set default ratecode for selected room
				IF NOT EMPTY(EVALUATE(this.cCursorName + ".rm_ratecod")) AND EMPTY(EVALUATE(this.cReservatAlias+".rs_ratecod"))
					this.oCheckReservat.SetRateCode(this.cReservatAlias, EVALUATE(this.cCursorName + ".rm_ratecod"))
				ENDIF
				IF _screen.oGlobal.lAgency
					* Set the splitting provision for selected room
					REPLACE rs_usrres4 WITH EVALUATE(this.cCursorName + ".rm_user2")
				ENDIF
				SELECT (l_nSelect)
			ENDIF
			IF NOT l_lValid AND l_lReplaced
				REPLACE rs_roomnum WITH this.oCheckReservat.CurrRes.rs_roomnum, ;
						rs_adults WITH this.oCheckReservat.CurrRes.rs_adults IN this.cReservatAlias
				IF l_lNewRoomType
					REPLACE rs_roomtyp WITH this.oCheckReservat.CurrRes.rs_roomtyp IN this.cReservatAlias
				ENDIF
			ENDIF
		ENDIF
		
		IF l_lValid
			this.Requery()
		ENDIF
		
		RETURN l_lnCheckResult
	ENDPROC

	PROCEDURE value_assign
		LPARAMETERS lp_cNewVal
		LOCAL l_lAdded, l_cDisplayValue
		l_lAdded = this.Insertvalueintorowsource(lp_cNewVal, @l_cDisplayValue)
		this.Value = lp_cNewVal
		IF l_lAdded
			this.DisplayValue = l_cDisplayValue
		ENDIF
	ENDPROC

ENDDEFINE

DEFINE CLASS cbo_rs_roomtyp AS cboroomtype OF "cit_ctrl.vcx" 
 	*< CLASSDATA: Baseclass="combobox" Timestamp="" Scale="Pixels" Uniqueid="" />

	*<DefinedPropArrayMethod>
		*p: coldval
		*p: creservatalias
		*p: ldontcheckratecode
		*p: ocbo_rs_lfinish
		*p: ocheckreservat
	*</DefinedPropArrayMethod>

	corder = STR(rt_group,1)+STR(rt_sequenc,2)+rt_rttype
	creservatalias = reservat
	Name = "cbo_rs_roomtyp"
	ocbo_rs_lfinish = .NULL.
	ocheckreservat = .NULL.
	
	PROCEDURE enabled_assign
		LPARAMETERS lp_lNewVal
		
		DODEFAULT(lp_lNewVal)
		
		IF _screen.oGlobal.lVehicleRentMode
			this.ocbo_rs_lfinish.Enabled = lp_lNewVal AND DLookUp(this.cCursor, "rt_roomtyp = " + SqlCnv(this.Value), "rd_verent")
		ENDIF
	ENDPROC

	PROCEDURE GotFocus
		this.cOldVal = this.Value
		DODEFAULT()
	ENDPROC

	PROCEDURE Init
		this.lBuildingExclusive = g_lShips
		
		IF _screen.oGlobal.lVehicleRentMode
			this.nBuildingpart = 0.3
		ENDIF
		
		DODEFAULT()
		
		IF _screen.oGlobal.lVehicleRentMode
			this.oBuildingCombo.ControlSource = this.cReservatAlias + [.rs_lstart]
			this.oBuildingCombo.cInteractiveChangeMacro = "this.oRoomTypeCombo.cBuilding = this.Value"
			this.oBuildingCombo.cProgrammaticChangeMacro = "this.oRoomTypeCombo.cBuilding = this.Value"
			this.cBuilding = DLookUp(this.cCursor, "rt_roomtyp = " + SqlCnv(this.Value), "rt_buildng")
			this.Parent.AddObject(this.Name + "_rs_lfinish", "cbo_rs_lfinish")
			this.ocbo_rs_lfinish = EVALUATE("this.Parent." + this.Name + "_rs_lfinish")
			this.ocbo_rs_lfinish.Top = this.Top
			this.ocbo_rs_lfinish.Height = this.Height
			this.ocbo_rs_lfinish.Width = this.oBuildingCombo.Width
			this.Width = this.Width - (this.ocbo_rs_lfinish.Width + 1)
			this.w = this.Width
			this.ocbo_rs_lfinish.Left = this.Left + this.Width + 1
			this.ocbo_rs_lfinish.TabIndex = this.TabIndex + 1
			this.ocbo_rs_lfinish.Visible = this.Visible
			this.ocbo_rs_lfinish.cReservatAlias = this.cReservatAlias
			this.ocbo_rs_lfinish.Init()
			this.ocbo_rs_lfinish.nRdId = DLookUp(this.cCursor, "rt_roomtyp = " + SqlCnv(this.Value), "rt_rdid")
			this.ocbo_rs_lfinish.linsertvalueinlist = .T.
		ENDIF
	ENDPROC

	PROCEDURE initsqlproperties
		DODEFAULT()
		
		IF g_lShips
			TEXT TO this.cSqlSelect TEXTMERGE NOSHOW PRETEXT 2 + 8
			SELECT DISTINCT rt_roomtyp, rt_buildng, rt_lang<<g_langnum>> AS rt_lang, rt_rdid, rt_group, rt_sequenc, rd_roomtyp, rd_verent, ;
				rt_vwsize, rt_vwshow, rt_vwsum, ALLTRIM(rd_roomtyp)+[ ]+rt_buildng AS rt_rttype ;
				FROM roomtype ;
				LEFT JOIN rtypedef ON rd_rdid = rt_rdid ;
				LEFT JOIN altsplit ON as_roomtyp = rt_roomtyp
			ENDTEXT
		
			this.cSqlSelect = STRTRAN(this.cSqlSelect, ";", "")
		ENDIF
	ENDPROC

	PROCEDURE InteractiveChange
		IF _screen.oGlobal.lVehicleRentMode
			this.ocbo_rs_lfinish.Enabled = EVALUATE(this.cCursor + ".rd_verent")
			IF this.ocbo_rs_lfinish.Enabled
				this.ocbo_rs_lfinish.Value = Blank(this.ocbo_rs_lfinish.Value)
			ENDIF
		ENDIF
		DODEFAULT()
	ENDPROC

	PROCEDURE KeyPress
		LPARAMETERS nKeyCode, nShiftAltCtrl
		
		DO CASE
			CASE nShiftAltCtrl = 0 AND nKeyCode = 7
				this.DisplayValue = Blank(this.Value)
				NODEFAULT
			OTHERWISE
				DODEFAULT(nKeyCode, nShiftAltCtrl)
		ENDCASE
	ENDPROC

	PROCEDURE LostFocus
		IF _screen.oGlobal.lVehicleRentMode
			this.ocbo_rs_lfinish.nRdId = EVALUATE(this.cCursor + ".rt_rdid")
		ENDIF
		DODEFAULT()
	ENDPROC

	PROCEDURE requerycursor
		IF g_lShips
			LOCAL l_cResAlias, l_cBuilding
		
			l_cResAlias = this.cReservatAlias
			l_cBuilding = DLookUp("althead", "al_altid = " + SqlCnv(&l_cResAlias..rs_altid), "al_buildng")
			IF this.cBuilding # l_cBuilding
				this.cWhere = "rt_paymstr OR as_altid = " + SqlCnv(&l_cResAlias..rs_altid)
				this.cBuilding = l_cBuilding
			ENDIF
		ENDIF
		
		DODEFAULT()
		
		RETURN .T.
	ENDPROC

	PROCEDURE Valid
		DO CASE
			CASE EMPTY(DODEFAULT())
			CASE VARTYPE(this.oCheckreservat) = "O" AND NOT EMPTY(this.Value) AND NOT this.oCheckreservat.CheckRoomtype(this.Value, this.cReservatAlias, this.lDontCheckRateCode)
				this.Value = this.cOldVal
				KEYBOARD '{ALT+DNARROW}'
			OTHERWISE
				RETURN .T.
		ENDCASE
		
		RETURN 0
	ENDPROC

	PROCEDURE visible_assign
		LPARAMETERS lp_lNewVal
		
		DODEFAULT(lp_lNewVal)
		
		IF _screen.oGlobal.lVehicleRentMode
			this.ocbo_rs_lfinish.Visible = lp_lNewVal
		ENDIF
	ENDPROC

ENDDEFINE

DEFINE CLASS cbo_rs_status AS cbodb OF "jbase.vcx" 
 	*< CLASSDATA: Baseclass="combobox" Timestamp="" Scale="Pixels" Uniqueid="" />

	ColumnLines = .F.
	InputMask = "!!!"
	Name = "cbo_rs_status"
	Width = 70
	
	PROCEDURE getrowsourcebefore
		LOCAL l_cSql
		WITH this
			TEXT TO .jsql TEXTMERGE NOSHOW PRETEXT 15
			SELECT pl_charcod, pl_lang FROM 
			(
			SELECT pl_charcod,  <<"pl_lang" + g_langnum>> AS pl_lang, pl_sequ 
				FROM picklist 
				WHERE pl_label = <<sqlcnv("RESSTATUS",.T.)>> 
				UNION 
				SELECT 'IN ' AS pl_charcod, 'In                      ' AS pl_lang, 90 as pl_sequ 
				FROM param 
				UNION 
				SELECT 'OUT' AS pl_charcod, 'Out                     ' AS pl_lang, 91 as pl_sequ 
				FROM param 
				UNION 
				SELECT '  ' AS pl_charcod, '                        ' AS pl_lang, 0 as pl_sequ 
				FROM param 
				ORDER BY pl_sequ
			) c1
			ENDTEXT
			.jboundcolumn = 1
			.jcolumncount = 2
			.jcolumnwidths = "50,120"
		ENDWITH
		
		RETURN .T.
	ENDPROC

ENDDEFINE

DEFINE CLASS cbobuilding AS tcombobox OF "main.vcx" 
 	*< CLASSDATA: Baseclass="combobox" Timestamp="" Scale="Pixels" Uniqueid="" />

	*<DefinedPropArrayMethod>
		*m: enabled_assign
		*m: initrowsource
		*m: initsqlproperties
		*m: insertvalueintorowsource
		*m: oroomtypecombo_assign
		*m: requerycursor
		*m: value_assign
		*m: visible_assign
		*p: ccursor
		*p: cinteractivechangemacro
		*p: corder
		*p: cprogrammaticchangemacro
		*p: crowsource
		*p: csqlselect
		*p: csqlunion
		*p: cwhere
		*p: lappendblank
		*p: linsertvalueinlist
		*p: lselectbuilding
		*p: oroomtypecombo
		*p: oselectbuildingcmd
	*</DefinedPropArrayMethod>

	BoundTo = .T.
	ccursor = 
	ColumnCount = 2
	ColumnLines = .F.
	ColumnWidths = "50,100"
	corder = bu_lang
	crowsource = bu_buildng, bu_lang
	csqlselect = 
	csqlunion = 
	cwhere = bu_active
	DisabledForeColor = 0,0,0
	Format = "K"
	InputMask = "!!!"
	lappendblank = .T.
	linsertvalueinlist = .F.
	Name = "cbobuilding"
	oroomtypecombo = .NULL.
	oselectbuildingcmd = .NULL.
	RowSourceType = 6
	
	PROCEDURE Destroy
		dclose(this.cCursor)
		
		DODEFAULT()
	ENDPROC

	PROCEDURE enabled_assign
		LPARAMETERS lp_lNewVal
		
		this.Enabled = lp_lNewVal
		
		IF VARTYPE(this.oSelectBuildingCmd) == "O"
			this.oSelectBuildingCmd.Enabled = lp_lNewVal
		ENDIF
	ENDPROC

	PROCEDURE Init
		LPARAMETERS lp_oParent
		
		openfiledirect(.F.,"building")
		
		this.cCursor = SYS(2015)
		
		IF VARTYPE(lp_oParent) == "O"
			this.oRoomTypeCombo = lp_oParent
		ENDIF
		
		IF this.lSelectBuilding AND g_lBuildings
			this.Parent.AddObject(this.Name + "Select", "cmdSelectBuilding", this)
			this.oSelectBuildingCmd = EVALUATE("this.Parent." + this.Name + "Select")
			this.oSelectBuildingCmd.Visible = this.Visible
		ENDIF
		
		this.InitSqlProperties()
		this.RequeryCursor()
		
		DODEFAULT()
		
		RETURN .T.
	ENDPROC

	PROTECTED PROCEDURE initrowsource
		this.RowSource = this.cCursor + "." + this.cRowSource
	ENDPROC

	PROCEDURE initsqlproperties
		this.cSqlSelect = "SELECT CAST(bu_lang"+g_langnum+" AS Char(80)) AS bu_lang, bu_buildng FROM building"
		this.cSqlUnion = "UNION SELECT CAST('' AS Char(80)) AS bu_lang, CAST('' AS Char(3)) AS bu_buildng FROM param"
	ENDPROC

	PROCEDURE insertvalueintorowsource
		LPARAMETERS vNewVal, lp_cDisplayValue
		LOCAL l_cNewDisplayValue, l_nId, i, l_lAdded, l_cDisplayValue
			
		IF this.linsertvalueinlist
			l_cNewDisplayValue = TRANSFORM(vNewVal)
			l_lAdded = .T.
			FOR i = 1 TO this.ListCount
				IF ALLTRIM(UPPER(this.List(i,5))) == ALLTRIM(UPPER(l_cNewDisplayValue))
					l_lAdded = .F.
					EXIT
				ENDIF
			ENDFOR
			IF l_lAdded
				l_nId = INT(VAL(RIGHT(STRTRAN(STRTRAN(TRANSFORM(SECONDS()),",",""),".",""),4)))
				l_cDisplayValue =  PADR(l_cNewDisplayValue,3)
				this.AddListItem(l_cDisplayValue,l_nId)
				lp_cDisplayValue = l_cDisplayValue
			ENDIF
		ENDIF
		
		RETURN l_lAdded
	ENDPROC

	PROCEDURE InteractiveChange
		LOCAL l_cInteractiveChangeMacro
		
		IF NOT EMPTY(this.cInteractiveChangeMacro)
			l_cInteractiveChangeMacro = this.cInteractiveChangeMacro
			&l_cInteractiveChangeMacro
		ENDIF
		DODEFAULT()
	ENDPROC

	PROCEDURE LostFocus
		IF VARTYPE(this.oRoomTypeCombo) == "O"
			IF EMPTY(this.Value) AND NOT DLookUp(this.oRoomTypeCombo.cCursor, "EMPTY(rt_buildng) AND rt_roomtyp = " + SqlCnv(this.oRoomTypeCombo.Value), "FOUND()")
				this.oRoomTypeCombo.Value = Blank(this.oRoomTypeCombo.Value)
			ENDIF
			this.oRoomTypeCombo.RequeryCursor()
		ENDIF
		DODEFAULT()
	ENDPROC

	PROCEDURE oroomtypecombo_assign
		LPARAMETERS lp_oParent
		this.oRoomTypeCombo = lp_oParent
		
		IF VARTYPE(this.oRoomTypeCombo) == "O"
			this.Left = this.oRoomTypeCombo.Left
			this.Top = this.oRoomTypeCombo.Top
			this.Height = this.oRoomTypeCombo.Height
			this.Width = INT(this.oRoomTypeCombo.Width * this.oRoomTypeCombo.nBuildingPart)
			this.lSelectBuilding = this.oRoomTypeCombo.lSelectBuilding
			this.nLineHeight = 0
			this.TabIndex = this.oRoomTypeCombo.TabIndex
			this.ControlSource = [this.oRoomTypeCombo.cBuilding]
			this.oRoomTypeCombo.Left = this.oRoomTypeCombo.Left + (this.Width + 1)
			this.oRoomTypeCombo.Width = this.oRoomTypeCombo.Width - (this.Width + 1)
		ENDIF
	ENDPROC

	PROCEDURE ProgrammaticChange
		LOCAL l_cProgrammaticChangeMacro
		
		IF NOT EMPTY(this.cProgrammaticChangeMacro)
			l_cProgrammaticChangeMacro = this.cProgrammaticChangeMacro
			*&l_cProgrammaticChangeMacro
		ENDIF
		DODEFAULT()
	ENDPROC

	PROCEDURE requerycursor
		LOCAL l_cWhere, l_nSelect, l_cTag, l_cSql, l_cUnion, l_uThisDisplayValue, l_lSourceCursorUsed
		
		l_nSelect = SELECT()
		
		IF EMPTY(this.cWhere)
			l_cWhere = ".T."
		ELSE
			l_cWhere = this.cWhere
		ENDIF
		
		l_lSourceCursorUsed = USED(this.cCursor)
		l_uThisDisplayValue = this.DisplayValue
		
		this.RowSource = ""
		IF l_lSourceCursorUsed
			USE IN (this.cCursor)
		ENDIF
		
		l_cSql = this.cSqlSelect
		l_cUnion = IIF(this.lAppendBlank, this.cSqlUnion, "")
		
		sqlcursor(l_cSql + " WHERE " + l_cWhere + " " + l_cUnion,this.cCursor,,,,,,.T.)
		
		IF NOT EMPTY(this.cOrder)
			l_cTag = this.cOrder
			INDEX ON &l_cTag TAG TAG1
		ENDIF
		
		this.InitRowSource()
		
		IF l_lSourceCursorUsed AND DLocate(this.cCursor, "bu_buildng = " + SqlCnv(l_uThisDisplayValue))
			this.Value = EVALUATE(this.cCursor + ".bu_buildng")
		ENDIF
		
		IF VARTYPE(this.oRoomTypeCombo) == "O" AND USED(this.oRoomTypeCombo.cCursor)
			this.oRoomTypeCombo.RequeryCursor()
		ENDIF
		
		SELECT (l_nSelect)
		
		RETURN .T.
	ENDPROC

	PROCEDURE value_assign
		LPARAMETERS lp_cNewVal
		LOCAL l_lAdded, l_cDisplayValue
		l_lAdded = this.Insertvalueintorowsource(lp_cNewVal, @l_cDisplayValue)
		this.Value = lp_cNewVal
		IF l_lAdded
			this.DisplayValue = l_cDisplayValue
		ENDIF
	ENDPROC

	PROCEDURE visible_assign
		LPARAMETERS lp_lNewVal
		
		this.Visible = lp_lNewVal
		
		IF VARTYPE(this.oSelectBuildingCmd) == "O"
			this.oSelectBuildingCmd.Visible = lp_lNewVal
		ENDIF
	ENDPROC

ENDDEFINE

DEFINE CLASS cbobuildinghot AS tcombobox OF "main.vcx" 
 	*< CLASSDATA: Baseclass="combobox" Timestamp="" Scale="Pixels" Uniqueid="" />

	*<DefinedPropArrayMethod>
		*m: enabled_assign
		*m: initrowsource
		*m: initsqlproperties
		*m: oroomtypecombo_assign
		*m: preparetables
		*m: releasetables
		*m: requerycursor
		*m: visible_assign
		*p: ccursor
		*p: cinteractivechangemacro
		*p: corder
		*p: crowsource
		*p: csourcebu
		*p: csqlselect
		*p: csqlunion
		*p: cwhere
		*p: lappendblank
		*p: lselectbuilding
		*p: oroomtypecombo
		*p: oselectbuildingcmd
	*</DefinedPropArrayMethod>

	BoundTo = .T.
	ccursor = 
	ColumnCount = 3
	ColumnLines = .F.
	ColumnWidths = "50,100,250"
	corder = c_hotcode+bu_buildng
	crowsource = bu_buildng,c_hotcode,bu_lang
	csourcebu = building_hot
	csqlselect = 
	csqlunion = 
	cwhere = bu_active
	DisabledForeColor = 0,0,0
	Format = "K"
	InputMask = "!!!"
	lappendblank = .T.
	Name = "cbobuildinghot"
	oroomtypecombo = .NULL.
	oselectbuildingcmd = .NULL.
	RowSourceType = 6
	
	PROCEDURE Destroy
		DClose(this.cCursor)
		
		DODEFAULT()
	ENDPROC

	PROCEDURE enabled_assign
		LPARAMETERS tlNewVal
		
		this.Enabled = tlNewVal
		
		IF VARTYPE(this.oSelectBuildingCmd) = "O"
			this.oSelectBuildingCmd.Enabled = tlNewVal
		ENDIF
	ENDPROC

	PROCEDURE GotFocus
		this.RequeryCursor()
		DODEFAULT()
	ENDPROC

	PROCEDURE Init
		LPARAMETERS toParent
		
		this.cCursor = SYS(2015)
		
		IF VARTYPE(toParent) == "O"
			this.oRoomTypeCombo = toParent
		ENDIF
		
		IF this.lSelectBuilding
			this.Parent.AddObject(this.Name + "Select", "cmdSelectBuilding", this)
			this.oSelectBuildingCmd = EVALUATE("this.Parent." + this.Name + "Select")
		ENDIF
		
		this.InitSqlProperties()
		
		DODEFAULT()
		
		RETURN .T.
	ENDPROC

	PROTECTED PROCEDURE initrowsource
		this.RowSource = this.cCursor + "." + this.cRowSource
	ENDPROC

	PROCEDURE initsqlproperties
		this.cSqlSelect = "SELECT CAST(bu_lang"+g_langnum+" AS Char(80)) AS bu_lang, bu_buildng, CAST('' AS Char(10)) AS c_hotcode FROM " + this.cSourceBU
		this.cSqlUnion = "UNION SELECT CAST('' AS Char(80)) AS bu_lang, CAST('' AS Char(3)) AS bu_buildng, CAST('' AS Char(10)) AS c_hotcode FROM param"
	ENDPROC

	PROCEDURE InteractiveChange
		LOCAL lcInteractiveChangeMacro
		
		IF VARTYPE(this.oRoomTypeCombo) = "O"
			this.oRoomTypeCombo.SetValue("BU", this.Value)
		ENDIF
		
		IF NOT EMPTY(this.cInteractiveChangeMacro)
			lcInteractiveChangeMacro = this.cInteractiveChangeMacro
			&lcInteractiveChangeMacro
		ENDIF
		
		DODEFAULT()
	ENDPROC

	PROCEDURE oroomtypecombo_assign
		LPARAMETERS toParent
		
		this.oRoomTypeCombo = toParent
		
		IF VARTYPE(this.oRoomTypeCombo) = "O"
			this.Left = this.oRoomTypeCombo.Left
			this.Top = this.oRoomTypeCombo.Top
			this.Height = this.oRoomTypeCombo.Height
			this.Width = this.oRoomTypeCombo.Width
			this.lSelectBuilding = this.oRoomTypeCombo.lSelectBuilding
			this.nLineHeight = 0
			this.TabIndex = this.oRoomTypeCombo.TabIndex
			this.ControlSource = [this.oRoomTypeCombo.cBuilding]
		ENDIF
	ENDPROC

	PROCEDURE preparetables
		LPARAMETERS tcPath, tlCloseBU
		LOCAL lcTablePath
		
		STORE .F. TO tlCloseBU
		
		IF NOT EMPTY(tcPath)
			lcTablePath = FNGetMPDataPath(tcPath)
		ENDIF
		
		IF NOT USED(this.cSourceBU)
			OpenFileDirect(,"building", this.cSourceBU, lcTablePath)
			tlCloseBU = .T.
		ENDIF
	ENDPROC

	PROCEDURE ProgrammaticChange
		IF VARTYPE(this.oRoomTypeCombo) = "O"
			IF NOT EMPTY(this.Value) AND USED(this.cCursor) AND this.Value <> EVALUATE(this.cCursor + ".c_hotcode")
				DLocate(this.cCursor, IIF(EMPTY(this.cHotel), "0=0", "c_hotcode = " + SqlCnv(this.cHotel) + " AND bu_buildng = " + SqlCnv(this.Value)))
			ENDIF
			this.oRoomTypeCombo.SetValue("BU", this.Value)
		ENDIF
	ENDPROC

	PROCEDURE releasetables
		LPARAMETERS tlCloseBU
		
		IF tlCloseBU
			DClose(this.cSourceBU)
		ENDIF
	ENDPROC

	PROCEDURE requerycursor
		LOCAL lnSelect, lcCursor, lcTag, lcSql, luThisDisplayValue, llSourceCursorUsed, llCloseBU
		
		lnSelect = SELECT()
		
		llSourceCursorUsed = USED(this.cCursor)
		IF llSourceCursorUsed
			luThisDisplayValue = this.Value
		ENDIF
		
		this.RowSource = ""
		IF llSourceCursorUsed
			ZAP IN (this.cCursor)
		ENDIF
		
		lcSql = this.cSqlSelect + IIF(EMPTY(this.cWhere), "", " WHERE " + this.cWhere)
		SELECT hotel
		SCAN FOR IIF(EMPTY(this.oRoomTypeCombo.cHotel), NOT ho_mainsrv, ho_hotcode = this.oRoomTypeCombo.cHotel)
			this.PrepareTables(ho_path, @llCloseBU)
			IF USED(this.cCursor)
				lcCursor = SqlCursor(lcSql, lcCursor,,,,,,.T.)
				REPLACE c_hotcode WITH hotel.ho_hotcode ALL
				SELECT (this.cCursor)
				APPEND FROM DBF(lcCursor)
			ELSE
				SqlCursor(lcSql, this.cCursor,,,,,,.T.)
				REPLACE c_hotcode WITH hotel.ho_hotcode ALL
			ENDIF
			this.ReleaseTables(llCloseBU)
			SELECT hotel
		ENDSCAN
		DClose(lcCursor)
		SELECT (this.cCursor)
		IF this.lAppendBlank
			APPEND BLANK
		ENDIF
		IF NOT EMPTY(this.cOrder) AND NOT llSourceCursorUsed
			lcTag = this.cOrder
			INDEX ON &lcTag TAG TAG1
		ENDIF
		
		this.InitRowSource()
		
		IF llSourceCursorUsed AND NOT DLocate(this.cCursor, "bu_buildng = " + SqlCnv(this.Value))
			this.Value = luThisDisplayValue
		ENDIF
		
		SELECT (lnSelect)
		
		RETURN .T.
	ENDPROC

	PROCEDURE visible_assign
		LPARAMETERS tlNewVal
		
		this.Visible = tlNewVal
		
		IF VARTYPE(this.oSelectBuildingCmd) = "O"
			this.oSelectBuildingCmd.Visible = tlNewVal
		ENDIF
	ENDPROC

	PROCEDURE ZOrder
		LPARAMETERS nOrder
		
		nOrder = EVL(nOrder,0)
		
		IF EMPTY(nOrder)
			IF VARTYPE(this.oSelectBuildingCmd) == "O"
				this.oSelectBuildingCmd.ZOrder(nOrder)
			ENDIF
			DODEFAULT(nOrder)
		ELSE
			DODEFAULT(nOrder)
			IF VARTYPE(this.oSelectBuildingCmd) == "O"
				this.oSelectBuildingCmd.ZOrder(nOrder)
			ENDIF
		ENDIF
	ENDPROC

ENDDEFINE

DEFINE CLASS cbohotel AS tcombobox OF "main.vcx" 
 	*< CLASSDATA: Baseclass="combobox" Timestamp="" Scale="Pixels" Uniqueid="" />

	*<DefinedPropArrayMethod>
		*m: enabled_assign
		*m: initrowsource
		*m: initsqlproperties
		*m: oroomtypecombo_assign
		*m: requerycursor
		*m: visible_assign
		*p: ccursor
		*p: corder
		*p: crowsource
		*p: csqlselect
		*p: csqlunion
		*p: cwhere
		*p: lappendblank
		*p: lselecthotel
		*p: nhotelcount
		*p: oroomtypecombo
		*p: oselecthotelscmd
		*a: ahotels[1,0]
	*</DefinedPropArrayMethod>

	BoundTo = .T.
	ccursor = 
	ColumnCount = 2
	ColumnLines = .F.
	ColumnWidths = "100,150"
	corder = ho_hotcode
	crowsource = ho_hotcode, ho_descrip
	csqlselect = 
	csqlunion = 
	cwhere = NOT ho_mainsrv
	DisabledForeColor = 0,0,0
	Format = "K"
	InputMask = (REPLICATE("!",10))
	lappendblank = .T.
	Name = "cbohotel"
	nhotelcount = 0
	oroomtypecombo = .NULL.
	oselecthotelscmd = .NULL.
	RowSourceType = 6
	
	PROCEDURE Destroy
		DClose(this.cCursor)
		
		DODEFAULT()
	ENDPROC

	PROCEDURE enabled_assign
		LPARAMETERS tlNewVal
		
		this.Enabled = tlNewVal
		
		IF VARTYPE(this.oSelectHotelsCmd) = "O"
			this.oSelectHotelsCmd.Enabled = tlNewVal
		ENDIF
	ENDPROC

	PROCEDURE Init
		LPARAMETERS toParent
		
		this.cCursor = SYS(2015)
		
		IF VARTYPE(toParent) = "O"
			this.oRoomTypeCombo = toParent
		ENDIF
		
		IF this.lSelectHotel
			this.Parent.AddObject(this.Name + "Select", "cmdSelectHotels", this)
			this.oSelectHotelsCmd = EVALUATE("this.Parent." + this.Name + "Select")
		ENDIF
		
		this.InitSqlProperties()
		this.RequeryCursor()
		SELECT ho_hotcode FROM (this.cCursor) WHERE NOT EMPTY(ho_hotcode) INTO ARRAY this.aHotels
		this.nHotelCount = ALEN(this.aHotels)
		
		DODEFAULT()
		
		RETURN .T.
	ENDPROC

	PROTECTED PROCEDURE initrowsource
		this.RowSource = this.cCursor + "." + this.cRowSource
	ENDPROC

	PROCEDURE initsqlproperties
		this.cSqlSelect = "SELECT ho_descrip, ho_hotcode FROM hotel"
		this.cSqlUnion = "UNION SELECT CAST('' AS Char(100)), CAST('' AS Char(10)) FROM hotel"
	ENDPROC

	PROCEDURE InteractiveChange
		IF VARTYPE(this.oRoomTypeCombo) = "O"
			this.oRoomTypeCombo.SetValue("HO", this.Value)
		ENDIF
		
		DODEFAULT()
	ENDPROC

	PROCEDURE oroomtypecombo_assign
		LPARAMETERS toParent
		
		this.oRoomTypeCombo = toParent
		
		IF VARTYPE(this.oRoomTypeCombo) = "O"
			this.Left = this.oRoomTypeCombo.Left
			this.Top = this.oRoomTypeCombo.Top
			this.Height = this.oRoomTypeCombo.Height
			this.Width = this.oRoomTypeCombo.Width
			this.lSelectHotel = this.oRoomTypeCombo.lSelectHotel
			this.nLineHeight = 0
			this.TabIndex = this.oRoomTypeCombo.TabIndex
			this.ControlSource = [this.oRoomTypeCombo.cHotel]
		ENDIF
	ENDPROC

	PROCEDURE ProgrammaticChange
		IF VARTYPE(this.oRoomTypeCombo) = "O"
			this.oRoomTypeCombo.SetValue("HO", this.Value)
		ENDIF
	ENDPROC

	PROCEDURE requerycursor
		LOCAL lnSelect, lcTag, lcSql, luThisDisplayValue, llSourceCursorUsed
		
		lnSelect = SELECT()
		
		llSourceCursorUsed = USED(this.cCursor)
		luThisDisplayValue = this.DisplayValue
		
		this.RowSource = ""
		IF llSourceCursorUsed
			USE IN (this.cCursor)
		ENDIF
		
		lcSql = this.cSqlSelect + IIF(EMPTY(this.cWhere), "", " WHERE " + this.cWhere)
		
		SqlCursor(lcSql, this.cCursor,,,,,,.T.)
		
		SELECT (this.cCursor)
		IF this.lAppendBlank
			APPEND BLANK
		ENDIF
		IF NOT EMPTY(this.cOrder)
			lcTag = this.cOrder
			INDEX ON &lcTag TAG TAG1
		ENDIF
		
		this.InitRowSource()
		
		IF llSourceCursorUsed AND DLocate(this.cCursor, "ho_hotcode = " + SqlCnv(luThisDisplayValue))
			this.Value = EVALUATE(this.cCursor + ".ho_hotcode")
		ENDIF
		
		SELECT (lnSelect)
		
		RETURN .T.
	ENDPROC

	PROCEDURE visible_assign
		LPARAMETERS tlNewVal
		
		this.Visible = tlNewVal
		
		IF VARTYPE(this.oSelectHotelsCmd) = "O"
			this.oSelectHotelsCmd.Visible = tlNewVal
		ENDIF
	ENDPROC

	PROCEDURE ZOrder
		LPARAMETERS nOrder
		
		nOrder = EVL(nOrder,0)
		
		IF EMPTY(nOrder)
			IF VARTYPE(this.oSelectHotelsCmd) == "O"
				this.oSelectHotelsCmd.ZOrder(nOrder)
			ENDIF
			DODEFAULT(nOrder)
		ELSE
			DODEFAULT(nOrder)
			IF VARTYPE(this.oSelectHotelsCmd) == "O"
				this.oSelectHotelsCmd.ZOrder(nOrder)
			ENDIF
		ENDIF
	ENDPROC

ENDDEFINE

DEFINE CLASS cbomarket AS tcombobox OF "main.vcx" 
 	*< CLASSDATA: Baseclass="combobox" Timestamp="" Scale="Pixels" Uniqueid="" />

	*<DefinedPropArrayMethod>
		*m: initrowsource
		*m: initsqlproperties
		*m: requerycursor
		*p: ccursor
		*p: coldval
		*p: corder
		*p: crowsource
		*p: csqlselect
		*p: csqlunion
		*p: cwhere
		*p: lappendblank
	*</DefinedPropArrayMethod>

	BoundTo = .T.
	ccursor = 
	coldval = 
	ColumnCount = 2
	ColumnLines = .F.
	ColumnWidths = "70,120"
	corder = pl_charcod
	crowsource = pl_charcod,pl_lang
	csqlselect = 
	csqlunion = 
	cwhere = 
	DisabledForeColor = 0,0,0
	Format = "K"
	InputMask = "!!!"
	Name = "cbomarket"
	RowSourceType = 6
	SelectOnEntry = .T.
	
	PROCEDURE Destroy
		IF USED(this.cCursor)
			USE IN this.cCursor
		ENDIF
		
		DODEFAULT()
	ENDPROC

	PROCEDURE GotFocus
		this.cOldVal = this.Value
		DODEFAULT()
	ENDPROC

	PROCEDURE Init
		this.cCursor = SYS(2015)
		
		this.InitSqlProperties()
		this.RequeryCursor()
		
		DODEFAULT()
		
		RETURN .T.
	ENDPROC

	PROTECTED PROCEDURE initrowsource
		this.RowSource = this.cCursor + "." + this.cRowSource
	ENDPROC

	PROCEDURE initsqlproperties
		TEXT TO this.cSqlSelect TEXTMERGE NOSHOW PRETEXT 2 + 8
			SELECT pl_charcod, pl_lang<<g_langnum>> AS  pl_lang FROM picklist
		ENDTEXT
		
		TEXT TO this.cSqlUnion TEXTMERGE NOSHOW PRETEXT 2 + 8
			UNION SELECT [] AS pl_charcod, [] AS pl_lang FROM ratecode
		ENDTEXT
		
		TEXT TO this.cWhere TEXTMERGE NOSHOW PRETEXT 2 + 8
			pl_label = <<SqlCnv('MARKET    ', .T.)>> AND NOT pl_inactiv
		ENDTEXT
	ENDPROC

	PROCEDURE Requery
		this.RequeryCursor()
		DODEFAULT()
		
		RETURN .T.
	ENDPROC

	PROCEDURE requerycursor
		LOCAL l_nSelect, l_lPicklistUsed, l_cSql, l_cUnion, l_cWhere, l_cTag, l_cMainSql
		
		IF EMPTY(this.cWhere)
			l_cWhere = ""
		ELSE
			l_cWhere = " WHERE " + this.cWhere
		ENDIF
		
		l_nSelect = SELECT()
		l_lPicklistUsed = USED("Picklist")
		
		this.RowSource = ""
		IF USED(this.cCursor)
			USE IN (this.cCursor)
		ENDIF
		
		l_cSql = this.cSqlSelect
		l_cUnion = IIF(this.lAppendBlank, this.cSqlUnion, "")
		
		TEXT TO l_cMainSql TEXTMERGE NOSHOW PRETEXT 2+8
		<<l_cSql>> <<l_cWhere>> <<l_cUnion>>
		ENDTEXT
		sqlcursor(l_cMainSql,this.cCursor)
		*&l_cSql &l_cWhere &l_cUnion INTO CURSOR (this.cCursor)
		
		IF NOT EMPTY(this.cOrder)
			l_cTag = this.cOrder
			INDEX ON &l_cTag TAG TAG1
		ENDIF
		
		IF NOT l_lPicklistUsed AND USED("Picklist")
			USE IN Picklist
		ENDIF
		
		this.InitRowSource()
		
		SELECT (l_nSelect)
		
		RETURN .T.
	ENDPROC

	PROCEDURE Valid
		IF NOT this.CheckListValues()
			this.Value = this.cOldVal
			KEYBOARD '{ALT+DNARROW}'
			RETURN 0
		ENDIF
		IF PEMSTATUS(thisform, "HndValid", 5)
			RETURN thisform.HndValid(this)
		ENDIF
	ENDPROC

ENDDEFINE

DEFINE CLASS cboratecode AS tcombobox OF "main.vcx" 
 	*< CLASSDATA: Baseclass="combobox" Timestamp="" Scale="Pixels" Uniqueid="" />

	*<DefinedPropArrayMethod>
		*m: initrowsource
		*m: initsqlproperties
		*m: requerycursor
		*p: caltchar
		*p: ccursor
		*p: coldval
		*p: corder
		*p: crowsource
		*p: csqlselect
		*p: csqlunion
		*p: cudrchar
		*p: cwhere
		*p: lappendblank
		*p: lappendblankcmd		&& When .T. do APPEND BLANK in result cursor. Result cursor is then READWRITE
	*</DefinedPropArrayMethod>

	BoundTo = .T.
	caltchar = !
	ccursor = 
	coldval = 
	ColumnCount = 3
	ColumnLines = .F.
	ColumnWidths = "70,120,100"
	corder = rc_ratecod
	crowsource = rc_ratecod,rc_lang,rc_rttype
	csqlselect = 
	csqlunion = 
	cudrchar = *
	cwhere = 
	DisabledForeColor = 0,0,0
	Format = "K"
	InputMask = (REPLICATE("!",10))
	Name = "cboratecode"
	RowSourceType = 6
	
	PROCEDURE Destroy
		IF USED(this.cCursor)
			USE IN this.cCursor
		ENDIF
		
		DODEFAULT()
	ENDPROC

	PROCEDURE GotFocus
		this.cOldVal = this.Value
		DODEFAULT()
	ENDPROC

	PROCEDURE Init
		this.cCursor = SYS(2015)
		
		this.InitSqlProperties()
		this.RequeryCursor()
		
		DODEFAULT()
		
		RETURN .T.
	ENDPROC

	PROTECTED PROCEDURE initrowsource
		this.RowSource = this.cCursor + "." + this.cRowSource
	ENDPROC

	PROCEDURE initsqlproperties
		TEXT TO this.cSqlSelect TEXTMERGE NOSHOW PRETEXT 2 + 8
		SELECT rc_ratecod, rc_base, rc_amnt1, rc_amnt2, rc_lang<<g_langnum>> AS rc_lang, rc_roomtyp, rc_fromdat, rc_todat, ;
			rc_ratecod+rc_roomtyp+DTOS(rc_fromdat)+rc_season AS rc_rckey, ;
			CAST(IIF(ISNULL(rd_roomtyp), "*", ALLTRIM(rd_roomtyp)+[ ]+rt_buildng) AS Char(12)) AS rc_rttype, ;
			rc_period FROM ratecode ;
			LEFT JOIN roomtype ON rt_roomtyp = rc_roomtyp ;
			LEFT JOIN rtypedef ON rd_rdid = rt_rdid
		ENDTEXT
		this.cSqlSelect = STRTRAN(this.cSqlSelect, ";", "")
		
		TEXT TO this.cSqlUnion TEXTMERGE NOSHOW PRETEXT 2 + 8
			UNION SELECT [] AS rc_ratecod, 0 AS rc_base, 0 AS rc_amnt1, 0 AS rc_amnt2, [] AS rc_lang, [] AS rc_roomtyp, {} AS rc_fromdat, ;
			{} AS rc_todat, [] AS rc_rckey, [] AS rc_rttype, 0 AS rc_period FROM ratecode
		ENDTEXT
		this.cSqlUnion = STRTRAN(this.cSqlUnion, ";", "")
	ENDPROC

	PROCEDURE Requery
		this.RequeryCursor()
		DODEFAULT()
		
		RETURN .T.
	ENDPROC

	PROCEDURE requerycursor
		LOCAL l_cWhere, l_nSelect, l_cTag, l_lRatecodeUsed, l_lRatecodeUsed, l_lRTypeDefUsed, l_cSql, l_cUnion
		
		IF EMPTY(this.cwhere)
			l_cWhere = ".T."
		ELSE
			l_cWhere = this.cwhere
		ENDIF
		
		l_nSelect = SELECT()
		l_lRatecodeUsed = USED("ratecode")
		l_lRoomtypeUsed = USED("roomtype")
		l_lRTypeDefUsed = USED("rtypedef")
		
		this.RowSource = ""
		IF USED(this.cCursor)
			USE IN (this.cCursor)
		ENDIF
		
		l_cSql = this.cSqlSelect
		l_cUnion = IIF(this.lAppendBlank, this.cSqlUnion, "")
		
		IF "__WHERE__" $ l_cSql
			l_cSql = STRTRAN(l_cSql, "__WHERE__", " WHERE "+l_cWhere)
		ELSE
			l_cSql = l_cSql + " WHERE "+l_cWhere
		ENDIF
		IF this.lappendblankcmd
			&l_cSql &l_cUnion INTO CURSOR (this.cCursor) READWRITE
			APPEND BLANK
		ELSE
			&l_cSql &l_cUnion INTO CURSOR (this.cCursor)
		ENDIF
		
		IF NOT EMPTY(this.cOrder)
			l_cTag = this.cOrder
			INDEX ON &l_cTag TAG TAG1
		ENDIF
		
		IF NOT l_lRatecodeUsed AND USED("ratecode")
			USE IN ratecode
		ENDIF
		IF NOT l_lRoomtypeUsed AND USED("roomtype")
			USE IN roomtype
		ENDIF
		IF NOT l_lRTypeDefUsed AND USED("rtypedef")
			USE IN rtypedef
		ENDIF
		
		this.InitRowSource()
		
		SELECT (l_nSelect)
		
		RETURN .T.
	ENDPROC

	PROCEDURE Valid
		IF NOT this.CheckListValues()
			this.Value = this.cOldVal
			KEYBOARD '{ALT+DNARROW}'
			RETURN 0
		ENDIF
		IF PEMSTATUS(thisform, "HndValid", 5)
			RETURN thisform.HndValid(this)
		ENDIF
	ENDPROC

ENDDEFINE

DEFINE CLASS cboroomname AS tcombobox OF "main.vcx" 
 	*< CLASSDATA: Baseclass="combobox" Timestamp="" Scale="Pixels" Uniqueid="" />

	*<DefinedPropArrayMethod>
		*m: ccontrolsource_assign
		*m: initrowsource
		*m: initsqlproperties
		*m: requerycursor
		*p: ccontrolsource
		*p: ccursorname
		*p: corder
		*p: croomcur
		*p: croomname
		*p: crowsource
		*p: crtcur
		*p: crtdcur
		*p: csql
		*p: cwhere
		*p: lappendblank
	*</DefinedPropArrayMethod>

	BoundColumn = 4
	BoundTo = .T.
	ccontrolsource = 
	ccursorname = 
	ColumnCount = 3
	ColumnLines = .F.
	ColumnWidths = "100,70,100"
	corder = rm_rmname
	croomcur = 
	croomname = 
	crowsource = rm_rmname,rm_rmtype,rm_lang,rm_roomnum
	crtcur = 
	crtdcur = 
	csql = 
	cwhere = 
	DisabledForeColor = 0,0,0
	Format = "K"
	InputMask = (REPLICATE("!",10))
	lappendblank = .T.
	Name = "cboroomname"
	
	PROCEDURE ccontrolsource_assign
		LPARAMETERS lp_cNewVal
		
		this.ControlSource = lp_cNewVal
		this.cControlSource = lp_cNewVal
		this.RequeryCursor()
	ENDPROC

	PROCEDURE Destroy
		dclose(this.cCursorName)
		dclose(this.crtcur)
		dclose(this.crtdcur)
		
		DODEFAULT()
	ENDPROC

	PROCEDURE GotFocus
		IF NOT EMPTY(this.cControlSource)
			this.Requery()
		ENDIF
		
		DODEFAULT()
	ENDPROC

	PROCEDURE Init
		openfiledirect(.F.,"room")
		openfiledirect(.F.,"roomtype")
		openfiledirect(.F.,"rtypedef")
		
		IF EMPTY(this.croomcur)
			this.croomcur = sqlcursor("SELECT * FROM room WHERE 0=1",,,,,,,.T.)
			INSERT INTO (this.croomcur) FROM ARRAY _screen.oGLOBAL.ogData.aroomcur
		ENDIF
		IF EMPTY(this.crtcur)
			this.crtcur = sqlcursor("SELECT rt_roomtyp, rt_rdid, rt_buildng FROM roomtype")
			INDEX ON rt_roomtyp TAG TAG1
		ENDIF
		IF EMPTY(this.crtdcur)
			this.crtdcur = sqlcursor("SELECT rd_rdid, rd_roomtyp FROM rtypedef")
			INDEX ON rd_rdid TAG TAG1
		ENDIF
		
		this.cCursorName = SYS(2015)
		
		this.InitSqlProperties()
		
		DODEFAULT()
		
		this.RequeryCursor()
		
		RETURN .T.
	ENDPROC

	PROTECTED PROCEDURE initrowsource
		IF this.RowSourceType <> 6
			this.RowSourceType = 6
		ENDIF
		
		this.RowSource = this.cCursorName + "." + this.cRowSource
		
		RETURN .T.
	ENDPROC

	PROCEDURE initsqlproperties
		TEXT TO this.cSql TEXTMERGE NOSHOW PRETEXT 2 + 8
		SELECT <<this.croomcur>>.*, rm_lang<<g_langnum>> AS rm_lang, ;
			CAST(ALLTRIM(rd_roomtyp)+[ ]+rt_buildng AS C(14)) AS rm_rmtype FROM <<this.croomcur>> ;
			LEFT JOIN <<this.crtcur>> ON rt_roomtyp = rm_roomtyp ;
			LEFT JOIN <<this.crtdcur>> ON rd_rdid = rt_rdid
		ENDTEXT
		this.cSql = STRTRAN(this.cSql, ";", "")
	ENDPROC

	PROCEDURE Requery
		this.RequeryCursor()
		DODEFAULT()
		
		RETURN .T.
	ENDPROC

	PROCEDURE requerycursor
		LPARAMETERS lp_cRoomType
		LOCAL l_cWhere, l_nSelect, l_cTag, l_cSql, l_cPadrRoomType, l_cPadrBuilding
		
		l_cWhere = ".T."
		IF NOT EMPTY(lp_cRoomType)
			l_cPadrRoomType = PADR(lp_cRoomType,4)
			l_cWhere = l_cWhere + " AND rm_roomtyp == [" + l_cPadrRoomType + "]"
		ENDIF
		IF NOT EMPTY(this.cWhere)
			l_cWhere = l_cWhere + " AND " + this.cWhere
		ENDIF
		
		l_nSelect = SELECT()
		
		this.RowSource = ""
		IF USED(this.cCursorName)
			USE IN (this.cCursorName)
		ENDIF
		l_cSql = this.cSql
		
		&l_cSql WHERE &l_cWhere INTO CURSOR (this.cCursorName) READWRITE
		IF this.lAppendBlank
			APPEND BLANK
		ENDIF
		
		IF NOT EMPTY(this.cOrder)
			l_cTag = this.cOrder
			INDEX ON &l_cTag TAG TAG1
		ENDIF
		
		this.InitRowSource()
		
		SELECT (l_nSelect)
		
		RETURN .T.
	ENDPROC

	PROCEDURE Valid
		LPARAMETERS lp_lSetValue
		LOCAL l_lValid, l_lnCheckResult
		* l_lnCheckResult can be 
		* .T. - Valid OK
		*  0  - Not Valid, show combo list
		l_lnCheckResult = DODEFAULT()
		
		IF NOT EMPTY(l_lnCheckResult)
			this.Requery()
		ENDIF
		
		RETURN l_lnCheckResult
	ENDPROC

ENDDEFINE

DEFINE CLASS cboroomtype AS tcombobox OF "main.vcx" 
 	*< CLASSDATA: Baseclass="combobox" Timestamp="" Scale="Pixels" Uniqueid="" />

	*<DefinedPropArrayMethod>
		*m: cbuilding_assign
		*m: enabled_assign
		*m: initrowsource
		*m: initsqlproperties
		*m: requerycursor
		*m: value_assign
		*m: visible_assign
		*p: cbuilding
		*p: ccursor
		*p: cnoroomtypechar
		*p: corder
		*p: crowsource
		*p: csqlselect
		*p: csqlunion
		*p: cwhere
		*p: lappendblank
		*p: lbuildingexclusive
		*p: lemptyrecordonend		&& When .T., show empty entry in combolist on end
		*p: lselectbuilding
		*p: nbuildingpart
		*p: obuildingcombo
	*</DefinedPropArrayMethod>

	BoundColumn = 4
	BoundTo = .T.
	cbuilding = 
	ccursor = 
	cnoroomtypechar = 
	ColumnCount = 3
	ColumnLines = .F.
	ColumnWidths = "50,30,170"
	corder = rt_rttype
	crowsource = rd_roomtyp,rt_buildng,rt_lang,rt_roomtyp
	csqlselect = 
	csqlunion = 
	cwhere = 
	DisabledForeColor = 0,0,0
	Format = "K"
	InputMask = (REPLICATE("!",10))
	Name = "cboroomtype"
	nbuildingpart = 0.5
	obuildingcombo = .NULL.
	RowSourceType = 6
	Width = 123
	
	PROCEDURE cbuilding_assign
		LPARAMETERS lp_cNewVal
		
		this.cBuilding = lp_cNewVal
		
		IF this.lBuildingExclusive AND NOT EMPTY(this.cBuilding) AND VARTYPE(this.oBuildingCombo) == "O"
			this.oBuildingCombo.cWhere = "bu_buildng = " + SqlCnv(this.cBuilding,.T.)
		ENDIF
		
		IF NOT EMPTY(this.cSqlSelect)
			this.RequeryCursor()
		ENDIF
	ENDPROC

	PROCEDURE Destroy
		dclose(this.cCursor)
		
		DODEFAULT()
	ENDPROC

	PROCEDURE enabled_assign
		LPARAMETERS lp_lNewVal
		
		this.Enabled = lp_lNewVal
		
		IF VARTYPE(this.oBuildingCombo) == "O"
			this.oBuildingCombo.Enabled = lp_lNewVal
		ENDIF
	ENDPROC

	PROCEDURE Init
		openfiledirect(.F.,"roomtype")
		
		this.cCursor = SYS(2015)
		
		IF NOT this.lBuildingExclusive AND g_lBuildings
			this.Parent.AddObject(this.Name + "Building", "cboBuilding", this)
			this.oBuildingCombo = EVALUATE("this.Parent." + this.Name + "Building")
			this.oBuildingCombo.Visible = this.Visible
		ENDIF
		
		this.InitSqlProperties()
		this.RequeryCursor()
		
		DODEFAULT()
		
		RETURN .T.
	ENDPROC

	PROTECTED PROCEDURE initrowsource
		this.RowSource = this.cCursor + "." + this.cRowSource
	ENDPROC

	PROCEDURE initsqlproperties
		IF VARTYPE(this.oBuildingCombo) == "O"
			TEXT TO this.cSqlSelect TEXTMERGE NOSHOW PRETEXT 2 + 8
			SELECT DISTINCT rt_roomtyp, rt_buildng, CAST(rt_lang<<g_langnum>> AS Char(25)) AS rt_lang, rt_rdid, rt_group, rt_sequenc, rd_roomtyp, rd_verent, ;
				rt_vwsize, rt_vwshow, rt_vwsum, CAST(RTRIM(rd_roomtyp)__||__' '__||__rt_buildng AS Char(14)) AS rt_rttype ;
				FROM roomtype ;
				LEFT JOIN rtypedef ON rd_rdid = rt_rdid ;
				INNER JOIN building ON (bu_buildng = rt_buildng AND NOT bu_buildng='   ') OR rt_paymstr 
			ENDTEXT
		ELSE
			TEXT TO this.cSqlSelect TEXTMERGE NOSHOW PRETEXT 2 + 8
			SELECT rt_roomtyp, rt_buildng, CAST(rt_lang<<g_langnum>> AS Char(25)) AS rt_lang, rt_rdid, rt_group, rt_sequenc, rd_roomtyp, rd_verent, ;
				rt_vwsize, rt_vwshow, rt_vwsum, CAST(RTRIM(rd_roomtyp)__||__' '__||__rt_buildng AS Char(14)) AS rt_rttype ;
				FROM roomtype ;
				LEFT JOIN rtypedef ON rd_rdid = rt_rdid
			ENDTEXT
		ENDIF
		this.cSqlSelect = STRTRAN(this.cSqlSelect, ";", "")
		
		TEXT TO this.cSqlUnion TEXTMERGE NOSHOW PRETEXT 2 + 8
			UNION SELECT CAST('<<this.cNoRoomTypeChar>>' AS Char(4)) AS rt_roomtyp, CAST('' AS Char(3)) AS rt_buildng, ;
				CAST('' AS Char(25)) AS rt_lang, 0 AS rt_rdid, <<IIF(this.lemptyrecordonend,"9","0")>> AS rt_group, ;
				0 AS rt_sequenc, CAST('<<this.cNoRoomTypeChar>>' AS Char(10)) AS rd_roomtyp, 0=1 AS rd_verent, ;
				0 AS rt_vwsize, 0=1 AS rt_vwshow, 0=1 AS rt_vwsum, CAST('<<this.cNoRoomTypeChar>>' AS Char(14)) AS rt_rttype ;
				FROM param 
		ENDTEXT
		this.cSqlUnion = STRTRAN(this.cSqlUnion, ";", "")
	ENDPROC

	PROCEDURE Requery
		this.RequeryCursor()
		DODEFAULT()
		
		RETURN .T.
	ENDPROC

	PROCEDURE requerycursor
		LOCAL l_cWhere, l_nSelect, l_cTag, l_cSql, l_cUnion, l_uThisDisplayValue, l_lSourceCursorUsed
		
		IF EMPTY(this.cwhere)
			l_cWhere = sqlcnv(.T.,.T.)
		ELSE
			l_cWhere = this.cwhere
		ENDIF
		
		IF NOT EMPTY(this.cBuilding)
			l_cWhere = l_cWhere + " AND rt_buildng = " + SqlCnv(PADR(this.cBuilding,4))
		ENDIF
		
		l_nSelect = SELECT()
		
		l_lSourceCursorUsed = USED(this.cCursor)
		IF l_lSourceCursorUsed
			l_uThisDisplayValue = DLookUp(this.cCursor, "rt_roomtyp = " + SqlCnv(this.Value), "rd_roomtyp")
		ENDIF
		
		this.RowSource = ""
		IF l_lSourceCursorUsed
			USE IN (this.cCursor)
		ENDIF
		
		l_cSql = this.cSqlSelect
		l_cUnion = IIF(this.lAppendBlank, this.cSqlUnion, "")
		
		sqlcursor(l_cSql + " WHERE " + l_cWhere + " " + l_cUnion,this.cCursor,,,,,,.T.)
		
		IF NOT EMPTY(this.cOrder)
			l_cTag = this.cOrder
			INDEX ON &l_cTag TAG TAG1
		ENDIF
		
		this.InitRowSource()
		
		IF l_lSourceCursorUsed AND NOT DLocate(this.cCursor, "rt_roomtyp = " + SqlCnv(this.Value))
			this.Value = DLookUp(this.cCursor, "rd_roomtyp = " + SqlCnv(l_uThisDisplayValue), "rt_roomtyp")
		ENDIF
		
		SELECT (l_nSelect)
		
		RETURN .T.
	ENDPROC

	PROCEDURE value_assign
		LPARAMETERS lp_cNewVal
		
		this.Value = PADR(lp_cNewVal,4)
		
		IF NOT EMPTY(this.Value) AND USED(this.cCursor)
			IF NOT DLocate(this.cCursor, "rt_roomtyp = " + SqlCnv(this.Value))
				this.cBuilding = ""
				this.Refresh()
			ENDIF
			IF VARTYPE(this.oBuildingCombo) == "O" AND this.oBuildingCombo.ControlSource = [this.oRoomTypeCombo.cBuilding]
				this.cBuilding = DLookUp(this.cCursor, "rt_roomtyp = " + SqlCnv(this.Value), "rt_buildng")
				this.oBuildingCombo.Refresh()
			ENDIF
		ENDIF
	ENDPROC

	PROCEDURE visible_assign
		LPARAMETERS lp_lNewVal
		
		this.Visible = lp_lNewVal
		
		IF VARTYPE(this.oBuildingCombo) == "O"
			this.oBuildingCombo.Visible = lp_lNewVal
		ENDIF
	ENDPROC

ENDDEFINE

DEFINE CLASS cboroomtypehot AS tcombobox OF "main.vcx" 
 	*< CLASSDATA: Baseclass="combobox" Timestamp="" Scale="Pixels" Uniqueid="" />

	*<DefinedPropArrayMethod>
		*m: cbuilding_assign
		*m: chotel_assign
		*m: enabled_assign
		*m: initrowsource
		*m: initsqlproperties
		*m: preparetables
		*m: releasetables
		*m: requerycursor
		*m: setposition
		*m: setvalue
		*m: value_assign
		*m: visible_assign
		*p: cbuilding
		*p: ccursor
		*p: chotel
		*p: cnoroomtypechar
		*p: corder
		*p: crowsource
		*p: csourcebu
		*p: csourcerd
		*p: csourcert
		*p: csqlselect
		*p: csqlunion
		*p: cwhere
		*p: lappendblank
		*p: lemptyrecordonend		&& When .T., show empty entry in combolist on end
		*p: lselectbuilding
		*p: lselecthotel
		*p: nbuildingpart
		*p: nhotelpart
		*p: obuildingcombo
		*p: ohotelcombo
	*</DefinedPropArrayMethod>

	BoundColumn = 5
	BoundTo = .T.
	cbuilding = 
	ccursor = 
	chotel = 
	cnoroomtypechar = 
	ColumnCount = 4
	ColumnLines = .F.
	ColumnWidths = "100,50,100,150"
	corder = c_hotcode+rt_buildng+rd_roomtyp
	crowsource = rd_roomtyp,rt_buildng,c_hotcode,rt_lang,rt_roomtyp
	csourcebu = building_hot
	csourcerd = rtypedef_hot
	csourcert = roomtype_hot
	csqlselect = 
	csqlunion = 
	cwhere = 
	DisabledForeColor = 0,0,0
	Format = "K"
	InputMask = (REPLICATE("!",10))
	lappendblank = .T.
	lselecthotel = .T.
	Name = "cboroomtypehot"
	nbuildingpart = 0.26
	nhotelpart = 0.5
	obuildingcombo = .NULL.
	ohotelcombo = .NULL.
	RowSourceType = 6
	Width = 123
	
	PROCEDURE cbuilding_assign
		LPARAMETERS tcNewVal
		
		IF VARTYPE(this.oBuildingCombo) = "O"
			tcNewVal = PADR(tcNewVal,3)
			IF NOT EMPTY(tcNewVal) AND NOT (USED(this.oBuildingCombo.cCursor) AND DLookUp(this.oBuildingCombo.cCursor, "bu_buildng = " + SqlCnv(tcNewVal), "FOUND()"))
				this.oBuildingCombo.RequeryCursor()
			ENDIF
			this.cBuilding = tcNewVal
			this.oBuildingCombo.Refresh()
		ELSE
			this.cBuilding = PADR(tcNewVal,3)
		ENDIF
	ENDPROC

	PROCEDURE chotel_assign
		LPARAMETERS tcNewVal
		
		this.cHotel = PADR(tcNewVal,10)
		this.oHotelCombo.Refresh()
	ENDPROC

	PROCEDURE Destroy
		DClose(this.cCursor)
		
		DODEFAULT()
	ENDPROC

	PROCEDURE enabled_assign
		LPARAMETERS tlNewVal
		
		this.Enabled = tlNewVal
		
		IF VARTYPE(this.oHotelCombo) = "O"
			this.oHotelCombo.Enabled = tlNewVal
		ENDIF
		IF VARTYPE(this.oBuildingCombo) == "O"
			this.oBuildingCombo.Enabled = tlNewVal
		ENDIF
	ENDPROC

	PROCEDURE GotFocus
		this.RequeryCursor()
		
		DODEFAULT()
	ENDPROC

	PROCEDURE Init
		this.cCursor = SYS(2015)
		
		IF g_lBuildings
			this.Parent.AddObject(this.Name + "Building", "cboBuildingHot", this)
			this.oBuildingCombo = EVALUATE("this.Parent." + this.Name + "Building")
			this.nHotelPart = (1 - this.nBuildingPart) / 2
		ENDIF
		this.Parent.AddObject(this.Name + "Hotel", "cboHotel", this)
		this.oHotelCombo = EVALUATE("this.Parent." + this.Name + "Hotel")
		this.SetPosition()
		
		this.InitSqlProperties()
		
		DODEFAULT()
		
		RETURN .T.
	ENDPROC

	PROTECTED PROCEDURE initrowsource
		this.RowSource = this.cCursor + "." + this.cRowSource
	ENDPROC

	PROCEDURE initsqlproperties
		IF VARTYPE(this.oBuildingCombo) == "O"
			TEXT TO this.cSqlSelect TEXTMERGE NOSHOW PRETEXT 2 + 8
			SELECT DISTINCT rt_roomtyp, rt_buildng, CAST(rt_lang<<g_langnum>> AS Char(25)) AS rt_lang, rt_rdid, rt_group, rt_sequenc, rd_roomtyp, rd_verent,
				rt_vwsize, rt_vwshow, rt_vwsum, CAST('' AS Char(25)) AS rt_rttype, CAST('' AS Char(10)) AS c_hotcode
				FROM <<this.cSourceRT>>
				LEFT JOIN <<this.cSourceRD>> ON rd_rdid = rt_rdid
				INNER JOIN <<this.cSourceBU>> ON bu_buildng = rt_buildng AND bu_active OR rt_buildng = '   ' AND rt_paymstr
			ENDTEXT
		ELSE
			TEXT TO this.cSqlSelect TEXTMERGE NOSHOW PRETEXT 2 + 8
			SELECT rt_roomtyp, rt_buildng, CAST(rt_lang<<g_langnum>> AS Char(25)) AS rt_lang, rt_rdid, rt_group, rt_sequenc, rd_roomtyp, rd_verent,
				rt_vwsize, rt_vwshow, rt_vwsum, CAST('' AS Char(25)) AS rt_rttype, CAST('' AS Char(10)) AS c_hotcode
				FROM <<this.cSourceRT>>
				LEFT JOIN <<this.cSourceRD>> ON rd_rdid = rt_rdid
			ENDTEXT
		ENDIF
	ENDPROC

	PROCEDURE InteractiveChange
		this.SetValue("RT", this.Value)
	ENDPROC

	PROCEDURE preparetables
		LPARAMETERS tcPath, tlCloseRT, tlCloseRD, tlCloseBU
		LOCAL lcTablePath
		
		STORE .F. TO tlCloseRT, tlCloseRD, tlCloseBU
		
		IF NOT EMPTY(tcPath)
			lcTablePath = FNGetMPDataPath(tcPath)
		ENDIF
		
		IF NOT USED(this.cSourceRT)
			OpenFileDirect(,"roomtype", this.cSourceRT, lcTablePath)
			tlCloseRT = .T.
		ENDIF
		IF NOT USED(this.cSourceRD)
			OpenFileDirect(,"rtypedef", this.cSourceRD, lcTablePath)
			tlCloseRD = .T.
		ENDIF
		IF NOT USED(this.cSourceBU)
			OpenFileDirect(,"building", this.cSourceBU, lcTablePath)
			tlCloseBU = .T.
		ENDIF
	ENDPROC

	PROCEDURE ProgrammaticChange
		IF NOT EMPTY(this.Value) AND USED(this.cCursor) AND this.Value <> EVALUATE(this.cCursor + ".rt_roomtyp")
			DLocate(this.cCursor, IIF(EMPTY(this.cHotel), "0=0", "c_hotcode = " + SqlCnv(this.cHotel) + " AND rt_roomtyp = " + SqlCnv(this.Value)))
		ENDIF
		this.SetValue("RT", this.Value)
	ENDPROC

	PROCEDURE releasetables
		LPARAMETERS tlCloseRT, tlCloseRD, tlCloseBU
		
		IF tlCloseRT
			DClose(this.cSourceRT)
		ENDIF
		IF tlCloseRD
			DClose(this.cSourceRD)
		ENDIF
		IF tlCloseBU
			DClose(this.cSourceBU)
		ENDIF
	ENDPROC

	PROCEDURE requerycursor
		LOCAL lcWhere, lnSelect, lcCursor, lcTag, lcSql, luThisDisplayValue, llSourceCursorUsed, llCloseRT, llCloseRD, llCloseBU
		
		lnSelect = SELECT()
		
		llSourceCursorUsed = USED(this.cCursor)
		
		IF llSourceCursorUsed
			luThisDisplayValue = DLookUp(this.cCursor, "rt_roomtyp = " + SqlCnv(this.Value), "rd_roomtyp")
		ENDIF
		
		this.RowSource = ""
		IF llSourceCursorUsed
			ZAP IN (this.cCursor)
		ENDIF
		
		lcWhere = EVL(this.cWhere,"0=0")
		
		IF NOT EMPTY(this.cBuilding)
			lcWhere = lcWhere + " AND rt_buildng = " + SqlCnv(PADR(this.cBuilding,3))
		ENDIF
		
		lcSql = this.cSqlSelect + " WHERE " + lcWhere
		SELECT hotel
		SCAN FOR IIF(EMPTY(this.cHotel), NOT ho_mainsrv, ho_hotcode = this.cHotel)
			this.PrepareTables(ho_path, @llCloseRT, @llCloseRD, @llCloseBU)
			IF USED(this.cCursor)
				lcCursor = SqlCursor(lcSql, lcCursor,,,,,,.T.)
				REPLACE c_hotcode WITH hotel.ho_hotcode ALL
				SELECT (this.cCursor)
				APPEND FROM DBF(lcCursor)
			ELSE
				SqlCursor(lcSql, this.cCursor,,,,,,.T.)
				REPLACE c_hotcode WITH hotel.ho_hotcode ALL
			ENDIF
			this.ReleaseTables(llCloseRT, llCloseRD, llCloseBU)
			SELECT hotel
		ENDSCAN
		DClose(lcCursor)
		SELECT (this.cCursor)
		IF this.lAppendBlank
			APPEND BLANK
		ENDIF
		IF NOT EMPTY(this.cOrder) AND NOT llSourceCursorUsed
			lcTag = this.cOrder
			INDEX ON &lcTag TAG TAG1
		ENDIF
		
		this.InitRowSource()
		
		IF llSourceCursorUsed AND NOT DLocate(this.cCursor, "rt_roomtyp = " + SqlCnv(this.Value))
			this.Value = DLookUp(this.cCursor, "rd_roomtyp = " + SqlCnv(luThisDisplayValue), "rt_roomtyp")
		ENDIF
		
		SELECT (lnSelect)
		
		RETURN .T.
	ENDPROC

	PROCEDURE setposition
		LOCAL lnLeft, lnWidth
		
		lnLeft = this.Left
		lnWidth = this.Width
		IF VARTYPE(this.oHotelCombo) == "O"
			STORE lnLeft TO this.oHotelCombo.Left, this.oHotelCombo.L
			STORE INT(this.Width * this.nHotelPart) TO this.oHotelCombo.Width, this.oHotelCombo.W
			lnLeft = lnLeft + (this.oHotelCombo.Width + 1)
			lnWidth = lnWidth - (this.oHotelCombo.Width + 1)
		ENDIF
		IF VARTYPE(this.oBuildingCombo) == "O"
			STORE lnLeft TO this.oBuildingCombo.Left, this.oBuildingCombo.L
			STORE INT(this.Width * this.nBuildingPart) TO this.oBuildingCombo.Width, this.oBuildingCombo.W
			lnLeft = lnLeft + (this.oBuildingCombo.Width + 1)
			lnWidth = lnWidth - (this.oBuildingCombo.Width + 1)
		ENDIF
		this.Left = lnLeft
		this.Width = lnWidth
		
		this.Visible = this.Visible
	ENDPROC

	PROCEDURE setvalue
		LPARAMETERS tcControl, tcValue
		
		DO CASE
			CASE tcControl = "RT"
				IF NOT EMPTY(tcValue) AND USED(this.cCursor)
					this.cBuilding = EVALUATE(this.cCursor + ".rt_buildng")
					this.cHotel = EVALUATE(this.cCursor + ".c_hotcode")
				ENDIF
			CASE tcControl = "BU"
				IF NOT EMPTY(tcValue) AND USED(this.oBuildingCombo.cCursor)
					this.cHotel = EVALUATE(this.oBuildingCombo.cCursor + ".c_hotcode")
				ENDIF
				this.Value = ""
			CASE tcControl = "HO"
				STORE "" TO this.cBuilding, this.Value
			OTHERWISE
		ENDCASE
	ENDPROC

	PROCEDURE value_assign
		LPARAMETERS tcNewVal
		
		tcNewVal = PADR(tcNewVal,4)
		
		IF NOT EMPTY(tcNewVal) AND NOT (USED(this.cCursor) AND DLookUp(this.cCursor, "rt_roomtyp = " + SqlCnv(tcNewVal), "FOUND()"))
			this.RequeryCursor()
		ENDIF
		
		this.Value = tcNewVal
		
		this.Refresh()
	ENDPROC

	PROCEDURE visible_assign
		LPARAMETERS tlNewVal
		
		this.Visible = tlNewVal
		
		IF VARTYPE(this.oHotelCombo) == "O"
			this.oHotelCombo.Visible = tlNewVal
		ENDIF
		IF VARTYPE(this.oBuildingCombo) == "O"
			this.oBuildingCombo.Visible = tlNewVal
		ENDIF
	ENDPROC

	PROCEDURE ZOrder
		LPARAMETERS nOrder
		
		nOrder = EVL(nOrder,0)
		
		IF EMPTY(nOrder)
			IF VARTYPE(this.oHotelCombo) == "O"
				this.oHotelCombo.ZOrder(nOrder)
			ENDIF
			IF VARTYPE(this.oBuildingCombo) == "O"
				this.oBuildingCombo.ZOrder(nOrder)
			ENDIF
			DODEFAULT(nOrder)
		ELSE
			DODEFAULT(nOrder)
			IF VARTYPE(this.oBuildingCombo) == "O"
				this.oBuildingCombo.ZOrder(nOrder)
			ENDIF
			IF VARTYPE(this.oHotelCombo) == "O"
				this.oHotelCombo.ZOrder(nOrder)
			ENDIF
		ENDIF
	ENDPROC

ENDDEFINE

DEFINE CLASS cbosource AS tcombobox OF "main.vcx" 
 	*< CLASSDATA: Baseclass="combobox" Timestamp="" Scale="Pixels" Uniqueid="" />

	*<DefinedPropArrayMethod>
		*m: initrowsource
		*m: initsqlproperties
		*m: requerycursor
		*p: ccursor
		*p: coldval
		*p: corder
		*p: crowsource
		*p: csqlselect
		*p: csqlunion
		*p: cwhere
		*p: lappendblank
	*</DefinedPropArrayMethod>

	BoundTo = .T.
	ccursor = 
	coldval = 
	ColumnCount = 2
	ColumnLines = .F.
	ColumnWidths = "70,120"
	corder = pl_charcod
	crowsource = pl_charcod,pl_lang
	csqlselect = 
	csqlunion = 
	cwhere = 
	DisabledForeColor = 0,0,0
	Format = "K"
	InputMask = "!!!"
	Name = "cbosource"
	RowSourceType = 6
	SelectOnEntry = .T.
	
	PROCEDURE Destroy
		IF USED(this.cCursor)
			USE IN this.cCursor
		ENDIF
		
		DODEFAULT()
	ENDPROC

	PROCEDURE GotFocus
		this.cOldVal = this.Value
		DODEFAULT()
	ENDPROC

	PROCEDURE Init
		this.cCursor = SYS(2015)
		
		this.InitSqlProperties()
		this.RequeryCursor()
		
		DODEFAULT()
		
		RETURN .T.
	ENDPROC

	PROTECTED PROCEDURE initrowsource
		this.RowSource = this.cCursor + "." + this.cRowSource
	ENDPROC

	PROCEDURE initsqlproperties
		TEXT TO this.cSqlSelect TEXTMERGE NOSHOW PRETEXT 2 + 8
			SELECT pl_charcod, pl_lang<<g_langnum>> AS  pl_lang FROM picklist
		ENDTEXT
		
		TEXT TO this.cSqlUnion TEXTMERGE NOSHOW PRETEXT 2 + 8
			UNION SELECT [] AS pl_charcod, [] AS pl_lang FROM ratecode
		ENDTEXT
		
		TEXT TO this.cWhere TEXTMERGE NOSHOW PRETEXT 2 + 8
			pl_label = <<SqlCnv('SOURCE    ', .T.)>> AND NOT pl_inactiv
		ENDTEXT
	ENDPROC

	PROCEDURE Requery
		this.RequeryCursor()
		DODEFAULT()
		
		RETURN .T.
	ENDPROC

	PROCEDURE requerycursor
		LOCAL l_nSelect, l_lPicklistUsed, l_cSql, l_cUnion, l_cWhere, l_cTag, l_cMainSql
		
		IF EMPTY(this.cWhere)
			l_cWhere = ""
		ELSE
			l_cWhere = " WHERE " + this.cWhere
		ENDIF
		
		l_nSelect = SELECT()
		l_lPicklistUsed = USED("Picklist")
		
		this.RowSource = ""
		IF USED(this.cCursor)
			USE IN (this.cCursor)
		ENDIF
		
		l_cSql = this.cSqlSelect
		l_cUnion = IIF(this.lAppendBlank, this.cSqlUnion, "")
		
		TEXT TO l_cMainSql TEXTMERGE NOSHOW PRETEXT 2+8
		<<l_cSql>> <<l_cWhere>> <<l_cUnion>>
		ENDTEXT
		sqlcursor(l_cMainSql,this.cCursor)
		*&l_cSql &l_cWhere &l_cUnion INTO CURSOR (this.cCursor)
		
		IF NOT EMPTY(this.cOrder)
			l_cTag = this.cOrder
			INDEX ON &l_cTag TAG TAG1
		ENDIF
		
		IF NOT l_lPicklistUsed AND USED("Picklist")
			USE IN Picklist
		ENDIF
		
		this.InitRowSource()
		
		SELECT (l_nSelect)
		
		RETURN .T.
	ENDPROC

	PROCEDURE Valid
		IF NOT this.CheckListValues()
			this.Value = this.cOldVal
			KEYBOARD '{ALT+DNARROW}'
			RETURN 0
		ENDIF
		IF PEMSTATUS(thisform, "HndValid", 5)
			RETURN thisform.HndValid(this)
		ENDIF
	ENDPROC

ENDDEFINE

DEFINE CLASS cmdselectbuilding AS tcommandbutton OF "main.vcx" 
 	*< CLASSDATA: Baseclass="commandbutton" Timestamp="" Scale="Pixels" Uniqueid="" />

	*<DefinedPropArrayMethod>
		*p: nlineheight
		*p: obuildingcombo
	*</DefinedPropArrayMethod>

	Caption = "..."
	Height = 23
	Name = "cmdselectbuilding"
	nlineheight = 0
	obuildingcombo = .NULL.
	Width = 23
	
	PROCEDURE Click
		LOCAL l_nRet, l_nSelect, l_cLang, l_cSql, l_cCurName
		LOCAL ARRAY l_aDefs(2,5)
		
		l_nSelect = SELECT()
		
		*l_cCurName = SqlCursor("SELECT * FROM " + this.oBuildingCombo.cCursor,,,,,.T.)
		l_cCurName = SYS(2015)
		SELECT * FROM (this.oBuildingCombo.cCursor) INTO CURSOR (l_cCurName) READWRITE
		*SELECT &l_cCurName
		INDEX ON bu_lang TAG bu_lang
		INDEX ON bu_buildng TAG bu_buildng
		
		GO TOP
		
		l_aDefs(1,1) = "bu_lang"
		l_aDefs(1,2) = 170
		l_aDefs(1,3) = GetLangText("ALLOTT", "TXT_RENT_OBJECT")
		l_aDefs(1,4) = "TXT"
		l_aDefs(1,5) = "bu_lang"
		l_aDefs(2,1) = "bu_buildng"
		l_aDefs(2,2) = 60
		l_aDefs(2,3) = GetLangText("MGRPLIST", "TXT_ACCTCODE")
		l_aDefs(2,4) = "TXT"
		l_aDefs(2,5) = "bu_buildng"
		
		SELECT 0
		DO FORM Forms\BrwMulSel WITH l_cCurName, l_aDefs, GetLangText("MENU", "MGR_RENT_OBJECTS"), .F., .T. TO l_nRet
		IF l_nRet = 1 AND NOT ISNULL(this.oBuildingCombo)
			this.oBuildingCombo.Value = &l_cCurName..bu_buildng
			this.oBuildingCombo.Refresh()
		ENDIF
		
		DClose(l_cCurName)
		
		SELECT (l_nSelect)
		
		RETURN .T.
	ENDPROC

	PROCEDURE Init
		LPARAMETERS lp_oParent
		
		IF VARTYPE(lp_oParent) == "O"
			this.oBuildingCombo = lp_oParent
			this.Left = this.oBuildingCombo.Left - 24
			this.Top = this.oBuildingCombo.Top
			this.TabIndex = this.oBuildingCombo.TabIndex
		ENDIF
		
		DODEFAULT()
		
		RETURN .T.
	ENDPROC

ENDDEFINE

DEFINE CLASS cmdselecthotels AS tcommandbutton OF "main.vcx" 
 	*< CLASSDATA: Baseclass="commandbutton" Timestamp="" Scale="Pixels" Uniqueid="" />

	*<DefinedPropArrayMethod>
		*p: lmultiselect
		*p: nlineheight
		*p: ohotelcombo
	*</DefinedPropArrayMethod>

	Caption = "..."
	Height = 23
	Name = "cmdselecthotels"
	nlineheight = 0
	ohotelcombo = .NULL.
	Width = 23
	
	PROCEDURE Click
		LOCAL l_nRet, l_nSelect, l_cCurName, l_nRow, l_cHotcode
		LOCAL ARRAY l_aDefs(1,5)
		
		l_nSelect = SELECT()
		
		l_cCurName = SYS(2015)
		SELECT *, .T. AS ho_mark FROM (this.oHotelCombo.cCursor) WHERE NOT EMPTY(ho_hotcode) INTO CURSOR (l_cCurName) READWRITE
		INDEX ON ho_descrip TAG ho_descrip
		INDEX ON ho_hotcode TAG ho_hotcode
		
		GO TOP
		
		l_nRow = 1
		l_aDefs(l_nRow,1) = "ho_hotcode"
		l_aDefs(l_nRow,2) = 100
		l_aDefs(l_nRow,3) = GetLangText("SRVSETTI","TXT_HOTEL_CODE")
		l_aDefs(l_nRow,4) = "TXT"
		l_aDefs(l_nRow,5) = "ho_hotcode"
		l_nRow = Aadd(@l_aDefs)
		l_aDefs(l_nRow,1) = "ho_descrip"
		l_aDefs(l_nRow,2) = 150
		l_aDefs(l_nRow,3) = GetLangText("ACT","T_DESCR")
		l_aDefs(l_nRow,4) = "TXT"
		l_aDefs(l_nRow,5) = "ho_descrip"
		IF this.lMultiSelect
			l_nRow = Aadd(@l_aDefs)
			l_aDefs(l_nRow,1) = "ho_mark"
			l_aDefs(l_nRow,2) = 25
			l_aDefs(l_nRow,3) = ""
			l_aDefs(l_nRow,4) = "CHK"
		ENDIF
		
		SELECT 0
		DO FORM Forms\BrwMulSel WITH l_cCurName, l_aDefs, GetLangText("MENU","MP_CHOOSE_HOTEL",,.T.),,.T. TO l_nRet
		IF l_nRet = 1 AND NOT ISNULL(this.oHotelCombo)
			IF NOT this.lMultiSelect
				l_cHotcode = &l_cCurName..ho_hotcode
				REPLACE ho_mark WITH ho_hotcode = l_cHotcode ALL IN (l_cCurName)
			ENDIF	
			DIMENSION this.oHotelCombo.aHotels(1)
			this.oHotelCombo.aHotels(1) = ""
			SELECT ho_hotcode FROM (l_cCurName) WHERE ho_mark INTO ARRAY this.oHotelCombo.aHotels
			this.oHotelCombo.Value = IIF(EMPTY(this.oHotelCombo.aHotels(1)) OR ALEN(this.oHotelCombo.aHotels) > 1, "", this.oHotelCombo.aHotels(1))
			this.oHotelCombo.Refresh()
			this.oHotelCombo.SetFocus()
		ENDIF
		DClose(l_cCurName)
		
		SELECT (l_nSelect)
		
		RETURN .T.
	ENDPROC

	PROCEDURE Init
		LPARAMETERS lp_oParent
		
		IF VARTYPE(lp_oParent) = "O"
			this.oHotelCombo = lp_oParent
			this.Left = this.oHotelCombo.Left - 24
			this.Top = this.oHotelCombo.Top
			this.TabIndex = this.oHotelCombo.TabIndex
		ENDIF
		
		DODEFAULT()
		
		RETURN .T.
	ENDPROC

ENDDEFINE

DEFINE CLASS combopaymeth AS tcombobox OF "main.vcx" 
 	*< CLASSDATA: Baseclass="combobox" Timestamp="" Scale="Pixels" Uniqueid="" />

	*<DefinedPropArrayMethod>
		*p: lpaynum
		*p: lshowinactive
	*</DefinedPropArrayMethod>

	ColumnCount = 2
	ColumnLines = .F.
	ColumnWidths = "35,140"
	lshowinactive = .F.
	Name = "combopaymeth"
	RowSourceType = 3
	SelectOnEntry = .T.
	Width = 59
	
	PROCEDURE Init
		IF NOT USED("curpmh6015")
			sqlcursor("SELECT * FROM paymetho","curpmh6015")
		ENDIF
		
		IF this.lPayNum
			this.InputMask = "99"
			this.RowSource = "SELECT pm_paynum, pm_lang" + g_langnum + "," + ;
					" pm_paymeth, pm_rate, pm_addamnt, pm_addpct, pm_addarti," + ;
					" pm_aracct, pm_calcrat, pm_opendrw, pm_paytyp, pm_copy " + ;
					"FROM curpmh6015 " + ;
					"WHERE NOT pm_paynum IN (" + sqlcnv(_screen.oGlobal.oparam.pa_payonld, .T.) + ", " + sqlcnv(_screen.oGlobal.oparam.pa_rndpay) + ")" + ;
					IIF(this.lshowinactive," "," AND NOT pm_inactiv ") + ;
					"ORDER BY pm_paynum " + ;
					"INTO CURSOR tblCitComboPaymetho"
			this.BoundTo = .T.
		ELSE
			this.InputMask = "!!!!"
			this.RowSource = "SELECT pm_paymeth, pm_lang" + g_langnum + "," + ;
					" pm_paynum " + ;
					"FROM curpmh6015 " + ;
					"WHERE NOT (pm_paymeth == '') " + IIF(this.lshowinactive," "," AND NOT pm_inactiv ") + ;
					"ORDER BY pm_paymeth " + ;
					"INTO CURSOR tblCitComboPaymetho"
		ENDIF
		DODEFAULT()
	ENDPROC

ENDDEFINE

DEFINE CLASS jcbocolor AS jcbomain OF "jbase.vcx" 
 	*< CLASSDATA: Baseclass="combobox" Timestamp="" Scale="Pixels" Uniqueid="" />

	*<DefinedPropArrayMethod>
		*m: setcolor
	*</DefinedPropArrayMethod>

	corder = ct_colorid
	csqlunion = UNION SELECT CAST('' AS Char(30)) AS ct_lang, RGB(240,240,240) AS ct_color, 0 AS ct_colorid FROM param
	cwhere = 
	jboundcolumn = 0
	jcolumnwidths = 
	ldisplayallcolumns = .F.
	Name = "jcbocolor"
	Style = 2
	
	PROCEDURE initsqlproperties
		TEXT TO this.cSqlSelect TEXTMERGE NOSHOW PRETEXT 2 + 8
			SELECT ct_lang<<g_langnum>> AS ct_lang, ct_color, ct_colorid FROM citcolor
		ENDTEXT
	ENDPROC

	PROCEDURE InteractiveChange
		this.SetColor()
		DODEFAULT()
	ENDPROC

	PROCEDURE setcolor
		LOCAL l_nValue
		
		l_nValue = EVALUATE(this.jCursor + '.ct_color')
		this.ForeColor = l_nValue
		this.BackColor = l_nValue
		this.SelectedBackColor = l_nValue
		this.SelectedForeColor = l_nValue
	ENDPROC

ENDDEFINE

DEFINE CLASS jcbolanguage AS jcbomain OF "jbase.vcx" 
 	*< CLASSDATA: Baseclass="combobox" Timestamp="" Scale="Pixels" Uniqueid="" />

	cwhere = pl_label = 'LANGUAGE  '
	Name = "jcbolanguage"

ENDDEFINE

DEFINE CLASS jcbomarket AS jcbomain OF "jbase.vcx" 
 	*< CLASSDATA: Baseclass="combobox" Timestamp="" Scale="Pixels" Uniqueid="" />

	cwhere = pl_label = 'MARKET    ' AND NOT pl_inactiv
	Name = "jcbomarket"

ENDDEFINE

DEFINE CLASS jcbopaymethod AS jcbomain OF "jbase.vcx" 
 	*< CLASSDATA: Baseclass="combobox" Timestamp="" Scale="Pixels" Uniqueid="" />

	corder = pm_paymeth
	csqlunion = UNION SELECT CAST('' AS Char(4)) AS pm_paymeth, CAST(NULL AS Char(25)) AS pm_lang, 0 AS pm_paynum FROM param
	cwhere = pm_paymeth <> ' '
	InputMask = (REPLICATE("!",4))
	jcolumnwidths = 
	Name = "jcbopaymethod"
	
	PROCEDURE initsqlproperties
		TEXT TO this.cSqlSelect TEXTMERGE NOSHOW PRETEXT 2 + 8
			SELECT pm_paymeth, pm_lang<<g_langnum>> AS pm_lang, pm_paynum FROM paymetho
		ENDTEXT
	ENDPROC

ENDDEFINE

DEFINE CLASS jcbopaynum AS jcbomain OF "jbase.vcx" 
 	*< CLASSDATA: Baseclass="combobox" Timestamp="" Scale="Pixels" Uniqueid="" />

	corder = pm_paynum
	csqlunion = UNION SELECT CAST(0 AS Numeric(2)) AS pm_paynum, CAST(NULL AS Char(25)) AS pm_lang FROM param
	cwhere = pm_paynum <> 0 AND NOT pm_inactiv
	InputMask = (REPLICATE("9",2))
	jcolumnwidths = 
	Name = "jcbopaynum"
	
	PROCEDURE initsqlproperties
		TEXT TO this.cSqlSelect TEXTMERGE NOSHOW PRETEXT 2 + 8
			SELECT pm_paynum, pm_lang<<g_langnum>> AS pm_lang FROM paymetho
		ENDTEXT
	ENDPROC

ENDDEFINE

DEFINE CLASS jcboratecode AS jcbomain OF "jbase.vcx" 
 	*< CLASSDATA: Baseclass="combobox" Timestamp="" Scale="Pixels" Uniqueid="" />

	corder = rc_ratecod
	csqlunion = 
	cwhere = 
	InputMask = (REPLICATE("!",10))
	Name = "jcboratecode"
	
	PROCEDURE initsqlproperties
		TEXT TO this.cSqlSelect TEXTMERGE NOSHOW PRETEXT 2 + 8
		SELECT rc_ratecod, rc_amnt1, rc_amnt2, rc_lang<<g_langnum>> AS rc_lang, rc_roomtyp, rc_fromdat, rc_todat, ;
			CAST(NVL(RTRIM(rd_roomtyp)__||__' '__||__rt_buildng, '*') AS Char(12)) AS rc_rttype, ;
			CAST(rc_ratecod__||__rc_roomtyp__||__DTOS(rc_fromdat)__||__rc_season AS Char(23)) AS rc_rckey FROM ratecode ;
			LEFT JOIN roomtype ON rt_roomtyp = rc_roomtyp ;
			LEFT JOIN rtypedef ON rd_rdid = rt_rdid
		ENDTEXT
		this.cSqlSelect = STRTRAN(this.cSqlSelect, ";", "")
		
		TEXT TO this.cSqlUnion TEXTMERGE NOSHOW PRETEXT 2 + 8
		UNION SELECT CAST('' AS Char(10)) AS rc_ratecod, NULL AS rc_amnt1, NULL AS rc_amnt2, CAST(NULL AS Char(35)) AS rc_lang, ;
			CAST(NULL AS Char(4)) AS rc_roomtyp, NULL AS rc_fromdat, NULL AS rc_todat, ;
			CAST(NULL AS Char(12)) AS rc_rttype, CAST('' AS Char(23)) AS rc_rckey FROM param
		ENDTEXT
		this.cSqlUnion = STRTRAN(this.cSqlUnion, ";", "")
	ENDPROC

ENDDEFINE

DEFINE CLASS jcborauser AS jcbomain OF "jbase.vcx" 
 	*< CLASSDATA: Baseclass="combobox" Timestamp="" Scale="Pixels" Uniqueid="" />

	*<DefinedPropArrayMethod>
		*p: cfilter
	*</DefinedPropArrayMethod>

	cfilter = 
	corder = pl_lang
	csqlunion = UNION SELECT CAST(NULL AS Char(25)) AS pl_lang FROM param
	InputMask = (REPLICATE("X",25))
	Name = "jcborauser"
	Style = 2
	
	PROCEDURE Init
		LPARAMETERS lp_lDoInit
		
		IF NOT lp_lDoInit
			RETURN .T.
		ENDIF
		
		IF NOT EMPTY(this.cfilter)
			this.cWhere = "pl_label = '" + PADR(this.cfilter,10) + "' AND NOT pl_inactiv"
		ENDIF
		
		DODEFAULT()
	ENDPROC

	PROCEDURE initsqlproperties
		TEXT TO this.cSqlSelect TEXTMERGE NOSHOW PRETEXT 2 + 8
			SELECT pl_lang<<g_langnum>> AS pl_lang FROM picklist
		ENDTEXT
	ENDPROC

ENDDEFINE

DEFINE CLASS jcbosource AS jcbomain OF "jbase.vcx" 
 	*< CLASSDATA: Baseclass="combobox" Timestamp="" Scale="Pixels" Uniqueid="" />

	cwhere = pl_label = 'SOURCE    ' AND NOT pl_inactiv
	Name = "jcbosource"

ENDDEFINE

DEFINE CLASS lstroomtypesum AS tlistbox OF "main.vcx" 
 	*< CLASSDATA: Baseclass="listbox" Timestamp="" Scale="Pixels" Uniqueid="" />

	*<DefinedPropArrayMethod>
		*m: refreshrtypes
		*a: asource[4,5]
	*</DefinedPropArrayMethod>

	ColorSource = 1
	ColumnCount = 5
	ColumnLines = .F.
	FontBold = .T.
	Height = 38
	Name = "lstroomtypesum"
	nlineheight = 2
	resizefontsize = .F.
	RowSource = "this.aSource"
	RowSourceType = 5
	Width = 560
	
	PROCEDURE Init
		LPARAMETERS lp_oTopControl
		LOCAL l_nScrollBarWidth, l_nColumnWidth
		
		lp_oTopControl.Height = lp_oTopControl.Height - this.Height
		lp_oTopControl.h = lp_oTopControl.Height
		this.Top = lp_oTopControl.Height
		this.Width = lp_oTopControl.Width
		this.Left = lp_oTopControl.Left
		this.SelectedItemBackColor = this.ItemBackColor
		this.SelectedItemForeColor = this.ItemForeColor
		
		l_nScrollBarWidth = 20
		l_nColumnWidth = INT((this.Width - l_nScrollBarWidth)/this.ColumnCount)
		
		this.ColumnWidths = ""
		FOR i = 1 TO this.ColumnCount
			this.ColumnWidths = this.ColumnWidths + IIF(EMPTY(this.ColumnWidths), "", ",") + ALLTRIM(STR(l_nColumnWidth))
		NEXT
		
		DODEFAULT()
	ENDPROC

	PROCEDURE refreshrtypes
		LPARAMETERS lp_cBuilding, lp_lOnlyStandardRooms
		LOCAL i, l_nSum, l_nRow, l_nCol, l_cSql, l_cWhere
		LOCAL ARRAY l_aRoomtypes(1)
		
		l_aRoomtypes[1] = .T.
		
		l_cWhere = "NOT rm_inactiv"
		
		IF NOT EMPTY(lp_cBuilding)
			l_cWhere = sqland(l_cWhere,  "(rt_buildng = " + sqlcnv(lp_cBuilding,.T.) + ")")
		ENDIF
		
		IF lp_lOnlyStandardRooms
			l_cWhere = sqland(l_cWhere, "rt_group IN (1,4)")
		ENDIF
		
		IF NOT EMPTY(l_cWhere)
			l_cWhere = l_cWhere + " AND "
		ENDIF
		
		TEXT TO l_cSql TEXTMERGE NOSHOW PRETEXT 15
		SELECT rd_roomtyp, COUNT(rm_roomtyp) 
			FROM Room 
			INNER JOIN RoomType ON rt_roomtyp = rm_roomtyp 
			INNER JOIN RTypeDef ON rd_rdid = rt_rdid 
			LEFT JOIN building ON rt_buildng = bu_buildng 
			WHERE <<l_cWhere>> IIF(rt_buildng='   ',<<sqlcnv(.T.,.T.)>>,bu_active) 
			GROUP BY rd_roomtyp 
		ENDTEXT
		
		sqlcursor(l_cSql,,,,,,@l_aRoomtypes)
		
		DIMENSION this.aSource(CEILING(ALEN(l_aRoomtypes,1)/4), this.ColumnCount)
		STORE "" TO this.aSource
		
		l_nSum = 0
		IF NOT EMPTY(l_aRoomtypes[1])
			FOR i = 1 TO ALEN(l_aRoomtypes,1)
				l_nRow = CEILING(i/4)
				l_nCol = MOD(i-1,4) + 1
				this.aSource[l_nRow,l_nCol] = ALLTRIM(l_aRoomtypes[i,1]) + ":  " + ALLTRIM(STR(l_aRoomtypes[i,2]))
				l_nSum = l_nSum + l_aRoomtypes[i,2]
			NEXT
		ENDIF
		
		this.aSource[1,5] = GetLangText("MGRRESER", "TXT_TOTAL") + ":  " + ALLTRIM(STR(l_nSum))
		this.Requery()
		this.Refresh()
	ENDPROC

ENDDEFINE

DEFINE CLASS tcntpicturecollection AS tcontainer OF "..\common\libs\_lvisual.vcx" 
 	*< CLASSDATA: Baseclass="container" Timestamp="" Scale="Pixels" Uniqueid="" />

	*<DefinedPropArrayMethod>
		*m: getpicture
	*</DefinedPropArrayMethod>

	Name = "tcntpicturecollection"
	Visible = .F.
	
	PROCEDURE getpicture
		LPARAMETERS tcPicture
		LOCAL lcName
		
		*IF NOT FILE(tcPicture)
		*	tcPicture = "Common\Picts\maintenance.png"
		*ENDIF
		lcName = "img" + CHRTRAN(LOWER(JUSTSTEM(tcPicture)),"-","")
		IF NOT PEMSTATUS(this, lcName, 5)
			this.AddObject(lcName, "Image")
			this.&lcName..Picture = tcPicture
		ENDIF
		
		RETURN this.&lcName..Picture
	ENDPROC

	PROCEDURE Init
		LOCAL ARRAY l_adirs(11), l_aPicts(1)
		LOCAL i, j
		
		l_adirs(1) = "bitmap\"
		l_adirs(2) = "bitmap\cursors\"
		l_adirs(3) = "bitmap\graphics\"
		l_adirs(4) = "bitmap\graphics\foxtabs\"
		l_adirs(5) = "bitmap\icons\"
		l_adirs(6) = "bitmap\navpane\"
		l_adirs(7) = "bitmap\toolbar\"
		l_adirs(8) = "common\picts\"
		l_adirs(9) = "common\picts\icons\"
		l_adirs(10) = "html\css\images\"
		l_adirs(11) = "html\images\"
		
		FOR i = 1 TO ALEN(l_adirs)
			FOR j = 1 TO ADIR(l_aPicts, l_adirs(i)+"*.png")
				this.GetPicture(LOWER(l_adirs(i)+l_aPicts(j,1)))
			NEXT
		NEXT
	ENDPROC

ENDDEFINE

DEFINE CLASS tnbthemedoutlooknavbar AS outlooknavbar OF "outlooknavbar.vcx" 
 	*< CLASSDATA: Baseclass="container" Timestamp="" Scale="Pixels" Uniqueid="" />

	*<DefinedPropArrayMethod>
		*m: active_assign
		*m: getshrunk
		*m: setcaptions
		*m: setshrunk
		*m: width_assign
		*p: active
	*</DefinedPropArrayMethod>

	Anchor = 5
	maxshowedbuttons = 10
	mnuaddtofavoritestext = (GetLangText("MENU","NAV_ADD_TO_FAVOR"))
	mnuremovefromfavoritestext = (GetLangText("MENU","NAV_REM_FROM_FAVOR"))
	Name = "tnbthemedoutlooknavbar"
	Visible = .F.
	overflowpanel.MenuButton.imgPicture.Name = "imgPicture"
	overflowpanel.MenuButton.Name = "MenuButton"
	overflowpanel.Name = "overflowpanel"
	Panel.Name = "Panel"
	panelvertical.caption = (GetLangText("MENU", "TXT_NAVIG_PANE"))
	panelvertical.lblCaption.Name = "lblCaption"
	panelvertical.Name = "panelvertical"
	Panes.ErasePage = .T.
	Panes.Height = 332
	Panes.Name = "Panes"
	Panes.PageCount = 11
	Panes.Pane1.Caption = "panFavorites"
	Panes.Pane1.Name = "panFavorites"
	Panes.Pane1.Olecontrol1.Name = "Olecontrol1"
	Panes.Pane1.Olecontrol2.Name = "Olecontrol2"
	Panes.Pane1.PageOrder = 1
	Panes.Pane1.picture16 = bitmap\toolbar\favourites16.png
	Panes.Pane1.picture24 = bitmap\toolbar\favourites24.png
	Panes.Pane10.Caption = "panHelp"
	Panes.Pane10.Name = "panMultiproper"
	Panes.Pane10.Olecontrol1.Name = "Olecontrol1"
	Panes.Pane10.Olecontrol2.Name = "Olecontrol2"
	Panes.Pane10.PageOrder = 10
	Panes.Pane10.picture16 = bitmap\toolbar\multiproper16.png
	Panes.Pane10.picture24 = bitmap\toolbar\multiproper24.png
	Panes.Pane11.Caption = "panMultiproper"
	Panes.Pane11.Name = "panHelp"
	Panes.Pane11.Olecontrol1.Name = "Olecontrol1"
	Panes.Pane11.Olecontrol2.Name = "Olecontrol2"
	Panes.Pane11.PageOrder = 11
	Panes.Pane11.picture16 = bitmap\toolbar\worldhand16.png
	Panes.Pane11.picture24 = bitmap\toolbar\worldhand24.png
	Panes.Pane2.Caption = "panFile"
	Panes.Pane2.Name = "panFile"
	Panes.Pane2.Olecontrol1.Name = "Olecontrol1"
	Panes.Pane2.Olecontrol2.Name = "Olecontrol2"
	Panes.Pane2.PageOrder = 2
	Panes.Pane2.picture16 = bitmap\toolbar\admin16.png
	Panes.Pane2.picture24 = bitmap\toolbar\admin24.png
	Panes.Pane3.Caption = "panReservations"
	Panes.Pane3.Name = "panReservations"
	Panes.Pane3.Olecontrol1.Name = "Olecontrol1"
	Panes.Pane3.Olecontrol2.Name = "Olecontrol2"
	Panes.Pane3.PageOrder = 3
	Panes.Pane3.picture16 = bitmap\toolbar\scaner16.png
	Panes.Pane3.picture24 = bitmap\toolbar\scaner24.png
	Panes.Pane4.Caption = "panAddresses"
	Panes.Pane4.Name = "panAddresses"
	Panes.Pane4.Olecontrol1.Name = "Olecontrol1"
	Panes.Pane4.Olecontrol2.Name = "Olecontrol2"
	Panes.Pane4.PageOrder = 4
	Panes.Pane4.picture16 = bitmap\toolbar\contacts16.png
	Panes.Pane4.picture24 = bitmap\toolbar\contacts24.png
	Panes.Pane5.Caption = "panFinancial"
	Panes.Pane5.Name = "panFinancial"
	Panes.Pane5.Olecontrol1.Name = "Olecontrol1"
	Panes.Pane5.Olecontrol2.Name = "Olecontrol2"
	Panes.Pane5.PageOrder = 5
	Panes.Pane5.picture16 = bitmap\toolbar\notebook16.png
	Panes.Pane5.picture24 = bitmap\toolbar\notebook24.png
	Panes.Pane6.Caption = "panViews"
	Panes.Pane6.Name = "panViews"
	Panes.Pane6.Olecontrol1.Name = "Olecontrol1"
	Panes.Pane6.Olecontrol2.Name = "Olecontrol2"
	Panes.Pane6.PageOrder = 6
	Panes.Pane6.picture16 = bitmap\toolbar\monitor16.png
	Panes.Pane6.picture24 = bitmap\toolbar\monitor24.png
	Panes.Pane7.Caption = "panOther"
	Panes.Pane7.Name = "panOther"
	Panes.Pane7.Olecontrol1.Name = "Olecontrol1"
	Panes.Pane7.Olecontrol2.Name = "Olecontrol2"
	Panes.Pane7.PageOrder = 7
	Panes.Pane7.picture16 = bitmap\toolbar\tasks16.png
	Panes.Pane7.picture24 = bitmap\toolbar\tasks24.png
	Panes.Pane8.Caption = "panReports"
	Panes.Pane8.Name = "panReports"
	Panes.Pane8.Olecontrol1.Name = "Olecontrol1"
	Panes.Pane8.Olecontrol2.Name = "Olecontrol2"
	Panes.Pane8.PageOrder = 8
	Panes.Pane8.picture16 = bitmap\toolbar\views16.png
	Panes.Pane8.picture24 = bitmap\toolbar\views24.png
	Panes.Pane9.Caption = "panExtra"
	Panes.Pane9.Name = "panExtra"
	Panes.Pane9.Olecontrol1.Name = "Olecontrol1"
	Panes.Pane9.Olecontrol2.Name = "Olecontrol2"
	Panes.Pane9.PageOrder = 9
	Panes.Pane9.picture16 = bitmap\toolbar\home16.png
	Panes.Pane9.picture24 = bitmap\toolbar\home24.png
	Panes.Top = 28
	shrinkbutton.Name = "shrinkbutton"
	Splitter.IMGBACKGROUND.Name = "IMGBACKGROUND"
	Splitter.imgGripper.Name = "imgGripper"
	Splitter.Name = "Splitter"
	splittervertical.IMGBACKGROUND.Name = "IMGBACKGROUND"
	splittervertical.Name = "splittervertical"
	TITLE.IMGBACKGROUND.Name = "IMGBACKGROUND"
	TITLE.lblCaption.Name = "lblCaption"
	TITLE.Name = "TITLE"
	
	PROCEDURE active_assign
		LPARAMETERS tlVisible
		LOCAL loPane
		
		this.Active = tlVisible
		this.Left = IIF(tlVisible, 0, -this.Width)
		
		IF TYPE("_screen.ohTML") = "O" AND NOT ISNULL(_screen.ohTML) AND _screen.oHtml.Left <> this.Left + this.Width + 1
			_screen.oHtml.Left = this.Left + this.Width + 1
			_screen.Refresh()
		ENDIF
		
		SET MARK OF BAR 20 OF puWindow TO tlVisible
		
		MdRefresh()
		
		FOR EACH loPane IN this.Panes.Pages
			loPane.ManageShortcuts(this.Active)
		NEXT
	ENDPROC

	PROCEDURE addtofavorites
		LPARAMETERS tcMenu, tcMenuKey
		LOCAL loPane, lnItemNo, lnNodeNo
		
		DO UserFavInsert IN procuser WITH g_userid, tcMenu, tcMenuKey
		
		loPane = EVALUATE("this.Panes.pan"+tcMenu)
		lnItemNo = ASCAN(loPane.aTreeDefinition, tcMenuKey, 1, 0, 1, 8)
		WITH this.Panes.panFavorites
			IF lnItemNo > 0
				lnNodeNo = ALEN(.aTreeDefinition,1) + 1
				DIMENSION .aTreeDefinition(lnNodeNo,10)
				.aTreeDefinition(lnNodeNo,1) = tcMenu+tcMenuKey
				.aTreeDefinition(lnNodeNo,3) = loPane.aTreeDefinition(lnItemNo,3)
				.aTreeDefinition(lnNodeNo,5) = loPane.aTreeDefinition(lnItemNo,5)
				.aTreeDefinition(lnNodeNo,6) = loPane.aTreeDefinition(lnItemNo,6)
				.aTreeDefinition(lnNodeNo,7) = loPane.aTreeDefinition(lnItemNo,7)
				.aTreeDefinition(lnNodeNo,9) = tcMenu
				.aTreeDefinition(lnNodeNo,10) = tcMenuKey
			ENDIF
		
			.AddNode(tcMenu+tcMenuKey)
		ENDWITH
	ENDPROC

	PROCEDURE Destroy
		IF NOT this.GetShrunk()
			ProcNavpane("WidthChanged", this.Width)
		ENDIF
		DODEFAULT()
	ENDPROC

	PROCEDURE getshrunk
		RETURN this.Shrinkbutton.Shrunk
	ENDPROC

	PROCEDURE Init
		this.SetCaptions()
		DoDefault()
		This.Height = _screen.ViewPortHeight
		FOR EACH loPane IN this.Panes.Pages
			IF NOT UPPER(loPane.Name) == "PANFAVORITES"
				loPane.FillControls()
			ENDIF
		NEXT
		this.Panes.panFavorites.FillControls()
	ENDPROC

	PROCEDURE isinfavorites
		LPARAMETERS tcMenu, tcMenuKey
		LOCAL l_cCurUF, l_lSuccess, l_nSelect
		l_nSelect = SELECT()
		
		l_cCurUF = sqlcursor("SELECT uf_userid FROM userfav " + ;
				"WHERE uf_userid = " + sqlcnv(PADR(g_userid,10),.T.) + ;
				" AND uf_menu = " + sqlcnv(PADR(tcMenu,20),.T.) + " AND uf_menukey = " + sqlcnv(PADR(tcMenuKey,20),.T.))
		
		IF RECCOUNT(l_cCurUF)>0
			l_lSuccess = .T.
		ENDIF
		dclose(l_cCurUF)
		
		SELECT(l_nSelect)
		
		RETURN l_lSuccess
	ENDPROC

	PROCEDURE removefromfavorites
		LPARAMETERS tcMenu, tcMenuKey
		
		DO UserFavDelete IN procuser WITH g_userid, tcMenu, tcMenuKey
		
		this.Panes.panFavorites.DelNode(tcMenu+tcMenuKey)
	ENDPROC

	PROCEDURE setcaptions
		this.Panes.PanFavorites.Caption = GetLangText("MENU", "MNU_FAVOURITES",,.T.)
		IF TYPE("this.Panes.PanFile.Class") = "C"
			this.Panes.PanFile.Caption = GetLangText("MENU", "MNU_FILE",,.T.)
		ENDIF
		IF TYPE("this.Panes.PanMultiproper.Class") = "C"
			this.Panes.PanMultiproper.Caption = GetLangText("MENU", "MNU_MULTIPROPER",,.T.)
		ENDIF
		this.Panes.PanReservations.Caption = GetLangText("MENU", "MNU_RESERVAT",,.T.)
		this.Panes.panAddresses.Caption = GetLangText("MENU", "MNU_ADDRESS",,.T.)
		this.Panes.PanFinancial.Caption = GetLangText("MENU", "MNU_FINANCIAL",,.T.)
		this.Panes.PanViews.Caption = GetLangText("MENU", "MNU_VIEW",,.T.)
		this.Panes.PanOther.Caption = GetLangText("MENU", "MNU_OTHER",,.T.)
		this.Panes.PanReports.Caption = GetLangText("MENU", "MNU_REPORT",,.T.)
		IF TYPE("this.Panes.PanExtra.Class") = "C"
			this.Panes.PanExtra.Caption = GetLangText("MENU", "MNU_EXTRA",,.T.)
		ENDIF
		this.Panes.PanHelp.Caption = GetLangText("MENU", "MNU_HELP",,.T.)
	ENDPROC

	PROCEDURE setshrunk
		LPARAMETERS lp_lNewShrunk
		LOCAL l_lShrunk
		l_lShrunk = this.Shrinkbutton.Shrunk
		IF l_lShrunk <> lp_lNewShrunk
			this.Shrinkbutton.Shrunk = lp_lNewShrunk
		ENDIF
		
		RETURN .T.
	ENDPROC

	PROCEDURE viewmodechanged
		Lparameters llShrunk
		
		ProcNavpane("ShrunkChanged",llShrunk)
	ENDPROC

	PROCEDURE width_assign
		LPARAMETERS tnNewVal
		
		this.Width = tnNewVal
		
		IF TYPE("_screen.ohTML") = "O" AND NOT ISNULL(_screen.ohTML) AND _screen.oHtml.Left <> this.Left + this.Width + 1
			this.SetFocus()
			_screen.oHtml.Left = this.Left + this.Width + 1
			_screen.Refresh()
		ENDIF
	ENDPROC

	PROCEDURE Panes.Init
		this.RemoveObject("PanFile")
		IF NOT _screen.oGlobal.lMultiproper
			this.RemoveObject("PanMultiproper")
		ENDIF
		IF NOT _screen.oGlobal.oParam.pa_mnuextr
			this.RemoveObject("PanExtra")
		ENDIF
	ENDPROC

	PROCEDURE Panes.panAddresses.fillcontrols
		DIMENSION this.aTreeDefinition(4,10)
		STORE "" TO this.aTreeDefinition
		
		this.aTreeDefinition(1,1) = "Address"
		this.aTreeDefinition(1,3) = GetLangText("MENU","ADD_ALL",,.T.)
		this.aTreeDefinition(1,5) = _screen.oGlobal.GetNavPaneIconFileName("nav_adr_list.ico")
		this.aTreeDefinition(1,6) = "DO brwaddress WITH 3, 20, .F., 'SADDRESS' IN address"
		this.aTreeDefinition(1,7) = this.ShowPaneCondition("Address", 1)
		this.aTreeDefinition(1,8) = "ALT+F2"
		this.aTreeDefinition(2,1) = "Mailing"
		this.aTreeDefinition(2,3) = GetLangText("WALKIN","T_MAILING",,.T.)
		this.aTreeDefinition(2,5) = _screen.oGlobal.GetNavPaneIconFileName("nav_adr_mailing.ico")
		this.aTreeDefinition(2,6) = "DO DOFORM WITH 'mailingformsi','forms\mailingform'"
		this.aTreeDefinition(2,7) = this.ShowPaneCondition("Address", 2)
		this.aTreeDefinition(3,1) = "Phonenote"
		this.aTreeDefinition(3,3) = GetLangText("DOC","TXT_PHONE_NOTE",,.T.)
		this.aTreeDefinition(3,5) = _screen.oGlobal.GetNavPaneIconFileName("nav_adr_phonenote.ico")
		this.aTreeDefinition(3,6) = "DO phonenote IN address"
		this.aTreeDefinition(3,7) = this.ShowPaneCondition("Address", 3)
		this.aTreeDefinition(3,8) = "ALT+F7"
		this.aTreeDefinition(4,1) = "Mails"
		this.aTreeDefinition(4,3) = GetLangText("MENU","ADD_EMAILS",,.T.)
		this.aTreeDefinition(4,5) = _screen.oGlobal.GetNavPaneIconFileName("nav_adr_emails.ico")
		this.aTreeDefinition(4,6) = "DO doform WITH 'frmMailBrowse','forms/emailbrowse.scx'"
		this.aTreeDefinition(4,7) = this.ShowPaneCondition("Address", 4, NOT _screen.OL)
		
		DODEFAULT()
	ENDPROC

	PROCEDURE Panes.panExtra.fillcontrols
		LOCAL lnNodeNo, l_cCurMenu, l_cFunction
		
		IF OpenFile(.F.,"Menu",.F.,.T.)
			lnNodeNo = 1
			l_cCurMenu = sqlcursor("SELECT * FROM menu ORDER BY mn_sequ")
			SELECT (l_cCurMenu)
			SCAN
				DIMENSION this.aTreeDefinition(lnNodeNo,10)
				this.aTreeDefinition(lnNodeNo,1) = "Extra"+ALLTRIM(STR(lnNodeNo))
				this.aTreeDefinition(lnNodeNo,2) = ""
				this.aTreeDefinition(lnNodeNo,3) = STRTRAN(ALLTRIM(EVALUATE(l_cCurMenu+".mn_lang"+g_Langnum)), "\<")
				this.aTreeDefinition(lnNodeNo,4) = ""
				this.aTreeDefinition(lnNodeNo,5) = ""
				
				l_cFunction = ALLTRIM(&l_cCurMenu..mn_func)
				IF ".EXE" $ UPPER(l_cFunction) AND NOT "REGISTERCOMCOMPONENT" $ UPPER(l_cFunction) AND NOT "REGISTERDOTNETCOMPONENT" $ UPPER(l_cFunction)
					l_cFunction = "Run /N4 " + l_cFunction
				ELSE
					IF EMPTY(&l_cCurMenu..mn_files) AND NOT EMPTY(_screen.oGlobal.choteldir)
						DO CASE
							CASE "()" $ l_cFunction
								l_cFunction = ALLTRIM(STRTRAN(l_cFunction, "()", ""))
							CASE "(" $ l_cFunction
								l_cFunction = STRTRAN(l_cFunction, "(", " WITH ")
								l_cFunction = STRTRAN(l_cFunction, ")", "")
						ENDCASE
						l_cFunction = "DO " + _screen.oGlobal.choteldir + l_cFunction
					ENDIF
				ENDIF
				this.aTreeDefinition(lnNodeNo,6) = l_cFunction
		
				this.aTreeDefinition(lnNodeNo,7) = this.ShowPaneCondition(IIF(BETWEEN(&l_cCurMenu..mn_sequ,1,16),"Extra",""), &l_cCurMenu..mn_sequ, ;
						EMPTY(this.aTreeDefinition(lnNodeNo,3)) OR EMPTY(&l_cCurMenu..mn_func) OR EMPTY(&l_cCurMenu..mn_sequ))
				lnNodeNo = lnNodeNo + 1
			ENDSCAN
			dclose(l_cCurMenu)
			CloseFile("Menu")
				
			DODEFAULT()
		ENDIF
	ENDPROC

	PROCEDURE Panes.panFavorites.addtofavorites
		NODEFAULT
	ENDPROC

	PROCEDURE Panes.panFavorites.fillcontrols
		LOCAL lnFavoritesCount, loPane, lnNodeNo, lnItemNo, lcMenu, lcMenuKey, l_cCurUF
		
		l_cCurUF = sqlcursor("SELECT * FROM userfav WHERE uf_userid = " + sqlcnv(PADR(g_userid,10),.T.) + ;
				" ORDER BY uf_menu, uf_menukey")
		lnFavoritesCount = RECCOUNT(l_cCurUF)
		
		lnNodeNo = IIF(_screen.oGlobal.lWebBrowserDesktop, 1, 0)
		
		IF lnFavoritesCount + lnNodeNo > 0
			DIMENSION this.aTreeDefinition(lnFavoritesCount + lnNodeNo,10)
			STORE "" TO this.aTreeDefinition
		ENDIF
		IF lnNodeNo > 0
			this.aTreeDefinition(lnNodeNo,1) = "MyDesk"
			this.aTreeDefinition(lnNodeNo,3) = GetLangText("MENU","FAV_MYDESK",,.T.)
			this.aTreeDefinition(lnNodeNo,5) = _screen.oGlobal.GetNavPaneIconFileName("nav_fav_mydesk.ico")
			this.aTreeDefinition(lnNodeNo,6) = "DO MdShow"
			this.aTreeDefinition(lnNodeNo,7) = .T.
		ENDIF
		IF RECCOUNT(l_cCurUF) > 0
			SELECT (l_cCurUF)
			SCAN
				lcMenu = ALLTRIM(uf_menu)
				lcMenuKey = ALLTRIM(uf_menukey)
				loPane = EVALUATE("this.Parent.pan"+lcMenu)
				lnItemNo = ASCAN(loPane.aTreeDefinition, ALLTRIM(uf_menukey), 1, 0, 1, 8)
				IF lnItemNo > 0
					lnNodeNo = lnNodeNo + 1
					this.aTreeDefinition(lnNodeNo,1) = lcMenu+lcMenuKey
					this.aTreeDefinition(lnNodeNo,3) = loPane.aTreeDefinition(lnItemNo,3)
					this.aTreeDefinition(lnNodeNo,5) = loPane.aTreeDefinition(lnItemNo,5)
					this.aTreeDefinition(lnNodeNo,6) = loPane.aTreeDefinition(lnItemNo,6)
					this.aTreeDefinition(lnNodeNo,7) = loPane.aTreeDefinition(lnItemNo,7)
					this.aTreeDefinition(lnNodeNo,8) = loPane.aTreeDefinition(lnItemNo,8)
					this.aTreeDefinition(lnNodeNo,9) = lcMenu
					this.aTreeDefinition(lnNodeNo,10) = lcMenuKey
				ENDIF
			ENDSCAN
			DIMENSION this.aTreeDefinition(lnNodeNo,10)
		ENDIF
		
		dclose(l_cCurUF)
		
		DODEFAULT()
	ENDPROC

	PROCEDURE Panes.panFavorites.Olecontrol1.MouseUp
		*** ActiveX Control Event ***
		LPARAMETERS button, shift, x, y
		LOCAL loPopupMenu
		PRIVATE poBar
		
		IF button = 2 AND this.Nodes.Count > 0
			poBar = this.Parent
			loPopupMenu = this.Parent.Parent.PopupMenu
			loPopupMenu.NewMenu()
			loPopupMenu.AddMenuBar(this.Parent.Parent.Parent.mnuRemoveFromFavoritesText,"poBar.RemoveFromFavorites()",,,,.F.,.F.)
			loPopupMenu.ShowMenu()
			loPopupMenu.SetMenu()
		ENDIF
	ENDPROC

	PROCEDURE Panes.panFavorites.removefromfavorites
		LOCAL lnItemNo, lcMenu, lcMenuKey
		
		lnItemNo = ASCAN(this.aTreeDefinition, this.Olecontrol1.SelectedItem.Key, 1, 0, 1, 8)
		IF lnItemNo > 0
			lcMenu = this.aTreeDefinition(lnItemNo,9)
			lcMenuKey = this.aTreeDefinition(lnItemNo,10)
			this.Parent.Parent.RemoveFromFavorites(lcMenu, lcMenuKey)
		ENDIF
	ENDPROC

	PROCEDURE Panes.panFinancial.fillcontrols
		DIMENSION this.aTreeDefinition(24,10)
		STORE "" TO this.aTreeDefinition
		
		this.aTreeDefinition(1,1) = "Roompost"
		this.aTreeDefinition(1,3) = GetLangText("MENU","FIN_POST",,.T.)
		this.aTreeDefinition(1,6) = "DO post IN roompost"
		this.aTreeDefinition(1,5) = _screen.oGlobal.GetNavPaneIconFileName("nav_fin_roompost.ico")
		this.aTreeDefinition(1,7) = this.ShowPaneCondition("Financ", 1,, g_Cashier = 0)
		this.aTreeDefinition(1,8) = "SHIFT+F12"
		this.aTreeDefinition(2,1) = "Ratecodepost"
		this.aTreeDefinition(2,3) = GetLangText("MENU","TXT_RATE_CODE_POST",,.T.)
		this.aTreeDefinition(2,5) = _screen.oGlobal.GetNavPaneIconFileName("nav_fin_ratecodepost.ico")
		this.aTreeDefinition(2,6) = "DO rates IN rates"
		this.aTreeDefinition(2,7) = this.ShowPaneCondition("Financ", 9, g_Lite, g_Cashier = 0)
		this.aTreeDefinition(2,8) = "CTRL+F12"
		this.aTreeDefinition(3,1) = "Checkout"
		this.aTreeDefinition(3,3) = GetLangText("MENU","FIN_CHECKOUT",,.T.)
		this.aTreeDefinition(3,5) = _screen.oGlobal.GetNavPaneIconFileName("nav_fin_bill.ico")
		this.aTreeDefinition(3,6) = "DO Doform WITH 'resbrw54','forms\resbrw with 54'"
		this.aTreeDefinition(3,7) = this.ShowPaneCondition("Financ", 2,, g_Cashier = 0)
		this.aTreeDefinition(3,8) = "F12"
		this.aTreeDefinition(4,1) = "Batchcheckout"
		this.aTreeDefinition(4,3) = GetLangText("MENU","FIN_BATCHCHECKOUT",,.T.)
		this.aTreeDefinition(4,5) = _screen.oGlobal.GetNavPaneIconFileName("nav_fin_batchcheckout.ico")
		this.aTreeDefinition(4,6) = IIF(g_lBillMode, "DO checkoutbatch IN procbill", "DO batchchkout IN chkout1")
		this.aTreeDefinition(4,7) = this.ShowPaneCondition("Financ", 11,, g_Cashier = 0)
		this.aTreeDefinition(5,1) = "Passerby"
		this.aTreeDefinition(5,3) = GetLangText("MENU","FIN_PASSERBY",,.T.)
		this.aTreeDefinition(5,5) = _screen.oGlobal.GetNavPaneIconFileName("nav_fin_passerby.ico")
		this.aTreeDefinition(5,6) = "DO postpasserby IN passerby"
		this.aTreeDefinition(5,7) = this.ShowPaneCondition("Financ", 3,, g_Cashier = 0)
		this.aTreeDefinition(5,8) = "F8"
		this.aTreeDefinition(6,1) = "Grouppost"
		this.aTreeDefinition(6,3) = PADR(GetLangText("MENU","FIN_GROUPPOST",,.T.), 20)
		this.aTreeDefinition(6,5) = _screen.oGlobal.GetNavPaneIconFileName("nav_fin_grouppost.ico")
		this.aTreeDefinition(6,6) = "DO FORM forms\resgroups WITH 'GROUP_POST'"
		this.aTreeDefinition(6,7) = this.ShowPaneCondition("Financ", 13,, g_Cashier = 0)
		this.aTreeDefinition(7,1) = "Closcash"
		this.aTreeDefinition(7,3) = GetLangText("MENU","FIN_CLOSE",,.T.)
		this.aTreeDefinition(7,5) = _screen.oGlobal.GetNavPaneIconFileName("nav_fin_cashierclose.ico")
		this.aTreeDefinition(7,6) = "DO closcash"
		this.aTreeDefinition(7,7) = this.ShowPaneCondition("Financ", 4,, g_Cashier = 0)
		this.aTreeDefinition(8,1) = "Changecash"
		this.aTreeDefinition(8,3) = GetLangText("MENU","FIN_EXCHANGE",,.T.)
		this.aTreeDefinition(8,5) = _screen.oGlobal.GetNavPaneIconFileName("nav_fin_exchange.ico")
		this.aTreeDefinition(8,6) = "DO changecash IN cashier"
		this.aTreeDefinition(8,7) = this.ShowPaneCondition("Financ", 5,, g_Cashier = 0)
		this.aTreeDefinition(9,1) = "Tofrombank"
		this.aTreeDefinition(9,3) = GetLangText("MENU","FIN_TOFROMBANK",,.T.)
		this.aTreeDefinition(9,5) = _screen.oGlobal.GetNavPaneIconFileName("nav_fin_tofrombank.ico")
		this.aTreeDefinition(9,6) = "DO tofrombank IN cashier"
		this.aTreeDefinition(9,7) = this.ShowPaneCondition("Financ", 6,, g_Cashier = 0)
		this.aTreeDefinition(10,1) = "Cashinout"
		this.aTreeDefinition(10,3) = GetLangText("MENU","FIN_CASHINOUT",,.T.)
		this.aTreeDefinition(10,5) = _screen.oGlobal.GetNavPaneIconFileName("nav_fin_cashinout.ico")
		this.aTreeDefinition(10,6) = "DO cashinout IN cashier"
		this.aTreeDefinition(10,7) = this.ShowPaneCondition("Financ", 12,, g_Cashier = 0)
		this.aTreeDefinition(11,1) = "fpshowcommands"
		this.aTreeDefinition(11,3) = GetLangText("MENU","FIN_FISCAL_PRINTER",,.T.)
		this.aTreeDefinition(11,5) = _screen.oGlobal.GetNavPaneIconFileName("nav_fin_fiscalprinter.ico")
		this.aTreeDefinition(11,6) = "DO FPBillPrintedShowCommands IN FPBillPrinted"
		this.aTreeDefinition(11,7) = this.ShowPaneCondition("Financ", 14, EMPTY(_screen.oGlobal.oParam.pa_fiscprt), g_Cashier = 0)
		this.aTreeDefinition(12,1) = "elpaysettings"
		this.aTreeDefinition(12,3) = "elPay Einstellungen"
		this.aTreeDefinition(12,5) = _screen.oGlobal.GetNavPaneIconFileName("nav_fin_elpay.ico")
		this.aTreeDefinition(12,6) = "DO FORM common\forms\elpaysettings.scx"
		this.aTreeDefinition(12,7) = this.ShowPaneCondition("Financ", 15, NOT _screen.oGlobal.lelpay, g_Cashier = 0)
		this.aTreeDefinition(13,1) = "GDPdUExport"
		this.aTreeDefinition(13,3) = GetLangText("MENU","FIN_GDPDU",,.T.)
		this.aTreeDefinition(13,5) = _screen.oGlobal.GetNavPaneIconFileName("nav_fin_audicon.ico")
		this.aTreeDefinition(13,6) = "DO GDPdUExport IN GDPdUExport WITH ,,,.T."
		this.aTreeDefinition(13,7) = this.ShowPaneCondition("Manager", 9, NOT _SCREEN.GD, g_Cashier = 0)
		this.aTreeDefinition(14,1) = "Cashinargus"
		this.aTreeDefinition(14,3) = GetLangText("MENU","FIN_ARGUS_CASHIN",,.T.)
		this.aTreeDefinition(14,5) = _screen.oGlobal.GetNavPaneIconFileName("nav_fin_arguscashin.ico")
		this.aTreeDefinition(14,6) = "DO mgrreaders IN argusoffice"
		this.aTreeDefinition(14,7) = this.ShowPaneCondition("Financ", 14, NOT ArgusOffice("PARAM", "pa_cashctr",, .T.), g_Cashier = 0)
		this.aTreeDefinition(15,1) = "Debtors"
		this.aTreeDefinition(15,3) = GetLangText("MENU","FIN_AR",,.T.)
		this.aTreeDefinition(15,5) = _screen.oGlobal.GetNavPaneIconFileName("nav_fin_ar.ico")
		this.aTreeDefinition(15,7) = this.ShowPaneCondition("Financ", 7, g_Lite OR NOT _screen.DV, g_Cashier = 0)
		this.aTreeDefinition(16,1) = "Araccount"
		this.aTreeDefinition(16,2) = "Debtors"
		this.aTreeDefinition(16,3) = GetLangText("MENU","AR_ACCOUNTS",,.T.)
		this.aTreeDefinition(16,5) = _screen.oGlobal.GetNavPaneIconFileName("nav_fin_araccounts.ico")
		this.aTreeDefinition(16,6) = "DO arbrowse IN ar"
		this.aTreeDefinition(16,7) = this.ShowPaneCondition("Financ", 7, g_Lite OR NOT _screen.DV, g_Cashier = 0)
		this.aTreeDefinition(16,8) = "CTRL+F8"
		this.aTreeDefinition(17,1) = "Receivable"
		this.aTreeDefinition(17,2) = "Debtors"
		this.aTreeDefinition(17,3) = GetLangText("MENU","AR_REARS_BILLING",,.T.)
		this.aTreeDefinition(17,5) = _screen.oGlobal.GetNavPaneIconFileName("nav_fin_rearsbilling.ico")
		this.aTreeDefinition(17,6) = "DO arreceivables IN ar"
		this.aTreeDefinition(17,7) = this.ShowPaneCondition("Financ", 7, g_Lite OR NOT _screen.DV, g_Cashier = 0)
		this.aTreeDefinition(17,8) = "CTRL+F9"
		this.aTreeDefinition(18,1) = "CreditMain"
		this.aTreeDefinition(18,3) = GetLangText("MENU","CREDITORS_ACCOUNTS",,.T.)
		*this.aTreeDefinition(18,5) = ""
		this.aTreeDefinition(18,7) = this.ShowPaneCondition("Financ", 7, g_Lite OR NOT _screen.DV OR NOT g_lUseCreditor, g_Cashier = 0)
		this.aTreeDefinition(19,1) = "Creditors"
		this.aTreeDefinition(19,2) = "CreditMain"
		this.aTreeDefinition(19,3) = GetLangText("MENU","CREDITORS_ACCOUNTS",,.T.)
		this.aTreeDefinition(19,6) = "DO arbrowse IN ar WITH .T."
		this.aTreeDefinition(19,7) = this.ShowPaneCondition("Financ", 7, g_Lite OR NOT _screen.DV OR NOT g_lUseCreditor, g_Cashier = 0)
		*this.aTreeDefinition(19,8) = ""
		this.aTreeDefinition(20,1) = "CreditorsReceivable"
		this.aTreeDefinition(20,2) = "CreditMain"
		this.aTreeDefinition(20,3) = GetLangText("MENU","CREDITORS_REARS_BILLING",,.T.)
		this.aTreeDefinition(20,6) = "DO arreceivables IN ar WITH .T."
		this.aTreeDefinition(20,7) = this.ShowPaneCondition("Financ", 7, g_Lite OR NOT _screen.DV OR NOT g_lUseCreditor, g_Cashier = 0)
		*this.aTreeDefinition(20,8) = ""
		this.aTreeDefinition(21,1) = "Ledger"
		this.aTreeDefinition(21,3) = PADR(GetLangText("MENU","FIN_LEDGER",,.T.), 20)
		this.aTreeDefinition(21,5) = _screen.oGlobal.GetNavPaneIconFileName("nav_fin_ledger.ico")
		this.aTreeDefinition(21,6) = "DO ledger IN ledger"
		this.aTreeDefinition(21,7) = this.ShowPaneCondition("Financ", 7, g_Lite OR _screen.DV, g_Cashier = 0)
		this.aTreeDefinition(22,1) = "Voucher"
		this.aTreeDefinition(22,3) = GetLangText("MENU","FIN_VOUCHER",,.T.)
		this.aTreeDefinition(22,5) = _screen.oGlobal.GetNavPaneIconFileName("nav_fin_voucher.ico")
		this.aTreeDefinition(22,6) = "DO brwvoucher IN voucher"
		this.aTreeDefinition(22,7) = this.ShowPaneCondition("Financ",10, g_Lite OR NOT _screen.GS, g_Cashier = 0)
		this.aTreeDefinition(23,1) = "Bonus"
		this.aTreeDefinition(23,3) = GetLangText("MENU","FIN_BONUS",,.T.)
		this.aTreeDefinition(23,5) = _screen.oGlobal.GetNavPaneIconFileName("nav_fin_bonus.ico")
		this.aTreeDefinition(23,6) = "DO FORM 'forms\MngForm' WITH 'MngBmsCtrl'"
		this.aTreeDefinition(23,7) = this.ShowPaneCondition("Financ",16, g_Lite OR NOT _screen.BMS OR _screen.oGlobal.lUseMainServer AND NOT _screen.oGlobal.lBmsManagerForServer, g_Cashier = 0)
		this.aTreeDefinition(24,1) = "Billhistory"
		this.aTreeDefinition(24,3) = GetLangText("MENU","FIN_HISTORY",,.T.)
		this.aTreeDefinition(24,5) = _screen.oGlobal.GetNavPaneIconFileName("nav_fin_billhistory.ico")
		this.aTreeDefinition(24,6) = "DO billhistory IN billhist"
		this.aTreeDefinition(24,7) = this.ShowPaneCondition("Financ",8,, g_Cashier = 0)
		
		DODEFAULT()
	ENDPROC

	PROCEDURE Panes.panHelp.fillcontrols
		DIMENSION this.aTreeDefinition(8,10)
		STORE "" TO this.aTreeDefinition
		
		LOCAL llHelpFileExist
		
		llHelpFileExist = FILE("Help\Help_"+g_Language+".chm")
		
		this.aTreeDefinition(1,1) = "Content"
		this.aTreeDefinition(1,3) = GetLangText("MENU","HLP_CONTENT",,.T.)
		this.aTreeDefinition(1,5) = _screen.oGlobal.GetNavPaneIconFileName("nav_hlp_content.ico")
		this.aTreeDefinition(1,6) = "DO helpme IN help"
		this.aTreeDefinition(1,7) = this.ShowPaneCondition("", 0, NOT llHelpFileExist)
		this.aTreeDefinition(2,1) = "About"
		this.aTreeDefinition(2,3) = GetLangText("MENU","HLP_ABOUT",,.T.)
		this.aTreeDefinition(2,5) = _screen.oGlobal.GetNavPaneIconFileName(IIF(llHelpFileExist, "nav_hlp_infoabout.ico", "nav_hlp_helpabout.ico"))
		this.aTreeDefinition(2,6) = "DO about IN help"
		this.aTreeDefinition(2,7) = .T.
		this.aTreeDefinition(3,1) = "Sysinfo"
		this.aTreeDefinition(3,3) = GetLangText("MENU","HLP_SYSINFO",,.T.)
		this.aTreeDefinition(3,5) = _screen.oGlobal.GetNavPaneIconFileName("nav_hlp_sysinfo.ico")
		this.aTreeDefinition(3,6) = "DO system IN help"
		this.aTreeDefinition(3,7) = .T.
		this.aTreeDefinition(4,1) = "www"
		this.aTreeDefinition(4,3) = GetLangText("MENU","HLP_WWW",,.T.)
		this.aTreeDefinition(4,5) = _screen.oGlobal.GetNavPaneIconFileName("nav_hlp_browse.ico")
		this.aTreeDefinition(4,6) = "WINEXECUTE('HTTP://WWW.CITADEL.DE')"
		this.aTreeDefinition(4,7) = .T.
		this.aTreeDefinition(5,1) = "Release"
		this.aTreeDefinition(5,3) = GetLangText("MENU","HLP_LATEST_NEWS",,.T.)
		this.aTreeDefinition(5,5) = _screen.oGlobal.GetNavPaneIconFileName("nav_hlp_release.ico")
		this.aTreeDefinition(5,6) = "WINEXECUTE(_screen.oGlobal.cUpdateNewsURL)"
		this.aTreeDefinition(5,7) = this.ShowPaneCondition("", 0, EMPTY(_screen.oGlobal.cUpdateNewsURL))
		this.aTreeDefinition(6,1) = "Mail"
		this.aTreeDefinition(6,3) = GetLangText("MENU","HLP_MAIL_INFO",,.T.)
		this.aTreeDefinition(6,5) = _screen.oGlobal.GetNavPaneIconFileName("nav_hlp_mail.ico")
		this.aTreeDefinition(6,6) = "WINEXECUTE('MAILTO:INFO@CITADEL.DE')"
		this.aTreeDefinition(6,7) = this.ShowPaneCondition("", 0, NOT g_Demo)
		this.aTreeDefinition(7,1) = "Support"
		this.aTreeDefinition(7,3) = GetLangText("MENU","HLP_MAIL_SUPPORT",,.T.)
		this.aTreeDefinition(7,5) = _screen.oGlobal.GetNavPaneIconFileName("nav_hlp_mailsupport.ico")
		this.aTreeDefinition(7,6) = "WINEXECUTE('MAILTO:SUPPORT@CITADEL.DE')"
		this.aTreeDefinition(7,7) = this.ShowPaneCondition("", 0, g_Demo)
		this.aTreeDefinition(8,1) = "Language"
		this.aTreeDefinition(8,3) = "Language"
		this.aTreeDefinition(8,6) = "DO FORM 'forms/language'"
		this.aTreeDefinition(8,7) = this.ShowPaneCondition("", 0, NOT g_lCheckLang)
		this.aTreeDefinition(8,8) = "ALT+F10"
		
		DODEFAULT()
	ENDPROC

	PROCEDURE Panes.panMultiproper.fillcontrols
		LOCAL lnNodeNo, lcCurMenu
		LOCAL ARRAY lacChecks(1)
		
		DIMENSION this.aTreeDefinition(6,10)
		STORE "" TO this.aTreeDefinition
		
		this.aTreeDefinition(1,1) = "choosehotel"
		this.aTreeDefinition(1,3) = GetLangText("MENU","MP_CHOOSE_HOTEL",,.T.)
		this.aTreeDefinition(1,5) = "bitmap\icons\multiproper16.ico"
		this.aTreeDefinition(1,6) = "DO PROCMULTIPROPER"
		this.aTreeDefinition(1,7) = .T.
		
		this.aTreeDefinition(2,1) = "adrmainbook"
		this.aTreeDefinition(2,3) = GetLangText("MENU","TXT_MAIN_SERVER_ADDRESSES",,.T.)
		this.aTreeDefinition(2,5) = "bitmap\icons\customer.ico"
		this.aTreeDefinition(2,6) = "DO DOFORM IN DOFORM WITH 'addressmainbook','forms\srvadrmain'"
		this.aTreeDefinition(2,7) = .T.
		
		this.aTreeDefinition(3,1) = "mailing"
		this.aTreeDefinition(3,3) = GetLangText("MENU","TXT_MAIN_SERVER_MAILING",,.T.)
		this.aTreeDefinition(3,5) = "bitmap\icons\note0116.ico"
		this.aTreeDefinition(3,6) = "DO DOFORM WITH 'mailingformmp','forms\mailingform WITH .T.'"
		this.aTreeDefinition(3,7) = .T.
		
		this.aTreeDefinition(4,1) = "rsbmainbook"
		this.aTreeDefinition(4,3) = GetLangText("MENU","TXT_MP_ALL_RESERVATIONS",,.T.)
		this.aTreeDefinition(4,5) = "bitmap\icons\rsbmainbook16.ico"
		this.aTreeDefinition(4,6) = "DO DOFORM IN DOFORM WITH 'rsbmainbook','forms\srvreservat'"
		this.aTreeDefinition(4,7) = .T.
		
		this.aTreeDefinition(5,1) = "availability"
		this.aTreeDefinition(5,3) = GetLangText("MENU","VEW_AVAIL",,.T.)
		this.aTreeDefinition(5,5) = "bitmap\icons\graph05.ico"
		this.aTreeDefinition(5,6) = "DO VewMultiPropAvail IN View"
		this.aTreeDefinition(5,7) = .T.
		
		this.aTreeDefinition(6,1) = "weekform"
		this.aTreeDefinition(6,3) = GetLangText("MENU","VEW_ROOMPLAN",,.T.)
		this.aTreeDefinition(6,5) = _screen.oGlobal.GetNavPaneIconFileName("nav_vew_roomplan.ico")
		this.aTreeDefinition(6,6) = "DO PlanMultiProp IN Plan"
		this.aTreeDefinition(6,7) = .T.
		
		IF OpenFileDirect(,"lists")
			DO GetChecks IN MainMenu WITH lacChecks,,"REPORT"
			lcCurMenu = SqlCursor("SELECT li_menu FROM lists WHERE li_menu > 0 AND li_menu <> 9 AND NOT li_hide AND li_mainsrv = (1=1) GROUP BY li_menu")
			SELECT (lcCurMenu)
			SCAN FOR NOT EMPTY(lacChecks[li_menu])
				lnNodeNo = Aadd(this, "aTreeDefinition")
				this.aTreeDefinition(lnNodeNo,1) = "report"+TRANSFORM(li_menu)
				this.aTreeDefinition(lnNodeNo,3) = STRTRAN(lacChecks[li_menu], "\<")
				this.aTreeDefinition(lnNodeNo,5) = "bitmap\icons\note0116.ico"
				this.aTreeDefinition(lnNodeNo,6) = Str2Msg("DO lists WITH "+TRANSFORM(li_menu)+", '%s', .T. IN mylists", "%s", this.aTreeDefinition(lnNodeNo,3))
				this.aTreeDefinition(lnNodeNo,7) = this.ShowPaneCondition("Report", li_menu)
			ENDSCAN
			DClose(lcCurMenu)
		ENDIF
		
		lnNodeNo = Aadd(this, "aTreeDefinition")
		this.aTreeDefinition(lnNodeNo,1) = "settings"
		this.aTreeDefinition(lnNodeNo,3) = GetLangText("MENU","MGR_MAIN_SERVER_SETTINGS",,.T.)
		this.aTreeDefinition(lnNodeNo,6) = "DO DOFORM IN DOFORM WITH 'frmsrvsettings','forms/srvsettings.scx'"
		this.aTreeDefinition(lnNodeNo,7) = .T.
		
		DODEFAULT()
	ENDPROC

	PROCEDURE Panes.panOther.fillcontrols
		DIMENSION this.aTreeDefinition(19,10)
		STORE "" TO this.aTreeDefinition
		
		this.aTreeDefinition(1,1) = "Actions"
		this.aTreeDefinition(1,3) = GetLangText("MENU","OTH_ACTIVITY",,.T.)
		this.aTreeDefinition(1,5) = _screen.oGlobal.GetNavPaneIconFileName("nav_oth_actions.ico")
		this.aTreeDefinition(1,6) = "DO doform WITH 'activities','forms\activities'"
		this.aTreeDefinition(1,7) = this.ShowPaneCondition("Other", 11)
		this.aTreeDefinition(1,8) = "SHIFT+F11"
		this.aTreeDefinition(2,1) = "Documents"
		this.aTreeDefinition(2,3) = GetLangText("MENU","OTH_DOCLIST",,.T.)
		this.aTreeDefinition(2,5) = _screen.oGlobal.GetNavPaneIconFileName("nav_oth_doclist.ico")
		this.aTreeDefinition(2,6) = "DO docbrowse IN doc"
		this.aTreeDefinition(2,7) = this.ShowPaneCondition("Other", 13)
		this.aTreeDefinition(2,8) = "CTRL+F7"
		this.aTreeDefinition(3,1) = "HouseKeeping"
		this.aTreeDefinition(3,3) = GetLangText("MENU","OTH_HOUSEKEEP",,.T.)
		this.aTreeDefinition(3,5) = _screen.oGlobal.GetNavPaneIconFileName("nav_oth_housekeeping.ico")
		this.aTreeDefinition(3,6) = "DO housekeep IN house"
		this.aTreeDefinition(3,7) = this.ShowPaneCondition("Other", 1)
		this.aTreeDefinition(4,1) = "OutOfOrder"
		this.aTreeDefinition(4,3) = GetLangText("MENU","MGR_OOORDER",,.T.)
		this.aTreeDefinition(4,5) = _screen.oGlobal.GetNavPaneIconFileName("nav_oth_ooo.ico")
		this.aTreeDefinition(4,6) = "DO outoford"
		this.aTreeDefinition(4,7) = this.ShowPaneCondition("Other", 10)
		this.aTreeDefinition(5,1) = "OutOfService"
		this.aTreeDefinition(5,3) = GetLangText("MENU","MGR_OOSERVICE",,.T.)
		this.aTreeDefinition(5,5) = _screen.oGlobal.GetNavPaneIconFileName("nav_oth_oos.ico")
		this.aTreeDefinition(5,6) = "DO FORM 'forms\MngForm' WITH 'MngOOSCtrl'"
		this.aTreeDefinition(5,7) = this.ShowPaneCondition("Other", 16)
		this.aTreeDefinition(6,1) = "RoomHistory"
		this.aTreeDefinition(6,3) = GetLangText("MENU","OTH_ROOMHIST",,.T.)
		this.aTreeDefinition(6,5) = _screen.oGlobal.GetNavPaneIconFileName("nav_oth_roomhistory.ico")
		this.aTreeDefinition(6,6) = "DO roomhistory IN house"
		this.aTreeDefinition(6,7) = this.ShowPaneCondition("Other", 2)
		this.aTreeDefinition(7,1) = "Wakeup"
		this.aTreeDefinition(7,3) = GetLangText("MENU","IFC_WAKEUP",,.T.)
		this.aTreeDefinition(7,5) = _screen.oGlobal.GetNavPaneIconFileName("nav_oth_wakeup.ico")
		this.aTreeDefinition(7,6) = "DO wakeup"
		this.aTreeDefinition(7,7) = this.ShowPaneCondition("Other", 3, NOT _screen.oGlobal.oParam.pa_pttwake)
		this.aTreeDefinition(7,8) = "SHIFT+F6"
		this.aTreeDefinition(8,1) = "WuBrowse"
		this.aTreeDefinition(8,3) = GetLangText("MENU","IFC_WAKEUP",,.T.)
		this.aTreeDefinition(8,5) = _screen.oGlobal.GetNavPaneIconFileName("nav_oth_wakeup.ico")
		this.aTreeDefinition(8,6) = "DO wubrowse IN wumanagr"
		this.aTreeDefinition(8,7) = this.ShowPaneCondition("Other", 3, NOT _screen.oGlobal.oParam.pa_wakeup OR NOT _screen.IT)
		this.aTreeDefinition(8,8) = "SHIFT+F6"
		this.aTreeDefinition(9,1) = "Messages"
		this.aTreeDefinition(9,3) = GetLangText("MENU","IFC_MESSAGE",,.T.)
		this.aTreeDefinition(9,5) = _screen.oGlobal.GetNavPaneIconFileName("nav_oth_message.ico")
		this.aTreeDefinition(9,6) = "DO Doform WITH 'resbrw53','forms\resbrw with 53'"
		this.aTreeDefinition(9,7) = this.ShowPaneCondition("Other", 5, NOT (_screen.IS OR _screen.IK OR _screen.IT OR _screen.IP))
		this.aTreeDefinition(9,8) = "ALT+F6"
		this.aTreeDefinition(10,1) = "Keycardcopy"
		this.aTreeDefinition(10,3) = GetLangText("MENU","IFC_COPY",,.T.)
		this.aTreeDefinition(10,6) = "DO newkeycard"
		this.aTreeDefinition(10,5) = _screen.oGlobal.GetNavPaneIconFileName("nav_oth_keycard.ico")
		this.aTreeDefinition(10,7) = this.ShowPaneCondition("Other", 6, NOT (_screen.oCardReaderHandler.lAvailable OR _screen.oGlobal.oParam.pa_keyifc OR _screen.oGlobal.oParam.pa_ptvifc OR _screen.oGlobal.oParam.pa_pttifc) ;
			AND (_screen.IS OR _screen.IK OR _screen.IT OR _screen.IP))
		this.aTreeDefinition(10,8) = "F6"
		this.aTreeDefinition(11,1) = "LockUnlock"
		this.aTreeDefinition(11,3) = GetLangText("MENU","IFC_LOCKUNLOCK",,.T.)
		this.aTreeDefinition(11,6) = "DO lockunlock IN phone"
		this.aTreeDefinition(11,7) = this.ShowPaneCondition("Other", 7, NOT _screen.oGlobal.oParam.pa_pttcico)
		this.aTreeDefinition(12,1) = "Booth"
		this.aTreeDefinition(12,3) = GetLangText("MENU","IFC_BOOTH",,.T.)
		this.aTreeDefinition(12,6) = "DO booth"
		this.aTreeDefinition(12,7) = this.ShowPaneCondition("Other", 8, TYPE("_screen.oGlobal.oParam.pa_pttcel")<>"C" OR EMPTY(_screen.oGlobal.oParam.pa_pttcel) OR NOT _screen.IT)
		this.aTreeDefinition(12,8) = "F11"
		this.aTreeDefinition(13,1) = "Aze"
		this.aTreeDefinition(13,3) = GetLangText("MENU","OTH_AZE",,.T.)
		this.aTreeDefinition(13,5) = _screen.oGlobal.GetNavPaneIconFileName("nav_oth_aze.ico")
		this.aTreeDefinition(13,7) = this.ShowPaneCondition("Aze", 1, NOT _screen.AZE)
		this.aTreeDefinition(14,1) = "AzeEmployee"
		this.aTreeDefinition(14,2) = "Aze"
		this.aTreeDefinition(14,3) = GetLangText("MENU","AZE_EMPLOYEE",,.T.)
		this.aTreeDefinition(14,6) = "DO employees IN mgraze"
		this.aTreeDefinition(14,7) = this.ShowPaneCondition("Aze", 2, NOT _screen.AZE)
		this.aTreeDefinition(15,1) = "AzeMonthplan"
		this.aTreeDefinition(15,2) = "Aze"
		this.aTreeDefinition(15,3) = GetLangText("MENU","AZE_ASSIGNED_TIME_OVERVIEW",,.T.)
		this.aTreeDefinition(15,6) = "DO monthtimeplan IN procaze"
		this.aTreeDefinition(15,7) = this.ShowPaneCondition("Aze", 3, NOT _screen.AZE)
		this.aTreeDefinition(16,1) = "AzeWorkplan"
		this.aTreeDefinition(16,2) = "Aze"
		this.aTreeDefinition(16,3) = GetLangText("MENU","AZE_WORKING_TIME_OVERVIEW",,.T.)
		this.aTreeDefinition(16,6) = "DO workplanbrowse IN procaze"
		this.aTreeDefinition(16,7) = this.ShowPaneCondition("Aze", 4, NOT _screen.AZE)
		this.aTreeDefinition(17,1) = "AzeWorkhours"
		this.aTreeDefinition(17,2) = "Aze"
		this.aTreeDefinition(17,3) = GetLangText("MENU","AZE_WORK_BEGIN_END",,.T.)
		this.aTreeDefinition(17,6) = "DO workhourshandle IN procaze"
		this.aTreeDefinition(17,7) = this.ShowPaneCondition("Aze", 5, NOT _screen.AZE)
		this.aTreeDefinition(18,1) = "AzeWorkpause"
		this.aTreeDefinition(18,2) = "Aze"
		this.aTreeDefinition(18,3) = GetLangText("MENU","AZE_PAUSE_BEGIN_END",,.T.)
		this.aTreeDefinition(18,6) = "DO workpausehandle IN procaze"
		this.aTreeDefinition(18,7) = this.ShowPaneCondition("Aze", 6, NOT _screen.AZE)
		this.aTreeDefinition(19,1) = "Audit"
		this.aTreeDefinition(19,3) = GetLangText("MENU","OTH_AUDIT",,.T.)
		this.aTreeDefinition(19,5) = _screen.oGlobal.GetNavPaneIconFileName("nav_oth_audit.ico")
		this.aTreeDefinition(19,6) = "DO checkwin WITH 'nightaudit IN audit',.T."
		this.aTreeDefinition(19,7) = this.ShowPaneCondition("Other", 4)
		
		DODEFAULT()
	ENDPROC

	PROCEDURE Panes.panReports.fillcontrols
		DIMENSION this.aTreeDefinition(14,10)
		STORE "" TO this.aTreeDefinition
		
		this.aTreeDefinition(1,1) = "Reservations"
		this.aTreeDefinition(1,3) = GetLangText("MENU","RPT_RESERVAT",,.T.)
		this.aTreeDefinition(1,6) = Str2Msg("DO lists WITH 1, '%s' IN mylists", "%s", this.aTreeDefinition(1,3))
		this.aTreeDefinition(1,7) = this.ShowPaneCondition("Report", 1)
		this.aTreeDefinition(2,1) = "Inhouse"
		this.aTreeDefinition(2,3) = GetLangText("MENU","RPT_INHOUSE",,.T.)
		this.aTreeDefinition(2,6) = Str2Msg("DO lists WITH 2, '%s' IN mylists", "%s", this.aTreeDefinition(2,3))
		this.aTreeDefinition(2,7) = this.ShowPaneCondition("Report", 2)
		this.aTreeDefinition(3,1) = "Financials"
		this.aTreeDefinition(3,3) = GetLangText("MENU","RPT_FINANCIAL",,.T.)
		this.aTreeDefinition(3,6) = Str2Msg("DO lists WITH 3, '%s' IN mylists", "%s", this.aTreeDefinition(3,3))
		this.aTreeDefinition(3,7) = this.ShowPaneCondition("Report", 3)
		this.aTreeDefinition(4,1) = "Conference"
		this.aTreeDefinition(4,3) = GetLangText("MENU","RPT_CONFERENCE",,.T.)
		this.aTreeDefinition(4,6) = Str2Msg("DO lists WITH 4, '%s' IN mylists", "%s", this.aTreeDefinition(4,3))
		this.aTreeDefinition(4,7) = this.ShowPaneCondition("Report", 4, g_Lite)
		this.aTreeDefinition(5,1) = "Statistic"
		this.aTreeDefinition(5,3) = GetLangText("MENU","RPT_STATISTIC",,.T.)
		this.aTreeDefinition(5,6) = Str2Msg("DO lists WITH 5, '%s' IN mylists", "%s", this.aTreeDefinition(5,3))
		this.aTreeDefinition(5,7) = this.ShowPaneCondition("Report", 5)
		this.aTreeDefinition(6,1) = "Address"
		this.aTreeDefinition(6,3) = GetLangText("MENU","RPT_ADDRESS",,.T.)
		this.aTreeDefinition(6,6) = Str2Msg("DO lists WITH 6, '%s' IN mylists", "%s", this.aTreeDefinition(6,3))
		this.aTreeDefinition(6,7) = this.ShowPaneCondition("Report", 6)
		this.aTreeDefinition(7,1) = "System"
		this.aTreeDefinition(7,3) = GetLangText("MENU","RPT_SYSTEM",,.T.)
		this.aTreeDefinition(7,6) = Str2Msg("DO lists WITH 7, '%s' IN mylists", "%s", this.aTreeDefinition(7,3))
		this.aTreeDefinition(7,7) = this.ShowPaneCondition("Report", 7)
		this.aTreeDefinition(8,1) = "Letters"
		this.aTreeDefinition(8,3) = GetLangText("MENU","RPT_LETTERS",,.T.)
		this.aTreeDefinition(8,5) = "bitmap\icons\letters.ico"
		this.aTreeDefinition(8,6) = Str2Msg("DO lists WITH 8, '%s' IN mylists", "%s", this.aTreeDefinition(8,3))
		this.aTreeDefinition(8,7) = this.ShowPaneCondition("Report", 8)
		this.aTreeDefinition(8,8) = "F7"
		this.aTreeDefinition(9,1) = "Batches"
		this.aTreeDefinition(9,3) = GetLangText("MENU","RPT_BATCH",,.T.)
		this.aTreeDefinition(9,6) = "DO batches IN mylists"
		this.aTreeDefinition(9,7) = this.ShowPaneCondition("Report", 9)
		this.aTreeDefinition(10,1) = "Argus"
		this.aTreeDefinition(10,3) = GetLangText("MENU","RPT_TPOS",,.T.)
		this.aTreeDefinition(10,6) = Str2Msg("DO lists WITH 10, '%s' IN mylists", "%s", this.aTreeDefinition(10,3))
		this.aTreeDefinition(10,7) = this.ShowPaneCondition("Report", 10, NOT (TYPE("_screen.oGlobal.oParam.pa_argus")="L" AND _screen.oGlobal.oParam.pa_argus OR _screen.oGlobal.oParam.pa_postpos))
		this.aTreeDefinition(11,1) = "Report13"
		this.aTreeDefinition(11,3) = ALLTRIM(_screen.oGlobal.oParam.pa_rep13)
		this.aTreeDefinition(11,6) = Str2Msg("DO lists WITH 11, '%s' IN mylists", "%s", ALLTRIM(_screen.oGlobal.oParam.pa_rep13))
		this.aTreeDefinition(11,7) = this.ShowPaneCondition("Other", 11, EMPTY(_screen.oGlobal.oParam.pa_rep13))
		this.aTreeDefinition(12,1) = "Report14"
		this.aTreeDefinition(12,3) = ALLTRIM(_screen.oGlobal.oParam.pa_rep14)
		this.aTreeDefinition(12,6) = Str2Msg("DO lists WITH 12, '%s' IN mylists", "%s", ALLTRIM(_screen.oGlobal.oParam.pa_rep14))
		this.aTreeDefinition(12,7) = this.ShowPaneCondition("Other", 12, EMPTY(_screen.oGlobal.oParam.pa_rep14))
		this.aTreeDefinition(13,1) = "Report15"
		this.aTreeDefinition(13,3) = ALLTRIM(_screen.oGlobal.oParam.pa_rep15)
		this.aTreeDefinition(13,6) = Str2Msg("DO lists WITH 13, '%s' IN mylists", "%s", ALLTRIM(_screen.oGlobal.oParam.pa_rep15))
		this.aTreeDefinition(13,7) = this.ShowPaneCondition("Other", 13, EMPTY(_screen.oGlobal.oParam.pa_rep15))
		this.aTreeDefinition(14,1) = "BaselII"
		this.aTreeDefinition(14,3) = GetLangText("MENU","RPT_BASELII",,.T.)
		this.aTreeDefinition(14,6) = Str2Msg("DO lists WITH 17, '%s' IN mylists", "%s", this.aTreeDefinition(14,3))
		this.aTreeDefinition(14,7) = this.ShowPaneCondition("Other", 15, NOT _screen.B2)
		
		DODEFAULT()
	ENDPROC

	PROCEDURE Panes.panReservations.fillcontrols
		DIMENSION this.aTreeDefinition(8,10)
		STORE "" TO this.aTreeDefinition
		
		this.aTreeDefinition(1,1) = "Resbrw"
		this.aTreeDefinition(1,3) = GetLangText("MENU","RES_ALL",,.T.)
		this.aTreeDefinition(1,5) = _screen.oGlobal.GetNavPaneIconFileName("nav_res_browse.ico")
		this.aTreeDefinition(1,6) = "DO doform WITH 'resbrw','forms\resbrw with 1'"
		this.aTreeDefinition(1,7) = this.ShowPaneCondition("Reserva", 1)
		this.aTreeDefinition(1,8) = "SHIFT+F7"
		this.aTreeDefinition(2,1) = "Inhouse"
		this.aTreeDefinition(2,3) = GetLangText("MENU","RES_INHOUSE",,.T.)
		this.aTreeDefinition(2,5) = _screen.oGlobal.GetNavPaneIconFileName("nav_res_inhouse.ico")
		this.aTreeDefinition(2,6) = "DO Doform WITH 'resbrw54','forms\resbrw with 54'"
		this.aTreeDefinition(2,7) = this.ShowPaneCondition("Reserva", 5)
		this.aTreeDefinition(3,1) = "Roomlist"
		this.aTreeDefinition(3,3) = GetLangText("MENU","RES_ROOMLIST",,.T.)
		this.aTreeDefinition(3,5) = _screen.oGlobal.GetNavPaneIconFileName("nav_res_roomlist.ico")
		this.aTreeDefinition(3,6) = "DO rsroomlist IN reserv2"
		this.aTreeDefinition(3,7) = this.ShowPaneCondition("Reserva", 2, g_Lite)
		this.aTreeDefinition(4,1) = "Extreser"
		this.aTreeDefinition(4,3) = GetLangText("EXTRESER","TXT_EXTRESER",,.T.)
		this.aTreeDefinition(4,5) = _screen.oGlobal.GetNavPaneIconFileName("nav_res_extreser.ico")
		this.aTreeDefinition(4,6) = "DO extreser"
		this.aTreeDefinition(4,7) = this.ShowPaneCondition(,, NOT _screen.OR)
		this.aTreeDefinition(5,1) = "Quickres"
		this.aTreeDefinition(5,3) = GetLangText("MENU","RES_WALKIN",,.T.)
		this.aTreeDefinition(5,5) = _screen.oGlobal.GetNavPaneIconFileName("nav_res_walkin.ico")
		this.aTreeDefinition(5,6) = "DO walkin"
		this.aTreeDefinition(5,7) = this.ShowPaneCondition("Reserva", 3, NOT _screen.oGlobal.oParam.pa_quickrs OR g_lShips)
		this.aTreeDefinition(5,8) = "SHIFT+F8"
		this.aTreeDefinition(6,1) = "Denial"
		this.aTreeDefinition(6,3) = PADR(GetLangText("MENU","RES_DENIAL",,.T.), 20)
		this.aTreeDefinition(6,5) = _screen.oGlobal.GetNavPaneIconFileName("nav_res_denial.ico")
		this.aTreeDefinition(6,6) = "DO denial WITH SysDate(), {}, ''"
		this.aTreeDefinition(6,7) = this.ShowPaneCondition("Reserva", 6, g_Lite)
		this.aTreeDefinition(7,1) = "Allotment"
		this.aTreeDefinition(7,3) = GetLangText("MENU","MGR_ALLOTT",,.T.)
		this.aTreeDefinition(7,5) = _screen.oGlobal.GetNavPaneIconFileName("nav_res_allott.ico")
		this.aTreeDefinition(7,6) = "DO mgrallott IN mgrreser"
		this.aTreeDefinition(7,7) = this.ShowPaneCondition("Reserva", 4, g_Lite OR NOT _screen.KT)
		this.aTreeDefinition(7,8) = "SHIFT+F5"
		this.aTreeDefinition(8,1) = "AllotmentAvailab"
		this.aTreeDefinition(8,3) = GetLangText("MENU","MGR_ALLOTT_AVAIL",,.T.)
		this.aTreeDefinition(8,5) = _screen.oGlobal.GetNavPaneIconFileName("nav_res_allottavail.ico")
		this.aTreeDefinition(8,6) = "DO searchallott IN procallott"
		this.aTreeDefinition(8,7) = this.ShowPaneCondition(,,NOT g_lShips)
		this.aTreeDefinition(8,8) = "ALT+F5"
		
		DODEFAULT()
	ENDPROC

	PROCEDURE Panes.panViews.fillcontrols
		DIMENSION this.aTreeDefinition(18,10)
		STORE "" TO this.aTreeDefinition
		
		this.aTreeDefinition(1,1) = "Arrival"
		this.aTreeDefinition(1,3) = GetLangText("MENU","VEW_ARRIVAL",,.T.)
		this.aTreeDefinition(1,5) = _screen.oGlobal.GetNavPaneIconFileName("nav_vew_arrival.ico")
		this.aTreeDefinition(1,6) = "DO Doform WITH 'resbrw50','forms\resbrw with 50'"
		this.aTreeDefinition(1,7) = this.ShowPaneCondition("View", 1)
		this.aTreeDefinition(1,8) = "F3"
		this.aTreeDefinition(2,1) = "Departure"
		this.aTreeDefinition(2,3) = GetLangText("MENU","VEW_DEPARTURE",,.T.)
		this.aTreeDefinition(2,5) = _screen.oGlobal.GetNavPaneIconFileName("nav_vew_departure.ico")
		this.aTreeDefinition(2,6) = "DO Doform WITH 'resbrw51','forms\resbrw with 51'"
		this.aTreeDefinition(2,7) = this.ShowPaneCondition("View", 2)
		this.aTreeDefinition(2,8) = "SHIFT+F3"
		this.aTreeDefinition(3,1) = "Inhouse"
		this.aTreeDefinition(3,3) = GetLangText("MENU","VEW_INHOUSE",,.T.)
		this.aTreeDefinition(3,5) = _screen.oGlobal.GetNavPaneIconFileName("nav_vew_inhouse.ico")
		this.aTreeDefinition(3,6) = "DO Doform WITH 'resbrw52','forms\resbrw with 52'"
		this.aTreeDefinition(3,7) = this.ShowPaneCondition("View", 3)
		this.aTreeDefinition(3,8) = "CTRL+F3"
		this.aTreeDefinition(4,1) = "Cashier"
		this.aTreeDefinition(4,3) = GetLangText("MENU","VEW_CASHIER",,.T.)
		this.aTreeDefinition(4,5) = _screen.oGlobal.GetNavPaneIconFileName("nav_vew_cashier.ico")
		this.aTreeDefinition(4,6) = "DO vewcashier IN view"
		this.aTreeDefinition(4,7) = this.ShowPaneCondition("View", 4)
		this.aTreeDefinition(5,1) = "Ratecode"
		this.aTreeDefinition(5,3) = GetLangText("MENU","VEW_RATECODE",,.T.)
		this.aTreeDefinition(5,5) = _screen.oGlobal.GetNavPaneIconFileName("nav_vew_ratecode.ico")
		this.aTreeDefinition(5,6) = "DO vewratecode IN view"
		this.aTreeDefinition(5,7) = this.ShowPaneCondition("View", 5)
		this.aTreeDefinition(5,8) = "CTRL+F5"
		this.aTreeDefinition(6,1) = "YieldManagment"
		this.aTreeDefinition(6,3) = GetLangText("MENU","MGR_YIELD_MANAGMENT",,.T.)
		this.aTreeDefinition(6,5) = _screen.oGlobal.GetNavPaneIconFileName("nav_vew_yield.ico")
		this.aTreeDefinition(6,6) = "DO VEWRATECODE IN VIEW WITH 'RATEFIND'"
		this.aTreeDefinition(6,7) = this.ShowPaneCondition("View", 5, NOT _screen.APS)
		this.aTreeDefinition(6,8) = "ALT+F5"
		this.aTreeDefinition(7,1) = "Availability"
		this.aTreeDefinition(7,3) = GetLangText("MENU","VEW_AVAIL",,.T.)
		this.aTreeDefinition(7,5) = _screen.oGlobal.GetNavPaneIconFileName("nav_vew_avail.ico")
		this.aTreeDefinition(7,6) = "DO vewavail IN view"
		this.aTreeDefinition(7,7) = this.ShowPaneCondition("View", 6)
		this.aTreeDefinition(7,8) = "F4"
		this.aTreeDefinition(8,1) = "MaxAvail"
		this.aTreeDefinition(8,3) = GetLangText("MENU","VEW_MAXAVAIL",,.T.)
		this.aTreeDefinition(8,5) = _screen.oGlobal.GetNavPaneIconFileName("nav_vew_maxavail.ico")
		this.aTreeDefinition(8,6) = "DO vewmaxavail IN view"
		this.aTreeDefinition(8,7) = this.ShowPaneCondition("View", 7)
		this.aTreeDefinition(8,8) = "SHIFT+F4"
		this.aTreeDefinition(9,1) = "Weekform"
		this.aTreeDefinition(9,3) = GetLangText("MENU","VEW_ROOMPLAN",,.T.)
		this.aTreeDefinition(9,5) = _screen.oGlobal.GetNavPaneIconFileName("nav_vew_roomplan.ico")
		this.aTreeDefinition(9,6) = "DO plan IN plan"
		this.aTreeDefinition(9,7) = this.ShowPaneCondition("View", 9)
		this.aTreeDefinition(9,8) = "F2"
		this.aTreeDefinition(10,1) = "ConfWeekform"
		this.aTreeDefinition(10,3) = PADR(GetLangText("MENU","VEW_CONFWEEK",,.T.), 20)
		this.aTreeDefinition(10,5) = _screen.oGlobal.GetNavPaneIconFileName("nav_vew_confplan.ico")
		this.aTreeDefinition(10,6) = "DO confweek"
		this.aTreeDefinition(10,7) = this.ShowPaneCondition("View", 10, g_Lite OR NOT _screen.TG)
		this.aTreeDefinition(10,8) = "SHIFT+F2"
		this.aTreeDefinition(11,1) = "ConfDayform"
		this.aTreeDefinition(11,3) = GetLangText("MENU","VEW_CONFER",,.T.)
		this.aTreeDefinition(11,5) = _screen.oGlobal.GetNavPaneIconFileName("nav_vew_confdayplan.ico")
		this.aTreeDefinition(11,6) = "DO confplan"
		this.aTreeDefinition(11,7) = this.ShowPaneCondition("View", 11, g_Lite OR NOT _screen.TG)
		this.aTreeDefinition(11,8) = "CTRL+F2"
		this.aTreeDefinition(12,1) = "Hotstat"
		this.aTreeDefinition(12,3) = GetLangText("MENU","VEW_HOTSTAT",,.T.)
		this.aTreeDefinition(12,5) = _screen.oGlobal.GetNavPaneIconFileName("nav_vew_hotelstat.ico")
		this.aTreeDefinition(12,6) = "DO hotstat"
		this.aTreeDefinition(12,7) = this.ShowPaneCondition("View", 14, g_Lite)
		this.aTreeDefinition(12,8) = "ALT+F12"
		this.aTreeDefinition(13,1) = "Phone"
		this.aTreeDefinition(13,3) = PADR(GetLangText("MENU","VEW_PHONE",,.T.), 20)
		this.aTreeDefinition(13,5) = _screen.oGlobal.GetNavPaneIconFileName("nav_vew_phone.ico")
		this.aTreeDefinition(13,6) = "DO phonelist IN phone"
		this.aTreeDefinition(13,7) = this.ShowPaneCondition("View", 12, NOT _screen.IT)
		this.aTreeDefinition(14,1) = "Getroom"
		this.aTreeDefinition(14,3) = GetLangText("MENU","VEW_GETROOM",,.T.)
		this.aTreeDefinition(14,5) = _screen.oGlobal.GetNavPaneIconFileName("nav_vew_getroom.ico")
		this.aTreeDefinition(14,6) = "DO getroom"
		this.aTreeDefinition(14,7) = this.ShowPaneCondition("View", 15)
		this.aTreeDefinition(14,8) = "CTRL+F1"
		this.aTreeDefinition(15,1) = "RevnueStat"
		this.aTreeDefinition(15,3) = GetLangText("MENU","VEW_REV_STAT",,.T.)
		this.aTreeDefinition(15,5) = _screen.oGlobal.GetNavPaneIconFileName("nav_vew_revstat.ico")
		this.aTreeDefinition(15,6) = "DO FORM 'forms\or'"
		this.aTreeDefinition(15,7) = this.ShowPaneCondition("View", 16, NOT g_lNewConferenceActive OR NOT _screen.US)
		this.aTreeDefinition(16,1) = "Cashinargus"
		this.aTreeDefinition(16,3) = GetLangText("MENU","VEW_ARGUS_TABLERES",,.T.)
		this.aTreeDefinition(16,5) = _screen.oGlobal.GetNavPaneIconFileName("nav_vew_argustableres.ico")
		this.aTreeDefinition(16,6) = "DO mgrtablereser IN argusoffice"
		this.aTreeDefinition(16,7) = this.ShowPaneCondition("", 0, NOT _screen.TP)
		this.aTreeDefinition(16,8) = "ALT+F11"
		this.aTreeDefinition(17,1) = "TrWeekplan"
		this.aTreeDefinition(17,3) = GetLangText("MENU","VEW_ARGUS_TR_WEEKPLAN",,.T.)
		this.aTreeDefinition(17,5) = _screen.oGlobal.GetNavPaneIconFileName("nav_vew_confplan.ico")
		this.aTreeDefinition(17,6) = "DO TableResWeekPlan IN argusoffice"
		this.aTreeDefinition(17,7) = this.ShowPaneCondition("", 0, NOT _screen.TP OR NOT _screen.oGlobal.lTableReservationPlans)
		this.aTreeDefinition(18,1) = "TrDayplan"
		this.aTreeDefinition(18,3) = GetLangText("MENU","VEW_ARGUS_TR_DAYPLAN",,.T.)
		this.aTreeDefinition(18,5) = _screen.oGlobal.GetNavPaneIconFileName("nav_vew_confdayplan.ico")
		this.aTreeDefinition(18,6) = "DO TableResDayPlan IN argusoffice"
		this.aTreeDefinition(18,7) = this.ShowPaneCondition("", 0, NOT _screen.TP OR NOT _screen.oGlobal.lTableReservationPlans)
		
		DODEFAULT()
	ENDPROC

ENDDEFINE

DEFINE CLASS tnbthemedoutlooknavbarfrm AS outlooknavbarfrm OF "outlooknavbar.vcx" 
 	*< CLASSDATA: Baseclass="form" Timestamp="" Scale="Pixels" Uniqueid="" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="tmrdock" UniqueID="" Timestamp="" />

	*<DefinedPropArrayMethod>
		*m: active_assign
		*m: getshrunk
		*m: hideit
		*m: setcaptions
		*m: setshrunk
		*m: showit
		*p: active
		*p: lfirsttimedocked
		*p: notimer
	*</DefinedPropArrayMethod>

	Caption = ""
	DoCreate = .T.
	HalfHeightCaption = .T.
	MaxButton = .F.
	maxshowedbuttons = 10
	MinButton = .F.
	mnuaddtofavoritestext = (GetLangText("MENU","NAV_ADD_TO_FAVOR"))
	mnuremovefromfavoritestext = (GetLangText("MENU","NAV_REM_FROM_FAVOR"))
	Name = "tnbthemedoutlooknavbarfrm"
	Visible = .F.
	overflowpanel.MenuButton.imgPicture.Name = "imgPicture"
	overflowpanel.MenuButton.Name = "MenuButton"
	overflowpanel.Name = "overflowpanel"
	Panel.Name = "Panel"
	panelvertical.caption = (GetLangText("MENU", "TXT_NAVIG_PANE"))
	panelvertical.lblCaption.Name = "lblCaption"
	panelvertical.Name = "panelvertical"
	Panes.ErasePage = .T.
	Panes.Height = 332
	Panes.Name = "Panes"
	Panes.PageCount = 11
	Panes.Pane1.Caption = "panFavorites"
	Panes.Pane1.Name = "panFavorites"
	Panes.Pane1.Olecontrol1.Name = "Olecontrol1"
	Panes.Pane1.Olecontrol2.Name = "Olecontrol2"
	Panes.Pane1.PageOrder = 1
	Panes.Pane1.picture16 = bitmap\toolbar\favourites16.png
	Panes.Pane1.picture24 = bitmap\toolbar\favourites24.png
	Panes.Pane10.Caption = "panHelp"
	Panes.Pane10.Name = "panMultiproper"
	Panes.Pane10.Olecontrol1.Name = "Olecontrol1"
	Panes.Pane10.Olecontrol2.Name = "Olecontrol2"
	Panes.Pane10.PageOrder = 10
	Panes.Pane10.picture16 = bitmap\toolbar\multiproper16.png
	Panes.Pane10.picture24 = bitmap\toolbar\multiproper24.png
	Panes.Pane11.Caption = "panMultiproper"
	Panes.Pane11.Name = "panHelp"
	Panes.Pane11.Olecontrol1.Name = "Olecontrol1"
	Panes.Pane11.Olecontrol2.Name = "Olecontrol2"
	Panes.Pane11.PageOrder = 11
	Panes.Pane11.picture16 = bitmap\toolbar\worldhand16.png
	Panes.Pane11.picture24 = bitmap\toolbar\worldhand24.png
	Panes.Pane2.Caption = "panFile"
	Panes.Pane2.Name = "panFile"
	Panes.Pane2.Olecontrol1.Name = "Olecontrol1"
	Panes.Pane2.Olecontrol2.Name = "Olecontrol2"
	Panes.Pane2.PageOrder = 2
	Panes.Pane2.picture16 = bitmap\toolbar\admin16.png
	Panes.Pane2.picture24 = bitmap\toolbar\admin24.png
	Panes.Pane3.Caption = "panReservations"
	Panes.Pane3.Name = "panReservations"
	Panes.Pane3.Olecontrol1.Name = "Olecontrol1"
	Panes.Pane3.Olecontrol2.Name = "Olecontrol2"
	Panes.Pane3.PageOrder = 3
	Panes.Pane3.picture16 = bitmap\toolbar\scaner16.png
	Panes.Pane3.picture24 = bitmap\toolbar\scaner24.png
	Panes.Pane4.Caption = "panAddresses"
	Panes.Pane4.Name = "panAddresses"
	Panes.Pane4.Olecontrol1.Name = "Olecontrol1"
	Panes.Pane4.Olecontrol2.Name = "Olecontrol2"
	Panes.Pane4.PageOrder = 4
	Panes.Pane4.picture16 = bitmap\toolbar\contacts16.png
	Panes.Pane4.picture24 = bitmap\toolbar\contacts24.png
	Panes.Pane5.Caption = "panFinancial"
	Panes.Pane5.Name = "panFinancial"
	Panes.Pane5.Olecontrol1.Name = "Olecontrol1"
	Panes.Pane5.Olecontrol2.Name = "Olecontrol2"
	Panes.Pane5.PageOrder = 5
	Panes.Pane5.picture16 = bitmap\toolbar\notebook16.png
	Panes.Pane5.picture24 = bitmap\toolbar\notebook24.png
	Panes.Pane6.Caption = "panViews"
	Panes.Pane6.Name = "panViews"
	Panes.Pane6.Olecontrol1.Name = "Olecontrol1"
	Panes.Pane6.Olecontrol2.Name = "Olecontrol2"
	Panes.Pane6.PageOrder = 6
	Panes.Pane6.picture16 = bitmap\toolbar\monitor16.png
	Panes.Pane6.picture24 = bitmap\toolbar\monitor24.png
	Panes.Pane7.Caption = "panOther"
	Panes.Pane7.Name = "panOther"
	Panes.Pane7.Olecontrol1.Name = "Olecontrol1"
	Panes.Pane7.Olecontrol2.Name = "Olecontrol2"
	Panes.Pane7.PageOrder = 7
	Panes.Pane7.picture16 = bitmap\toolbar\tasks16.png
	Panes.Pane7.picture24 = bitmap\toolbar\tasks24.png
	Panes.Pane8.Caption = "panReports"
	Panes.Pane8.Name = "panReports"
	Panes.Pane8.Olecontrol1.Name = "Olecontrol1"
	Panes.Pane8.Olecontrol2.Name = "Olecontrol2"
	Panes.Pane8.PageOrder = 8
	Panes.Pane8.picture16 = bitmap\toolbar\views16.png
	Panes.Pane8.picture24 = bitmap\toolbar\views24.png
	Panes.Pane9.Caption = "panExtra"
	Panes.Pane9.Name = "panExtra"
	Panes.Pane9.Olecontrol1.Name = "Olecontrol1"
	Panes.Pane9.Olecontrol2.Name = "Olecontrol2"
	Panes.Pane9.PageOrder = 9
	Panes.Pane9.picture16 = bitmap\toolbar\home16.png
	Panes.Pane9.picture24 = bitmap\toolbar\home24.png
	Panes.Top = 28
	shrinkbutton.Name = "shrinkbutton"
	Splitter.IMGBACKGROUND.Name = "IMGBACKGROUND"
	Splitter.imgGripper.Name = "imgGripper"
	Splitter.Name = "Splitter"
	splittervertical.IMGBACKGROUND.Name = "IMGBACKGROUND"
	splittervertical.Name = "splittervertical"
	TITLE.IMGBACKGROUND.Name = "IMGBACKGROUND"
	TITLE.lblCaption.Name = "lblCaption"
	TITLE.Name = "TITLE"

	ADD OBJECT 'tmrdock' AS timer WITH ;
		Enabled = .F., ;
		Height = 23, ;
		Interval = 100, ;
		Left = 168, ;
		Name = "tmrdock", ;
		Top = 0, ;
		Width = 23
		*< END OBJECT: BaseClass="timer" />
	
	PROCEDURE active_assign
		LPARAMETERS tlVisible
		LOCAL loPane
		
		this.Active = tlVisible
		this.Visible = tlVisible
		
		SET MARK OF BAR 20 OF puWindow TO tlVisible
		
		MdRefresh()
		
		FOR EACH loPane IN this.Panes.Pages
			loPane.ManageShortcuts(this.Active)
		NEXT
	ENDPROC

	PROCEDURE addtofavorites
		LPARAMETERS tcMenu, tcMenuKey
		LOCAL loPane, lnItemNo, lnNodeNo
		
		DO UserFavInsert IN procuser WITH g_userid, tcMenu, tcMenuKey
		
		loPane = EVALUATE("this.Panes.pan"+tcMenu)
		lnItemNo = ASCAN(loPane.aTreeDefinition, tcMenuKey, 1, 0, 1, 8)
		WITH this.Panes.panFavorites
			IF lnItemNo > 0
				lnNodeNo = ALEN(.aTreeDefinition,1) + 1
				DIMENSION .aTreeDefinition(lnNodeNo,10)
				.aTreeDefinition(lnNodeNo,1) = tcMenu+tcMenuKey
				.aTreeDefinition(lnNodeNo,3) = loPane.aTreeDefinition(lnItemNo,3)
				.aTreeDefinition(lnNodeNo,5) = loPane.aTreeDefinition(lnItemNo,5)
				.aTreeDefinition(lnNodeNo,6) = loPane.aTreeDefinition(lnItemNo,6)
				.aTreeDefinition(lnNodeNo,7) = loPane.aTreeDefinition(lnItemNo,7)
				.aTreeDefinition(lnNodeNo,9) = tcMenu
				.aTreeDefinition(lnNodeNo,10) = tcMenuKey
			ENDIF
		
			.AddNode(tcMenu+tcMenuKey)
		ENDWITH
	ENDPROC

	PROCEDURE AfterDock
		IF this.Docked
			IF NOT this.lfirsttimedocked
				this.lfirsttimedocked = .T.
			ENDIF
		ELSE
			IF this.lfirsttimedocked AND NOT this.notimer
				this.tmrdock.nstate = 0
				this.tmrdock.Enabled = .T.
			ENDIF
		ENDIF
	ENDPROC

	PROCEDURE Destroy
		IF NOT this.NoTimer
			IF NOT this.GetShrunk()
				ProcNavpane("WidthChanged", this.Width)
			ENDIF
		ENDIF
		DODEFAULT()
	ENDPROC

	PROCEDURE getshrunk
		RETURN this.Shrinkbutton.Shrunk
	ENDPROC

	PROCEDURE hideit
		this.notimer = .T.
		this.Visible = .F.
	ENDPROC

	PROCEDURE Init
		this.SetCaptions()
		DoDefault()
		This.Height = _screen.ViewPortHeight
		FOR EACH loPane IN this.Panes.Pages
			IF NOT UPPER(loPane.Name) == "PANFAVORITES"
				loPane.FillControls()
			ENDIF
		NEXT
		this.Panes.panFavorites.FillControls()
		this.Dockable=1
	ENDPROC

	PROCEDURE isinfavorites
		LPARAMETERS tcMenu, tcMenuKey
		LOCAL l_cCurUF, l_lSuccess, l_nSelect
		l_nSelect = SELECT()
		
		l_cCurUF = sqlcursor("SELECT uf_userid FROM userfav " + ;
				"WHERE uf_userid = " + sqlcnv(PADR(g_userid,10),.T.) + ;
				" AND uf_menu = " + sqlcnv(PADR(tcMenu,20),.T.) + " AND uf_menukey = " + sqlcnv(PADR(tcMenuKey,20),.T.))
		
		IF RECCOUNT(l_cCurUF)>0
			l_lSuccess = .T.
		ENDIF
		dclose(l_cCurUF)
		
		SELECT(l_nSelect)
		
		RETURN l_lSuccess
	ENDPROC

	PROCEDURE QueryUnload
		NODEFAULT
	ENDPROC

	PROCEDURE removefromfavorites
		LPARAMETERS tcMenu, tcMenuKey
		
		DO UserFavDelete IN procuser WITH g_userid, tcMenu, tcMenuKey
		
		this.Panes.panFavorites.DelNode(tcMenu+tcMenuKey)
	ENDPROC

	PROCEDURE Resize
		* Ugly workaround, to refresh _screen color and citadel logo
		
		DODEFAULT()
		IF NOT this.NoTimer AND this.Docked
			this.tmrdock.nstate=1
			this.tmrdock.Enabled = .T.
		ENDIF
	ENDPROC

	PROCEDURE setcaptions
		this.Panes.PanFavorites.Caption = GetLangText("MENU", "MNU_FAVOURITES",,.T.)
		IF TYPE("this.Panes.PanFile.Class") = "C"
			this.Panes.PanFile.Caption = GetLangText("MENU", "MNU_FILE",,.T.)
		ENDIF
		IF TYPE("this.Panes.PanMultiproper.Class") = "C"
			this.Panes.PanMultiproper.Caption = GetLangText("MENU", "MNU_MULTIPROPER",,.T.)
		ENDIF
		this.Panes.PanReservations.Caption = GetLangText("MENU", "MNU_RESERVAT",,.T.)
		this.Panes.panAddresses.Caption = GetLangText("MENU", "MNU_ADDRESS",,.T.)
		this.Panes.PanFinancial.Caption = GetLangText("MENU", "MNU_FINANCIAL",,.T.)
		this.Panes.PanViews.Caption = GetLangText("MENU", "MNU_VIEW",,.T.)
		this.Panes.PanOther.Caption = GetLangText("MENU", "MNU_OTHER",,.T.)
		this.Panes.PanReports.Caption = GetLangText("MENU", "MNU_REPORT",,.T.)
		IF TYPE("this.Panes.PanExtra.Class") = "C"
			this.Panes.PanExtra.Caption = GetLangText("MENU", "MNU_EXTRA",,.T.)
		ENDIF
		this.Panes.PanHelp.Caption = GetLangText("MENU", "MNU_HELP",,.T.)
	ENDPROC

	PROCEDURE setshrunk
		LPARAMETERS lp_lNewShrunk
		LOCAL l_lShrunk
		l_lShrunk = this.Shrinkbutton.Shrunk
		IF l_lShrunk <> lp_lNewShrunk
			this.Shrinkbutton.Shrunk = lp_lNewShrunk
		ENDIF
		
		RETURN .T.
	ENDPROC

	PROCEDURE showit
		
		this.Visible = .T.
		this.notimer = .F.
		
		* Activate tooolbar for active form
		LOCAL l_oFormRef AS Form
		FOR EACH l_oFormRef IN _screen.Forms FOXOBJECT
			IF NOT EMPTY(l_oFormRef.Name)
				IF l_oFormRef.Name == _screen.oGlobal.oFormsHandler.cLastFormName AND ;
						IIF(TYPE("l_oFormRef.formname")="C",l_oFormRef.formname == _screen.oGlobal.oFormsHandler.cLastFormCustomName,.T.)
					l_oFormRef.Show()
					l_oFormRef.Activate()
					EXIT
				ENDIF
			ENDIF
		ENDFOR
		
	ENDPROC

	PROCEDURE viewmodechanged
		Lparameters llShrunk
		this.Refresh()
		ProcNavpane("ShrunkChanged",llShrunk)
	ENDPROC

	PROCEDURE widthchange
		LPARAMETERS lp_nWidth
		*To do: Modify this routine for the Assign method
		this.NoTimer = .T.
		this.Dock(-1)
		
		THIS.Width = lp_nWidth
		this.Dock(1)
		
		DO PTBSetCitadelPicture IN proctoolbar
		
		this.NoTimer = .F.
	ENDPROC

	PROCEDURE Panes.Init
		this.RemoveObject("PanFile")
		IF NOT _screen.oGlobal.lMultiproper
			this.RemoveObject("PanMultiproper")
		ENDIF
		IF NOT _screen.oGlobal.oParam.pa_mnuextr
			this.RemoveObject("PanExtra")
		ENDIF
	ENDPROC

	PROCEDURE Panes.panAddresses.fillcontrols
		DIMENSION this.aTreeDefinition(4,10)
		STORE "" TO this.aTreeDefinition
		
		this.aTreeDefinition(1,1) = "Address"
		this.aTreeDefinition(1,3) = GetLangText("MENU","ADD_ALL",,.T.)
		this.aTreeDefinition(1,5) = _screen.oGlobal.GetNavPaneIconFileName("nav_adr_list.ico")
		this.aTreeDefinition(1,6) = "DO brwaddress WITH 3, 20, .F., 'SADDRESS' IN address"
		this.aTreeDefinition(1,7) = this.ShowPaneCondition("Address", 1)
		this.aTreeDefinition(1,8) = "ALT+F2"
		this.aTreeDefinition(2,1) = "Mailing"
		this.aTreeDefinition(2,3) = GetLangText("WALKIN","T_MAILING",,.T.)
		this.aTreeDefinition(2,5) = _screen.oGlobal.GetNavPaneIconFileName("nav_adr_mailing.ico")
		this.aTreeDefinition(2,6) = "DO DOFORM WITH 'mailingformsi','forms\mailingform'"
		this.aTreeDefinition(2,7) = this.ShowPaneCondition("Address", 2)
		this.aTreeDefinition(3,1) = "Phonenote"
		this.aTreeDefinition(3,3) = GetLangText("DOC","TXT_PHONE_NOTE",,.T.)
		this.aTreeDefinition(3,5) = _screen.oGlobal.GetNavPaneIconFileName("nav_adr_phonenote.ico")
		this.aTreeDefinition(3,6) = "DO phonenote IN address"
		this.aTreeDefinition(3,7) = this.ShowPaneCondition("Address", 3)
		this.aTreeDefinition(3,8) = "ALT+F7"
		this.aTreeDefinition(4,1) = "Mails"
		this.aTreeDefinition(4,3) = GetLangText("MENU","ADD_EMAILS",,.T.)
		this.aTreeDefinition(4,5) = _screen.oGlobal.GetNavPaneIconFileName("nav_adr_emails.ico")
		this.aTreeDefinition(4,6) = "DO doform WITH 'frmMailBrowse','forms/emailbrowse.scx'"
		this.aTreeDefinition(4,7) = this.ShowPaneCondition("Address", 4, NOT _screen.OL)
		
		DODEFAULT()
	ENDPROC

	PROCEDURE Panes.panExtra.fillcontrols
		LOCAL lnNodeNo, l_cCurMenu, l_cFunction
		
		IF OpenFile(.F.,"Menu",.F.,.T.)
			lnNodeNo = 1
			l_cCurMenu = sqlcursor("SELECT * FROM menu ORDER BY mn_sequ")
			SELECT (l_cCurMenu)
			SCAN
				DIMENSION this.aTreeDefinition(lnNodeNo,10)
				this.aTreeDefinition(lnNodeNo,1) = "Extra"+ALLTRIM(STR(lnNodeNo))
				this.aTreeDefinition(lnNodeNo,2) = ""
				this.aTreeDefinition(lnNodeNo,3) = STRTRAN(ALLTRIM(EVALUATE(l_cCurMenu+".mn_lang"+g_Langnum)), "\<")
				this.aTreeDefinition(lnNodeNo,4) = ""
				this.aTreeDefinition(lnNodeNo,5) = ""
				
				l_cFunction = ALLTRIM(&l_cCurMenu..mn_func)
				IF ".EXE" $ UPPER(l_cFunction) AND NOT "REGISTERCOMCOMPONENT" $ UPPER(l_cFunction) AND NOT "REGISTERDOTNETCOMPONENT" $ UPPER(l_cFunction)
					l_cFunction = "Run /N4 " + l_cFunction
				ELSE
					IF EMPTY(&l_cCurMenu..mn_files) AND NOT EMPTY(_screen.oGlobal.choteldir)
						DO CASE
							CASE "()" $ l_cFunction
								l_cFunction = ALLTRIM(STRTRAN(l_cFunction, "()", ""))
							CASE "(" $ l_cFunction
								l_cFunction = STRTRAN(l_cFunction, "(", " WITH ")
								l_cFunction = STRTRAN(l_cFunction, ")", "")
						ENDCASE
						l_cFunction = "DO " + _screen.oGlobal.choteldir + l_cFunction
					ENDIF
				ENDIF
				this.aTreeDefinition(lnNodeNo,6) = l_cFunction
		
				this.aTreeDefinition(lnNodeNo,7) = this.ShowPaneCondition(IIF(BETWEEN(&l_cCurMenu..mn_sequ,1,16),"Extra",""), &l_cCurMenu..mn_sequ, ;
						EMPTY(this.aTreeDefinition(lnNodeNo,3)) OR EMPTY(&l_cCurMenu..mn_func) OR EMPTY(&l_cCurMenu..mn_sequ))
				lnNodeNo = lnNodeNo + 1
			ENDSCAN
			dclose(l_cCurMenu)
			CloseFile("Menu")
				
			DODEFAULT()
		ENDIF
	ENDPROC

	PROCEDURE Panes.panFavorites.addtofavorites
		NODEFAULT
	ENDPROC

	PROCEDURE Panes.panFavorites.fillcontrols
		LOCAL lnFavoritesCount, loPane, lnNodeNo, lnItemNo, lcMenu, lcMenuKey, l_cCurUF
		
		l_cCurUF = sqlcursor("SELECT * FROM userfav WHERE uf_userid = " + sqlcnv(PADR(g_userid,10),.T.) + ;
				" ORDER BY uf_menu, uf_menukey")
		lnFavoritesCount = RECCOUNT(l_cCurUF)
		
		lnNodeNo = IIF(_screen.oGlobal.lWebBrowserDesktop, 1, 0)
		
		IF lnFavoritesCount + lnNodeNo > 0
			DIMENSION this.aTreeDefinition(lnFavoritesCount + lnNodeNo,10)
			STORE "" TO this.aTreeDefinition
		ENDIF
		IF lnNodeNo > 0
			this.aTreeDefinition(lnNodeNo,1) = "MyDesk"
			this.aTreeDefinition(lnNodeNo,3) = GetLangText("MENU","FAV_MYDESK",,.T.)
			this.aTreeDefinition(lnNodeNo,5) = _screen.oGlobal.GetNavPaneIconFileName("nav_fav_mydesk.ico")
			this.aTreeDefinition(lnNodeNo,6) = "DO MdShow"
			this.aTreeDefinition(lnNodeNo,7) = .T.
		ENDIF
		IF RECCOUNT(l_cCurUF) > 0
			SELECT (l_cCurUF)
			SCAN
				lcMenu = ALLTRIM(uf_menu)
				lcMenuKey = ALLTRIM(uf_menukey)
				loPane = EVALUATE("this.Parent.pan"+lcMenu)
				lnItemNo = ASCAN(loPane.aTreeDefinition, ALLTRIM(uf_menukey), 1, 0, 1, 8)
				IF lnItemNo > 0
					lnNodeNo = lnNodeNo + 1
					this.aTreeDefinition(lnNodeNo,1) = lcMenu+lcMenuKey
					this.aTreeDefinition(lnNodeNo,3) = loPane.aTreeDefinition(lnItemNo,3)
					this.aTreeDefinition(lnNodeNo,5) = loPane.aTreeDefinition(lnItemNo,5)
					this.aTreeDefinition(lnNodeNo,6) = loPane.aTreeDefinition(lnItemNo,6)
					this.aTreeDefinition(lnNodeNo,7) = loPane.aTreeDefinition(lnItemNo,7)
					this.aTreeDefinition(lnNodeNo,8) = loPane.aTreeDefinition(lnItemNo,8)
					this.aTreeDefinition(lnNodeNo,9) = lcMenu
					this.aTreeDefinition(lnNodeNo,10) = lcMenuKey
				ENDIF
			ENDSCAN
			DIMENSION this.aTreeDefinition(lnNodeNo,10)
		ENDIF
		
		dclose(l_cCurUF)
		
		DODEFAULT()
	ENDPROC

	PROCEDURE Panes.panFavorites.Olecontrol1.MouseUp
		*** ActiveX Control Event ***
		LPARAMETERS button, shift, x, y
		LOCAL loPopupMenu
		PRIVATE poBar
		
		IF button = 2 AND this.Nodes.Count > 0
			poBar = this.Parent
			loPopupMenu = this.Parent.Parent.PopupMenu
			loPopupMenu.NewMenu()
			loPopupMenu.AddMenuBar(this.Parent.Parent.Parent.mnuRemoveFromFavoritesText,"poBar.RemoveFromFavorites()",,,,.F.,.F.)
			loPopupMenu.ShowMenu()
			loPopupMenu.SetMenu()
		ENDIF
	ENDPROC

	PROCEDURE Panes.panFavorites.Olecontrol1.Refresh
		*** ActiveX Control Method ***
		
	ENDPROC

	PROCEDURE Panes.panFavorites.removefromfavorites
		LOCAL lnItemNo, lcMenu, lcMenuKey
		
		lnItemNo = ASCAN(this.aTreeDefinition, this.Olecontrol1.SelectedItem.Key, 1, 0, 1, 8)
		IF lnItemNo > 0
			lcMenu = this.aTreeDefinition(lnItemNo,9)
			lcMenuKey = this.aTreeDefinition(lnItemNo,10)
			this.Parent.Parent.RemoveFromFavorites(lcMenu, lcMenuKey)
		ENDIF
	ENDPROC

	PROCEDURE Panes.panFinancial.fillcontrols
		DIMENSION this.aTreeDefinition(24,10)
		STORE "" TO this.aTreeDefinition
		
		this.aTreeDefinition(1,1) = "Roompost"
		this.aTreeDefinition(1,3) = GetLangText("MENU","FIN_POST",,.T.)
		this.aTreeDefinition(1,6) = "DO post IN roompost"
		this.aTreeDefinition(1,5) = _screen.oGlobal.GetNavPaneIconFileName("nav_fin_roompost.ico")
		this.aTreeDefinition(1,7) = this.ShowPaneCondition("Financ", 1,, g_Cashier = 0)
		this.aTreeDefinition(1,8) = "SHIFT+F12"
		this.aTreeDefinition(2,1) = "Ratecodepost"
		this.aTreeDefinition(2,3) = GetLangText("MENU","TXT_RATE_CODE_POST",,.T.)
		this.aTreeDefinition(2,5) = _screen.oGlobal.GetNavPaneIconFileName("nav_fin_ratecodepost.ico")
		this.aTreeDefinition(2,6) = "DO rates IN rates"
		this.aTreeDefinition(2,7) = this.ShowPaneCondition("Financ", 9, g_Lite, g_Cashier = 0)
		this.aTreeDefinition(2,8) = "CTRL+F12"
		this.aTreeDefinition(3,1) = "Checkout"
		this.aTreeDefinition(3,3) = GetLangText("MENU","FIN_CHECKOUT",,.T.)
		this.aTreeDefinition(3,5) = _screen.oGlobal.GetNavPaneIconFileName("nav_fin_bill.ico")
		this.aTreeDefinition(3,6) = "DO Doform WITH 'resbrw54','forms\resbrw with 54'"
		this.aTreeDefinition(3,7) = this.ShowPaneCondition("Financ", 2,, g_Cashier = 0)
		this.aTreeDefinition(3,8) = "F12"
		this.aTreeDefinition(4,1) = "Batchcheckout"
		this.aTreeDefinition(4,3) = GetLangText("MENU","FIN_BATCHCHECKOUT",,.T.)
		this.aTreeDefinition(4,5) = _screen.oGlobal.GetNavPaneIconFileName("nav_fin_batchcheckout.ico")
		this.aTreeDefinition(4,6) = IIF(g_lBillMode, "DO checkoutbatch IN procbill", "DO batchchkout IN chkout1")
		this.aTreeDefinition(4,7) = this.ShowPaneCondition("Financ", 11,, g_Cashier = 0)
		this.aTreeDefinition(5,1) = "Passerby"
		this.aTreeDefinition(5,3) = GetLangText("MENU","FIN_PASSERBY",,.T.)
		this.aTreeDefinition(5,5) = _screen.oGlobal.GetNavPaneIconFileName("nav_fin_passerby.ico")
		this.aTreeDefinition(5,6) = "DO postpasserby IN passerby"
		this.aTreeDefinition(5,7) = this.ShowPaneCondition("Financ", 3,, g_Cashier = 0)
		this.aTreeDefinition(5,8) = "F8"
		this.aTreeDefinition(6,1) = "Grouppost"
		this.aTreeDefinition(6,3) = PADR(GetLangText("MENU","FIN_GROUPPOST",,.T.), 20)
		this.aTreeDefinition(6,5) = _screen.oGlobal.GetNavPaneIconFileName("nav_fin_grouppost.ico")
		this.aTreeDefinition(6,6) = "DO FORM forms\resgroups WITH 'GROUP_POST'"
		this.aTreeDefinition(6,7) = this.ShowPaneCondition("Financ", 13,, g_Cashier = 0)
		this.aTreeDefinition(7,1) = "Closcash"
		this.aTreeDefinition(7,3) = GetLangText("MENU","FIN_CLOSE",,.T.)
		this.aTreeDefinition(7,5) = _screen.oGlobal.GetNavPaneIconFileName("nav_fin_cashierclose.ico")
		this.aTreeDefinition(7,6) = "DO closcash"
		this.aTreeDefinition(7,7) = this.ShowPaneCondition("Financ", 4,, g_Cashier = 0)
		this.aTreeDefinition(8,1) = "Changecash"
		this.aTreeDefinition(8,3) = GetLangText("MENU","FIN_EXCHANGE",,.T.)
		this.aTreeDefinition(8,5) = _screen.oGlobal.GetNavPaneIconFileName("nav_fin_exchange.ico")
		this.aTreeDefinition(8,6) = "DO changecash IN cashier"
		this.aTreeDefinition(8,7) = this.ShowPaneCondition("Financ", 5,, g_Cashier = 0)
		this.aTreeDefinition(9,1) = "Tofrombank"
		this.aTreeDefinition(9,3) = GetLangText("MENU","FIN_TOFROMBANK",,.T.)
		this.aTreeDefinition(9,5) = _screen.oGlobal.GetNavPaneIconFileName("nav_fin_tofrombank.ico")
		this.aTreeDefinition(9,6) = "DO tofrombank IN cashier"
		this.aTreeDefinition(9,7) = this.ShowPaneCondition("Financ", 6,, g_Cashier = 0)
		this.aTreeDefinition(10,1) = "Cashinout"
		this.aTreeDefinition(10,3) = GetLangText("MENU","FIN_CASHINOUT",,.T.)
		this.aTreeDefinition(10,5) = _screen.oGlobal.GetNavPaneIconFileName("nav_fin_cashinout.ico")
		this.aTreeDefinition(10,6) = "DO cashinout IN cashier"
		this.aTreeDefinition(10,7) = this.ShowPaneCondition("Financ", 12,, g_Cashier = 0)
		this.aTreeDefinition(11,1) = "fpshowcommands"
		this.aTreeDefinition(11,3) = GetLangText("MENU","FIN_FISCAL_PRINTER",,.T.)
		this.aTreeDefinition(11,5) = _screen.oGlobal.GetNavPaneIconFileName("nav_fin_fiscalprinter.ico")
		this.aTreeDefinition(11,6) = "DO FPBillPrintedShowCommands IN FPBillPrinted"
		this.aTreeDefinition(11,7) = this.ShowPaneCondition("Financ", 14, EMPTY(_screen.oGlobal.oParam.pa_fiscprt), g_Cashier = 0)
		this.aTreeDefinition(12,1) = "elpaysettings"
		this.aTreeDefinition(12,3) = "elPay Einstellungen"
		this.aTreeDefinition(12,5) = _screen.oGlobal.GetNavPaneIconFileName("nav_fin_elpay.ico")
		this.aTreeDefinition(12,6) = "DO FORM common\forms\elpaysettings.scx"
		this.aTreeDefinition(12,7) = this.ShowPaneCondition("Financ", 15, NOT _screen.oGlobal.lelpay, g_Cashier = 0)
		this.aTreeDefinition(13,1) = "GDPdUExport"
		this.aTreeDefinition(13,3) = GetLangText("MENU","FIN_GDPDU",,.T.)
		this.aTreeDefinition(13,5) = _screen.oGlobal.GetNavPaneIconFileName("nav_fin_audicon.ico")
		this.aTreeDefinition(13,6) = "DO GDPdUExport IN GDPdUExport WITH ,,,.T."
		this.aTreeDefinition(13,7) = this.ShowPaneCondition("Manager", 9, NOT _SCREEN.GD, g_Cashier = 0)
		this.aTreeDefinition(14,1) = "Cashinargus"
		this.aTreeDefinition(14,3) = GetLangText("MENU","FIN_ARGUS_CASHIN",,.T.)
		this.aTreeDefinition(14,5) = _screen.oGlobal.GetNavPaneIconFileName("nav_fin_arguscashin.ico")
		this.aTreeDefinition(14,6) = "DO mgrreaders IN argusoffice"
		this.aTreeDefinition(14,7) = this.ShowPaneCondition("Financ", 14, NOT ArgusOffice("PARAM", "pa_cashctr",, .T.), g_Cashier = 0)
		this.aTreeDefinition(15,1) = "Debtors"
		this.aTreeDefinition(15,3) = GetLangText("MENU","FIN_AR",,.T.)
		this.aTreeDefinition(15,5) = _screen.oGlobal.GetNavPaneIconFileName("nav_fin_ar.ico")
		this.aTreeDefinition(15,7) = this.ShowPaneCondition("Financ", 7, g_Lite OR NOT _screen.DV, g_Cashier = 0)
		this.aTreeDefinition(16,1) = "Araccount"
		this.aTreeDefinition(16,2) = "Debtors"
		this.aTreeDefinition(16,3) = GetLangText("MENU","AR_ACCOUNTS",,.T.)
		this.aTreeDefinition(16,5) = _screen.oGlobal.GetNavPaneIconFileName("nav_fin_araccounts.ico")
		this.aTreeDefinition(16,6) = "DO arbrowse IN ar"
		this.aTreeDefinition(16,7) = this.ShowPaneCondition("Financ", 7, g_Lite OR NOT _screen.DV, g_Cashier = 0)
		this.aTreeDefinition(16,8) = "CTRL+F8"
		this.aTreeDefinition(17,1) = "Receivable"
		this.aTreeDefinition(17,2) = "Debtors"
		this.aTreeDefinition(17,3) = GetLangText("MENU","AR_REARS_BILLING",,.T.)
		this.aTreeDefinition(17,5) = _screen.oGlobal.GetNavPaneIconFileName("nav_fin_rearsbilling.ico")
		this.aTreeDefinition(17,6) = "DO arreceivables IN ar"
		this.aTreeDefinition(17,7) = this.ShowPaneCondition("Financ", 7, g_Lite OR NOT _screen.DV, g_Cashier = 0)
		this.aTreeDefinition(17,8) = "CTRL+F9"
		this.aTreeDefinition(18,1) = "CreditMain"
		this.aTreeDefinition(18,3) = GetLangText("MENU","CREDITORS_ACCOUNTS",,.T.)
		*this.aTreeDefinition(18,5) = ""
		this.aTreeDefinition(18,7) = this.ShowPaneCondition("Financ", 7, g_Lite OR NOT _screen.DV OR NOT g_lUseCreditor, g_Cashier = 0)
		this.aTreeDefinition(19,1) = "Creditors"
		this.aTreeDefinition(19,2) = "CreditMain"
		this.aTreeDefinition(19,3) = GetLangText("MENU","CREDITORS_ACCOUNTS",,.T.)
		this.aTreeDefinition(19,6) = "DO arbrowse IN ar WITH .T."
		this.aTreeDefinition(19,7) = this.ShowPaneCondition("Financ", 7, g_Lite OR NOT _screen.DV OR NOT g_lUseCreditor, g_Cashier = 0)
		*this.aTreeDefinition(19,8) = ""
		this.aTreeDefinition(20,1) = "CreditorsReceivable"
		this.aTreeDefinition(20,2) = "CreditMain"
		this.aTreeDefinition(20,3) = GetLangText("MENU","CREDITORS_REARS_BILLING",,.T.)
		this.aTreeDefinition(20,6) = "DO arreceivables IN ar WITH .T."
		this.aTreeDefinition(20,7) = this.ShowPaneCondition("Financ", 7, g_Lite OR NOT _screen.DV OR NOT g_lUseCreditor, g_Cashier = 0)
		*this.aTreeDefinition(20,8) = ""
		this.aTreeDefinition(21,1) = "Ledger"
		this.aTreeDefinition(21,3) = PADR(GetLangText("MENU","FIN_LEDGER",,.T.), 20)
		this.aTreeDefinition(21,5) = _screen.oGlobal.GetNavPaneIconFileName("nav_fin_ledger.ico")
		this.aTreeDefinition(21,6) = "DO ledger IN ledger"
		this.aTreeDefinition(21,7) = this.ShowPaneCondition("Financ", 7, g_Lite OR _screen.DV, g_Cashier = 0)
		this.aTreeDefinition(22,1) = "Voucher"
		this.aTreeDefinition(22,3) = GetLangText("MENU","FIN_VOUCHER",,.T.)
		this.aTreeDefinition(22,5) = _screen.oGlobal.GetNavPaneIconFileName("nav_fin_voucher.ico")
		this.aTreeDefinition(22,6) = "DO brwvoucher IN voucher"
		this.aTreeDefinition(22,7) = this.ShowPaneCondition("Financ",10, g_Lite OR NOT _screen.GS, g_Cashier = 0)
		this.aTreeDefinition(23,1) = "Bonus"
		this.aTreeDefinition(23,3) = GetLangText("MENU","FIN_BONUS",,.T.)
		this.aTreeDefinition(23,5) = _screen.oGlobal.GetNavPaneIconFileName("nav_fin_bonus.ico")
		this.aTreeDefinition(23,6) = "DO FORM 'forms\MngForm' WITH 'MngBmsCtrl'"
		this.aTreeDefinition(23,7) = this.ShowPaneCondition("Financ",16, g_Lite OR NOT _screen.BMS OR _screen.oGlobal.lUseMainServer AND NOT _screen.oGlobal.lBmsManagerForServer, g_Cashier = 0)
		this.aTreeDefinition(24,1) = "Billhistory"
		this.aTreeDefinition(24,3) = GetLangText("MENU","FIN_HISTORY",,.T.)
		this.aTreeDefinition(24,5) = _screen.oGlobal.GetNavPaneIconFileName("nav_fin_billhistory.ico")
		this.aTreeDefinition(24,6) = "DO billhistory IN billhist"
		this.aTreeDefinition(24,7) = this.ShowPaneCondition("Financ",8,, g_Cashier = 0)
		
		DODEFAULT()
	ENDPROC

	PROCEDURE Panes.panHelp.fillcontrols
		DIMENSION this.aTreeDefinition(8,10)
		STORE "" TO this.aTreeDefinition
		
		LOCAL llHelpFileExist
		
		llHelpFileExist = FILE("Help\Help_"+g_Language+".chm")
		
		this.aTreeDefinition(1,1) = "Content"
		this.aTreeDefinition(1,3) = GetLangText("MENU","HLP_CONTENT",,.T.)
		this.aTreeDefinition(1,5) = _screen.oGlobal.GetNavPaneIconFileName("nav_hlp_content.ico")
		this.aTreeDefinition(1,6) = "DO helpme IN help"
		this.aTreeDefinition(1,7) = this.ShowPaneCondition("", 0, NOT llHelpFileExist)
		this.aTreeDefinition(2,1) = "About"
		this.aTreeDefinition(2,3) = GetLangText("MENU","HLP_ABOUT",,.T.)
		this.aTreeDefinition(2,5) = _screen.oGlobal.GetNavPaneIconFileName(IIF(llHelpFileExist, "nav_hlp_infoabout.ico", "nav_hlp_helpabout.ico"))
		this.aTreeDefinition(2,6) = "DO about IN help"
		this.aTreeDefinition(2,7) = .T.
		this.aTreeDefinition(3,1) = "Sysinfo"
		this.aTreeDefinition(3,3) = GetLangText("MENU","HLP_SYSINFO",,.T.)
		this.aTreeDefinition(3,5) = _screen.oGlobal.GetNavPaneIconFileName("nav_hlp_sysinfo.ico")
		this.aTreeDefinition(3,6) = "DO system IN help"
		this.aTreeDefinition(3,7) = .T.
		this.aTreeDefinition(4,1) = "www"
		this.aTreeDefinition(4,3) = GetLangText("MENU","HLP_WWW",,.T.)
		this.aTreeDefinition(4,5) = _screen.oGlobal.GetNavPaneIconFileName("nav_hlp_browse.ico")
		this.aTreeDefinition(4,6) = "WINEXECUTE('HTTP://WWW.CITADEL.DE')"
		this.aTreeDefinition(4,7) = .T.
		this.aTreeDefinition(5,1) = "Release"
		this.aTreeDefinition(5,3) = GetLangText("MENU","HLP_LATEST_NEWS",,.T.)
		this.aTreeDefinition(5,5) = _screen.oGlobal.GetNavPaneIconFileName("nav_hlp_release.ico")
		this.aTreeDefinition(5,6) = "WINEXECUTE(_screen.oGlobal.cUpdateNewsURL)"
		this.aTreeDefinition(5,7) = this.ShowPaneCondition("", 0, EMPTY(_screen.oGlobal.cUpdateNewsURL))
		this.aTreeDefinition(6,1) = "Mail"
		this.aTreeDefinition(6,3) = GetLangText("MENU","HLP_MAIL_INFO",,.T.)
		this.aTreeDefinition(6,5) = _screen.oGlobal.GetNavPaneIconFileName("nav_hlp_mail.ico")
		this.aTreeDefinition(6,6) = "WINEXECUTE('MAILTO:INFO@CITADEL.DE')"
		this.aTreeDefinition(6,7) = this.ShowPaneCondition("", 0, NOT g_Demo)
		this.aTreeDefinition(7,1) = "Support"
		this.aTreeDefinition(7,3) = GetLangText("MENU","HLP_MAIL_SUPPORT",,.T.)
		this.aTreeDefinition(7,5) = _screen.oGlobal.GetNavPaneIconFileName("nav_hlp_mailsupport.ico")
		this.aTreeDefinition(7,6) = "WINEXECUTE('MAILTO:SUPPORT@CITADEL.DE')"
		this.aTreeDefinition(7,7) = this.ShowPaneCondition("", 0, g_Demo)
		this.aTreeDefinition(8,1) = "Language"
		this.aTreeDefinition(8,3) = "Language"
		this.aTreeDefinition(8,6) = "DO FORM 'forms/language'"
		this.aTreeDefinition(8,7) = this.ShowPaneCondition("", 0, NOT g_lCheckLang)
		this.aTreeDefinition(8,8) = "ALT+F10"
		
		DODEFAULT()
	ENDPROC

	PROCEDURE Panes.panMultiproper.fillcontrols
		LOCAL lnNodeNo, lcCurMenu
		LOCAL ARRAY lacChecks(1)
		
		DIMENSION this.aTreeDefinition(6,10)
		STORE "" TO this.aTreeDefinition
		
		this.aTreeDefinition(1,1) = "choosehotel"
		this.aTreeDefinition(1,3) = GetLangText("MENU","MP_CHOOSE_HOTEL",,.T.)
		this.aTreeDefinition(1,5) = "bitmap\icons\multiproper16.ico"
		this.aTreeDefinition(1,6) = "DO PROCMULTIPROPER"
		this.aTreeDefinition(1,7) = .T.
		
		this.aTreeDefinition(2,1) = "adrmainbook"
		this.aTreeDefinition(2,3) = GetLangText("MENU","TXT_MAIN_SERVER_ADDRESSES",,.T.)
		this.aTreeDefinition(2,5) = "bitmap\icons\customer.ico"
		this.aTreeDefinition(2,6) = "DO DOFORM IN DOFORM WITH 'addressmainbook','forms\srvadrmain'"
		this.aTreeDefinition(2,7) = .T.
		
		this.aTreeDefinition(3,1) = "mailing"
		this.aTreeDefinition(3,3) = GetLangText("MENU","TXT_MAIN_SERVER_MAILING",,.T.)
		this.aTreeDefinition(3,5) = "bitmap\icons\note0116.ico"
		this.aTreeDefinition(3,6) = "DO DOFORM WITH 'mailingformmp','forms\mailingform WITH .T.'"
		this.aTreeDefinition(3,7) = .T.
		
		this.aTreeDefinition(4,1) = "rsbmainbook"
		this.aTreeDefinition(4,3) = GetLangText("MENU","TXT_MP_ALL_RESERVATIONS",,.T.)
		this.aTreeDefinition(4,5) = "bitmap\icons\rsbmainbook16.ico"
		this.aTreeDefinition(4,6) = "DO DOFORM IN DOFORM WITH 'rsbmainbook','forms\srvreservat'"
		this.aTreeDefinition(4,7) = .T.
		
		this.aTreeDefinition(5,1) = "availability"
		this.aTreeDefinition(5,3) = GetLangText("MENU","VEW_AVAIL",,.T.)
		this.aTreeDefinition(5,5) = "bitmap\icons\graph05.ico"
		this.aTreeDefinition(5,6) = "DO VewMultiPropAvail IN View"
		this.aTreeDefinition(5,7) = .T.
		
		this.aTreeDefinition(6,1) = "weekform"
		this.aTreeDefinition(6,3) = GetLangText("MENU","VEW_ROOMPLAN",,.T.)
		this.aTreeDefinition(6,5) = _screen.oGlobal.GetNavPaneIconFileName("nav_vew_roomplan.ico")
		this.aTreeDefinition(6,6) = "DO PlanMultiProp IN Plan"
		this.aTreeDefinition(6,7) = .T.
		
		IF OpenFileDirect(,"lists")
			DO GetChecks IN MainMenu WITH lacChecks,,"REPORT"
			lcCurMenu = SqlCursor("SELECT li_menu FROM lists WHERE li_menu > 0 AND li_menu <> 9 AND NOT li_hide AND li_mainsrv = (1=1) GROUP BY li_menu")
			SELECT (lcCurMenu)
			SCAN FOR NOT EMPTY(lacChecks[li_menu])
				lnNodeNo = Aadd(this, "aTreeDefinition")
				this.aTreeDefinition(lnNodeNo,1) = "report"+TRANSFORM(li_menu)
				this.aTreeDefinition(lnNodeNo,3) = STRTRAN(lacChecks[li_menu], "\<")
				this.aTreeDefinition(lnNodeNo,5) = "bitmap\icons\note0116.ico"
				this.aTreeDefinition(lnNodeNo,6) = Str2Msg("DO lists WITH "+TRANSFORM(li_menu)+", '%s', .T. IN mylists", "%s", this.aTreeDefinition(lnNodeNo,3))
				this.aTreeDefinition(lnNodeNo,7) = this.ShowPaneCondition("Report", li_menu)
			ENDSCAN
			DClose(lcCurMenu)
		ENDIF
		
		lnNodeNo = Aadd(this, "aTreeDefinition")
		this.aTreeDefinition(lnNodeNo,1) = "settings"
		this.aTreeDefinition(lnNodeNo,3) = GetLangText("MENU","MGR_MAIN_SERVER_SETTINGS",,.T.)
		this.aTreeDefinition(lnNodeNo,6) = "DO DOFORM IN DOFORM WITH 'frmsrvsettings','forms/srvsettings.scx'"
		this.aTreeDefinition(lnNodeNo,7) = .T.
		
		DODEFAULT()
	ENDPROC

	PROCEDURE Panes.panOther.fillcontrols
		DIMENSION this.aTreeDefinition(19,10)
		STORE "" TO this.aTreeDefinition
		
		this.aTreeDefinition(1,1) = "Actions"
		this.aTreeDefinition(1,3) = GetLangText("MENU","OTH_ACTIVITY",,.T.)
		this.aTreeDefinition(1,5) = _screen.oGlobal.GetNavPaneIconFileName("nav_oth_actions.ico")
		this.aTreeDefinition(1,6) = "DO doform WITH 'activities','forms\activities'"
		this.aTreeDefinition(1,7) = this.ShowPaneCondition("Other", 11)
		this.aTreeDefinition(1,8) = "SHIFT+F11"
		this.aTreeDefinition(2,1) = "Documents"
		this.aTreeDefinition(2,3) = GetLangText("MENU","OTH_DOCLIST",,.T.)
		this.aTreeDefinition(2,5) = _screen.oGlobal.GetNavPaneIconFileName("nav_oth_doclist.ico")
		this.aTreeDefinition(2,6) = "DO docbrowse IN doc"
		this.aTreeDefinition(2,7) = this.ShowPaneCondition("Other", 13)
		this.aTreeDefinition(2,8) = "CTRL+F7"
		this.aTreeDefinition(3,1) = "HouseKeeping"
		this.aTreeDefinition(3,3) = GetLangText("MENU","OTH_HOUSEKEEP",,.T.)
		this.aTreeDefinition(3,5) = _screen.oGlobal.GetNavPaneIconFileName("nav_oth_housekeeping.ico")
		this.aTreeDefinition(3,6) = "DO housekeep IN house"
		this.aTreeDefinition(3,7) = this.ShowPaneCondition("Other", 1)
		this.aTreeDefinition(4,1) = "OutOfOrder"
		this.aTreeDefinition(4,3) = GetLangText("MENU","MGR_OOORDER",,.T.)
		this.aTreeDefinition(4,5) = _screen.oGlobal.GetNavPaneIconFileName("nav_oth_ooo.ico")
		this.aTreeDefinition(4,6) = "DO outoford"
		this.aTreeDefinition(4,7) = this.ShowPaneCondition("Other", 10)
		this.aTreeDefinition(5,1) = "OutOfService"
		this.aTreeDefinition(5,3) = GetLangText("MENU","MGR_OOSERVICE",,.T.)
		this.aTreeDefinition(5,5) = _screen.oGlobal.GetNavPaneIconFileName("nav_oth_oos.ico")
		this.aTreeDefinition(5,6) = "DO FORM 'forms\MngForm' WITH 'MngOOSCtrl'"
		this.aTreeDefinition(5,7) = this.ShowPaneCondition("Other", 16)
		this.aTreeDefinition(6,1) = "RoomHistory"
		this.aTreeDefinition(6,3) = GetLangText("MENU","OTH_ROOMHIST",,.T.)
		this.aTreeDefinition(6,5) = _screen.oGlobal.GetNavPaneIconFileName("nav_oth_roomhistory.ico")
		this.aTreeDefinition(6,6) = "DO roomhistory IN house"
		this.aTreeDefinition(6,7) = this.ShowPaneCondition("Other", 2)
		this.aTreeDefinition(7,1) = "Wakeup"
		this.aTreeDefinition(7,3) = GetLangText("MENU","IFC_WAKEUP",,.T.)
		this.aTreeDefinition(7,5) = _screen.oGlobal.GetNavPaneIconFileName("nav_oth_wakeup.ico")
		this.aTreeDefinition(7,6) = "DO wakeup"
		this.aTreeDefinition(7,7) = this.ShowPaneCondition("Other", 3, NOT _screen.oGlobal.oParam.pa_pttwake)
		this.aTreeDefinition(7,8) = "SHIFT+F6"
		this.aTreeDefinition(8,1) = "WuBrowse"
		this.aTreeDefinition(8,3) = GetLangText("MENU","IFC_WAKEUP",,.T.)
		this.aTreeDefinition(8,5) = _screen.oGlobal.GetNavPaneIconFileName("nav_oth_wakeup.ico")
		this.aTreeDefinition(8,6) = "DO wubrowse IN wumanagr"
		this.aTreeDefinition(8,7) = this.ShowPaneCondition("Other", 3, NOT _screen.oGlobal.oParam.pa_wakeup OR NOT _screen.IT)
		this.aTreeDefinition(8,8) = "SHIFT+F6"
		this.aTreeDefinition(9,1) = "Messages"
		this.aTreeDefinition(9,3) = GetLangText("MENU","IFC_MESSAGE",,.T.)
		this.aTreeDefinition(9,5) = _screen.oGlobal.GetNavPaneIconFileName("nav_oth_message.ico")
		this.aTreeDefinition(9,6) = "DO Doform WITH 'resbrw53','forms\resbrw with 53'"
		this.aTreeDefinition(9,7) = this.ShowPaneCondition("Other", 5, NOT (_screen.IS OR _screen.IK OR _screen.IT OR _screen.IP))
		this.aTreeDefinition(9,8) = "ALT+F6"
		this.aTreeDefinition(10,1) = "Keycardcopy"
		this.aTreeDefinition(10,3) = GetLangText("MENU","IFC_COPY",,.T.)
		this.aTreeDefinition(10,6) = "DO newkeycard"
		this.aTreeDefinition(10,5) = _screen.oGlobal.GetNavPaneIconFileName("nav_oth_keycard.ico")
		this.aTreeDefinition(10,7) = this.ShowPaneCondition("Other", 6, NOT (_screen.oCardReaderHandler.lAvailable OR _screen.oGlobal.oParam.pa_keyifc OR _screen.oGlobal.oParam.pa_ptvifc OR _screen.oGlobal.oParam.pa_pttifc) ;
			AND (_screen.IS OR _screen.IK OR _screen.IT OR _screen.IP))
		this.aTreeDefinition(10,8) = "F6"
		this.aTreeDefinition(11,1) = "LockUnlock"
		this.aTreeDefinition(11,3) = GetLangText("MENU","IFC_LOCKUNLOCK",,.T.)
		this.aTreeDefinition(11,6) = "DO lockunlock IN phone"
		this.aTreeDefinition(11,7) = this.ShowPaneCondition("Other", 7, NOT _screen.oGlobal.oParam.pa_pttcico)
		this.aTreeDefinition(12,1) = "Booth"
		this.aTreeDefinition(12,3) = GetLangText("MENU","IFC_BOOTH",,.T.)
		this.aTreeDefinition(12,6) = "DO booth"
		this.aTreeDefinition(12,7) = this.ShowPaneCondition("Other", 8, TYPE("_screen.oGlobal.oParam.pa_pttcel")<>"C" OR EMPTY(_screen.oGlobal.oParam.pa_pttcel) OR NOT _screen.IT)
		this.aTreeDefinition(12,8) = "F11"
		this.aTreeDefinition(13,1) = "Aze"
		this.aTreeDefinition(13,3) = GetLangText("MENU","OTH_AZE",,.T.)
		this.aTreeDefinition(13,5) = _screen.oGlobal.GetNavPaneIconFileName("nav_oth_aze.ico")
		this.aTreeDefinition(13,7) = this.ShowPaneCondition("Aze", 1, NOT _screen.AZE)
		this.aTreeDefinition(14,1) = "AzeEmployee"
		this.aTreeDefinition(14,2) = "Aze"
		this.aTreeDefinition(14,3) = GetLangText("MENU","AZE_EMPLOYEE",,.T.)
		this.aTreeDefinition(14,6) = "DO employees IN mgraze"
		this.aTreeDefinition(14,7) = this.ShowPaneCondition("Aze", 2, NOT _screen.AZE)
		this.aTreeDefinition(15,1) = "AzeMonthplan"
		this.aTreeDefinition(15,2) = "Aze"
		this.aTreeDefinition(15,3) = GetLangText("MENU","AZE_ASSIGNED_TIME_OVERVIEW",,.T.)
		this.aTreeDefinition(15,6) = "DO monthtimeplan IN procaze"
		this.aTreeDefinition(15,7) = this.ShowPaneCondition("Aze", 3, NOT _screen.AZE)
		this.aTreeDefinition(16,1) = "AzeWorkplan"
		this.aTreeDefinition(16,2) = "Aze"
		this.aTreeDefinition(16,3) = GetLangText("MENU","AZE_WORKING_TIME_OVERVIEW",,.T.)
		this.aTreeDefinition(16,6) = "DO workplanbrowse IN procaze"
		this.aTreeDefinition(16,7) = this.ShowPaneCondition("Aze", 4, NOT _screen.AZE)
		this.aTreeDefinition(17,1) = "AzeWorkhours"
		this.aTreeDefinition(17,2) = "Aze"
		this.aTreeDefinition(17,3) = GetLangText("MENU","AZE_WORK_BEGIN_END",,.T.)
		this.aTreeDefinition(17,6) = "DO workhourshandle IN procaze"
		this.aTreeDefinition(17,7) = this.ShowPaneCondition("Aze", 5, NOT _screen.AZE)
		this.aTreeDefinition(18,1) = "AzeWorkpause"
		this.aTreeDefinition(18,2) = "Aze"
		this.aTreeDefinition(18,3) = GetLangText("MENU","AZE_PAUSE_BEGIN_END",,.T.)
		this.aTreeDefinition(18,6) = "DO workpausehandle IN procaze"
		this.aTreeDefinition(18,7) = this.ShowPaneCondition("Aze", 6, NOT _screen.AZE)
		this.aTreeDefinition(19,1) = "Audit"
		this.aTreeDefinition(19,3) = GetLangText("MENU","OTH_AUDIT",,.T.)
		this.aTreeDefinition(19,5) = _screen.oGlobal.GetNavPaneIconFileName("nav_oth_audit.ico")
		this.aTreeDefinition(19,6) = "DO checkwin WITH 'nightaudit IN audit',.T."
		this.aTreeDefinition(19,7) = this.ShowPaneCondition("Other", 4)
		
		DODEFAULT()
	ENDPROC

	PROCEDURE Panes.panReports.fillcontrols
		DIMENSION this.aTreeDefinition(14,10)
		STORE "" TO this.aTreeDefinition
		
		this.aTreeDefinition(1,1) = "Reservations"
		this.aTreeDefinition(1,3) = GetLangText("MENU","RPT_RESERVAT",,.T.)
		this.aTreeDefinition(1,6) = Str2Msg("DO lists WITH 1, '%s' IN mylists", "%s", this.aTreeDefinition(1,3))
		this.aTreeDefinition(1,7) = this.ShowPaneCondition("Report", 1)
		this.aTreeDefinition(2,1) = "Inhouse"
		this.aTreeDefinition(2,3) = GetLangText("MENU","RPT_INHOUSE",,.T.)
		this.aTreeDefinition(2,6) = Str2Msg("DO lists WITH 2, '%s' IN mylists", "%s", this.aTreeDefinition(2,3))
		this.aTreeDefinition(2,7) = this.ShowPaneCondition("Report", 2)
		this.aTreeDefinition(3,1) = "Financials"
		this.aTreeDefinition(3,3) = GetLangText("MENU","RPT_FINANCIAL",,.T.)
		this.aTreeDefinition(3,6) = Str2Msg("DO lists WITH 3, '%s' IN mylists", "%s", this.aTreeDefinition(3,3))
		this.aTreeDefinition(3,7) = this.ShowPaneCondition("Report", 3)
		this.aTreeDefinition(4,1) = "Conference"
		this.aTreeDefinition(4,3) = GetLangText("MENU","RPT_CONFERENCE",,.T.)
		this.aTreeDefinition(4,6) = Str2Msg("DO lists WITH 4, '%s' IN mylists", "%s", this.aTreeDefinition(4,3))
		this.aTreeDefinition(4,7) = this.ShowPaneCondition("Report", 4, g_Lite)
		this.aTreeDefinition(5,1) = "Statistic"
		this.aTreeDefinition(5,3) = GetLangText("MENU","RPT_STATISTIC",,.T.)
		this.aTreeDefinition(5,6) = Str2Msg("DO lists WITH 5, '%s' IN mylists", "%s", this.aTreeDefinition(5,3))
		this.aTreeDefinition(5,7) = this.ShowPaneCondition("Report", 5)
		this.aTreeDefinition(6,1) = "Address"
		this.aTreeDefinition(6,3) = GetLangText("MENU","RPT_ADDRESS",,.T.)
		this.aTreeDefinition(6,6) = Str2Msg("DO lists WITH 6, '%s' IN mylists", "%s", this.aTreeDefinition(6,3))
		this.aTreeDefinition(6,7) = this.ShowPaneCondition("Report", 6)
		this.aTreeDefinition(7,1) = "System"
		this.aTreeDefinition(7,3) = GetLangText("MENU","RPT_SYSTEM",,.T.)
		this.aTreeDefinition(7,6) = Str2Msg("DO lists WITH 7, '%s' IN mylists", "%s", this.aTreeDefinition(7,3))
		this.aTreeDefinition(7,7) = this.ShowPaneCondition("Report", 7)
		this.aTreeDefinition(8,1) = "Letters"
		this.aTreeDefinition(8,3) = GetLangText("MENU","RPT_LETTERS",,.T.)
		this.aTreeDefinition(8,5) = "bitmap\icons\letters.ico"
		this.aTreeDefinition(8,6) = Str2Msg("DO lists WITH 8, '%s' IN mylists", "%s", this.aTreeDefinition(8,3))
		this.aTreeDefinition(8,7) = this.ShowPaneCondition("Report", 8)
		this.aTreeDefinition(8,8) = "F7"
		this.aTreeDefinition(9,1) = "Batches"
		this.aTreeDefinition(9,3) = GetLangText("MENU","RPT_BATCH",,.T.)
		this.aTreeDefinition(9,6) = "DO batches IN mylists"
		this.aTreeDefinition(9,7) = this.ShowPaneCondition("Report", 9)
		this.aTreeDefinition(10,1) = "Argus"
		this.aTreeDefinition(10,3) = GetLangText("MENU","RPT_TPOS",,.T.)
		this.aTreeDefinition(10,6) = Str2Msg("DO lists WITH 10, '%s' IN mylists", "%s", this.aTreeDefinition(10,3))
		this.aTreeDefinition(10,7) = this.ShowPaneCondition("Report", 10, NOT (TYPE("_screen.oGlobal.oParam.pa_argus")="L" AND _screen.oGlobal.oParam.pa_argus OR _screen.oGlobal.oParam.pa_postpos))
		this.aTreeDefinition(11,1) = "Report13"
		this.aTreeDefinition(11,3) = ALLTRIM(_screen.oGlobal.oParam.pa_rep13)
		this.aTreeDefinition(11,6) = Str2Msg("DO lists WITH 11, '%s' IN mylists", "%s", ALLTRIM(_screen.oGlobal.oParam.pa_rep13))
		this.aTreeDefinition(11,7) = this.ShowPaneCondition("Other", 11, EMPTY(_screen.oGlobal.oParam.pa_rep13))
		this.aTreeDefinition(12,1) = "Report14"
		this.aTreeDefinition(12,3) = ALLTRIM(_screen.oGlobal.oParam.pa_rep14)
		this.aTreeDefinition(12,6) = Str2Msg("DO lists WITH 12, '%s' IN mylists", "%s", ALLTRIM(_screen.oGlobal.oParam.pa_rep14))
		this.aTreeDefinition(12,7) = this.ShowPaneCondition("Other", 12, EMPTY(_screen.oGlobal.oParam.pa_rep14))
		this.aTreeDefinition(13,1) = "Report15"
		this.aTreeDefinition(13,3) = ALLTRIM(_screen.oGlobal.oParam.pa_rep15)
		this.aTreeDefinition(13,6) = Str2Msg("DO lists WITH 13, '%s' IN mylists", "%s", ALLTRIM(_screen.oGlobal.oParam.pa_rep15))
		this.aTreeDefinition(13,7) = this.ShowPaneCondition("Other", 13, EMPTY(_screen.oGlobal.oParam.pa_rep15))
		this.aTreeDefinition(14,1) = "BaselII"
		this.aTreeDefinition(14,3) = GetLangText("MENU","RPT_BASELII",,.T.)
		this.aTreeDefinition(14,6) = Str2Msg("DO lists WITH 17, '%s' IN mylists", "%s", this.aTreeDefinition(14,3))
		this.aTreeDefinition(14,7) = this.ShowPaneCondition("Other", 15, NOT _screen.B2)
		
		DODEFAULT()
	ENDPROC

	PROCEDURE Panes.panReservations.fillcontrols
		DIMENSION this.aTreeDefinition(8,10)
		STORE "" TO this.aTreeDefinition
		
		this.aTreeDefinition(1,1) = "Resbrw"
		this.aTreeDefinition(1,3) = GetLangText("MENU","RES_ALL",,.T.)
		this.aTreeDefinition(1,5) = _screen.oGlobal.GetNavPaneIconFileName("nav_res_browse.ico")
		this.aTreeDefinition(1,6) = "DO doform WITH 'resbrw','forms\resbrw with 1'"
		this.aTreeDefinition(1,7) = this.ShowPaneCondition("Reserva", 1)
		this.aTreeDefinition(1,8) = "SHIFT+F7"
		this.aTreeDefinition(2,1) = "Inhouse"
		this.aTreeDefinition(2,3) = GetLangText("MENU","RES_INHOUSE",,.T.)
		this.aTreeDefinition(2,5) = _screen.oGlobal.GetNavPaneIconFileName("nav_res_inhouse.ico")
		this.aTreeDefinition(2,6) = "DO Doform WITH 'resbrw54','forms\resbrw with 54'"
		this.aTreeDefinition(2,7) = this.ShowPaneCondition("Reserva", 5)
		this.aTreeDefinition(3,1) = "Roomlist"
		this.aTreeDefinition(3,3) = GetLangText("MENU","RES_ROOMLIST",,.T.)
		this.aTreeDefinition(3,5) = _screen.oGlobal.GetNavPaneIconFileName("nav_res_roomlist.ico")
		this.aTreeDefinition(3,6) = "DO rsroomlist IN reserv2"
		this.aTreeDefinition(3,7) = this.ShowPaneCondition("Reserva", 2, g_Lite)
		this.aTreeDefinition(4,1) = "Extreser"
		this.aTreeDefinition(4,3) = GetLangText("EXTRESER","TXT_EXTRESER",,.T.)
		this.aTreeDefinition(4,5) = _screen.oGlobal.GetNavPaneIconFileName("nav_res_extreser.ico")
		this.aTreeDefinition(4,6) = "DO extreser"
		this.aTreeDefinition(4,7) = this.ShowPaneCondition(,, NOT _screen.OR)
		this.aTreeDefinition(5,1) = "Quickres"
		this.aTreeDefinition(5,3) = GetLangText("MENU","RES_WALKIN",,.T.)
		this.aTreeDefinition(5,5) = _screen.oGlobal.GetNavPaneIconFileName("nav_res_walkin.ico")
		this.aTreeDefinition(5,6) = "DO walkin"
		this.aTreeDefinition(5,7) = this.ShowPaneCondition("Reserva", 3, NOT _screen.oGlobal.oParam.pa_quickrs OR g_lShips)
		this.aTreeDefinition(5,8) = "SHIFT+F8"
		this.aTreeDefinition(6,1) = "Denial"
		this.aTreeDefinition(6,3) = PADR(GetLangText("MENU","RES_DENIAL",,.T.), 20)
		this.aTreeDefinition(6,5) = _screen.oGlobal.GetNavPaneIconFileName("nav_res_denial.ico")
		this.aTreeDefinition(6,6) = "DO denial WITH SysDate(), {}, ''"
		this.aTreeDefinition(6,7) = this.ShowPaneCondition("Reserva", 6, g_Lite)
		this.aTreeDefinition(7,1) = "Allotment"
		this.aTreeDefinition(7,3) = GetLangText("MENU","MGR_ALLOTT",,.T.)
		this.aTreeDefinition(7,5) = _screen.oGlobal.GetNavPaneIconFileName("nav_res_allott.ico")
		this.aTreeDefinition(7,6) = "DO mgrallott IN mgrreser"
		this.aTreeDefinition(7,7) = this.ShowPaneCondition("Reserva", 4, g_Lite OR NOT _screen.KT)
		this.aTreeDefinition(7,8) = "SHIFT+F5"
		this.aTreeDefinition(8,1) = "AllotmentAvailab"
		this.aTreeDefinition(8,3) = GetLangText("MENU","MGR_ALLOTT_AVAIL",,.T.)
		this.aTreeDefinition(8,5) = _screen.oGlobal.GetNavPaneIconFileName("nav_res_allottavail.ico")
		this.aTreeDefinition(8,6) = "DO searchallott IN procallott"
		this.aTreeDefinition(8,7) = this.ShowPaneCondition(,,NOT g_lShips)
		this.aTreeDefinition(8,8) = "ALT+F5"
		
		DODEFAULT()
	ENDPROC

	PROCEDURE Panes.panViews.fillcontrols
		DIMENSION this.aTreeDefinition(18,10)
		STORE "" TO this.aTreeDefinition
		
		this.aTreeDefinition(1,1) = "Arrival"
		this.aTreeDefinition(1,3) = GetLangText("MENU","VEW_ARRIVAL",,.T.)
		this.aTreeDefinition(1,5) = _screen.oGlobal.GetNavPaneIconFileName("nav_vew_arrival.ico")
		this.aTreeDefinition(1,6) = "DO Doform WITH 'resbrw50','forms\resbrw with 50'"
		this.aTreeDefinition(1,7) = this.ShowPaneCondition("View", 1)
		this.aTreeDefinition(1,8) = "F3"
		this.aTreeDefinition(2,1) = "Departure"
		this.aTreeDefinition(2,3) = GetLangText("MENU","VEW_DEPARTURE",,.T.)
		this.aTreeDefinition(2,5) = _screen.oGlobal.GetNavPaneIconFileName("nav_vew_departure.ico")
		this.aTreeDefinition(2,6) = "DO Doform WITH 'resbrw51','forms\resbrw with 51'"
		this.aTreeDefinition(2,7) = this.ShowPaneCondition("View", 2)
		this.aTreeDefinition(2,8) = "SHIFT+F3"
		this.aTreeDefinition(3,1) = "Inhouse"
		this.aTreeDefinition(3,3) = GetLangText("MENU","VEW_INHOUSE",,.T.)
		this.aTreeDefinition(3,5) = _screen.oGlobal.GetNavPaneIconFileName("nav_vew_inhouse.ico")
		this.aTreeDefinition(3,6) = "DO Doform WITH 'resbrw52','forms\resbrw with 52'"
		this.aTreeDefinition(3,7) = this.ShowPaneCondition("View", 3)
		this.aTreeDefinition(3,8) = "CTRL+F3"
		this.aTreeDefinition(4,1) = "Cashier"
		this.aTreeDefinition(4,3) = GetLangText("MENU","VEW_CASHIER",,.T.)
		this.aTreeDefinition(4,5) = _screen.oGlobal.GetNavPaneIconFileName("nav_vew_cashier.ico")
		this.aTreeDefinition(4,6) = "DO vewcashier IN view"
		this.aTreeDefinition(4,7) = this.ShowPaneCondition("View", 4)
		this.aTreeDefinition(5,1) = "Ratecode"
		this.aTreeDefinition(5,3) = GetLangText("MENU","VEW_RATECODE",,.T.)
		this.aTreeDefinition(5,5) = _screen.oGlobal.GetNavPaneIconFileName("nav_vew_ratecode.ico")
		this.aTreeDefinition(5,6) = "DO vewratecode IN view"
		this.aTreeDefinition(5,7) = this.ShowPaneCondition("View", 5)
		this.aTreeDefinition(5,8) = "CTRL+F5"
		this.aTreeDefinition(6,1) = "YieldManagment"
		this.aTreeDefinition(6,3) = GetLangText("MENU","MGR_YIELD_MANAGMENT",,.T.)
		this.aTreeDefinition(6,5) = _screen.oGlobal.GetNavPaneIconFileName("nav_vew_yield.ico")
		this.aTreeDefinition(6,6) = "DO VEWRATECODE IN VIEW WITH 'RATEFIND'"
		this.aTreeDefinition(6,7) = this.ShowPaneCondition("View", 5, NOT _screen.APS)
		this.aTreeDefinition(6,8) = "ALT+F5"
		this.aTreeDefinition(7,1) = "Availability"
		this.aTreeDefinition(7,3) = GetLangText("MENU","VEW_AVAIL",,.T.)
		this.aTreeDefinition(7,5) = _screen.oGlobal.GetNavPaneIconFileName("nav_vew_avail.ico")
		this.aTreeDefinition(7,6) = "DO vewavail IN view"
		this.aTreeDefinition(7,7) = this.ShowPaneCondition("View", 6)
		this.aTreeDefinition(7,8) = "F4"
		this.aTreeDefinition(8,1) = "MaxAvail"
		this.aTreeDefinition(8,3) = GetLangText("MENU","VEW_MAXAVAIL",,.T.)
		this.aTreeDefinition(8,5) = _screen.oGlobal.GetNavPaneIconFileName("nav_vew_maxavail.ico")
		this.aTreeDefinition(8,6) = "DO vewmaxavail IN view"
		this.aTreeDefinition(8,7) = this.ShowPaneCondition("View", 7)
		this.aTreeDefinition(8,8) = "SHIFT+F4"
		this.aTreeDefinition(9,1) = "Weekform"
		this.aTreeDefinition(9,3) = GetLangText("MENU","VEW_ROOMPLAN",,.T.)
		this.aTreeDefinition(9,5) = _screen.oGlobal.GetNavPaneIconFileName("nav_vew_roomplan.ico")
		this.aTreeDefinition(9,6) = "DO plan IN plan"
		this.aTreeDefinition(9,7) = this.ShowPaneCondition("View", 9)
		this.aTreeDefinition(9,8) = "F2"
		this.aTreeDefinition(10,1) = "ConfWeekform"
		this.aTreeDefinition(10,3) = PADR(GetLangText("MENU","VEW_CONFWEEK",,.T.), 20)
		this.aTreeDefinition(10,5) = _screen.oGlobal.GetNavPaneIconFileName("nav_vew_confplan.ico")
		this.aTreeDefinition(10,6) = "DO confweek"
		this.aTreeDefinition(10,7) = this.ShowPaneCondition("View", 10, g_Lite OR NOT _screen.TG)
		this.aTreeDefinition(10,8) = "SHIFT+F2"
		this.aTreeDefinition(11,1) = "ConfDayform"
		this.aTreeDefinition(11,3) = GetLangText("MENU","VEW_CONFER",,.T.)
		this.aTreeDefinition(11,5) = _screen.oGlobal.GetNavPaneIconFileName("nav_vew_confdayplan.ico")
		this.aTreeDefinition(11,6) = "DO confplan"
		this.aTreeDefinition(11,7) = this.ShowPaneCondition("View", 11, g_Lite OR NOT _screen.TG)
		this.aTreeDefinition(11,8) = "CTRL+F2"
		this.aTreeDefinition(12,1) = "Hotstat"
		this.aTreeDefinition(12,3) = GetLangText("MENU","VEW_HOTSTAT",,.T.)
		this.aTreeDefinition(12,5) = _screen.oGlobal.GetNavPaneIconFileName("nav_vew_hotelstat.ico")
		this.aTreeDefinition(12,6) = "DO hotstat"
		this.aTreeDefinition(12,7) = this.ShowPaneCondition("View", 14, g_Lite)
		this.aTreeDefinition(12,8) = "ALT+F12"
		this.aTreeDefinition(13,1) = "Phone"
		this.aTreeDefinition(13,3) = PADR(GetLangText("MENU","VEW_PHONE",,.T.), 20)
		this.aTreeDefinition(13,5) = _screen.oGlobal.GetNavPaneIconFileName("nav_vew_phone.ico")
		this.aTreeDefinition(13,6) = "DO phonelist IN phone"
		this.aTreeDefinition(13,7) = this.ShowPaneCondition("View", 12, NOT _screen.IT)
		this.aTreeDefinition(14,1) = "Getroom"
		this.aTreeDefinition(14,3) = GetLangText("MENU","VEW_GETROOM",,.T.)
		this.aTreeDefinition(14,5) = _screen.oGlobal.GetNavPaneIconFileName("nav_vew_getroom.ico")
		this.aTreeDefinition(14,6) = "DO getroom"
		this.aTreeDefinition(14,7) = this.ShowPaneCondition("View", 15)
		this.aTreeDefinition(14,8) = "CTRL+F1"
		this.aTreeDefinition(15,1) = "RevnueStat"
		this.aTreeDefinition(15,3) = GetLangText("MENU","VEW_REV_STAT",,.T.)
		this.aTreeDefinition(15,5) = _screen.oGlobal.GetNavPaneIconFileName("nav_vew_revstat.ico")
		this.aTreeDefinition(15,6) = "DO FORM 'forms\or'"
		this.aTreeDefinition(15,7) = this.ShowPaneCondition("View", 16, NOT g_lNewConferenceActive OR NOT _screen.US)
		this.aTreeDefinition(16,1) = "Cashinargus"
		this.aTreeDefinition(16,3) = GetLangText("MENU","VEW_ARGUS_TABLERES",,.T.)
		this.aTreeDefinition(16,5) = _screen.oGlobal.GetNavPaneIconFileName("nav_vew_argustableres.ico")
		this.aTreeDefinition(16,6) = "DO mgrtablereser IN argusoffice"
		this.aTreeDefinition(16,7) = this.ShowPaneCondition("", 0, NOT _screen.TP)
		this.aTreeDefinition(16,8) = "ALT+F11"
		this.aTreeDefinition(17,1) = "TrWeekplan"
		this.aTreeDefinition(17,3) = GetLangText("MENU","VEW_ARGUS_TR_WEEKPLAN",,.T.)
		this.aTreeDefinition(17,5) = _screen.oGlobal.GetNavPaneIconFileName("nav_vew_confplan.ico")
		this.aTreeDefinition(17,6) = "DO TableResWeekPlan IN argusoffice"
		this.aTreeDefinition(17,7) = this.ShowPaneCondition("", 0, NOT _screen.TP OR NOT _screen.oGlobal.lTableReservationPlans)
		this.aTreeDefinition(18,1) = "TrDayplan"
		this.aTreeDefinition(18,3) = GetLangText("MENU","VEW_ARGUS_TR_DAYPLAN",,.T.)
		this.aTreeDefinition(18,5) = _screen.oGlobal.GetNavPaneIconFileName("nav_vew_confdayplan.ico")
		this.aTreeDefinition(18,6) = "DO TableResDayPlan IN argusoffice"
		this.aTreeDefinition(18,7) = this.ShowPaneCondition("", 0, NOT _screen.TP OR NOT _screen.oGlobal.lTableReservationPlans)
		
		DODEFAULT()
	ENDPROC

	PROCEDURE tmrdock.Init
		this.AddProperty("nstate",0)
	ENDPROC

	PROCEDURE tmrdock.Timer
		this.Enabled = .F.
		IF this.nstate = 0
			this.Parent.Dock(1)
			this.nstate = 1
			this.Enabled = .T.
		ELSE
			this.nstate = 0
			DO PTBSetCitadelPicture IN proctoolbar
		ENDIF
		
	ENDPROC

ENDDEFINE

DEFINE CLASS wpftableres AS olecontrol 
 	*< CLASSDATA: Baseclass="olecontrol" Timestamp="" Scale="Pixels" Uniqueid="" Nombre="wpftableres" Parent="" ObjName="wpftableres" OLEObject="D:\Code\VS\WpfTableRes\WpfTableRes\bin\Debug\WpfTableRes.dll" Value="0M8R4KGxGuEAAAAAAAAAAAAAAAAAAAAAPgADAP7/CQAGAAAAAAAAAAAAAAABAAAAAQAAAAAAAAAAEAAAAgAAAAEAAAD+////AAAAAAAAAAD////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////9/////vbwBvAHQAIABFAG4AdAByAHkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWAAUA//////////8BAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKBqJk/JYs8BAwAAAAACAAAAAAAAAwBPAGwAZQBPAGIAagBlAGMAdABEAGEAdABhAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4AAgEDAAAAAgAAAP////8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAXwEAAAAAAAADAEEAYwBjAGUAcwBzAE8AYgBqAFMAaQB0AGUARABhAHQAYQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJgACAP///////////////wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAA4AAAAAAAAAAMAQwBoAGEAbgBnAGUAZABQAHIAbwBwAHMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAcAAIA////////////////AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAAAAQAAAAAAAAAAwAAAP7////+////BAAAAAUAAAAGAAAABwxfuhKNvSIH7IoGAIXZKAAEAAAD/////AQAAAAAAAAAEAQAAABxTeXN0ZW0uQ29sbGVjdGlvbnMuSGFzaHRhOAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABibGUHAAAACkxvYWRGYWN0b3IHVmVyc2lvbghDb21wYXJlchBIYXNoQ29kZVByb3ZpZGVyCEhhc2hTaXplBEtleXMGVmFsdWVzAAADAwAFBQsIHFN5c3RlbS5Db2xsZWN0aW9ucy5JQ29tcGFyZXIkU3lzdGVtLkNvbGxlY3Rpb25zLklIYXNoQ29kZVByb3ZpZGVyCOxROD8FAAAACgoHAAAACQIAAAAJAwAAABACAAAABAAAAAYEAAAABE5hbWUGBQAAAAhUYWJJbmRleAYGAAAABFNpemUGBwAAAAhMb2NhdGlvbhADAAAABAAAAAYIAAAACUhUYWJsZVJlcwYJAAAAATAGCgAAAAkxMDAwLCA2MDAGCwAAAAQwLCAwCwAAAApWYXRBY2NvdW50BgsAAAAIVGFiSW5kZXgGDAAAAA==" />

	Anchor = 15
	Height = 600
	Name = "wpftableres"
	Width = 1000

ENDDEFINE
