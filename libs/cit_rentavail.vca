*--------------------------------------------------------------------------------------------------------------------------------------------------------
* (ES) AUTOGENERADO - ¡¡ATENCIÓN!! - ¡¡NO PENSADO PARA EJECUTAR!! USAR SOLAMENTE PARA INTEGRAR CAMBIOS Y ALMACENAR CON HERRAMIENTAS SCM!!
* (EN) AUTOGENERATED - ATTENTION!! - NOT INTENDED FOR EXECUTION!! USE ONLY FOR MERGING CHANGES AND STORING WITH SCM TOOLS!!
*--------------------------------------------------------------------------------------------------------------------------------------------------------
*< FOXBIN2PRG: Version="1.19" SourceFile="cit_rentavail.vcx" /> (Solo para binarios VFP 9 / Only for VFP 9 binaries)
*
*
DEFINE CLASS cntgridcell AS cntbase OF "main.vcx" 
 	*< CLASSDATA: Baseclass="container" Timestamp="" Scale="Pixels" Uniqueid="" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="txtdef" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Line2" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtfree" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Line1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtmax" UniqueID="" Timestamp="" />

	*<DefinedPropArrayMethod>
		*m: backstyle_access
		*m: controlsource_assign
		*p: controlsource		&& Specifies the source of data to which an object is bound.
	*</DefinedPropArrayMethod>

	BackStyle = 0
	BorderWidth = 0
	controlsource = .F.		&& Specifies the source of data to which an object is bound.
	Enabled = .F.
	Height = 23
	Name = "cntgridcell"
	Width = 105

	ADD OBJECT 'Line1' AS line WITH ;
		BorderColor = 192,192,192, ;
		Height = 23, ;
		Left = 35, ;
		Name = "Line1", ;
		Top = 0, ;
		Width = 0, ;
		ZOrderSet = 3
		*< END OBJECT: BaseClass="line" />

	ADD OBJECT 'Line2' AS line WITH ;
		BorderColor = 192,192,192, ;
		Height = 23, ;
		Left = 70, ;
		Name = "Line2", ;
		Top = 0, ;
		Width = 0, ;
		ZOrderSet = 1
		*< END OBJECT: BaseClass="line" />

	ADD OBJECT 'txtdef' AS ttext WITH ;
		BorderStyle = 0, ;
		Height = 24, ;
		Left = 70, ;
		Name = "txtdef", ;
		SpecialEffect = 1, ;
		Top = 0, ;
		Visible = .T., ;
		Width = 35, ;
		ZOrderSet = 0
		*< END OBJECT: ClassLib="main.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtfree' AS ttext WITH ;
		BorderStyle = 0, ;
		Height = 24, ;
		Left = 35, ;
		Name = "txtfree", ;
		SpecialEffect = 1, ;
		Top = 0, ;
		Visible = .T., ;
		Width = 35, ;
		ZOrderSet = 2
		*< END OBJECT: ClassLib="main.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtmax' AS ttext WITH ;
		BorderStyle = 0, ;
		Height = 24, ;
		Left = 0, ;
		Name = "txtmax", ;
		SpecialEffect = 1, ;
		Top = 0, ;
		Visible = .T., ;
		Width = 35, ;
		ZOrderSet = 4
		*< END OBJECT: ClassLib="main.vcx" BaseClass="textbox" />
	
	PROCEDURE backstyle_access
		IF NOT USED("tblAvailab")
			RETURN THIS.BackStyle
		ENDIF
		LOCAL l_nColOrder, l_cIndex
		l_nColOrder = this.Parent.ColumnOrder
		IF ALLTRIM(tblAvailab.cBuildId)=="0" && Header 2
			this.txtmax.Alignment = 2
			this.txtfree.Alignment = 2
			this.txtdef.Alignment = 2
			this.txtmax.BackStyle = 0
			this.txtfree.BackStyle = 0
			this.txtdef.BackStyle = 0
			this.BackStyle = 1
			IF l_nColOrder = 1
				this.line1.Visible = .F.
				this.line2.Visible = .F.
				this.txtmax.Width = this.Parent.Width
				this.txtmax.Value = this.Parent.Parent.cBuildingDescipt
			ELSE
				this.line1.Visible = .T.
				this.line2.Visible = .T.
				this.txtmax.Width = 35
				this.txtmax.FontName = "Symbol"
				this.txtmax.Value = this.Parent.Parent.cSumDescript
				this.txtfree.Value = this.Parent.Parent.cFreeDescript
				this.txtdef.Value = this.Parent.Parent.cDefDescript
			ENDIF
			RETURN THIS.BackStyle
		ELSE
			IF ALLTRIM(tblAvailab.cBuildId)=="1" && Total:
				this.txtmax.FontBold = .T.
				this.txtfree.FontBold = .T.
				this.txtdef.FontBold = .T.
			ELSE
				this.txtmax.FontBold = .F.
				this.txtfree.FontBold = .F.
				this.txtdef.FontBold = .F.
			ENDIF
			this.txtmax.Alignment = 3
			this.txtfree.Alignment = 3
			this.txtdef.Alignment = 3
			this.txtmax.BackStyle = 1
			this.txtfree.BackStyle = 1
			this.txtdef.BackStyle = 1
			this.BackStyle = 0
		ENDIF
		IF this.txtmax.FontName <> "Arial"
			this.txtmax.FontName = "Arial"
		ENDIF
		IF l_nColOrder = 1
			this.line1.Visible = .F.
			this.line2.Visible = .F.
			this.txtmax.Width = this.Parent.Width
			this.txtmax.Value = tblAvailab.cBuilding
		ELSE
			this.line1.Visible = .T.
			this.line2.Visible = .T.
			this.txtmax.Width = 35
			l_cIndex = PADL(l_nColOrder-1, 2, "0")
			this.txtmax.Value = EVALUATE("tblAvailab.max" + l_cIndex)
			this.txtfree.Value = EVALUATE("tblAvailab.free" + l_cIndex)
			this.txtdef.Value = EVALUATE("tblAvailab.def" + l_cIndex)
			IF l_nColOrder/2 = INT(l_nColOrder/2)
				* Even columns, change background for column, to recognize day change in grid
				this.txtmax.BackColor = RGB(242,242,242)
				this.txtfree.BackColor = RGB(255,200,200)
				this.txtdef.BackColor = RGB(242,242,242)
			ELSE
				this.txtmax.BackColor = RGB(255,255,255)
				this.txtfree.BackColor = RGB(255,240,240)
				this.txtdef.BackColor = RGB(255,255,255)
			ENDIF
		ENDIF
			
		RETURN THIS.BackStyle
	ENDPROC

	PROCEDURE controlsource_assign
		LPARAMETERS vNewVal
		*To do: Modify this routine for the Assign method
		THIS.ControlSource = m.vNewVal
		*this.txtmax.ControlSource = vNewVal
	ENDPROC

ENDDEFINE

DEFINE CLASS grdrentavail AS grdbase OF "main.vcx" 
 	*< CLASSDATA: Baseclass="grid" Timestamp="" Scale="Pixels" Uniqueid="" />

	*<DefinedPropArrayMethod>
		*p: allowwidthsync
		*p: cbuildingdescipt
		*p: cdefdescript
		*p: cfreedescript
		*p: csumdescript
		*p: ogrdheaders		&& Refrence to grid where are showed day columns
	*</DefinedPropArrayMethod>

	AllowCellSelection = .F.
	AllowHeaderSizing = .F.
	cbuildingdescipt = 
	cdefdescript = 
	cfreedescript = 
	csumdescript = 
	HighlightRow = .T.
	HighlightStyle = 0
	MemberClass = "GRDRAVColumn"
	MemberClassLibrary = ..\commonclasses.prg
	Name = "grdrentavail"
	ogrdheaders = .NULL.		&& Refrence to grid where are showed day columns
	p_basecolumncontrol = 
	
	PROCEDURE Init
		this.cBuildingDescipt = GetLangText("ALLOTT", "TXT_RENT_OBJECT")
		this.cSumDescript = "S" && Sum used with symbol font
		this.cFreeDescript = GetLangText("RENT", "TXT_FREE")
		this.cDefDescript = GetLangText("RENT", "TXT_DEF")
		DODEFAULT()
	ENDPROC

ENDDEFINE
