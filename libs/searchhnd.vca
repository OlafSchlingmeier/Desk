*--------------------------------------------------------------------------------------------------------------------------------------------------------
* (ES) AUTOGENERADO - ¡¡ATENCIÓN!! - ¡¡NO PENSADO PARA EJECUTAR!! USAR SOLAMENTE PARA INTEGRAR CAMBIOS Y ALMACENAR CON HERRAMIENTAS SCM!!
* (EN) AUTOGENERATED - ATTENTION!! - NOT INTENDED FOR EXECUTION!! USE ONLY FOR MERGING CHANGES AND STORING WITH SCM TOOLS!!
*--------------------------------------------------------------------------------------------------------------------------------------------------------
*< FOXBIN2PRG: Version="1.19" SourceFile="searchhnd.vcx" /> (Solo para binarios VFP 9 / Only for VFP 9 binaries)
*
*
DEFINE CLASS searchhnd AS custom 
 	*< CLASSDATA: Baseclass="custom" Timestamp="" Scale="Pixels" Uniqueid="" />

	*<DefinedPropArrayMethod>
		*m: addelement
		*m: clearresult
		*m: delelement
		*m: find
		*m: findnext
		*m: findprevious
		*m: getalias
		*m: getpos
		*p: calias		&& Searched alias.
		*p: ccondition		&& Searching condition.
		*p: corder
		*p: ncurrpos		&& Current position on vector.
		*p: nresultcount
		*a: aresultrns[1,0]
	*</DefinedPropArrayMethod>

	PROTECTED aresultrns,calias,ccondition,corder,ncurrpos,nresultcount
	calias = 		&& Searched alias.
	ccondition = 		&& Searching condition.
	corder = 
	Name = "searchhnd"
	ncurrpos = 0		&& Current position on vector.
	nresultcount = 0
	
	PROTECTED PROCEDURE addelement
		LPARAMETERS lp_nDataItem
		LOCAL l_nItemPos
		
		l_nItemPos = this.GetPos(lp_nDataItem)
		
		IF 0 = l_nItemPos
			this.nResultCount = this.nResultCount + 1
			DIMENSION this.aResultRNs(this.nResultCount)
			this.nCurrPos = this.nCurrPos + 1
			AINS(this.aResultRNs, this.nCurrPos)
			this.aResultRNs(this.nCurrPos) = lp_nDataItem
		ENDIF
	ENDPROC

	PROCEDURE clearresult
		DIMENSION this.aResultRNs(1)
		this.aResultRNs(1) = .F.
		this.nResultCount = 0
		this.nCurrPos = 0
	ENDPROC

	PROTECTED PROCEDURE delelement
		LPARAMETERS lp_nDataItem
		LOCAL l_nItemPos
		
		l_nItemPos = this.GetPos(lp_nDataItem)
		
		IF l_nItemPos > 0
			ADEL(this.aResultRNs, l_nItemPos)
			this.nResultCount = this.nResultCount - 1
			DIMENSION this.aResultRNs(this.nResultCount)
			IF this.nCurrPos >= MAX(2,l_nItemPos)
				this.nCurrPos = this.nCurrPos - 1
			ENDIF
		ENDIF
	ENDPROC

	PROCEDURE find
		LPARAMETERS lp_cAlias, lp_cCondition, lp_cOrder, lp_lRest
		LOCAL l_nArea, l_lFound, l_nRecno, l_cOrder, l_cOrderSearch
		
		l_nArea = SELECT()
		this.cAlias = lp_cAlias
		this.cCondition = lp_cCondition
		IF EMPTY(lp_cOrder)
			this.cOrder = ORDER(this.cAlias)
		ELSE
			this.cOrder = lp_cOrder
		ENDIF
		
		this.ClearResult()
		
		SELECT (this.cAlias)
		l_cOrder = ORDER()
		IF LOWER(l_cOrder) <> LOWER(this.cOrder)
			l_cOrderSearch = this.cOrder
			SET ORDER TO &l_cOrderSearch
		ENDIF
		l_nRecno = RECNO()
		IF lp_lRest
			LOCATE FOR &lp_cCondition REST
		ELSE
			LOCATE FOR &lp_cCondition
		ENDIF
		l_lFound = FOUND()
		
		IF l_lFound
			this.AddElement(RECNO())
		ELSE
			GO l_nRecno
		ENDIF
		
		SET ORDER TO &l_cOrder
		SELECT (l_nArea)
		
		RETURN IIF(l_lFound, 1, -1)
	ENDPROC

	PROCEDURE findnext
		LOCAL l_nArea, l_cOrderSearch, l_cOrder, l_nDataItem, l_nItemPos, l_nRecno
		
		IF this.nCurrPos = 0
			RETURN 0
		ENDIF
		
		l_nArea = SELECT()
		
		SELECT (this.cAlias)
		l_cOrder = ORDER()
		IF LOWER(l_cOrder) <> LOWER(this.cOrder)
			l_cOrderSearch = this.cOrder
			SET ORDER TO &l_cOrderSearch
		ENDIF
		l_nRecno = RECNO()
		CONTINUE
		l_lFound = FOUND()
		
		IF l_lFound
			l_nDataItem = RECNO()
			IF this.nCurrPos = this.nResultCount
				this.AddElement(l_nDataItem)
			ELSE
				l_nItemPos = this.GetPos(l_nDataItem)
				IF l_nItemPos = 0
					this.AddElement(l_nDataItem)
				ELSE
					FOR i = l_nItemPos-1 TO this.nCurrPos+1 STEP -1
						this.DelElement(this.aResultRNs(i))
					NEXT
					this.nCurrPos = this.nCurrPos + 1
				ENDIF
			ENDIF
		ELSE
			FOR i = this.nResultCount TO this.nCurrPos + 1 STEP -1
				this.DelElement(this.aResultRNs(i))
			NEXT
			GO l_nRecno
		ENDIF
		
		SET ORDER TO &l_cOrder
		SELECT (l_nArea)
		
		RETURN IIF(l_lFound, 1, -1)
	ENDPROC

	PROCEDURE findprevious
		LOCAL l_nArea, l_cOrderSearch, l_cOrder, l_nRecno
		
		IF this.nCurrPos = 0
			RETURN 0
		ENDIF
		
		IF this.nCurrPos = 1
			RETURN -1
		ENDIF
		
		this.nCurrPos = this.nCurrPos - 1
		
		l_nArea = SELECT()
		
		SELECT (this.cAlias)
		l_cOrder = ORDER()
		IF LOWER(l_cOrder) <> LOWER(this.cOrder)
			l_cOrderSearch = this.cOrder
			SET ORDER TO &l_cOrderSearch
		ENDIF
		l_nRecno = RECNO()
		GO this.aResultRNs(this.nCurrPos)
		SKIP -1
		CONTINUE
		l_lFound = FOUND() AND (this.aResultRNs(this.nCurrPos) = RECNO())
		
		IF NOT l_lFound
			this.DelElement(this.aResultRNs(this.nCurrPos))
			l_lFound = (1 = this.FindPrevious())
		ENDIF
		
		IF NOT l_lFound
			GO l_nRecno
		ENDIF
		
		SET ORDER TO &l_cOrder
		SELECT (l_nArea)
		
		RETURN IIF(l_lFound, 1, -1)
	ENDPROC

	PROCEDURE getalias
		RETURN this.cAlias
	ENDPROC

	PROTECTED PROCEDURE getpos
		LPARAMETERS lp_nDataItem
		
		RETURN ASCAN(this.aResultRNs, lp_nDataItem, 1, 0, 0, 14)
	ENDPROC

ENDDEFINE
