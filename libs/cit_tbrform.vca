*--------------------------------------------------------------------------------------------------------------------------------------------------------
* (ES) AUTOGENERADO - ¡¡ATENCIÓN!! - ¡¡NO PENSADO PARA EJECUTAR!! USAR SOLAMENTE PARA INTEGRAR CAMBIOS Y ALMACENAR CON HERRAMIENTAS SCM!!
* (EN) AUTOGENERATED - ATTENTION!! - NOT INTENDED FOR EXECUTION!! USE ONLY FOR MERGING CHANGES AND STORING WITH SCM TOOLS!!
*--------------------------------------------------------------------------------------------------------------------------------------------------------
*< FOXBIN2PRG: Version="1.19" SourceFile="cit_tbrform.vcx" /> (Solo para binarios VFP 9 / Only for VFP 9 binaries)
*
*
DEFINE CLASS cprocesshnd AS pprocesshnd OF "..\common\libs\processhandler.vcx" 
 	*< CLASSDATA: Baseclass="collection" Timestamp="" Scale="Pixels" Uniqueid="" />

	#INCLUDE "..\include\constdefines.h"
	Name = "cprocesshnd"
	
	PROCEDURE Init
		DODEFAULT()
		
		this.AddProcess(P_COLUMNS,		[GetText("COMMON","TT_GRIDCOLUMS")],					"Ctrl+SPACEBAR",	,				[OnColumn()])
		this.AddProcess(P_SMALL,		[GetText("COMMON","TT_SMALL")],							,					,				[LogMenu("QUICK TOOLBAR|SMALL ICONS", "ProcToolbar(.T., .T.)", .T.)], .T.)
		this.AddProcess(P_LARGE,		[GetText("COMMON","TT_LARGE")],							,					,				[LogMenu("QUICK TOOLBAR|LARGE ICONS", "ProcToolbar(.T., .F.)", .T.)], .T.)
		this.AddProcess(P_ROOMPLAN,		[GetText("ROOMPLAN","T_ROOMPLAN")],						"F2",				,				[LogMenu("QUICK TOOLBAR|ROOMS WEEKPLAN", "Plan()", .T.)], .T.)
		this.AddProcess(P_RESERVAT,		[GetText("PARAMS","TXT_RESERVATIONS")],					"Shift+F7",			,				[LogMenu("QUICK TOOLBAR|RESERVATIONS", "Doform('resbrw','forms\resbrw WITH 1')", .T.)], .T.)
		this.AddProcess(P_ADDRESS,		[GetText("ADDRESS","TXT_BRWADDR")],						"Alt+F2",			,				[LogMenu("QUICK TOOLBAR|ADDRESSES", "BrwAddress IN Address")], .T.)
		this.AddProcess(P_BILLS,		[GetText("MENU","FIN_CHECKOUT")],						"F12",				,				[LogMenu("QUICK TOOLBAR|BILLS", "Doform('resbrw54','forms\resbrw WITH 54')", .T.)], .T.)
		this.AddProcess(P_AVAILABILITY,	[GetText("MENU","VEW_AVAIL")],							"F4",				,				[LogMenu("QUICK TOOLBAR|AVAILABILITY", "VewAvail IN View")], .T.)
		this.AddProcess(P_NEW,			[GetText("COMMON","TXT_NEW")],							"Ctrl+N",			[new],			[OnNew()])
		this.AddProcess(P_EDIT,			[GetText("COMMON","TXT_EDIT")],							"Ctrl+E",			[edit],			[OnEdit()])
		this.AddProcess(P_COPY,			[GetText("COMMON","TXT_COPY")],							"Ctrl+K",			[copy],			[OnCopy()])
		this.AddProcess(P_DELETE,		[GetText("COMMON","TXT_DELETE")],						"Ctrl+D",			[delete],		[OnDelete()])
		this.AddProcess(P_SEARCH,		[GetText("COMMON","TXT_SEARCH")],						"Ctrl+F",			[search],		[OnSearch()])
		this.AddProcess(P_FILTER,		[GetText("COMMON","TXT_FILTER")],						"Ctrl+Shift+F",		,				[OnFilter()])
		this.AddProcess(P_FIND_NEXT,	[GetText("COMMON","TXT_FINDNEXT")],						"Ctrl+G",			,				[OnFindNext()])
		this.AddProcess(P_FIND_PREV,	[GetText("COMMON","TXT_FINDPREV")],						"Ctrl+Shift+G",		,				[OnFindPrev()])
		this.AddProcess(P_PRINT,		[GetText("COMMON","TXT_PRINT")],						"Ctrl+P", 			[print],		[OnPrint()])
		this.AddProcess(P_JUST_SAVE,	[GetText("COMMON","TXT_SAVE")],							"Ctrl+Shift+S",		[save],			[OnJustSave()])
		this.AddProcess(P_SAVE,			[GetText("COMMON","TXT_SAVE")],							"Ctrl+S",			[save],			[OnSave()])
		this.AddProcess(P_CLOSE,		[GetText("COMMON","TXT_CLOSE")],						"Esc",				[exit],			[OnClose()])
		this.AddProcess(P_BILL,			[GetText("COMMON","TXT_BILL")],							"Ctrl+R",			[bill],			[OnBill()])
		this.AddProcess(P_SELECT,		[GetText("COMMON","TXT_SELECT")],						"Enter",			[reservat],		[OnSelect()])
		this.AddProcess(P_INSTRUCTION,	[GetText("RESERVAT","TT_BILLINST")],					"Ctrl+W",			[note01],		[OnInstruction()])
		this.AddProcess(P_RECURRING,	[GetText("RESERVAT","TT_RECURRING")],					"Ctrl+V",			[redirect],		[OnRecurring()])
		this.AddProcess(P_QUICKOUT,		[GetText("BILL","TT_QUICKOUT")],						"Ctrl+Q",			[checkout],		[OnCheckOut()])
		this.AddProcess(P_MESSAGES,		[GetText("RESERVAT","TT_MESSAGE")],						"Ctrl+B",			[sql],			[OnMessage()])
		this.AddProcess(P_CHECKIN,		[GetText("PLAN","TXT_CHECKIN")],						"Ctrl+I",			[checkin],		[OnCheckIn()])
		this.AddProcess(P_CHECKINALL,	[GetText("RESERVAT","TT_CHECKIN_ALL")],					"Ctrl+Shift+I",		[checkinall],	[OnCheckInAll()])
		this.AddProcess(P_GROUPFUNC,	[GetText("RESERVAT","TT_GROUP_FUNCTIONS")],				"Ctrl+M",			[grpname],		[OnGroupFunc()])
		this.AddProcess(P_HISTORY,		[GetText("RESERVAT","TT_HISTORY")],						"Ctrl+Y",			[history],		[OnHistory()])
		this.AddProcess(P_NOTE,			[GetText("RESERVAT","TT_RSNOTE")],						"Ctrl+O",			[report],		[OnNote()])
		this.AddProcess(P_OOO_NOTE,		[GetText("RESERVAT","TT_RSNOTE")],						"Ctrl+I",			[report],		[OnNote()])
		this.AddProcess(P_GRP_SPLIT,	[GetText("RESERVAT","TT_QUICKEDIT")],					"Ctrl+Shift+G",		[group],		[OnGroupSplit()])
		this.AddProcess(P_GRP_NAME,		[GetText("RESERVAT","TT_CHANGE_GROUP_NAME")],			"Ctrl+Shift+J",		[grpname],		[OnGroupNameChange()])
		this.AddProcess(P_GRP_COPY,		[GetText("RESERVAT","TT_GRP_COPY")],					"Ctrl+Shift+K",		[copy],			[OnGroupCopy()])
		this.AddProcess(P_GRP_INFO,		[GetText("RESERVAT","TT_GRP_INFO")],					"Ctrl+Shift+U",		[grpinfo],		[OnGroupInfo()])
		this.AddProcess(P_GRP_COLOR,	[GetText("RESERVAT","TT_GRP_COLOR")],					,					[pencil03],		[OnGroupColor()])
		this.AddProcess(P_GRP_RESNAME,	[GetText("RESERVAT","TT_GRP_RES_NAMES")],				"Ctrl+Shift+N",		[groupresnames],[OnGroupResName()])
		this.AddProcess(P_GRP_RESCOPY,	[GetText("RESERVAT","TT_COPY_RESERVATION_TO_GROUP")],	"Ctrl+Shift+H",		[grcopyres],	[OnGroupResCopy()])
		this.AddProcess(P_GRP_PAYM,		[GetText("RESERVAT","TT_EDIT_PAYMASTER")],				"Ctrl+Shift+P",		[greditpm],		[OnGroupPaymaster()])
		this.AddProcess(P_GRP_SHOWRESB,	[GetText("RESERVAT","TT_SHOW_GROUP_RESERVATIONS")],		"Ctrl+Shift+R",		[grshowre],		[OnGroupResBrwForGroup()])
		this.AddProcess(P_XREADER,		[GetText("ARGUS","TT_XREADERBRW")],						"Ctrl+R",			[xreader],		[OnXReader()])
		this.AddProcess(P_DENIAL,		[GetText("VIEW","TT_DENIAL")],							"Ctrl+A",			[denial],		[OnDenial()])
		this.AddProcess(P_DETAIL,		[GetText("ALZOOMIN","TT_DETAIL")],						"Ctrl+T",			[camcord],		[OnDetail()])
		this.AddProcess(P_NEXT,			[GetText("ADDRESS","TT_BNEXT")],						"Ctrl+DNARROW",		[next],			[OnNext()])
		this.AddProcess(P_PREVIOUS,		[GetText("ADDRESS","TT_BPREVIOUS")],					"Ctrl+UPARROW",		[prev],			[OnPrevious()])
		this.AddProcess(P_TOP,			[GetText("ADDRESS","TT_BGOTOP")],						"Ctrl+HOME",		[top],			[OnTop()])
		this.AddProcess(P_BOTTOM,		[GetText("ADDRESS","TT_BGOBOTTOM")],					"Ctrl+END",			[bottom],		[OnBottom()])
		this.AddProcess(P_UNDO,			[GetText("ADDRESS","TT_BUNDO")],						"Ctrl+U",			[revert],		[OnUndo()])
		this.AddProcess(P_SEARCH_MORE,	[GetText("ADDRESS","TT_BSEARCHMORE")],					"Ctrl+Q",			[more],			[OnSearchMore()])
		this.AddProcess(P_TRANSFER,		[GetText("ADDRESS","TT_TRANSFER")],						"Ctrl+Shift+D",		[transfer],		[OnTransfer()])
		this.AddProcess(P_UPDATE,		[GetText("COMMON","TXT_UPDATE")],						"Ctrl+U",			[redirect],		[OnUpdate()])
		this.AddProcess(P_SEASON,		[GetText("SEASON","TT_SEASON")],						"Ctrl+O",			[note03],		[OnSeason()])
		this.AddProcess(P_RATE_FIND,	[GetText("RESERVAT","TT_RATE_FIND")],					"Ctrl+R",			[ratecodepost],	[OnRateFind()])
		this.AddProcess(P_RATE_FIND_RP,	[GetText("RESERVAT","TT_RATE_FIND")],					"Ctrl+J",			[ratecodepost],	[OnRateFind()])
		this.AddProcess(P_EX_RESERVAT,	[GetText("EXTRESER","TXT_RESERVATION")],				"Ctrl+R",			[edit],			[OnReservat()])
		this.AddProcess(P_RES_ADDRESS,	[GetText("EXTRESER","TXT_ADDRESS")],					"Ctrl+A",			[card03],		[OnAddress()])
		this.AddProcess(P_REFRESH,		[GetText("EXTRESER","TXT_REFRESH")],					"F5",				[refresh],		[OnRefresh()])
		this.AddProcess(P_EX_DONE,		[GetText("EXTRESER","TXT_MARK_DONE")],					"Ctrl+K",			[cleanall],		[OnDone()])
		this.AddProcess(P_EX_SHOWALL,	[GetText("EXTRESER","TXT_SHOW_ALL")],					"Ctrl+O",			[grid],			[OnShowAll()])
		this.AddProcess(P_KEY,			[GetText("MGRFINAN","TB_UPDKEY")],						"Ctrl+Y",			[artkey],		[OnKey()])
		this.AddProcess(P_DO,			[GetText("MYLISTS","TXT_GO")],							"Ctrl+T",			[go],			[OnDo()])
		this.AddProcess(P_MODIFY,		[GetText("MYLISTS","TXT_MODIFY")],						"Ctrl+M",			[modify],		[OnModify()])
		this.AddProcess(P_EXPORT,		[GetText("MYLISTS","TXT_EXPORT")],						"Ctrl+X",			[export],		[OnExport()])
		this.AddProcess(P_IMPORT,		[GetText("MYLISTS","TXT_IMPORT")],						"Ctrl+I",			[import],		[OnImport()])
		this.AddProcess(P_SQL,			["SQL"],												"Ctrl+Q",			[sql],			[OnSql()])
		this.AddProcess(P_TEXT,			[GetText("MYLISTS","TXT_TEXTS")],						"Ctrl+L",			[report],		[OnText()])
		this.AddProcess(P_EVENT,		[GetText("EVENT","TT_EDIT_EVENTS")],					"Ctrl+R",			[modify],		[OnEvent()])
		this.AddProcess(P_ALLOT,		[GetText("ALZOOMIN","TXT_ZOOMIN")],						"Ctrl+T",			[camcord],		[OnAllotment()])
		this.AddProcess(P_POST,			[GetText("CHKOUT1","TXT_POST")],						"Ctrl+B",			[shoping],		[OnPost()])
		this.AddProcess(P_PAY,			[GetText("CHKOUT1","TXT_PAY")],							"Ctrl+T",			[pay],			[OnPay()])
		this.AddProcess(P_POST_RATECODE,[GetText("BILL","TXT_RATECOD_POST")],					"Ctrl+K",			[pencil03],		[OnRatePost()])
		this.AddProcess(P_MARK,			[GetText("CHKOUT1","TXT_MARK")],						"Ctrl+M",			[mark],			[OnMark()])
		this.AddProcess(P_INSERT,		[GetText("CHKOUT1","TXT_INSERT")],						"Ctrl+I",			[insert],		[OnInsert()])
		this.AddProcess(P_SPLIT,		[GetText("CHKOUT1","TXT_SPLIT")],						"Ctrl+S",			[split1],		[OnSplit()])
		this.AddProcess(P_PRINT_ALL,	[GetText("CHKOUT1","TXT_PRINTALL")],					"Ctrl+Q",			[printall],		[OnPrintAll()])
		this.AddProcess(P_PREVIEW,		[GetText("CHKOUT1","TXT_PREVIEW")],						"Ctrl+W",			[preview],		[OnPreview()])
		this.AddProcess(P_CHECKOUT,		[GetText("CHKOUT1","TXT_CHECKOUT")],					"Ctrl+O",			[checkout],		[OnCheckOut()])
		this.AddProcess(P_INVOICE,		[GetText("BILL","TXT_PREBILL")],						"Ctrl+O",			[creditcard],	[OnInvoice()])
		this.AddProcess(P_REDIRECT,		[GetText("CHKOUT1","TXT_REDIRECT")],					"Ctrl+R",			[redirect],		[OnRedirect()])
		this.AddProcess(P_INTERFACE,	[GetText("CHKOUT1","TXT_INTERFACE")],					"Ctrl+N",			[interface],	[OnInterface()])
		this.AddProcess(P_FORMAT,		[GetText("CHKOUT1","TXT_FORMAT")],						"Ctrl+F",			[format],		[OnFormat()])
		this.AddProcess(P_GROUP,		[GetText("CHKOUT1","TXT_GROUP")],						"Ctrl+G",			[group],		[OnGroup()])
		this.AddProcess(P_3_6_BILLS,	[GetText("BILL","TXT_EXT_BILL")],						"Ctrl+DNARROW",		[billext],		[On3_6Bills()])
		this.AddProcess(P_SPEC_LOGIN,	["*Special login*"],									"Ctrl+Shift+L",		,				[OnSpecialLogin()])
		this.AddProcess(P_ALL_ROOMS,	[GetText("PLAN","TXT_ALLROOMS")],						"Ctrl+L",			[allrooms],		[OnAllRooms()])
		this.AddProcess(P_FREE_ROOMS,	[GetText("PLAN","TXT_FREEROOMS")],						"Ctrl+Shift+L",		[freerooms],	[OnFreeRooms()])
		this.AddProcess(P_AVAILAB,		[GetText("RENT","TT_ALLOT_AVAILAB")],					"Ctrl+J",			[graph05],		[OnAvailab()])
		this.AddProcess(P_ALLOT_CHANGE,	[GetText("ROOMPLAN","TT_ALLOT_CHANGE")],				"Ctrl+Q",			[allott],		[OnAllottChange()])
		this.AddProcess(P_ALLOT_RESER,	[GetText("ROOMPLAN","TT_ADD_RES_ALLOT_CHANGE")],		"Ctrl+Shift+Q",		[allottreschange],[OnAllotReservation()])
		this.AddProcess(P_RATES,		[GetText("RESERVAT","TXT_INTERVALFORM")],				"Ctrl+F11",			[interval],		[OnRates()])
		this.AddProcess(P_MOVE,			[GetText("PLAN","TXT_MOVE")],							"Ctrl+V",			[move1],		[OnMove()])
		this.AddProcess(P_DROP,			[GetText("PLAN","TXT_DROP")],							"Ctrl+Shift+V",		[drop],			[OnDrop()])
		this.AddProcess(P_CAPTION_CHANGE,[GetText("WEEKFORM","TXT_CHANGE_CAPTION")],			"Ctrl+O",			[refresh],		[OnCaption()])
		this.AddProcess(P_PICTURE,		[GetText("CONFWEEK","TXT_PICTURE")],					"Ctrl+U",			[bmp],			[OnPicture()])
		this.AddProcess(P_DAY_CONF,		[GetText("CONFPLAN","TXT_CALL_CONFDAY")],				"Ctrl+T",			[clock06],		[OnDayConference()])
		this.AddProcess(P_GUESTS,		[GetText("CONFPLAN","TXT_GUEST_LIST")],					"Ctrl+G",			[calendar16],	[OnGuests()])
		this.AddProcess(P_FEATURE,		[GetText("MGRRESER","TXT_FEATURE")],					"Ctrl+T",			[feature],		[OnFeature()])
		this.AddProcess(P_DEPOSITE,		[GetText("MGRFINAN","TXT_DEPOSIT")],					"Ctrl+O",			[deposit],		[OnDeposite()])
		this.AddProcess(P_TIME_PLAN,	[GetText("EMPLOYEE","TXT_TIME_OVERVIEW")],				"Ctrl+T",			[allott],		[OnTimePlan()])
		this.AddProcess(P_TIME_BREAKS,	[GetText("EMPLOYEE","TXT_BREAKS")],						"Ctrl+J",			[allott],		[OnBreaks()])
		this.AddProcess(P_MENUS,		[GetText("MGRSYS", "TXT_MENUS")],						"Ctrl+R",			[menus],		[OnMenu()])
		this.AddProcess(P_BUTTONS,		[GetText("MGRSYS","TXT_BUTTONS")],						"Ctrl+B",			[buttons],		[OnButtons()])
		this.AddProcess(P_GOTO,			[GetText("HOTSTAT","TB_GOTO")],							"Ctrl+G",			[refresh],		[OnGoTo()])
		this.AddProcess(P_SETDAYS,		[GetText("HOTSTAT","TXT_NUM_OF_DAYS")],					"Ctrl+D",			[rulers],		[OnSetDays()])
		this.AddProcess(P_TABLEPLAN,	[GetText("ARGUS","TXT_TABLEPLAN")],						"Ctrl+T",			[tableplan],	[OnTablePlan()])
		this.AddProcess(P_EX_NOSHOW,	[GetText("EXTRESER","TXT_NOSHOW")],						"Ctrl+H",			[deposit],		[OnNoShow()])
		this.AddProcess(P_EX_GETRESER,	[GetText("EXTRESER","TXT_GET_RESER_NOW")],				"Ctrl+J",			[arrivals],		[OnGetReserNow()])
		this.AddProcess(P_PRINT_RANGE,	[GetText("BILLHIST","TXT_PRINT_RANGE")],				"Ctrl+Shift+P",		[printall],		[OnPrintRange()])
		this.AddProcess(P_CHARGES,		[GetText("RESERVAT","TXT_CHARGES")],					"Ctrl+G",			[card03],		[OnCharges()])
		this.AddProcess(P_BANQUET,		[GetText("RESERVAT","TXT_BANQUETING")],					"Ctrl+B",			[bill],			[OnBanquet()])
		this.AddProcess(P_CALCPRICE,	[GetText("RESERVAT","TXT_RES_INVOICE")],				"Ctrl+T",			[bill],			[OnCalcPrice()])
		this.AddProcess(P_SHARE,		[GetText("RESERVAT","TXT_SHARE")],						"Ctrl+H",			[logoutall],	[OnShare()])
		this.AddProcess(P_BONUS,		[GetText("RESERVAT","TXT_BONUS")],						"Ctrl+H",			[favourites16],	[OnBonus()])
		this.AddProcess(P_POSTINGS,		[GetText("AR","TB_POSTINGS")],							"Ctrl+B",			[deposit],		[OnPostings()])
		this.AddProcess(P_VOUCHER,		[GetText("BILL","TXT_VOUCHER")],						"Ctrl+V",			[list_lines_menu],[OnVoucher()])
		this.AddProcess(P_SPENT,		[GetText("BILL","TXT_SPENT")],							"Ctrl+R",			[pencil03],		[OnSpent()])
		this.AddProcess(P_CLEAN,		[GetText("HOUSE","TXT_CLEAN_MARKED")],					"Ctrl+S",			[clean],		[OnClean()])
		this.AddProcess(P_DIRTY,		[GetText("HOUSE","TXT_DIRTY_MARKED")],					"Ctrl+D",			[dirty],		[OnDirty()])
		this.AddProcess(P_CLEAN_ALL,	[GetText("HOUSE","TXT_CLEAN_ALL")],						"Ctrl+A",			[cleanall],		[OnCleanAll()])
		this.AddProcess(P_DIRTY_ALL,	[GetText("HOUSE","TXT_DIRTY_ALL")],						"Ctrl+B",			[dirtyall],		[OnDirtyAll()])
		this.AddProcess(P_MARK_ONE,		[GetText("CHKOUT1","TXT_MARK")],						"SPACEBAR",			[toggle],		[OnMark()])
		this.AddProcess(P_MARK_ALL,		[GetText("HOUSE","TXT_MARK_ALL")],						"Ctrl+N",			[markall],		[OnMarkAll()])
		this.AddProcess(P_MAID,			[GetText("HOUSE","TXT_SET_MAID")],						"Ctrl+Z",			[maid],			[OnMaid()])
		this.AddProcess(P_COMMENT,		[GetText("HOUSE","TXT_COMMENT")],						"Ctrl+K",			[comment],		[OnComment()])
		this.AddProcess(P_COLOR,		[GetText("RESRATE","TT_COLORS")],						"Ctrl+L",			[font],			[OnColor()])
		this.AddProcess(P_DISCOUNT,		[GetText("BILL","TXT_DISCOUNT")],						"Ctrl+J",			[discount],		[OnDiscount()])
		this.AddProcess(P_INFO,			[GetText("RESERV2","TB_INFO")],							"Ctrl+I",			[info],			[OnInfo()])
		this.AddProcess(P_CREATE,		[GetText("OPENFILE","TXT_CREATE")],						"Ctrl+C",			[reservat],		[OnCreate()])
		this.AddProcess(P_DAY,			[GetText("OPENFILE","TXT_DAILY")],						"Ctrl+D",			[delete],		[OnDay()])
		this.AddProcess(P_USERLIST,		[GetText("OPENFILE","TXT_USERLIST")],					"Ctrl+U",			[group],		[OnUser()])
		this.AddProcess(P_NEW_ALL,		[GetText("USERLIST","TXT_SENDMESSAGE_TO_ALL_USER")],	"Ctrl+A",			[mailheaders],	[OnSendMessageAll()])
		this.AddProcess(P_SHOW,			[GetText("USERLIST","TXT_SHOW_MESAGESS")],				"Ctrl+R",			[showmsg],		[OnShowMessages()])
		this.AddProcess(P_LOGOUT,		[GetText("USERLIST","TXT_LOGOUT_USER")],				"Ctrl+L",			[logout],		[OnLogout()])
		this.AddProcess(P_LOGOUT_ALL,	[GetText("USERLIST","TXT_LOGOUT_ALL_USER")],			"Ctrl+B",			[logoutall],	[OnLogoutAll()])
		this.AddProcess(P_ARPAY,		[GetText("AR","TT_PAY")],								"Ctrl+Z",			[pay],			[OnPay()])
		this.AddProcess(P_BILLSTAT,		[GetText("AR","TXT_EDIT_BILLSTATUS")],					"Ctrl+J",			[toggle],		[OnBillStat()])
		this.AddProcess(P_DISPUTE,		[GetText("AR","TT_DISPUTE")],							"Ctrl+B",			[denial],		[OnDispute()])
		this.AddProcess(P_UNBLOCK,		[GetText("AR","TXT_UNBLOCK")],							"Ctrl+U",			[outofservice],	[OnUnBlock()])
		this.AddProcess(P_COLLECT,		[GetText("AR","TXT_COLLECTING_AGENCY")],				"Ctrl+K",			[go],			[OnCollect()])
		this.AddProcess(P_ALLOCATE,		[GetText("AR","TT_ALLOC")],								"Ctrl+O",			[move1],		[OnAllocate()])
		this.AddProcess(P_AGING,		[GetText("AR","TT_AGING")],								"Ctrl+L",			[graph07],		[OnAging()])
		this.AddProcess(P_ARTRANSFER,	[GetText("AR","TT_TRANSFER")],							"Ctrl+T",			[transfer],		[OnTransfer()])
		this.AddProcess(P_COMPLETE,		[GetText("ACT","TT_COMPLETE")],							"Ctrl+G",			[reservat],		[OnComplete()])
		this.AddProcess(P_CONTROL,		[GetText("ARREMPRI","TXT_PRINT_CONTROL_LIST")],			"Ctrl+V",			[roomlist],		[OnControl()])
		this.AddProcess(P_PRINTSIGN,	[GetText("ARREMPRI","TXT_PRINTED_SIGN")],				"Ctrl+Z",			[move1],		[OnPrintSign()])
		this.AddProcess(P_LOCK,			[GetText("PHONE","TXT_LOCK")],							"Ctrl+L",			[lock],			[OnLock()])
		this.AddProcess(P_UNLOCK,		[GetText("PHONE","TXT_UNLOCK")],						"Ctrl+U",			[unlock],		[OnUnlock()])
		this.AddProcess(P_RECEIVE,		[GetText("EMBROWS","TT_DOWNLOAD_HEADERS")],				"Ctrl+U",			[mailheaders],	[OnReceive()])
		this.AddProcess(P_EM_ADDRESS,	[GetText("EMBROWS","TT_LINK_ADDRESS")],					"Ctrl+R",			[card03],		[OnAddress()])
		this.AddProcess(P_REPLAY,		[GetText("EMBROWS","TT_REPLY")],						"Ctrl+N",			[mailreply],	[OnReply()])
		this.AddProcess(P_SETTINGS,		[GetText("TABLERES","TXT_SETTINGS")],					"Ctrl+S",			[rulers],		[OnSettings()])
		this.AddProcess(P_CREATE_VOUCHER,[GetText("OPENFILE","TXT_CREATE")],					"Ctrl+N",			[reservat],		[OnCreate()])
		this.AddProcess(P_EXT_VOUCHERS,	["Ext."+GetText("PARAMS","TXT_VOUCHERS")],				"Ctrl+I",			[globe2],		[OnExtVouchers()])
		this.AddProcess(P_MOBILE_ARTICLES,[GetText("ARTICLE", "TXT_CIT_MOBILE_ARTICLES")],		"Ctrl+M",			[globe2],		[OnCitadelMobileArticles()])
		this.AddProcess(P_ORDER,		[GetText("ARGUS","TXT_ORDER")],							"Ctrl+B", 			[bill],			[OnOrder()])
		this.AddProcess(P_MOBILE_AVL_PERC,["Citadel Mobile " + GetText("VIEW","TXT_AVWINDOW")],	"Ctrl+T", 			[avl],			[OnCitadelMobileAvailability()])
		this.AddProcess(P_CITWEB_RATES,	[GetText("MNGCWR","TXT_ADD_RATES")],					"Ctrl+R", 			[pay],			[OnAddRates()])
		this.AddProcess(P_ROOM_FEATURES,[GetText("RESFIX","TXT_ROOM_FEATURES")],				"Ctrl+R", 			[markall],		[OnRoomFeatures()])
		this.AddProcess(P_RESBRW,		[GetText("RESERVAT","TXT_SHOW_IN_RESBRW")],				"Ctrl+L",			[crdfle03],		[OnReservations()])
		this.AddProcess(P_RESRART,		[GetText("RESERVAT","TXT_RESRATEARTI")],				"Ctrl+T",			[crdfle03],		[OnResRateArti()])
		this.AddProcess(P_SIGN,			[GetText("LEDGER","TXT_SIGN")],							"Ctrl+Q",			[qrcode],		[OnSign()])
		this.AddProcess(P_BILLREOPEN,	[GetText("BILL","TXT_REOPEN")],							"Ctrl+Z",			[crdfle03],		[OnReopen()])
		this.AddProcess(P_SHOW_HRS_RC,	["HRS IDs"],												"Ctrl+H",			[roomlist],		[OnControl()])
		
		RETURN .T.
	ENDPROC

ENDDEFINE

DEFINE CLASS ctbraction AS ctbrbase OF "cit_tbrform.vcx" 
 	*< CLASSDATA: Baseclass="custom" Timestamp="" Scale="Pixels" Uniqueid="" />

	#INCLUDE "..\include\processes.h"
	*<DefinedPropArrayMethod>
		*m: oncomplete
		*m: onreservat
	*</DefinedPropArrayMethod>

	Name = "ctbraction"
	
	PROCEDURE Init
		this.AddButtonDefinition(P_NEW)
		this.AddButtonDefinition(P_EDIT)
		this.AddButtonDefinition(P_DELETE)
		this.AddButtonDefinition(P_COMPLETE)
		this.AddButtonDefinition(P_SEARCH)
		this.AddButtonDefinition(P_EX_RESERVAT,,[checkin])
		this.AddButtonDefinition(P_RES_ADDRESS)
		this.AddButtonDefinition(P_COLUMNS)
		this.AddButtonDefinition(P_CLOSE)
	ENDPROC

	PROCEDURE onaddress
		thisformset.OnAddress()
	ENDPROC

	PROCEDURE oncomplete
		thisformset.OnComplete()
	ENDPROC

	PROCEDURE onedit
		thisformset.OnEdit()
	ENDPROC

	PROCEDURE onnew
		thisformset.OnNew()
	ENDPROC

	PROCEDURE onreservat
		thisformset.OnReservat()
	ENDPROC

ENDDEFINE

DEFINE CLASS ctbraddress AS ctbrbase OF "cit_tbrform.vcx" 
 	*< CLASSDATA: Baseclass="custom" Timestamp="" Scale="Pixels" Uniqueid="" />

	#INCLUDE "..\include\constdefines.h"
	*<DefinedPropArrayMethod>
		*m: onhistory
		*m: onhistoryenable
	*</DefinedPropArrayMethod>

	Name = "ctbraddress"
	
	PROCEDURE Init
		this.AddButtonDefinition(P_NEW)
		this.AddButtonDefinition(P_COPY)
		this.AddButtonDefinition(P_EDIT)
		IF LOWER(thisform.cFormLabel) # "searchadr"
			this.AddButtonDefinition(P_DELETE)
			this.AddButtonDefinition(P_TRANSFER)
		ENDIF
		this.AddButtonDefinition(P_SAVE)
		this.AddButtonDefinition(P_UNDO)
		IF LOWER(thisform.cFormLabel) = "searchadr"
			this.AddButtonDefinition(P_SELECT)
		ELSE
			this.IncludeProcess(P_SELECT)
		ENDIF
		this.AddButtonDefinition(P_SEARCH)
		this.AddButtonDefinition(P_SEARCH_MORE)
		this.AddButtonDefinition(P_TOP)
		this.AddButtonDefinition(P_PREVIOUS)
		this.AddButtonDefinition(P_NEXT)
		this.AddButtonDefinition(P_BOTTOM)
		this.AddButtonDefinition(P_HISTORY)
		this.AddButtonDefinition(P_COLUMNS)
		this.AddButtonDefinition(P_CLOSE, IIF(LOWER(thisform.cFormLabel) = "searchadr", [GetText("ALZOOMIN","TT_CANCELEXIT")], .F.))
	ENDPROC

	PROCEDURE onbottom
		thisformset.AddressGoBottom()
	ENDPROC

	PROCEDURE onbottomenable
		RETURN thisformset.AddressState = 0 AND NOT BITTEST(thisformset.nFirstlastrecord,1)
	ENDPROC

	PROCEDURE onclose
		thisformset.AddressExit()
	ENDPROC

	PROCEDURE oncloseenable
		RETURN paRights(97)
	ENDPROC

	PROCEDURE oncolumnenable
		RETURN thisformset.AddressState = 0
	ENDPROC

	PROCEDURE oncopy
		thisformset.AddressCopyNew()
	ENDPROC

	PROCEDURE oncopyenable
		RETURN NOT EMPTY(address.ad_addrid) AND thisformset.AddressState = 0 AND paRights(100) AND NOT thisformset.AddressEditEnabled AND thisformset.AddressStart <> "EDITR"
	ENDPROC

	PROCEDURE ondelete
		thisformset.AddressDelete()
	ENDPROC

	PROCEDURE ondeleteenable
		RETURN NOT EMPTY(address.ad_addrid) AND thisformset.AddressState = 0 AND paRights(102) AND NOT thisformset.AddressEditEnabled AND thisformset.AddressStart <> "EDITR"
	ENDPROC

	PROCEDURE onedit
		thisformset.AddressEdit()
	ENDPROC

	PROCEDURE oneditenable
		RETURN thisformset.AddressState = 0 AND paRights(98) AND NOT thisformset.AddressEditEnabled
	ENDPROC

	PROCEDURE onhistory
		thisformset.OnHistory()
	ENDPROC

	PROCEDURE onhistoryenable
		RETURN thisformset.AddressState = 0 AND paRights(137) AND NOT EMPTY(address.ad_addrid)
	ENDPROC

	PROCEDURE onnew
		thisformset.AddressNew()
	ENDPROC

	PROCEDURE onnewenable
		RETURN thisformset.AddressState = 0 AND paRights(99) AND NOT thisformset.AddressEditEnabled AND thisformset.AddressStart <> "EDITR"
	ENDPROC

	PROCEDURE onnext
		thisformset.AddressNext()
	ENDPROC

	PROCEDURE onnextenable
		RETURN thisformset.AddressState = 0 AND NOT BITTEST(thisformset.nFirstlastrecord,1)
	ENDPROC

	PROCEDURE onprevious
		thisformset.AddressPrevious()
	ENDPROC

	PROCEDURE onpreviousenable
		RETURN thisformset.AddressState = 0 AND NOT BITTEST(thisformset.nFirstlastrecord,0)
	ENDPROC

	PROCEDURE onsave
		thisformset.AddressSave()
	ENDPROC

	PROCEDURE onsaveenable
		RETURN thisformset.AddressState > 0 AND thisformset.AddressEditEnabled
		
	ENDPROC

	PROCEDURE onsearch
		thisformset.AddressSearch()
	ENDPROC

	PROCEDURE onsearchenable
		RETURN thisformset.AddressState = 0 AND paRights(101)
	ENDPROC

	PROCEDURE onsearchmore
		thisformset.SearchEngine()
	ENDPROC

	PROCEDURE onsearchmoreenable
		RETURN thisformset.AddressState = 0 AND NOT thisformset.FinishSearch
	ENDPROC

	PROCEDURE onselect
		thisformset.OnSelect()
	ENDPROC

	PROCEDURE onselectenable
		RETURN thisformset.AddressState = 0 AND NOT EMPTY(address.ad_addrid)
	ENDPROC

	PROCEDURE ontop
		thisformset.AddressGoTop()
	ENDPROC

	PROCEDURE ontopenable
		RETURN thisformset.AddressState = 0 AND NOT BITTEST(thisformset.nFirstlastrecord,0)
	ENDPROC

	PROCEDURE ontransfer
		thisformset.AddressTransfer()
	ENDPROC

	PROCEDURE ontransferenable
		RETURN NOT EMPTY(address.ad_addrid) AND thisformset.AddressState = 0 AND NOT thisformset.AddressEditEnabled
	ENDPROC

	PROCEDURE onundo
		thisformset.AddressUndo()
	ENDPROC

	PROCEDURE onundoenable
		RETURN thisformset.AddressState > 0 AND thisformset.AddressEditEnabled
	ENDPROC

	PROCEDURE refreshcurrentgrid
		DO CASE
			CASE thisform.MainPage.ActivePage = 2
				this.GetGridRef(thisform.MainPage.PageGridAddress.AddressGrid)
			CASE thisform.MainPage.PageAddress.SlavePage.ActivePage = 1
				this.GetGridRef(thisform.MainPage.PageAddress.SlavePage.PageApartner.ApartnerGrid)
			CASE thisform.MainPage.PageAddress.SlavePage.ActivePage = 3
				this.GetGridRef(thisform.MainPage.PageAddress.SlavePage.PageDokument.DokumentGrid)
			CASE thisform.MainPage.PageAddress.SlavePage.ActivePage = 5
				this.GetGridRef(thisform.MainPage.PageAddress.SlavePage.PageFuture.FutureGrid)
			CASE thisform.MainPage.PageAddress.SlavePage.ActivePage = 6
				this.GetGridRef(thisform.MainPage.PageAddress.SlavePage.PageRevnue.RevnueGrid)
			CASE thisform.MainPage.PageAddress.SlavePage.ActivePage = 8
				this.GetGridRef(thisform.MainPage.PageAddress.SlavePage.PageReferral.TgridReferral)
			OTHERWISE
		ENDCASE
	ENDPROC

ENDDEFINE

DEFINE CLASS ctbraddress_pg AS ctbrbase OF "cit_tbrform.vcx" 
 	*< CLASSDATA: Baseclass="custom" Timestamp="" Scale="Pixels" Uniqueid="" />

	#INCLUDE "..\include\constdefines.h"
	*<DefinedPropArrayMethod>
		*m: onhistory
		*m: onhistoryenable
	*</DefinedPropArrayMethod>

	Name = "ctbraddress_pg"
	
	PROCEDURE Init
		this.AddButtonDefinition(P_NEW)
		this.AddButtonDefinition(P_COPY)
		this.AddButtonDefinition(P_EDIT)
		IF LOWER(thisform.cFormLabel) # "searchadr"
			this.AddButtonDefinition(P_DELETE)
			this.AddButtonDefinition(P_TRANSFER)
		ENDIF
		this.AddButtonDefinition(P_SAVE)
		this.AddButtonDefinition(P_UNDO)
		IF LOWER(thisform.cFormLabel) = "searchadr"
			this.AddButtonDefinition(P_SELECT)
		ENDIF
		this.AddButtonDefinition(P_SEARCH)
		this.AddButtonDefinition(P_TOP)
		this.AddButtonDefinition(P_PREVIOUS)
		this.AddButtonDefinition(P_NEXT)
		this.AddButtonDefinition(P_BOTTOM)
		this.AddButtonDefinition(P_HISTORY)
		this.AddButtonDefinition(P_COLUMNS)
		this.AddButtonDefinition(P_CLOSE, IIF(LOWER(thisform.cFormLabel) = "searchadr", [GetText("ALZOOMIN","TT_CANCELEXIT")], .F.))
	ENDPROC

	PROCEDURE onbottomenable
		RETURN thisform.Mode <> EDIT_MODE
	ENDPROC

	PROCEDURE oncloseenable
		RETURN paRights(97)
	ENDPROC

	PROCEDURE oncolumnenable
		RETURN thisform.Mode <> EDIT_MODE
	ENDPROC

	PROCEDURE oncopyenable
		RETURN thisform.Mode <> EDIT_MODE AND paRights(100)
	ENDPROC

	PROCEDURE ondeleteenable
		RETURN thisform.Mode <> EDIT_MODE AND paRights(102)
	ENDPROC

	PROCEDURE oneditenable
		RETURN thisform.Mode <> EDIT_MODE AND paRights(98)
	ENDPROC

	PROCEDURE onhistory
		thisform.OnHistory()
	ENDPROC

	PROCEDURE onhistoryenable
		RETURN thisform.Mode <> EDIT_MODE AND paRights(137)
	ENDPROC

	PROCEDURE onnewenable
		RETURN thisform.Mode <> EDIT_MODE AND paRights(99)
	ENDPROC

	PROCEDURE onnextenable
		RETURN thisform.Mode <> EDIT_MODE
	ENDPROC

	PROCEDURE onpreviousenable
		RETURN thisform.Mode <> EDIT_MODE
	ENDPROC

	PROCEDURE onsaveenable
		RETURN thisform.Mode = EDIT_MODE
		
	ENDPROC

	PROCEDURE onsearchenable
		RETURN thisform.Mode <> EDIT_MODE AND paRights(101)
		
	ENDPROC

	PROCEDURE onselectenable
		RETURN thisform.Mode <> EDIT_MODE
	ENDPROC

	PROCEDURE ontopenable
		RETURN thisform.Mode <> EDIT_MODE
	ENDPROC

	PROCEDURE ontransfer
		thisform.OnTransfer()
	ENDPROC

	PROCEDURE ontransferenable
		RETURN thisform.Mode <> EDIT_MODE
	ENDPROC

	PROCEDURE onundoenable
		RETURN thisform.Mode = EDIT_MODE
	ENDPROC

	PROCEDURE refreshcurrentgrid
		DO CASE
			CASE thisform.pgfMain.ActivePage = 2
				this.GetGridRef(thisform.pgfMain.pagBrowse.grdAddress)
		*		CASE thisform.pgfMain.pagEdit.pgfSlave.ActivePage = 1
		*			this.GetGridRef(thisform.pgfMain.pagEdit.pgfSlave.pagApartner.ApartnerGrid)
		*		CASE thisform.pgfMain.pagEdit.pgfSlave.ActivePage = 3
		*			this.GetGridRef(thisform.pgfMain.pagEdit.pgfSlave.pagDokument.DokumentGrid)
		*		CASE thisform.pgfMain.pagEdit.pgfSlave.ActivePage = 5
		*			this.GetGridRef(thisform.pgfMain.pagEdit.pgfSlave.pagFuture.FutureGrid)
		*		CASE thisform.pgfMain.pagEdit.pgfSlave.ActivePage = 6
		*			this.GetGridRef(thisform.pgfMain.pagEdit.pgfSlave.pagRevnue.RevnueGrid)
		*		CASE thisform.pgfMain.pagEdit.pgfSlave.ActivePage = 8
		*			this.GetGridRef(thisform.pgfMain.pagEdit.pgfSlave.pagReferral.TgridReferral)
			OTHERWISE
		ENDCASE
	ENDPROC

ENDDEFINE

DEFINE CLASS ctbrallotment AS ctbrmanager OF "cit_tbrform.vcx" 
 	*< CLASSDATA: Baseclass="custom" Timestamp="" Scale="Pixels" Uniqueid="" />

	*<DefinedPropArrayMethod>
		*m: onallotment
		*m: onallotmentenable
		*m: oncopyvisible
	*</DefinedPropArrayMethod>

	Name = "ctbrallotment"
	
	PROCEDURE onallotment
		thisform.MngCtrl.OnCmd6()
	ENDPROC

	PROCEDURE onallotmentenable
		RETURN paRights(164) AND NOT EOF(thisform.MngCtrl.GTAlias)
	ENDPROC

	PROCEDURE oncopyvisible
		RETURN thisform.MngCtrl.lCopyEnabled
	ENDPROC

	PROCEDURE ondeleteenable
		RETURN paRights(163) AND DODEFAULT()
	ENDPROC

	PROCEDURE oneditenable
		RETURN paRights(162) AND DODEFAULT()
	ENDPROC

	PROCEDURE onnewenable
		RETURN paRights(161) AND DODEFAULT()
	ENDPROC

ENDDEFINE

DEFINE CLASS ctbraltsplit AS ctbrmanager OF "cit_tbrform.vcx" 
 	*< CLASSDATA: Baseclass="custom" Timestamp="" Scale="Pixels" Uniqueid="" />

	*<DefinedPropArrayMethod>
		*m: oncopyvisible
		*m: onreservat
		*m: onreservatenable
	*</DefinedPropArrayMethod>

	Name = "ctbraltsplit"
	
	PROCEDURE oncopyvisible
		RETURN thisform.MngCtrl.lCopyEnabled
	ENDPROC

	PROCEDURE ondeleteenable
		RETURN paRights(167) AND DODEFAULT()
	ENDPROC

	PROCEDURE oneditenable
		RETURN paRights(166) AND DODEFAULT()
	ENDPROC

	PROCEDURE onnewenable
		RETURN paRights(165) AND DODEFAULT()
	ENDPROC

	PROCEDURE onreservat
		thisform.MngCtrl.OnCmd6()
	ENDPROC

	PROCEDURE onreservatenable
		RETURN paRights(168) AND NOT EOF(thisform.MngCtrl.GTAlias)
	ENDPROC

	PROCEDURE onsaveenable
		RETURN paRights(169) AND DODEFAULT()
	ENDPROC

ENDDEFINE

DEFINE CLASS ctbraracount AS ctbrbase OF "cit_tbrform.vcx" 
 	*< CLASSDATA: Baseclass="custom" Timestamp="" Scale="Pixels" Uniqueid="" />

	#INCLUDE "..\include\processes.h"
	*<DefinedPropArrayMethod>
		*m: onfindnext
		*m: onfindprev
		*m: onpostings
	*</DefinedPropArrayMethod>

	Name = "ctbraracount"
	
	PROCEDURE Init
		this.AddButtonDefinition(P_NEW)
		this.AddButtonDefinition(P_EDIT)
		this.AddButtonDefinition(P_DELETE)
		*this.AddButtonDefinition(P_PRINT)
		this.AddButtonDefinition(P_SEARCH)
		this.IncludeProcess(P_FIND_NEXT)
		this.IncludeProcess(P_FIND_PREV)
		this.AddButtonDefinition(P_RES_ADDRESS)
		this.AddButtonDefinition(P_POSTINGS,,,[GetText("AR","TT_POSTINGS")])
		this.AddButtonDefinition(P_COLUMNS)
		this.AddButtonDefinition(P_CLOSE)
	ENDPROC

	PROCEDURE onaddress
		thisformset.OnAddress()
	ENDPROC

	PROCEDURE onfindnext
		thisform.FindNext()
	ENDPROC

	PROCEDURE onfindprev
		thisform.FindPrev()
	ENDPROC

	PROCEDURE onpostings
		thisformset.OnPostings()
	ENDPROC

ENDDEFINE

DEFINE CLASS ctbrargusbrw AS ctbrmanager OF "cit_tbrform.vcx" 
 	*< CLASSDATA: Baseclass="custom" Timestamp="" Scale="Pixels" Uniqueid="" />

	#INCLUDE "..\include\constdefines.h"
	*<DefinedPropArrayMethod>
		*m: oncheckin
		*m: oncheckinenable
		*m: oncheckout
		*m: oncheckoutenable
		*m: onorder
		*m: onorderenable
		*m: onsettings
		*m: onxreader
		*m: onxreaderenable
		*p: mode
	*</DefinedPropArrayMethod>

	mode = 0
	Name = "ctbrargusbrw"
	
	PROCEDURE Init
		DO CASE
			CASE LOWER(thisform.Name) = "mngform" AND LOWER(thisform.MngCtrl.Class) = "mngreadersctrl"
				this.AddButtonDefinition(P_EDIT)
				this.AddButtonDefinition(P_XREADER)
				this.AddButtonDefinition(P_SEARCH)
				this.AddButtonDefinition(P_COLUMNS)
				this.AddButtonDefinition(P_CLOSE)
			CASE LOWER(thisform.Name) = "frmcashin"
				this.AddButtonDefinition(P_EDIT)
				this.AddButtonDefinition(P_COLUMNS)
				this.AddButtonDefinition(P_CLOSE)
			CASE LOWER(thisform.Name) = "mngform" AND LOWER(thisform.MngCtrl.Class) = "mngtablereserctrl"
				this.AddButtonDefinition(P_NEW)
				this.AddButtonDefinition(P_COPY)
				this.AddButtonDefinition(P_EDIT)
				this.AddButtonDefinition(P_DELETE)
				this.AddButtonDefinition(P_SEARCH)
				this.AddButtonDefinition(P_PRINT)
				this.AddButtonDefinition(P_HISTORY)
				this.AddButtonDefinition(P_CHECKIN)
				this.AddButtonDefinition(P_CHECKOUT)
				this.AddButtonDefinition(P_ORDER)
				this.AddButtonDefinition(P_TABLEPLAN)
				this.AddButtonDefinition(P_COLUMNS)
				this.AddButtonDefinition(P_CLOSE)
			CASE LOWER(thisform.Name) = "frmtableresplan"
				this.AddButtonDefinition(P_NEW)
				this.AddButtonDefinition(P_COPY)
				this.AddButtonDefinition(P_EDIT)
				this.AddButtonDefinition(P_DELETE)
				this.AddButtonDefinition(P_SEARCH)
				this.AddButtonDefinition(P_PRINT)
				this.AddButtonDefinition(P_HISTORY)
				this.AddButtonDefinition(P_CHECKIN)
				this.AddButtonDefinition(P_CHECKOUT)
				this.AddButtonDefinition(P_ORDER)
				this.AddButtonDefinition(P_SETTINGS)
				this.AddButtonDefinition(P_CLOSE)
		ENDCASE
	ENDPROC

	PROCEDURE oncheckin
		DO CASE
			CASE LOWER(thisform.Name) = "mngform" AND LOWER(thisform.MngCtrl.Class) = "mngtablereserctrl"
				thisform.MngCtrl.OnCmd7()
			CASE LOWER(thisform.Name) = "frmtableresplan"
				thisform.OnCheckIn()
		ENDCASE
	ENDPROC

	PROCEDURE oncheckinenable
		DO CASE
			CASE LOWER(thisform.Name) = "frmtableresplan"
				RETURN thisform.oTableRes.SelectedTableResID > 0 AND tblTableres.tr_status < TR_IN
			OTHERWISE
				RETURN EVALUATE(thisform.MngCtrl.GTAlias+".tr_status") < TR_IN
		ENDCASE
	ENDPROC

	PROCEDURE oncheckout
		DO CASE
			CASE LOWER(thisform.Name) = "mngform" AND LOWER(thisform.MngCtrl.Class) = "mngtablereserctrl"
				thisform.MngCtrl.OnCmd8()
			CASE LOWER(thisform.Name) = "frmtableresplan"
				thisform.OnCheckOut()
		ENDCASE
	ENDPROC

	PROCEDURE oncheckoutenable
		DO CASE
			CASE LOWER(thisform.Name) = "frmtableresplan"
				RETURN thisform.oTableRes.SelectedTableResID > 0 AND tblTableres.tr_status = TR_IN
			OTHERWISE
				RETURN EVALUATE(thisform.MngCtrl.GTAlias+".tr_status") = TR_IN
		ENDCASE
	ENDPROC

	PROCEDURE oncopyenable
		DO CASE
			CASE LOWER(thisform.Name) = "frmtableresplan"
				RETURN thisform.oTableRes.SelectedTableResID > 0
			OTHERWISE
				RETURN DODEFAULT()
		ENDCASE
	ENDPROC

	PROCEDURE ondeleteenable
		DO CASE
			CASE LOWER(thisform.Name) = "frmtableresplan"
				RETURN thisform.oTableRes.SelectedTableResID > 0
			OTHERWISE
				RETURN DODEFAULT()
		ENDCASE
	ENDPROC

	PROCEDURE oneditenable
		DO CASE
			CASE LOWER(thisform.Name) = "frmcashin"
				RETURN NOT EOF(thisform.grdCashIn.RecordSource)
			CASE LOWER(thisform.Name) = "frmtableresplan"
				RETURN NOT EMPTY(thisform.oTableRes.SelectedTableResID)
			OTHERWISE
				RETURN DODEFAULT()
		ENDCASE
	ENDPROC

	PROCEDURE onhistory
		DO CASE
			CASE LOWER(thisform.Name) = "mngform" AND LOWER(thisform.MngCtrl.Class) = "mngtablereserctrl"
				thisform.MngCtrl.OnCmd9()
			CASE LOWER(thisform.Name) = "frmtableresplan"
				thisform.OnHistory()
		ENDCASE
	ENDPROC

	PROCEDURE onhistoryenable
		DO CASE
			CASE LOWER(thisform.Name) = "frmtableresplan"
				RETURN thisform.oTableRes.SelectedTableResID > 0
			OTHERWISE
				RETURN DODEFAULT()
		ENDCASE
	ENDPROC

	PROCEDURE onnewenable
		DO CASE
			CASE LOWER(thisform.Name) = "frmtableresplan"
				RETURN .T.
			OTHERWISE
				RETURN DODEFAULT()
		ENDCASE
	ENDPROC

	PROCEDURE onorder
		DO CASE
			CASE LOWER(thisform.Name) = "mngform" AND LOWER(thisform.MngCtrl.Class) = "mngtablereserctrl"
				thisform.MngCtrl.OnCmd10()
			CASE LOWER(thisform.Name) = "frmtableresplan"
				thisform.OnOrder()
		ENDCASE
	ENDPROC

	PROCEDURE onorderenable
		DO CASE
			CASE LOWER(thisform.Name) = "frmtableresplan"
				RETURN thisform.oTableRes.SelectedTableResID > 0
			OTHERWISE
				RETURN NOT EOF(thisform.MngCtrl.GTAlias)
		ENDCASE
	ENDPROC

	PROCEDURE onprint
		DO CASE
			CASE LOWER(thisform.Name) = "mngform" AND LOWER(thisform.MngCtrl.Class) = "mngtablereserctrl"
				thisform.MngCtrl.OnCmd11()
			CASE LOWER(thisform.Name) = "frmtableresplan"
				DODEFAULT()
		ENDCASE
	ENDPROC

	PROCEDURE onsearchenable
		DO CASE
			CASE LOWER(thisform.Name) = "frmtableresplan"
				RETURN .T.
			OTHERWISE
				RETURN DODEFAULT()
		ENDCASE
	ENDPROC

	PROCEDURE onsettings
		thisform.OnSettings()
	ENDPROC

	PROCEDURE ontableplan
		thisform.MngCtrl.OnCmd6()
	ENDPROC

	PROCEDURE onxreader
		* X-Readers
		LOCAL loReader
		
		SELECT (thisform.MngCtrl.GTAlias)
		SCATTER BLANK NAME loReader
		
		CheckReader(thisform, loReader)
	ENDPROC

	PROCEDURE onxreaderenable
		RETURN NOT EOF(thisform.MngCtrl.GTAlias)
	ENDPROC

ENDDEFINE

DEFINE CLASS ctbrarpost AS ctbrbase OF "cit_tbrform.vcx" 
 	*< CLASSDATA: Baseclass="custom" Timestamp="" Scale="Pixels" Uniqueid="" />

	#INCLUDE "..\include\constdefines.h"
	*<DefinedPropArrayMethod>
		*m: onaging
		*m: onallocate
		*m: onbill
		*m: onbillstat
		*m: onbillvisible
		*m: oncollect
		*m: ondispute
		*m: onfindnext
		*m: onfindprev
		*m: onmark
		*m: onpay
		*m: onunblock
	*</DefinedPropArrayMethod>

	Name = "ctbrarpost"
	
	PROCEDURE Init
		this.AddButtonDefinition(P_ARPAY)
		this.AddButtonDefinition(P_BILL,[GetText("AR","TT_BILL_REOPEN")])
		this.AddButtonDefinition(P_NEW,[GetText("AR","TT_CREATE_BILL")],[createbill])
		this.AddButtonDefinition(P_EDIT,[GetText("ARREMPRI","TXT_EDIT_REMLEV")])
		this.AddButtonDefinition(P_BILLSTAT)
		this.AddButtonDefinition(P_DISPUTE)
		this.AddButtonDefinition(P_UNBLOCK)
		this.AddButtonDefinition(P_COLLECT,,,[GetText("AR","TT_COLLECTING_AGENCY")])
		this.AddButtonDefinition(P_ALLOCATE)
		this.AddButtonDefinition(P_PRINT)
		this.AddButtonDefinition(P_AGING)
		this.AddButtonDefinition(P_DELETE)
		this.AddButtonDefinition(P_ARTRANSFER)
		this.AddButtonDefinition(P_MARK)
		this.AddButtonDefinition(P_SEARCH)
		this.IncludeProcess(P_FIND_NEXT)
		this.IncludeProcess(P_FIND_PREV)
		this.AddButtonDefinition(P_TOP)
		this.AddButtonDefinition(P_PREVIOUS)
		this.AddButtonDefinition(P_NEXT)
		this.AddButtonDefinition(P_BOTTOM)
		this.AddButtonDefinition(P_COLUMNS)
		this.AddButtonDefinition(P_CLOSE)
	ENDPROC

	PROCEDURE onaging
		thisformset.maging()
	ENDPROC

	PROCEDURE onallocate
		thisformset.mallocate()
	ENDPROC

	PROCEDURE onbill
		thisformset.madjust()
	ENDPROC

	PROCEDURE onbillstat
		thisformset.mBillStatus()
	ENDPROC

	PROCEDURE onbillvisible
		RETURN _screen.oGlobal.oParam.pa_reopbil
	ENDPROC

	PROCEDURE oncollect
		thisformset.mcollectingagency()
	ENDPROC

	PROCEDURE ondispute
		thisformset.mdispute()
	ENDPROC

	PROCEDURE onfindnext
		thisform.FindNext()
	ENDPROC

	PROCEDURE onfindprev
		thisform.FindPrev()
	ENDPROC

	PROCEDURE onmark
		thisformset.mmark()
	ENDPROC

	PROCEDURE onpay
		thisformset.mpay()
	ENDPROC

	PROCEDURE ontransfer
		thisformset.mtransfer()
	ENDPROC

	PROCEDURE onunblock
		thisformset.moncanceldispute()
	ENDPROC

ENDDEFINE

DEFINE CLASS ctbrarremprint AS ctbrbase OF "cit_tbrform.vcx" 
 	*< CLASSDATA: Baseclass="custom" Timestamp="" Scale="Pixels" Uniqueid="" />

	#INCLUDE "..\include\constdefines.h"
	*<DefinedPropArrayMethod>
		*m: oncontrol
		*m: ondispute
		*m: onmark
		*m: onmarkall
		*m: onprintsign
		*m: onprintvisible
		*m: onunblock
	*</DefinedPropArrayMethod>

	Name = "ctbrarremprint"
	
	PROCEDURE Init
		this.AddButtonDefinition(P_PRINT,,,[GetText("ARREMPRI","TT_PRINT")])
		this.AddButtonDefinition(P_CONTROL)
		this.AddButtonDefinition(P_EDIT, [GetText("ARREMPRI","TXT_EDIT_REMLEV")])
		this.AddButtonDefinition(P_DISPUTE,,,[GetText("ARREMPRI","TT_DISPUTE")])
		this.AddButtonDefinition(P_UNBLOCK, [GetText("ARREMPRI","TXT_UNBLOCK")],,[GetText("ARREMPRI","TT_UNBLOCK")])
		this.AddButtonDefinition(P_DELETE, [GetText("ARREMPRI","TXT_DELETE_REM")],,[GetText("ARREMPRI","TT_DELETE_REM")])
		this.AddButtonDefinition(P_MARK_ONE, [GetText("ARREMPRI","TXT_MARK_UNMARK")],,[GetText("ARREMPRI","TT_MARK_UNMARK")])
		this.AddButtonDefinition(P_MARK_ALL, [GetText("ARREMPRI","TXT_MARK_UNMARK_ALL")],,[GetText("ARREMPRI","TT_MARK_UNMARK_ALL")])
		this.AddButtonDefinition(P_PRINTSIGN,,,[GetText("ARREMPRI","TT_PRINTED_SIGN")])
		this.AddButtonDefinition(P_SEARCH, [GetText("ARREMPRI","TXT_SELECT")],,[GetText("ARREMPRI","TT_SELECT")])
		this.AddButtonDefinition(P_SAVE, [GetText("ARREMPRI","TXT_CONFIRM")],,[GetText("ARREMPRI","TT_CONFIRM")])
		this.AddButtonDefinition(P_COLUMNS)
		this.AddButtonDefinition(P_CLOSE)
	ENDPROC

	PROCEDURE oncontrol
		thisform.OnControl()
	ENDPROC

	PROCEDURE ondispute
		thisform.OnDispute()
	ENDPROC

	PROCEDURE onmark
		thisform.OnMark()
	ENDPROC

	PROCEDURE onmarkall
		thisform.OnMarkAll()
	ENDPROC

	PROCEDURE onprintsign
		thisform.OnPrintSign()
	ENDPROC

	PROCEDURE onprintvisible
		RETURN NOT thisform.lCreditors
	ENDPROC

	PROCEDURE onunblock
		thisform.OnCancelDispute()
	ENDPROC

ENDDEFINE

DEFINE CLASS ctbravail AS ctbrbase OF "cit_tbrform.vcx" 
 	*< CLASSDATA: Baseclass="custom" Timestamp="" Scale="Pixels" Uniqueid="" />

	#INCLUDE "..\include\constdefines.h"
	*<DefinedPropArrayMethod>
		*m: ondenial
		*m: ondetail
		*m: onratefind
	*</DefinedPropArrayMethod>

	Name = "ctbravail"
	
	PROCEDURE Init
		DO CASE
			CASE LOWER(thisform.Name) = "brweventavail"
				this.AddButtonDefinition(P_DETAIL)
				this.AddButtonDefinition(P_PRINT)
				this.AddButtonDefinition(P_SEARCH)
				this.AddButtonDefinition(P_COLUMNS)
				this.AddButtonDefinition(P_CLOSE)
			CASE LOWER(thisform.Name) = "brwallottavail"
				this.AddButtonDefinition(P_NEW, [GetLangText("VIEW","TT_RESERVATION")])
				this.AddButtonDefinition(P_PRINT)
				this.AddButtonDefinition(P_COLUMNS)
				this.AddButtonDefinition(P_CLOSE)
			CASE INLIST(LOWER(thisform.Name), "brwavail", "frmavail")
				this.AddButtonDefinition(P_NEW, [GetLangText("VIEW","TT_RESERVATION")])
				IF _screen.APS
					this.AddButtonDefinition(P_RATE_FIND)
				ENDIF
				this.AddButtonDefinition(P_DENIAL)
				this.AddButtonDefinition(P_PRINT)
				this.AddButtonDefinition(P_SEARCH)
				this.AddButtonDefinition(P_COLUMNS)
				IF LOWER(thisform.Name) = "frmavail"
					this.AddButtonDefinition(P_PREVIOUS)
					this.AddButtonDefinition(P_NEXT)
				ENDIF
				this.AddButtonDefinition(P_CLOSE)
			CASE INLIST(LOWER(thisform.Name), "brwmultipropavail", "frmmultipropavail")
				this.AddButtonDefinition(P_NEW, [GetLangText("VIEW","TT_RESERVATION")])
				this.AddButtonDefinition(P_PRINT)
				this.AddButtonDefinition(P_SEARCH)
				this.AddButtonDefinition(P_COLUMNS)
				IF LOWER(thisform.Name) = "frmmultipropavail"
					this.AddButtonDefinition(P_PREVIOUS)
					this.AddButtonDefinition(P_NEXT)
				ENDIF
				this.AddButtonDefinition(P_CLOSE)
			CASE LOWER(thisform.Name) = "frmmaxavailbrowse"
				this.AddButtonDefinition(P_NEW, [GetLangText("VIEW","TT_RESERVATION")])
				this.AddButtonDefinition(P_DENIAL)
				this.AddButtonDefinition(P_CLOSE)
			OTHERWISE
		ENDCASE
	ENDPROC

	PROCEDURE ondenial
		IF LOWER(thisform.Name) = "frmmaxavailbrowse"
			thisformset.DenialReservation()
		ELSE
			thisform.OnDenial()
		ENDIF
	ENDPROC

	PROCEDURE ondetail
		thisform.OnDetail()
	ENDPROC

	PROCEDURE onratefind
		thisform.OnRateFind()
	ENDPROC

	PROCEDURE refreshcurrentgrid
		DO CASE
			CASE NOT INLIST(LOWER(thisform.Name), "frmavail", "frmmultipropavail")
			CASE TYPE("thisform.ActiveControl.BaseClass") = "U" OR NOT thisform.ActiveControl.BaseClass == "Grid"
				this.GetGridRef(thisform.grdAvailability)
			OTHERWISE
				this.GetGridRef(thisform.ActiveControl)
		ENDCASE
	ENDPROC

ENDDEFINE

DEFINE CLASS ctbraze AS ctbrbase OF "cit_tbrform.vcx" 
 	*< CLASSDATA: Baseclass="custom" Timestamp="" Scale="Pixels" Uniqueid="" />

	#INCLUDE "..\include\processes.h"
	*<DefinedPropArrayMethod>
		*m: onbreaks
		*m: onbreaksenable
	*</DefinedPropArrayMethod>

	Name = "ctbraze"
	
	PROCEDURE Init
		DO CASE
			CASE thisform.FormName = "TimeMonthView"
				this.AddButtonDefinition(P_SEARCH)
				this.AddButtonDefinition(P_PRINT)
				this.AddButtonDefinition(P_SAVE)
			CASE INLIST(thisform.FormName, "TimePlanEmployee", "TimeWorkBreaks")
				this.AddButtonDefinition(P_NEW)
				this.AddButtonDefinition(P_EDIT)
				this.AddButtonDefinition(P_DELETE)
			CASE thisform.FormName = "TimeWorkHoursDetails"
				this.AddButtonDefinition(P_NEW)
				this.AddButtonDefinition(P_EDIT)
				this.AddButtonDefinition(P_DELETE)
				this.AddButtonDefinition(P_PRINT)
				this.AddButtonDefinition(P_TIME_BREAKS)
			CASE thisform.FormName = "TimeWorkHours"
				this.AddButtonDefinition(P_EDIT)
				this.AddButtonDefinition(P_SEARCH)
			OTHERWISE
		ENDCASE
		this.AddButtonDefinition(P_COLUMNS)
		this.AddButtonDefinition(P_CLOSE)
	ENDPROC

	PROCEDURE onbreaks
		thisform.OnBreaks()
	ENDPROC

	PROCEDURE onbreaksenable
		RETURN NOT EOF(thisform.TimePlanCursor) AND NOT (EMPTY(EVALUATE(thisform.TimePlanCursor+".cr_whid")) AND (EVALUATE(thisform.TimePlanCursor+".cr_nday") = 99 OR EMPTY(EVALUATE(thisform.TimePlanCursor+".cr_npause"))))
	ENDPROC

	PROCEDURE ondeleteenable
		RETURN NOT EOF(thisform.TimePlanCursor) AND (NOT INLIST(thisform.FormName, "TimeWorkHoursDetails", "TimeWorkBreaks") OR ;
			thisform.FormName = "TimeWorkHoursDetails" AND NOT EMPTY(EVALUATE(thisform.TimePlanCursor+".cr_whid")) OR ;
			thisform.FormName = "TimeWorkBreaks" AND NOT EMPTY(EVALUATE(thisform.TimePlanCursor+".cr_wbid")))
	ENDPROC

	PROCEDURE oneditenable
		RETURN NOT EOF(thisform.TimePlanCursor) AND (NOT INLIST(thisform.FormName, "TimeWorkHoursDetails", "TimeWorkBreaks") OR ;
			thisform.FormName = "TimeWorkHoursDetails" AND NOT EMPTY(EVALUATE(thisform.TimePlanCursor+".cr_whid")) OR ;
			thisform.FormName = "TimeWorkBreaks" AND NOT EMPTY(EVALUATE(thisform.TimePlanCursor+".cr_wbid")))
	ENDPROC

	PROCEDURE onnewenable
		RETURN thisform.FormName <> "TimeWorkBreaks" OR NOT EMPTY(thisform.nWorkHourID)
	ENDPROC

ENDDEFINE

DEFINE CLASS ctbrbase AS _custom OF "..\common\libs\_lbasec.vcx" 
 	*< CLASSDATA: Baseclass="custom" Timestamp="" Scale="Pixels" Uniqueid="" />

	#INCLUDE "..\include\constdefines.h"
	*<DefinedPropArrayMethod>
		*m: addbuttondefinition
		*m: changecaption
		*m: disableitem
		*m: getgridref
		*m: includeprocess
		*m: keypress		&& Occurs when the user presses and releases a key.
		*m: onaddress
		*m: onaddressenable
		*m: onbottom
		*m: onbottomenable
		*m: onclose
		*m: oncloseenable
		*m: oncolumn
		*m: oncolumnenable
		*m: oncolumnvisible
		*m: oncopy
		*m: oncopyenable
		*m: ondelete
		*m: ondeleteenable
		*m: onedit
		*m: oneditenable
		*m: ongroupcolor
		*m: ongroupcolorenable
		*m: ongroupcopy
		*m: ongroupcopyenable
		*m: ongroupfunc
		*m: ongroupfuncenable
		*m: ongroupinfo
		*m: ongroupinfoenable
		*m: ongroupnamechange
		*m: ongroupnamechangeenable
		*m: ongrouppaymaster
		*m: ongrouppaymasterenable
		*m: ongroupresbrwforgroup
		*m: ongrouprescopy
		*m: ongrouprescopyenable
		*m: ongroupresname
		*m: ongroupresnameenable
		*m: ongroupsplit
		*m: ongroupsplitenable
		*m: onnew
		*m: onnewenable
		*m: onnext
		*m: onnextenable
		*m: onprevious
		*m: onpreviousenable
		*m: onprint
		*m: onprintenable
		*m: onrefresh
		*m: onrefreshenable
		*m: onsave
		*m: onsaveenable
		*m: onsearch
		*m: onsearchenable
		*m: onsearchmore
		*m: onsearchmoreenable
		*m: onselect
		*m: onselectenable
		*m: ontableplan
		*m: ontableplanenable
		*m: ontop
		*m: ontopenable
		*m: ontransfer
		*m: ontransferenable
		*m: onundo
		*m: onundoenable
		*m: refreshcurrentgrid
		*m: showitem
		*p: cprocesses
		*p: luseudpopupmenu
		*p: ocurrentgrid
		*a: apopupmenu[1,0]
		*a: atoolbar[1,0]
	*</DefinedPropArrayMethod>

	cprocesses = 
	Name = "ctbrbase"
	ocurrentgrid = .NULL.
	
	PROCEDURE addbuttondefinition
		LPARAMETERS tnProcess, tcCaptionMacro, tcPicture, tcToolTipText, tlPopup, tlModalClick
		LOCAL lnRows
		
		this.IncludeProcess(tnProcess)
		lnRows = IIF(EMPTY(this.aToolBar[1]), 0, ALEN(this.aToolBar,1)) + 1
		DIMENSION this.aToolBar[lnRows,6]
		
		this.aToolBar[lnRows,1] = tnProcess												&& Process
		this.aToolBar[lnRows,2] = tcCaptionMacro										&& Caption macro
		this.aToolBar[lnRows,3] = tcPicture												&& Picture
		this.aToolBar[lnRows,4] = tcToolTipText											&& Tool Tip Text
		this.aToolBar[lnRows,5] = tlPopup OR INLIST(tnProcess, P_COLUMNS, P_GROUPFUNC)	&& Popup
		this.aToolBar[lnRows,6] = tlModalClick											&& Modal Click
	ENDPROC

	PROCEDURE changecaption
		LPARAMETERS tnProcess, tcCaptionMacro
		LOCAL lnButton
		
		lnButton = ASCAN(this.aToolBar, tnProcess, 1, 0, 1, 14)
		IF NOT EMPTY(lnButton)
			this.aToolBar[lnButton,2] = tcCaptionMacro			&& Caption macro
		
			goTbrMain.Controls(lnButton).Caption = &tcCaptionMacro
			goTbrMain.Controls(lnButton).SetToolTipText()
			goTbrMain.Controls(lnButton).lSmallButton = goTbrMain.Controls(lnButton).lSmallButton
		ENDIF
	ENDPROC

	PROCEDURE disableitem
		LPARAMETERS toColumn
		
		RETURN .F.
	ENDPROC

	PROCEDURE getgridref
		LPARAMETERS toControl
		LOCAL lnControl
		
		IF PCOUNT() = 0
			toControl = thisform
		ENDIF
		
		DO CASE
			CASE TYPE("toControl.BaseClass") = "U"
			CASE toControl.BaseClass == "Grid"
				this.oCurrentGrid = toControl
			OTHERWISE
				IF TYPE("toControl.ControlCount") <> "U" AND toControl.BaseClass <> "Olecontrol"
					FOR lnControl = 1 TO toControl.ControlCount
						IF TYPE("toControl.Controls(lnControl)") = "O"
							this.GetGridRef(toControl.Controls(lnControl))
							IF NOT ISNULL(this.oCurrentGrid)
								EXIT
							ENDIF
						ENDIF
					NEXT
				ENDIF
				IF TYPE("toControl.PageCount") <> "U" AND toControl.BaseClass <> "Olecontrol"
					FOR lnControl = 1 TO toControl.PageCount
						IF TYPE("toControl.Pages(lnControl)") = "O"
							this.GetGridRef(toControl.Pages(lnControl))
							IF NOT ISNULL(this.oCurrentGrid)
								EXIT
							ENDIF
						ENDIF
					NEXT
				ENDIF
		ENDCASE
	ENDPROC

	PROCEDURE includeprocess
		LPARAMETERS tnProcess
		
		this.cProcesses = this.cProcesses + IIF(EMPTY(this.cProcesses), "", ",") + ALLTRIM(STR(tnProcess))
	ENDPROC

	PROCEDURE keypress		&& Occurs when the user presses and releases a key.
		LPARAMETERS nKeyCode, nShiftAltCtrl
		LOCAL loProcess, llDone
		
		****************************************************************************************************************************
		*
		* Return .T., when pressed key combination is found, to prevent keypress event in form, to send this event up in call chain
		* with NODEFAULT command.
		*
		* For example look into addressmask.scx FAddressMask.KeyPress
		*
		****************************************************************************************************************************
		
		FOR EACH loProcess IN _screen.oProcessHandler FOXOBJECT
			IF loProcess.KeyPress(nKeyCode, nShiftAltCtrl, thisform)
				llDone = .T.
				EXIT
			ENDIF
		NEXT
		
		RETURN llDone
	ENDPROC

	PROCEDURE onaddress
		thisform.OnAddress()
	ENDPROC

	PROCEDURE onaddressenable
	ENDPROC

	PROCEDURE onbottom
		thisform.OnBottom()
	ENDPROC

	PROCEDURE onbottomenable
	ENDPROC

	PROCEDURE onclose
		thisform.OnClose()
	ENDPROC

	PROCEDURE oncloseenable
	ENDPROC

	PROCEDURE oncolumn
		goTbrMain.PopupColumnMenu()
	ENDPROC

	PROCEDURE oncolumnenable
	ENDPROC

	PROCEDURE oncolumnvisible
		RETURN paRights(23)
	ENDPROC

	PROCEDURE oncopy
		thisform.OnCopy()
	ENDPROC

	PROCEDURE oncopyenable
	ENDPROC

	PROCEDURE ondelete
		thisform.OnDelete()
	ENDPROC

	PROCEDURE ondeleteenable
	ENDPROC

	PROCEDURE onedit
		thisform.OnEdit()
	ENDPROC

	PROCEDURE oneditenable
	ENDPROC

	PROCEDURE ongroupcolor
		thisform.oGroupFunctions.OnGroupColor()
	ENDPROC

	PROCEDURE ongroupcolorenable
		RETURN this.OnGroupFuncEnable() AND paRights(13)
	ENDPROC

	PROCEDURE ongroupcopy
		thisform.oGroupFunctions.OnCopyGroup()
	ENDPROC

	PROCEDURE ongroupcopyenable
		RETURN this.OnGroupFuncEnable() AND paRights(4)
	ENDPROC

	PROCEDURE ongroupfunc
		thisform.oGroupFunctions.OnGroupFunctions()
	ENDPROC

	PROCEDURE ongroupfuncenable
	ENDPROC

	PROCEDURE ongroupinfo
		thisform.oGroupFunctions.OnGroupInfo()
	ENDPROC

	PROCEDURE ongroupinfoenable
		RETURN this.OnGroupFuncEnable() AND paRights(16)
	ENDPROC

	PROCEDURE ongroupnamechange
		thisform.oGroupFunctions.OnGroupNameChange()
	ENDPROC

	PROCEDURE ongroupnamechangeenable
		RETURN this.OnGroupFuncEnable() AND paRights(2)
	ENDPROC

	PROCEDURE ongrouppaymaster
		thisform.oGroupFunctions.OnEditPaymaster()
	ENDPROC

	PROCEDURE ongrouppaymasterenable
		RETURN this.OnGroupFuncEnable()
	ENDPROC

	PROCEDURE ongroupresbrwforgroup
		thisform.oGroupFunctions.OnResBrwForGroup()
	ENDPROC

	PROCEDURE ongrouprescopy
		thisform.oGroupFunctions.OnGroupCopyReservation()
	ENDPROC

	PROCEDURE ongrouprescopyenable
		RETURN this.OnGroupFuncEnable()
	ENDPROC

	PROCEDURE ongroupresname
		thisform.oGroupFunctions.OnGroupResName()
	ENDPROC

	PROCEDURE ongroupresnameenable
		RETURN this.OnGroupFuncEnable() AND _screen.oGlobal.oParam2.pa_noaddr AND _screen.oGlobal.oParam2.pa_rentmod
	ENDPROC

	PROCEDURE ongroupsplit
		thisform.oGroupFunctions.OnQuickEdit()
	ENDPROC

	PROCEDURE ongroupsplitenable
		RETURN this.OnGroupFuncEnable() AND paRights(13)
	ENDPROC

	PROCEDURE onnew
		thisform.OnNew()
	ENDPROC

	PROCEDURE onnewenable
	ENDPROC

	PROCEDURE onnext
		thisform.OnNext()
	ENDPROC

	PROCEDURE onnextenable
	ENDPROC

	PROCEDURE onprevious
		thisform.OnPrevious()
	ENDPROC

	PROCEDURE onpreviousenable
	ENDPROC

	PROCEDURE onprint
		thisform.OnPrint()
	ENDPROC

	PROCEDURE onprintenable
	ENDPROC

	PROCEDURE onrefresh
	ENDPROC

	PROCEDURE onrefreshenable
	ENDPROC

	PROCEDURE onsave
		thisform.OnSave()
	ENDPROC

	PROCEDURE onsaveenable
	ENDPROC

	PROCEDURE onsearch
		thisform.OnSearch()
	ENDPROC

	PROCEDURE onsearchenable
	ENDPROC

	PROCEDURE onsearchmore
		thisform.OnSearchMore()
	ENDPROC

	PROCEDURE onsearchmoreenable
	ENDPROC

	PROCEDURE onselect
		thisform.OnSelect()
	ENDPROC

	PROCEDURE onselectenable
	ENDPROC

	PROCEDURE ontableplan
	ENDPROC

	PROCEDURE ontableplanenable
	ENDPROC

	PROCEDURE ontop
		thisform.OnTop()
	ENDPROC

	PROCEDURE ontopenable
	ENDPROC

	PROCEDURE ontransfer
	ENDPROC

	PROCEDURE ontransferenable
	ENDPROC

	PROCEDURE onundo
		thisform.OnUndo()
	ENDPROC

	PROCEDURE onundoenable
	ENDPROC

	PROCEDURE refreshcurrentgrid
	ENDPROC

	PROCEDURE showitem
		LPARAMETERS toColumn
		LOCAL llShow
		
		DO CASE
			CASE TYPE("toColumn.lShow") # "U"
				llShow = toColumn.lShow
			CASE VARTYPE(this.oCurrentGrid) = "O"
				llShow = _screen.oGlobal.Grid_GetColumnProperty(this.oCurrentGrid, toColumn, "gr_show")
			OTHERWISE
				llShow = .T.
		ENDCASE
		
		RETURN llShow
	ENDPROC

ENDDEFINE

DEFINE CLASS ctbrbill AS ctbrbase OF "cit_tbrform.vcx" 
 	*< CLASSDATA: Baseclass="custom" Timestamp="" Scale="Pixels" Uniqueid="" />

	#INCLUDE "..\include\processes.h"
	*<DefinedPropArrayMethod>
		*m: on3_6bills
		*m: on3_6billsvisible
		*m: onbonus
		*m: onbonusenable
		*m: oncheckout
		*m: oncheckoutenable
		*m: oncheckoutvisible
		*m: ondiscount
		*m: ondiscountenable
		*m: onformat
		*m: onformatenable
		*m: ongroup
		*m: ongroupenable
		*m: onhistory
		*m: oninsert
		*m: oninsertenable
		*m: oninterface
		*m: oninterfaceenable
		*m: oninvoice
		*m: oninvoiceenable
		*m: oninvoicevisible
		*m: onmark
		*m: onmarkenable
		*m: onpay
		*m: onpayenable
		*m: onpost
		*m: onpostenable
		*m: onpreview
		*m: onpreviewenable
		*m: onprintall
		*m: onprintallenable
		*m: onratepost
		*m: onratepostenable
		*m: onredirect
		*m: onredirectenable
		*m: onreopen
		*m: onreopenenable
		*m: onsplit
		*m: onsplitenable
		*m: onvoucher
		*m: onvoucherenable
		*m: openwindowselected
	*</DefinedPropArrayMethod>

	Name = "ctbrbill"
	
	PROCEDURE Init
		this.AddButtonDefinition(P_EDIT)
		this.AddButtonDefinition(P_POST)
		this.AddButtonDefinition(P_PAY)
		IF _screen.GS
			this.AddButtonDefinition(P_VOUCHER)
		ENDIF
		IF _screen.BMS
			this.AddButtonDefinition(P_DISCOUNT)
			this.AddButtonDefinition(P_BONUS)
		ENDIF
		this.AddButtonDefinition(P_POST_RATECODE)
		this.AddButtonDefinition(P_DELETE)
		this.AddButtonDefinition(P_MARK)
		this.AddButtonDefinition(P_INSERT)
		this.AddButtonDefinition(P_SPLIT)
		this.AddButtonDefinition(P_PRINT)
		this.AddButtonDefinition(P_PRINT_ALL)
		this.AddButtonDefinition(P_PREVIEW)
		IF _screen.BRO
			this.AddButtonDefinition(P_BILLREOPEN,,,[GetText("BILL","TT_REOPEN")])
		ENDIF
		this.AddButtonDefinition(P_CHECKOUT)
		this.AddButtonDefinition(P_INVOICE)
		this.AddButtonDefinition(P_REDIRECT)
		this.AddButtonDefinition(P_HISTORY)
		this.AddButtonDefinition(P_INTERFACE)
		this.AddButtonDefinition(P_FORMAT)
		this.AddButtonDefinition(P_GROUP)
		this.AddButtonDefinition(P_3_6_BILLS)
		this.AddButtonDefinition(P_CLOSE)
	ENDPROC

	PROCEDURE on3_6bills
		thisformset.OnExtend()
	ENDPROC

	PROCEDURE on3_6billsvisible
		RETURN NOT _screen.oGlobal.oParam.pa_billext
	ENDPROC

	PROCEDURE onbonus
		thisformset.OnBonus()
	ENDPROC

	PROCEDURE onbonusenable
		RETURN paRights(182) AND this.OpenWindowSelected()
	ENDPROC

	PROCEDURE oncheckout
		thisformset.OnCheckOut()
	ENDPROC

	PROCEDURE oncheckoutenable
		RETURN paRights(76) AND reservat.rs_depdate >= g_sysdate
	ENDPROC

	PROCEDURE oncheckoutvisible
		RETURN NOT thisformset.ShowPreliminaryInvoice()
	ENDPROC

	PROCEDURE oncloseenable
		RETURN paRights(65)
	ENDPROC

	PROCEDURE ondelete
		thisformset.OnDelete()
	ENDPROC

	PROCEDURE ondeleteenable
		RETURN paRights(69) AND this.OpenWindowSelected()
	ENDPROC

	PROCEDURE ondiscount
		thisformset.OnDiscount()
	ENDPROC

	PROCEDURE ondiscountenable
		RETURN paRights(183) AND this.OpenWindowSelected()
	ENDPROC

	PROCEDURE onedit
		thisformset.OnEdit()
	ENDPROC

	PROCEDURE oneditenable
		RETURN paRights(66)
	ENDPROC

	PROCEDURE onformat
		thisformset.OnFormat()
	ENDPROC

	PROCEDURE onformatenable
		RETURN paRights(79)
	ENDPROC

	PROCEDURE ongroup
		thisformset.OnGroup()
	ENDPROC

	PROCEDURE ongroupenable
		RETURN paRights(80) AND this.OpenWindowSelected()
	ENDPROC

	PROCEDURE onhistory
		thisformset.OnHistory()
	ENDPROC

	PROCEDURE oninsert
		thisformset.OnInsert()
	ENDPROC

	PROCEDURE oninsertenable
		RETURN paRights(71) AND this.OpenWindowSelected()
	ENDPROC

	PROCEDURE oninterface
		thisformset.OnInterface()
	ENDPROC

	PROCEDURE oninterfaceenable
		RETURN paRights(78)
	ENDPROC

	PROCEDURE oninvoice
		thisformset.OnPreliminaryInvoice()
	ENDPROC

	PROCEDURE oninvoiceenable
		RETURN paRights(180)
	ENDPROC

	PROCEDURE oninvoicevisible
		RETURN thisformset.ShowPreliminaryInvoice()
	ENDPROC

	PROCEDURE onmark
		thisformset.OnMark()
	ENDPROC

	PROCEDURE onmarkenable
		RETURN paRights(70) AND this.OpenWindowSelected()
	ENDPROC

	PROCEDURE onpay
		thisformset.OnPay()
	ENDPROC

	PROCEDURE onpayenable
		RETURN paRights(68) AND this.OpenWindowSelected()
	ENDPROC

	PROCEDURE onpost
		thisformset.OnPost()
	ENDPROC

	PROCEDURE onpostenable
		RETURN paRights(67) AND this.OpenWindowSelected()
	ENDPROC

	PROCEDURE onpreview
		thisformset.OnPreview()
	ENDPROC

	PROCEDURE onpreviewenable
		RETURN paRights(75)
	ENDPROC

	PROCEDURE onprint
		thisformset.OnPrint()
	ENDPROC

	PROCEDURE onprintall
		thisformset.OnPrintAll()
	ENDPROC

	PROCEDURE onprintallenable
		RETURN paRights(74)
	ENDPROC

	PROCEDURE onprintenable
		RETURN paRights(73)
	ENDPROC

	PROCEDURE onratepost
		thisformset.OnRatePost()
	ENDPROC

	PROCEDURE onratepostenable
		RETURN paRights(177) AND NOT g_Lite AND this.OpenWindowSelected()
	ENDPROC

	PROCEDURE onredirect
		thisformset.OnRedirect()
	ENDPROC

	PROCEDURE onredirectenable
		RETURN paRights(77) AND this.OpenWindowSelected()
	ENDPROC

	PROCEDURE onreopen
		thisformset.OnReopen()
	ENDPROC

	PROCEDURE onreopenenable
		RETURN paRights(185) AND NOT g_Lite AND thisformset.ActiveBillIsClosed("REOPEN")
	ENDPROC

	PROCEDURE onsplit
		thisformset.OnSplit()
	ENDPROC

	PROCEDURE onsplitenable
		RETURN paRights(72) AND this.OpenWindowSelected()
	ENDPROC

	PROCEDURE onvoucher
		thisformset.OnVoucher()
	ENDPROC

	PROCEDURE onvoucherenable
		RETURN this.OpenWindowSelected()
	ENDPROC

	PROCEDURE openwindowselected
		RETURN NOT thisformset.ActiveBillIsClosed()
	ENDPROC

ENDDEFINE

DEFINE CLASS ctbrbillhistory AS ctbrbase OF "cit_tbrform.vcx" 
 	*< CLASSDATA: Baseclass="custom" Timestamp="" Scale="Pixels" Uniqueid="" />

	#INCLUDE "..\include\processes.h"
	*<DefinedPropArrayMethod>
		*m: ondeletevisible
		*m: oneditvisible
		*m: onformat
		*m: onpreview
		*m: onpreviewenable
		*m: onprintrange
		*m: onspeciallogin
		*m: setbillformat
	*</DefinedPropArrayMethod>

	Name = "ctbrbillhistory"
	
	PROCEDURE Init
		this.AddButtonDefinition(P_EDIT)
		this.AddButtonDefinition(P_DELETE)
		this.AddButtonDefinition(P_PRINT)
		this.AddButtonDefinition(P_PREVIEW)
		this.AddButtonDefinition(P_PRINT_RANGE)
		this.AddButtonDefinition(P_FORMAT,,,, .T.)
		this.AddButtonDefinition(P_SEARCH)
		this.AddButtonDefinition(P_COLUMNS)
		this.AddButtonDefinition(P_CLOSE)
		this.IncludeProcess(P_SPEC_LOGIN)
	ENDPROC

	PROCEDURE ondelete
		thisformset.OnDelete()
	ENDPROC

	PROCEDURE ondeleteenable
		RETURN NOT EOF(thisform.grdBHist.RecordSource)
	ENDPROC

	PROCEDURE ondeletevisible
		RETURN thisformset.lSpecLogin
	ENDPROC

	PROCEDURE onedit
		thisformset.OnEdit()
	ENDPROC

	PROCEDURE oneditenable
		RETURN NOT EOF(thisform.grdBHist.RecordSource)
	ENDPROC

	PROCEDURE oneditvisible
	ENDPROC

	PROCEDURE onformat
		LOCAL llFromPopup, lcMenuName, lcDefStyle
		
		lcDefStyle = TRANSFORM(thisformset.lDefStyle)
		llFromPopup = TYPE("plFromPopup") # "U" AND plFromPopup
		IF NOT llFromPopup
			goTbrMain.PopupSubMenu(P_FORMAT)
		ENDIF
		
		lcMenuName = "PopupSubMenu" + ALLTRIM(STR(P_FORMAT))
		
		DEFINE BAR 1 OF &lcMenuName PROMPT GetLangText('CHKOUT2','TM_DETAIL')
		DEFINE BAR 2 OF &lcMenuName PROMPT GetLangText('CHKOUT2','TM_DAYART')
		DEFINE BAR 3 OF &lcMenuName PROMPT GetLangText('CHKOUT2','TM_ART')
		DEFINE BAR 4 OF &lcMenuName PROMPT GetLangText('CHKOUT2','TM_ARTPRICE')
		DEFINE BAR 5 OF &lcMenuName PROMPT GetLangText('CHKOUT2','TM_DAY')
		DEFINE BAR 6 OF &lcMenuName PROMPT GetLangText('CHKOUT2','TM_DAYARTPRICE')
		DEFINE BAR 7 OF &lcMenuName PROMPT GetLangText('CHKOUT2','TM_ROOM')
		DEFINE BAR 8 OF &lcMenuName PROMPT GetLangText('CHKOUT2','TM_ROOMDAYART')
		DEFINE BAR 9 OF &lcMenuName PROMPT GetLangText('CHKOUT2','TM_TOTALSTAY')
		DEFINE BAR 10 OF &lcMenuName PROMPT GetLangText('CHKOUT2','TM_PRINTCODE')
		DEFINE BAR 11 OF &lcMenuName PROMPT GetLangText("CHKOUT2","TM_ONLYROOM")
		DEFINE BAR 12 OF &lcMenuName PROMPT GetLangText("CHKOUT2","TM_ROOMPRINTCODE")
		DEFINE BAR 13 OF &lcMenuName PROMPT GetLangText("CHKOUT2","TM_PROARRDEP_ART_PRICE")
		DEFINE BAR 14 OF &lcMenuName PROMPT GetLangText("CHKOUT2","TM_PRO_ROOM_ARTICLE")
		DEFINE BAR 15 OF &lcMenuName PROMPT GetLangText("CHKOUT2","TM_PRO_RCARTPRICE")
		DEFINE BAR 16 OF &lcMenuName PROMPT GetLangText("CHKOUT2","TM_PRO_RCROOMARTPRICE")
		DEFINE BAR 17 OF &lcMenuName PROMPT GetLangText("CHKOUT2","TM_PER_ROOM_ARRDEP_ART_PRICE")
		DEFINE BAR 18 OF &lcMenuName PROMPT GetLangText("CHKOUT2","TM_PER_DAY_PRINTCODE")
		DEFINE BAR 50 OF &lcMenuName PROMPT "\-"
		DEFINE BAR 51 OF &lcMenuName PROMPT "\<"+GetLangText('BILLHIST','T_DEFBILLSTYLE')
		DEFINE BAR 60 OF &lcMenuName PROMPT "\-"
		DEFINE BAR 61 OF &lcMenuName PROMPT GetLangText("CHKOUT2","TXT_USEBOOKINDATE") SKIP FOR &lcDefStyle
		SET MARK OF BAR IIF(&lcDefStyle, 51, thisformset.nStyle) OF &lcMenuName TO .T.
		SET MARK OF BAR 61 OF &lcMenuName TO thisformset.lUseBookingDate
		ON SELECTION POPUP &lcMenuName goTbrMain.OnSelectionBar("SetBillFormat(BAR())")
		
		IF NOT llFromPopup
			ACTIVATE POPUP &lcMenuName
		ENDIF
	ENDPROC

	PROCEDURE onpreview
		thisformset.OnPreviewBill()
	ENDPROC

	PROCEDURE onpreviewenable
		RETURN NOT EOF(thisform.grdBHist.RecordSource)
	ENDPROC

	PROCEDURE onprint
		thisformset.OnPrintBill()
	ENDPROC

	PROCEDURE onprintenable
		RETURN NOT EOF(thisform.grdBHist.RecordSource)
	ENDPROC

	PROCEDURE onprintrange
		thisformset.OnPrintRange()
	ENDPROC

	PROCEDURE onsearch
		thisformset.OnSearch()
	ENDPROC

	PROCEDURE onspeciallogin
		thisformset.OnSpecialLogin()
	ENDPROC

	PROCEDURE setbillformat
		LPARAMETERS tnBar
		
		DO CASE
			CASE tnBar = 51
				thisformset.lDefStyle = .T.
				thisformset.lUseBookingDate = .F.
			CASE tnBar = 61
				thisformset.lUseBookingDate = NOT thisformset.lUseBookingDate
			OTHERWISE
				thisformset.lDefStyle = .F.
				thisformset.nStyle = tnBar
		ENDCASE
	ENDPROC

ENDDEFINE

DEFINE CLASS ctbrbmsbooking AS ctbrbase OF "cit_tbrform.vcx" 
 	*< CLASSDATA: Baseclass="custom" Timestamp="" Scale="Pixels" Uniqueid="" />

	#INCLUDE "..\include\processes.h"
	*<DefinedPropArrayMethod>
		*m: onspent
	*</DefinedPropArrayMethod>

	Name = "ctbrbmsbooking"
	
	PROCEDURE Init
		this.AddButtonDefinition(P_NEW,[GetText("RECURRES","TXT_CREATE")])
		this.AddButtonDefinition(P_SPENT)
		this.AddButtonDefinition(P_DELETE)
		this.AddButtonDefinition(P_SEARCH)
		this.AddButtonDefinition(P_CLOSE)
	ENDPROC

	PROCEDURE onspent
		thisform.OnSpent()
	ENDPROC

ENDDEFINE

DEFINE CLASS ctbremailbrowse AS ctbrbase OF "cit_tbrform.vcx" 
 	*< CLASSDATA: Baseclass="custom" Timestamp="" Scale="Pixels" Uniqueid="" />

	#INCLUDE "..\include\processes.h"
	*<DefinedPropArrayMethod>
		*m: onmark
		*m: onmarkall
		*m: onmarkallenable
		*m: onmarkenable
		*m: onpreview
		*m: onpreviewenable
		*m: onreceive
		*m: onredirect
		*m: onredirectenable
		*m: onreply
	*</DefinedPropArrayMethod>

	Name = "ctbremailbrowse"
	
	PROCEDURE Init
		this.AddButtonDefinition(P_RECEIVE)
		this.AddButtonDefinition(P_EM_ADDRESS)
		this.AddButtonDefinition(P_REPLAY)
		this.AddButtonDefinition(P_DELETE,,[maildelete])
		this.AddButtonDefinition(P_MARK_ONE,,[mark])
		this.AddButtonDefinition(P_MARK_ALL)
		this.AddButtonDefinition(P_PREVIEW,[GetText("EMBROWS","TXT_ATTACHMENT")],,[GetText("EMBROWS","TT_VIEW_ATTACH")])
		this.AddButtonDefinition(P_PRINT,[GetText("EMBROWS","TT_PRINT_MAIL")])
		this.AddButtonDefinition(P_CLOSE)
	ENDPROC

	PROCEDURE onmark
		thisform.OnMark()
	ENDPROC

	PROCEDURE onmarkall
		thisform.OnMarkAll()
	ENDPROC

	PROCEDURE onmarkallenable
	ENDPROC

	PROCEDURE onmarkenable
	ENDPROC

	PROCEDURE onpreview
		thisform.OnPreview()
	ENDPROC

	PROCEDURE onpreviewenable
		RETURN NOT thisform.AttachmentDisable()
	ENDPROC

	PROCEDURE onreceive
		thisform.OnReceive()
	ENDPROC

	PROCEDURE onredirect
	ENDPROC

	PROCEDURE onredirectenable
	ENDPROC

	PROCEDURE onreply
		thisform.OnReply()
	ENDPROC

ENDDEFINE

DEFINE CLASS ctbrextreser AS ctbrbase OF "cit_tbrform.vcx" 
 	*< CLASSDATA: Baseclass="custom" Timestamp="" Scale="Pixels" Uniqueid="" />

	#INCLUDE "..\include\constdefines.h"
	*<DefinedPropArrayMethod>
		*m: ondone
		*m: ongetresernow
		*m: ongetresernowvisible
		*m: onnoshow
		*m: onreservat
		*m: onreservations
		*m: onreservationsenable
		*m: onshowall
	*</DefinedPropArrayMethod>

	Name = "ctbrextreser"
	
	PROCEDURE Init
		this.AddButtonDefinition(P_EX_RESERVAT)
		this.AddButtonDefinition(P_RES_ADDRESS)
		this.AddButtonDefinition(P_DELETE,[GetText("EXTRESER","TXT_CANCEL_RESERVATION")])
		this.AddButtonDefinition(P_EX_NOSHOW)
		this.AddButtonDefinition(P_REFRESH)
		this.AddButtonDefinition(P_EX_DONE)
		this.AddButtonDefinition(P_EX_SHOWALL)
		this.AddButtonDefinition(P_SEARCH)
		this.AddButtonDefinition(P_EX_GETRESER)
		this.AddButtonDefinition(P_RESBRW)
		this.AddButtonDefinition(P_COLUMNS)
		this.AddButtonDefinition(P_CLOSE)
	ENDPROC

	PROCEDURE ondeleteenable
		RETURN paRights(6)
	ENDPROC

	PROCEDURE ondone
		thisform.OnDone()
	ENDPROC

	PROCEDURE ongetresernow
		thisform.OnGetReserNow()
	ENDPROC

	PROCEDURE ongetresernowvisible
		RETURN _screen.oGlobal.oParam2.pa_cwsync
	ENDPROC

	PROCEDURE onnoshow
		thisform.OnNoShow()
	ENDPROC

	PROCEDURE onrefresh
		thisform.RefreshAll()
	ENDPROC

	PROCEDURE onreservat
		thisform.InsertReservat()
	ENDPROC

	PROCEDURE onreservations
		thisform.OnReservations()
	ENDPROC

	PROCEDURE onreservationsenable
		RETURN NOT EOF(thisform.grdList.RecordSource) AND NOT EMPTY(EVALUATE(thisform.grdList.RecordSource+".er_reserid"))
	ENDPROC

	PROCEDURE onshowall
		thisform.OnShowAll()
	ENDPROC

ENDDEFINE

DEFINE CLASS ctbrhotstat AS ctbrbase OF "cit_tbrform.vcx" 
 	*< CLASSDATA: Baseclass="custom" Timestamp="" Scale="Pixels" Uniqueid="" />

	#INCLUDE "..\include\processes.h"
	*<DefinedPropArrayMethod>
		*m: ongoto
		*m: onsetdays
	*</DefinedPropArrayMethod>

	Name = "ctbrhotstat"
	
	PROCEDURE Init
		this.AddButtonDefinition(P_PREVIOUS)
		this.AddButtonDefinition(P_NEXT)
		this.AddButtonDefinition(P_GOTO)
		this.AddButtonDefinition(P_SETDAYS)
		this.AddButtonDefinition(P_PRINT)
		this.AddButtonDefinition(P_CLOSE)
	ENDPROC

	PROCEDURE ongoto
		thisformset.DoGoto()
	ENDPROC

	PROCEDURE onsetdays
		thisformset.DoSettings()
	ENDPROC

ENDDEFINE

DEFINE CLASS ctbrhousekeep AS ctbrbase OF "cit_tbrform.vcx" 
 	*< CLASSDATA: Baseclass="custom" Timestamp="" Scale="Pixels" Uniqueid="" />

	#INCLUDE "..\include\constdefines.h"
	*<DefinedPropArrayMethod>
		*m: onclean
		*m: oncleanall
		*m: oncleanallenable
		*m: oncleanenable
		*m: oncomment
		*m: oncommentenable
		*m: ondirty
		*m: ondirtyall
		*m: ondirtyallenable
		*m: ondirtyenable
		*m: onhistory
		*m: onhistoryenable
		*m: onmaid
		*m: onmaidenable
		*m: onmark
		*m: onmarkall
		*m: onmarkallenable
		*m: onmarkenable
	*</DefinedPropArrayMethod>

	Name = "ctbrhousekeep"
	
	PROCEDURE Init
		this.AddButtonDefinition(P_CLEAN)
		this.AddButtonDefinition(P_DIRTY)
		this.AddButtonDefinition(P_CLEAN_ALL)
		this.AddButtonDefinition(P_DIRTY_ALL)
		this.AddButtonDefinition(P_MARK_ONE)
		this.AddButtonDefinition(P_MARK_ALL)
		this.AddButtonDefinition(P_SEARCH)
		this.AddButtonDefinition(P_MAID)
		this.AddButtonDefinition(P_COMMENT)
		this.AddButtonDefinition(P_HISTORY)
		this.AddButtonDefinition(P_COLUMNS)
		this.AddButtonDefinition(P_CLOSE)
	ENDPROC

	PROCEDURE onclean
		thisform.MngCtrl.OnCmd1()
	ENDPROC

	PROCEDURE oncleanall
		thisform.MngCtrl.OnCmd3()
	ENDPROC

	PROCEDURE oncleanallenable
		RETURN paRights(243) AND NOT EOF(thisform.MngCtrl.gtAlias)
	ENDPROC

	PROCEDURE oncleanenable
		RETURN paRights(241) AND NOT EOF(thisform.MngCtrl.gtAlias)
	ENDPROC

	PROCEDURE oncomment
		thisform.MngCtrl.OnCmd9()
	ENDPROC

	PROCEDURE oncommentenable
		RETURN paRights(246) AND NOT EOF(thisform.MngCtrl.gtAlias)
	ENDPROC

	PROCEDURE ondirty
		thisform.MngCtrl.OnCmd2()
	ENDPROC

	PROCEDURE ondirtyall
		thisform.MngCtrl.OnCmd4()
	ENDPROC

	PROCEDURE ondirtyallenable
		RETURN paRights(244) AND NOT EOF(thisform.MngCtrl.gtAlias)
	ENDPROC

	PROCEDURE ondirtyenable
		RETURN paRights(242) AND NOT EOF(thisform.MngCtrl.gtAlias)
	ENDPROC

	PROCEDURE onhistory
		thisform.MngCtrl.OnCmd10()
	ENDPROC

	PROCEDURE onhistoryenable
		RETURN NOT EOF(thisform.MngCtrl.gtAlias)
	ENDPROC

	PROCEDURE onmaid
		thisform.MngCtrl.OnCmd8()
	ENDPROC

	PROCEDURE onmaidenable
		RETURN paRights(245) AND NOT EOF(thisform.MngCtrl.gtAlias)
	ENDPROC

	PROCEDURE onmark
		thisform.MngCtrl.OnCmd6()
	ENDPROC

	PROCEDURE onmarkall
		thisform.MngCtrl.OnCmd7()
	ENDPROC

	PROCEDURE onmarkallenable
		RETURN NOT EOF(thisform.MngCtrl.gtAlias)
	ENDPROC

	PROCEDURE onmarkenable
		RETURN NOT EOF(thisform.MngCtrl.gtAlias)
	ENDPROC

ENDDEFINE

DEFINE CLASS ctbrindex AS ctbrbase OF "cit_tbrform.vcx" 
 	*< CLASSDATA: Baseclass="custom" Timestamp="" Scale="Pixels" Uniqueid="" />

	#INCLUDE "..\include\processes.h"
	*<DefinedPropArrayMethod>
		*m: oncreate
		*m: onday
		*m: onmark
		*m: onuser
	*</DefinedPropArrayMethod>

	Name = "ctbrindex"
	
	PROCEDURE Init
		this.AddButtonDefinition(P_CREATE)
		this.AddButtonDefinition(P_DAY)
		this.AddButtonDefinition(P_MARK, [GetText("OPENFILE","TXT_COMPLETE")],[dirtyall])
		this.AddButtonDefinition(P_USERLIST)
		this.AddButtonDefinition(P_CLOSE)
	ENDPROC

	PROCEDURE oncreate
		thisform.OnCreate()
	ENDPROC

	PROCEDURE onday
		thisform.OnDay()
	ENDPROC

	PROCEDURE onmark
		thisform.OnMark()
	ENDPROC

	PROCEDURE onuser
		thisform.OnUser()
	ENDPROC

ENDDEFINE

DEFINE CLASS ctbrledger AS ctbrbase OF "cit_tbrform.vcx" 
 	*< CLASSDATA: Baseclass="custom" Timestamp="" Scale="Pixels" Uniqueid="" />

	#INCLUDE "..\include\processes.h"
	*<DefinedPropArrayMethod>
		*m: onhistory
		*m: onmark
		*m: onpay
		*m: onpost
		*m: onsign
		*m: onsignenable
	*</DefinedPropArrayMethod>

	Name = "ctbrledger"
	
	PROCEDURE Init
		this.AddButtonDefinition(P_PAY)
		this.AddButtonDefinition(P_POST,[GetText("LEDGER","TXT_BALANCE")],[graph07])
		this.AddButtonDefinition(P_MARK_ONE,[GetText("CHKOUT1","TXT_MARK")],[mark])
		IF _screen.oGlobal.lfiskaltrustactive
			this.AddButtonDefinition(P_SIGN)
		ENDIF
		this.AddButtonDefinition(P_HISTORY)
		this.AddButtonDefinition(P_SEARCH)
		this.AddButtonDefinition(P_COLUMNS)
		this.AddButtonDefinition(P_CLOSE)
	ENDPROC

	PROCEDURE onhistory
		thisformset.OnHistory()
	ENDPROC

	PROCEDURE onmark
		thisformset.OnMark()
	ENDPROC

	PROCEDURE onpay
		thisformset.OnPay()
	ENDPROC

	PROCEDURE onpost
		thisformset.OnBalance()
	ENDPROC

	PROCEDURE onsearch
		thisformset.OnSearch()
	ENDPROC

	PROCEDURE onsign
		thisformset.OnSign()
	ENDPROC

	PROCEDURE onsignenable
		RETURN NOT EOF("curLedgers") AND curLedgers.ld_billamt = curLedgers.ld_paidamt AND EMPTY(curLedgers.ld_qrcode)
	ENDPROC

ENDDEFINE

DEFINE CLASS ctbrmanager AS ctbrbase OF "cit_tbrform.vcx" 
 	*< CLASSDATA: Baseclass="custom" Timestamp="" Scale="Pixels" Uniqueid="" />

	#INCLUDE "..\include\constdefines.h"
	*<DefinedPropArrayMethod>
		*m: onaddrates
		*m: onaddratesenable
		*m: onbuttons
		*m: onbuttonsenable
		*m: oncitadelmobilearticles
		*m: oncitadelmobilearticlesenable
		*m: oncitadelmobileavailability
		*m: oncitadelmobileavailabilityenable
		*m: oncontrol
		*m: ondeposite
		*m: ondepositeenable
		*m: ondo
		*m: ondoenable
		*m: onevent
		*m: oneventenable
		*m: onexport
		*m: onexportenable
		*m: onfeature
		*m: onfeatureenable
		*m: onhistory
		*m: onhistoryenable
		*m: onimport
		*m: onimportenable
		*m: onkey
		*m: onkeyenable
		*m: onmark
		*m: onmarkall
		*m: onmarkallenable
		*m: onmarkenable
		*m: onmenu
		*m: onmenuenable
		*m: onmodify
		*m: onmodifyenable
		*m: onnote
		*m: onnoteenable
		*m: onpicture
		*m: onpictureenable
		*m: onpostings
		*m: onpostingsenable
		*m: onsql
		*m: onsqlenable
		*m: ontext
		*m: ontextenable
		*m: ontimeplan
		*m: ontimeplanenable
	*</DefinedPropArrayMethod>

	Name = "ctbrmanager"
	
	PROCEDURE onaddrates
		thisform.MngCtrl.OnCmd6()
	ENDPROC

	PROCEDURE onaddratesenable
	ENDPROC

	PROCEDURE onbuttons
		thisform.MngCtrl.OnCmd7()
	ENDPROC

	PROCEDURE onbuttonsenable
		RETURN NOT EOF(thisform.MngCtrl.GTAlias)
	ENDPROC

	PROCEDURE oncitadelmobilearticles
		thisform.MngCtrl.OnCmd8()
	ENDPROC

	PROCEDURE oncitadelmobilearticlesenable
		RETURN NOT EOF(thisform.MngCtrl.GTAlias)
	ENDPROC

	PROCEDURE oncitadelmobileavailability
		thisform.MngCtrl.OnCmd8()
	ENDPROC

	PROCEDURE oncitadelmobileavailabilityenable
		RETURN NOT EOF(thisform.MngCtrl.GTAlias)
	ENDPROC

	PROCEDURE oncolumnvisible
		LOCAL l_lVisible
		
		l_lVisible = .T.
		
		IF TYPE("_screen.ActiveForm.mngctrl.ldontwritetogridtable") = "L"
			l_lVisible = NOT _screen.ActiveForm.mngctrl.ldontwritetogridtable
		ENDIF
		
		IF l_lVisible
			l_lVisible = DODEFAULT()
		ENDIF
		
		RETURN l_lVisible
		
		
	ENDPROC

	PROCEDURE oncontrol
		IF LOWER(thisform.Name) = "mngform" AND LOWER(thisform.MngCtrl.Class) = "mngratecctrl"
			thisform.MngCtrl.OnCmd7()
		ENDIF
	ENDPROC

	PROCEDURE oncopyenable
		RETURN thisform.MngCtrl.nMode <> READONLY_MODE AND thisform.MngCtrl.lCopyEnabled AND NOT EOF(thisform.MngCtrl.GTAlias)
	ENDPROC

	PROCEDURE ondeleteenable
		RETURN thisform.MngCtrl.nMode <> READONLY_MODE AND NOT EOF(thisform.MngCtrl.GTAlias)
	ENDPROC

	PROCEDURE ondeposite
		thisform.MngCtrl.OnCmd7()
	ENDPROC

	PROCEDURE ondepositeenable
		RETURN thisform.MngCtrl.nMode <> READONLY_MODE AND NOT EOF(thisform.MngCtrl.GTAlias)
	ENDPROC

	PROCEDURE ondo
		thisform.MngCtrl.OnCmd6()
	ENDPROC

	PROCEDURE ondoenable
		RETURN NOT EOF(thisform.MngCtrl.GTAlias)
	ENDPROC

	PROCEDURE oneditenable
		RETURN thisform.MngCtrl.nMode <> READONLY_MODE AND NOT EOF(thisform.MngCtrl.GTAlias)
	ENDPROC

	PROCEDURE onevent
		thisform.MngCtrl.OnCmd6()
	ENDPROC

	PROCEDURE oneventenable
		RETURN thisform.MngCtrl.nMode <> READONLY_MODE AND NOT EOF(thisform.MngCtrl.GTAlias)
	ENDPROC

	PROCEDURE onexport
		thisform.MngCtrl.OnCmd8()
	ENDPROC

	PROCEDURE onexportenable
		RETURN NOT EOF(thisform.MngCtrl.GTAlias)
	ENDPROC

	PROCEDURE onfeature
		thisform.MngCtrl.OnCmd6()
	ENDPROC

	PROCEDURE onfeatureenable
		RETURN thisform.MngCtrl.nMode <> READONLY_MODE AND NOT EOF(thisform.MngCtrl.GTAlias)
	ENDPROC

	PROCEDURE onhistory
		thisform.MngCtrl.OnCmd7()
	ENDPROC

	PROCEDURE onhistoryenable
		RETURN NOT EOF(thisform.MngCtrl.GTAlias)
	ENDPROC

	PROCEDURE onimport
		thisform.MngCtrl.OnCmd9()
	ENDPROC

	PROCEDURE onimportenable
		RETURN thisform.MngCtrl.nMode <> READONLY_MODE AND NOT EOF(thisform.MngCtrl.GTAlias)
	ENDPROC

	PROCEDURE onkey
		thisform.MngCtrl.OnCmd6()
	ENDPROC

	PROCEDURE onkeyenable
		RETURN thisform.MngCtrl.nMode <> READONLY_MODE AND NOT EOF(thisform.MngCtrl.GTAlias)
	ENDPROC

	PROCEDURE onmark
		thisform.MngCtrl.OnCmd8()
	ENDPROC

	PROCEDURE onmarkall
		thisform.MngCtrl.OnCmd9()
	ENDPROC

	PROCEDURE onmarkallenable
		RETURN NOT EOF(thisform.MngCtrl.gtAlias)
	ENDPROC

	PROCEDURE onmarkenable
		RETURN NOT EOF(thisform.MngCtrl.gtAlias)
	ENDPROC

	PROCEDURE onmenu
		thisform.MngCtrl.OnCmd6()
	ENDPROC

	PROCEDURE onmenuenable
		RETURN NOT EOF(thisform.MngCtrl.GTAlias)
	ENDPROC

	PROCEDURE onmodify
		thisform.MngCtrl.OnCmd7()
	ENDPROC

	PROCEDURE onmodifyenable
		RETURN thisform.MngCtrl.nMode <> READONLY_MODE AND NOT EOF(thisform.MngCtrl.GTAlias)
	ENDPROC

	PROCEDURE onnewenable
		RETURN thisform.MngCtrl.nMode <> READONLY_MODE AND thisform.MngCtrl.lNewEnabled
	ENDPROC

	PROCEDURE onnote
		DO CASE
			CASE LOWER(thisform.Name) = "mngform" AND LOWER(thisform.MngCtrl.Class) = "mngarticlectrl"
				thisform.MngCtrl.OnCmd9()
			OTHERWISE
				thisform.MngCtrl.OnCmd6()
		ENDCASE
		
		RETURN .T.
	ENDPROC

	PROCEDURE onnoteenable
		RETURN thisform.MngCtrl.nMode <> READONLY_MODE AND NOT EOF(thisform.MngCtrl.GTAlias)
	ENDPROC

	PROCEDURE onpicture
		thisform.MngCtrl.OnCmd7()
	ENDPROC

	PROCEDURE onpictureenable
		RETURN thisform.MngCtrl.nMode <> READONLY_MODE AND NOT EOF(thisform.MngCtrl.GTAlias)
	ENDPROC

	PROCEDURE onpostings
		thisform.MngCtrl.OnCmd8()
	ENDPROC

	PROCEDURE onpostingsenable
		RETURN NOT EOF(thisform.MngCtrl.GTAlias)
	ENDPROC

	PROCEDURE onsaveenable
		RETURN thisform.MngCtrl.lSaveEnabled
	ENDPROC

	PROCEDURE onsearchenable
		RETURN thisform.MngCtrl.lSearchEnabled
	ENDPROC

	PROCEDURE onsearchmoreenable
		RETURN thisform.MngCtrl.lSearchMoreEnabled
	ENDPROC

	PROCEDURE onsql
		thisform.MngCtrl.OnCmd10()
	ENDPROC

	PROCEDURE onsqlenable
		RETURN thisform.MngCtrl.nMode <> READONLY_MODE AND NOT EOF(thisform.MngCtrl.GTAlias)
	ENDPROC

	PROCEDURE ontext
		thisform.MngCtrl.OnCmd11()
	ENDPROC

	PROCEDURE ontextenable
		RETURN thisform.MngCtrl.nMode <> READONLY_MODE AND NOT EOF(thisform.MngCtrl.GTAlias)
	ENDPROC

	PROCEDURE ontimeplan
		thisform.MngCtrl.OnCmd6()
	ENDPROC

	PROCEDURE ontimeplanenable
		RETURN NOT EOF(thisform.MngCtrl.GTAlias)
	ENDPROC

ENDDEFINE

DEFINE CLASS ctbrphone AS ctbrbase OF "cit_tbrform.vcx" 
 	*< CLASSDATA: Baseclass="custom" Timestamp="" Scale="Pixels" Uniqueid="" />

	#INCLUDE "..\include\processes.h"
	*<DefinedPropArrayMethod>
		*m: onlock
		*m: onmessage
		*m: onunlock
	*</DefinedPropArrayMethod>

	Name = "ctbrphone"
	
	PROCEDURE Init
		this.AddButtonDefinition(P_SEARCH)
		this.AddButtonDefinition(P_LOCK)
		this.AddButtonDefinition(P_UNLOCK)
		this.AddButtonDefinition(P_MESSAGES,,[mail])
		this.AddButtonDefinition(P_REFRESH)
		this.AddButtonDefinition(P_COLUMNS)
		this.AddButtonDefinition(P_CLOSE)
	ENDPROC

	PROCEDURE onlock
		thisformset.OnLock()
	ENDPROC

	PROCEDURE onmessage
		thisformset.OnMessage()
	ENDPROC

	PROCEDURE onrefresh
		thisformset.OnRefresh()
	ENDPROC

	PROCEDURE onunlock
		thisformset.OnUnlock()
	ENDPROC

ENDDEFINE

DEFINE CLASS ctbrphonebooth AS ctbrbase OF "cit_tbrform.vcx" 
 	*< CLASSDATA: Baseclass="custom" Timestamp="" Scale="Pixels" Uniqueid="" />

	#INCLUDE "..\include\processes.h"
	*<DefinedPropArrayMethod>
		*m: oninfo
		*m: oninfoenable
		*m: onmark
		*m: onmarkall
		*m: onmarkallenable
		*m: onmarkenable
		*m: onpay
		*m: onpayenable
		*m: onredirect
		*m: onredirectenable
	*</DefinedPropArrayMethod>

	Name = "ctbrphonebooth"
	
	PROCEDURE Init
		this.AddButtonDefinition(P_MARK)
		this.AddButtonDefinition(P_MARK_ALL)
		this.AddButtonDefinition(P_DELETE)
		this.AddButtonDefinition(P_PAY)
		this.AddButtonDefinition(P_REDIRECT)
		this.AddButtonDefinition(P_REFRESH)
		this.AddButtonDefinition(P_INFO)
		this.AddButtonDefinition(P_COLUMNS)
		this.AddButtonDefinition(P_CLOSE)
	ENDPROC

	PROCEDURE ondeleteenable
		RETURN RECCOUNT("curBooth") > 0
	ENDPROC

	PROCEDURE oninfo
		thisform.OnInfo()
	ENDPROC

	PROCEDURE oninfoenable
		RETURN RECCOUNT("curBooth") > 0
	ENDPROC

	PROCEDURE onmark
		thisform.OnMark()
	ENDPROC

	PROCEDURE onmarkall
		thisform.OnMarkAll()
	ENDPROC

	PROCEDURE onmarkallenable
		RETURN RECCOUNT("curBooth") > 0
	ENDPROC

	PROCEDURE onmarkenable
		RETURN RECCOUNT("curBooth") > 0
	ENDPROC

	PROCEDURE onpay
		thisform.OnPay()
	ENDPROC

	PROCEDURE onpayenable
		RETURN RECCOUNT("curBooth") > 0
	ENDPROC

	PROCEDURE onredirect
		thisform.OnRedirect()
	ENDPROC

	PROCEDURE onredirectenable
		RETURN RECCOUNT("curBooth") > 0
	ENDPROC

	PROCEDURE onrefresh
		thisform.OnRefresh()
	ENDPROC

ENDDEFINE

DEFINE CLASS ctbrquickedit AS ctbrbase OF "cit_tbrform.vcx" 
 	*< CLASSDATA: Baseclass="custom" Timestamp="" Scale="Pixels" Uniqueid="" />

	#INCLUDE "..\include\processes.h"
	*<DefinedPropArrayMethod>
		*m: ondo
		*m: oninfo
	*</DefinedPropArrayMethod>

	Name = "ctbrquickedit"
	
	PROCEDURE Init
		this.AddButtonDefinition(P_EDIT)
		this.AddButtonDefinition(P_DO, [GetText("RESERV2","TXT_AUTO")],,[GetText("GROUP","TT_AUTO")])
		this.AddButtonDefinition(P_INFO,,,[GetText("GROUP","TT_INFO")])
		this.AddButtonDefinition(P_PRINT,,,[GetText("WEEKFORM","TT_PRINT")])
		this.AddButtonDefinition(P_COLUMNS)
		this.AddButtonDefinition(P_CLOSE)
	ENDPROC

	PROCEDURE ondo
		thisformset.OnAuto()
	ENDPROC

	PROCEDURE oninfo
		thisformset.OnInfo()
	ENDPROC

ENDDEFINE

DEFINE CLASS ctbrratecodeview AS ctbrbase OF "cit_tbrform.vcx" 
 	*< CLASSDATA: Baseclass="custom" Timestamp="" Scale="Pixels" Uniqueid="" />

	#INCLUDE "..\include\processes.h"
	*<DefinedPropArrayMethod>
		*m: ondetail
		*m: ondetailenable
		*m: onseason
	*</DefinedPropArrayMethod>

	Name = "ctbrratecodeview"
	
	PROCEDURE Init
		this.AddButtonDefinition(P_SEARCH)
		this.AddButtonDefinition(P_DETAIL)
		IF LOWER(thisform.Name) = "frmratecodeview"
			this.AddButtonDefinition(P_SEASON)
		ENDIF
		this.AddButtonDefinition(P_COLUMNS)
		this.AddButtonDefinition(P_CLOSE)
	ENDPROC

	PROCEDURE ondetail
		thisform.OnDetail()
	ENDPROC

	PROCEDURE ondetailenable
		RETURN USED("curResultRC") AND RECCOUNT("curResultRC") <> 0
	ENDPROC

	PROCEDURE onseason
		thisform.OnSeason()
	ENDPROC

ENDDEFINE

DEFINE CLASS ctbrresbrw AS ctbrbase OF "cit_tbrform.vcx" 
 	*< CLASSDATA: Baseclass="custom" Timestamp="" Scale="Pixels" Uniqueid="" />

	#INCLUDE "..\include\constdefines.h"
	*<DefinedPropArrayMethod>
		*m: onbill
		*m: onbillenable
		*m: oncheckin
		*m: oncheckinall
		*m: oncheckinallenable
		*m: oncheckinallvisible
		*m: oncheckinenable
		*m: oncheckout
		*m: oncheckoutenable
		*m: oncheckoutvisible
		*m: onhistory
		*m: onhistoryenable
		*m: oninstruction
		*m: oninstructionenable
		*m: onmessage
		*m: onmessageenable
		*m: onnote
		*m: onnoteenable
		*m: onrecurring
		*m: onrecurringenable
		*m: searchbar
	*</DefinedPropArrayMethod>

	Name = "ctbrresbrw"
	
	PROCEDURE Init
		DO CASE
			CASE INLIST(thisform.Mode, 2, 5)
				this.AddButtonDefinition(P_SELECT)
				this.AddButtonDefinition(P_SEARCH,,,, .T.)
				this.AddButtonDefinition(P_COLUMNS)
				this.AddButtonDefinition(P_CLOSE)
			CASE thisform.Mode = 53
				this.AddButtonDefinition(P_MESSAGES)
				this.AddButtonDefinition(P_SEARCH,,,, .T.)
				this.AddButtonDefinition(P_COLUMNS)
				this.AddButtonDefinition(P_CLOSE)
			CASE thisform.Mode = 54
				this.AddButtonDefinition(P_EDIT)
				this.AddButtonDefinition(P_SEARCH)
				this.AddButtonDefinition(P_BILL)
				this.AddButtonDefinition(P_QUICKOUT)
				this.AddButtonDefinition(P_RES_ADDRESS)
				this.AddButtonDefinition(P_MESSAGES)
				this.AddButtonDefinition(P_COLUMNS)
				this.AddButtonDefinition(P_CLOSE)
			OTHERWISE
				this.AddButtonDefinition(P_NEW)
				this.AddButtonDefinition(P_COPY)
				this.AddButtonDefinition(P_EDIT)
				this.AddButtonDefinition(P_DELETE)
				this.AddButtonDefinition(P_SEARCH,,,, .T.)
				this.AddButtonDefinition(P_INSTRUCTION)
				this.AddButtonDefinition(P_RECURRING, [GetText("RESERVAT","TXT_RECURRING")])
				this.AddButtonDefinition(P_BILL)
				this.AddButtonDefinition(P_QUICKOUT)
				this.AddButtonDefinition(P_MESSAGES)
				this.AddButtonDefinition(P_CHECKIN, [GetText("RESERVAT","TXT_CHECKIN")])
				this.AddButtonDefinition(P_CHECKINALL)
				this.AddButtonDefinition(P_GROUPFUNC)
				this.AddButtonDefinition(P_HISTORY)
				this.AddButtonDefinition(P_NOTE)
				this.AddButtonDefinition(P_COLUMNS)
				this.AddButtonDefinition(P_CLOSE)
				this.IncludeProcess(P_GRP_SPLIT)
				this.IncludeProcess(P_GRP_NAME)
				this.IncludeProcess(P_GRP_COPY)
				this.IncludeProcess(P_GRP_INFO)
				this.IncludeProcess(P_GRP_COLOR)
				IF _screen.oGlobal.oParam2.pa_rentmod
					this.IncludeProcess(P_GRP_RESNAME)
				ENDIF
				this.IncludeProcess(P_GRP_RESCOPY)
				this.IncludeProcess(P_GRP_PAYM)
				this.IncludeProcess(P_GRP_SHOWRESB)
		ENDCASE
	ENDPROC

	PROCEDURE onaddressenable
		RETURN paRights(54) AND NOT EOF(thisform.rsbGrid.RecordSource)
	ENDPROC

	PROCEDURE onbill
		thisform.OnBill()
	ENDPROC

	PROCEDURE onbillenable
		RETURN paRights(IIF(thisform.Mode = 54, 51, 9)) AND NOT EOF(thisform.rsbGrid.RecordSource)
	ENDPROC

	PROCEDURE oncheckin
		thisform.CheckIn()
	ENDPROC

	PROCEDURE oncheckinall
		thisform.CheckInAll()
	ENDPROC

	PROCEDURE oncheckinallenable
		RETURN paRights(12) AND NOT EOF(thisform.rsbGrid.RecordSource)
	ENDPROC

	PROCEDURE oncheckinallvisible
		RETURN _screen.oGlobal.oParam2.pa_shciall
	ENDPROC

	PROCEDURE oncheckinenable
		RETURN paRights(12) AND NOT EOF(thisform.rsbGrid.RecordSource)
	ENDPROC

	PROCEDURE oncheckout
		thisform.QuickOut()
	ENDPROC

	PROCEDURE oncheckoutenable
		RETURN paRights(52) AND NOT EOF(thisform.rsbGrid.RecordSource)
	ENDPROC

	PROCEDURE oncheckoutvisible
		RETURN INLIST(thisform.Mode, 51, 54)
	ENDPROC

	PROCEDURE oncloseenable
		RETURN paRights(1)
	ENDPROC

	PROCEDURE oncopyenable
		RETURN paRights(4) AND NOT EOF(thisform.rsbGrid.RecordSource)
	ENDPROC

	PROCEDURE ondeleteenable
		RETURN paRights(6) AND NOT EOF(thisform.rsbGrid.RecordSource)
	ENDPROC

	PROCEDURE oneditenable
		RETURN paRights(2) AND NOT EOF(thisform.rsbGrid.RecordSource)
	ENDPROC

	PROCEDURE ongroupfuncenable
		IF NOT Odbc()
			GO RECNO('reservat3') IN reservat
		ENDIF
		RETURN paRights(13) AND NOT EOF(thisform.rsbGrid.RecordSource)
	ENDPROC

	PROCEDURE onhistory
		thisform.HistRes()
	ENDPROC

	PROCEDURE onhistoryenable
		RETURN paRights(14) AND NOT EOF(thisform.rsbGrid.RecordSource)
	ENDPROC

	PROCEDURE oninstruction
		thisform.NewInst()
	ENDPROC

	PROCEDURE oninstructionenable
		RETURN paRights(7) AND NOT EOF(thisform.rsbGrid.RecordSource)
	ENDPROC

	PROCEDURE onmessage
		thisform.MessRes()
	ENDPROC

	PROCEDURE onmessageenable
		RETURN paRights(11) AND NOT EOF(thisform.rsbGrid.RecordSource)
	ENDPROC

	PROCEDURE onnewenable
		RETURN paRights(3)
	ENDPROC

	PROCEDURE onnote
		thisform.NewNote()
	ENDPROC

	PROCEDURE onnoteenable
		RETURN paRights(15) AND NOT EOF(thisform.rsbGrid.RecordSource)
	ENDPROC

	PROCEDURE onrecurring
		thisform.Recurring()
	ENDPROC

	PROCEDURE onrecurringenable
		RETURN paRights(8) AND NOT EOF(thisform.rsbGrid.RecordSource)
	ENDPROC

	PROCEDURE onsearch
		LOCAL lnBuilding, llSetMark, llFromPopup, lcMenuName
		LOCAL i, lnSection, lnBar, lcMacro
		
		IF thisform.Mode = 54
			goTbrMain.OnSelectionBar("Parent.SearchRes(54)")
			RETURN
		ENDIF
		
		llFromPopup = TYPE("plFromPopup") # "U" AND plFromPopup
		IF NOT llFromPopup
			goTbrMain.PopupSubMenu(P_SEARCH)
		ENDIF
		
		lcMenuName = "PopupSubMenu" + ALLTRIM(STR(P_SEARCH))
		
		lnSection = _screen.oGlobal.aSearchRes[2,4]
		lnBar = 0
		FOR i = 2 TO ALEN(_screen.oGlobal.aSearchRes,1)
			* Place new search criterium in _screen.oGlobal.aSearchRes array in commonclasses.prg.
			IF lnSection <> _screen.oGlobal.aSearchRes[i,4]
				lnSection = _screen.oGlobal.aSearchRes[i,4]
				lnBar = lnBar + 10
				DEFINE BAR lnBar OF &lcMenuName PROMPT "\-"
				IF lnSection = 5
					lnBar = lnBar + 10
					DEFINE BAR lnBar OF &lcMenuName PROMPT GetLangText("RESERVAT","TM_ALL")
					ON SELECTION BAR lnBar OF &lcMenuName goTbrMain.OnSelectionBar("Parent.SearchRes(15)")
					lnBar = lnBar + 10
					DEFINE BAR lnBar OF &lcMenuName PROMPT "\-"
					lnBar = lnBar + 10
					DEFINE BAR lnBar OF &lcMenuName PROMPT GetLangText("RESBRW","TXT_BUILDING")+": "+IIF(EMPTY(thisform.cBuilding),GetLangText("RESBRW","TXT_ALL"),thisform.cBuilding) ;
						SKIP FOR goTbrMain.OnSelectionBar("Parent.DisableBuildSearch()") OR TYPE("thisform.aBuildings(1)") == 'L'
					ON BAR lnBar OF &lcMenuName ACTIVATE POPUP PopupBuilding
					RELEASE POPUPS PopupBuilding EXTENDED
					IF NOT (thisform.DisableBuildSearch() OR TYPE("thisform.aBuildings(1)") == 'L')
						DEFINE POPUP PopupBuilding SHORTCUT RELATIVE
						FOR lnBuilding = 1 TO ALEN(thisform.aBuildings,1)
							DEFINE BAR lnBuilding OF PopupBuilding PROMPT PADR(thisform.aBuildings(lnBuilding,1),4)+SPACE(4)+thisform.aBuildings(lnBuilding,2)
							lcMacro = "ON SELECTION BAR lnBuilding OF PopupBuilding goTbrMain.OnSelectionBar([SearchBar("+TRANSFORM(lnBar)+",,BAR())])"
							&lcMacro
							llSetMark = thisform.MarkBuilding(lnBuilding)
							SET MARK OF BAR lnBuilding OF PopupBuilding TO llSetMark
						NEXT
					ENDIF
					lnBar = lnBar + 10
					DEFINE BAR lnBar OF &lcMenuName PROMPT GetLangText("RESERVAT","TM_ONLYROOMS")
					SET MARK OF BAR lnBar OF &lcMenuName TO thisform.lOnlyRooms
					ON SELECTION BAR lnBar OF &lcMenuName goTbrMain.OnSelectionBar([SearchBar(,"OnlyRooms",BAR())])
					lnBar = lnBar + 10
					DEFINE BAR lnBar OF &lcMenuName PROMPT GetLangText("RESERVAT","TM_ONLYCONF")
					SET MARK OF BAR lnBar OF &lcMenuName TO thisform.lOnlyConf
					ON SELECTION BAR lnBar OF &lcMenuName goTbrMain.OnSelectionBar([SearchBar(,"OnlyConf",BAR())])
					lnBar = lnBar + 10
					DEFINE BAR lnBar OF &lcMenuName PROMPT GetLangText("RESBRW","TXT_ONLY_DUMMIES")
					SET MARK OF BAR lnBar OF &lcMenuName TO thisform.lOnlyDummies
					ON SELECTION BAR lnBar OF &lcMenuName goTbrMain.OnSelectionBar([SearchBar(,"OnlyDummies",BAR())])
					lnBar = lnBar + 10
					DEFINE BAR lnBar OF &lcMenuName PROMPT GetLangText("RESERVAT","TM_INCLUDE_CXL")
					SET MARK OF BAR lnBar OF &lcMenuName TO thisform.lIncludeCXL
					ON SELECTION BAR lnBar OF &lcMenuName goTbrMain.OnSelectionBar([SearchBar(,"IncludeCXL",BAR())])
					lnBar = lnBar + 10
					DEFINE BAR lnBar OF &lcMenuName PROMPT GetLangText("RESERVAT","TM_INCLUDE_NS")
					SET MARK OF BAR lnBar OF &lcMenuName TO thisform.lIncludeNS
					ON SELECTION BAR lnBar OF &lcMenuName goTbrMain.OnSelectionBar([SearchBar(,"IncludeNS",BAR())])
					lnBar = lnBar + 10
					DEFINE BAR lnBar OF &lcMenuName PROMPT "\-"
				ENDIF
			ENDIF
			lnBar = lnBar + 10
			lcMacro = "DEFINE BAR " + TRANSFORM(lnBar) + " OF " + lcMenuName + " PROMPT '" + _screen.oGlobal.aSearchRes[i,2] + "'"
			&lcMacro
			lcMacro = "ON SELECTION BAR " + TRANSFORM(lnBar) + " OF " + lcMenuName + " goTbrMain.OnSelectionBar('Parent.SearchRes(" + TRANSFORM(_screen.oGlobal.aSearchRes[i,3]) + ")')"
			&lcMacro
		NEXT
		
		IF NOT llFromPopup
			ACTIVATE POPUP &lcMenuName
		ENDIF
	ENDPROC

	PROCEDURE onsearchenable
		RETURN paRights(5)
	ENDPROC

	PROCEDURE onselectenable
		RETURN NOT EOF(thisform.rsbGrid.RecordSource)
	ENDPROC

	PROCEDURE searchbar
		LPARAMETERS tnRsbBuildingCmd, tcRsbSetMarkCmd, tnBar
		LOCAL lcMenuName, lnBuilding, llSetMark
		
		LOCAL ARRAY l_aStack(1)
		ASTACKINFO(l_aStack)
		
		lcMenuName = "PopupSubMenu" + ALLTRIM(STR(P_SEARCH))
		
		DO CASE
			CASE ALEN(l_aStack,1)>30
				* Prevent error
				* Allowed DO nesting level exceeded (Error 103)
				DEACTIVATE POPUP &lcMenuName
			CASE NOT EMPTY(tnRsbBuildingCmd)
				IF thisform.aBuildings(tnBar,3)
					lcBuildingSelected = PADR(thisform.aBuildings(tnBar,1),3)
				ELSE
					lcBuildingSelected = "ALL"
				ENDIF
				thisform.OnBuildings(lcBuildingSelected)
				DEFINE BAR tnRsbBuildingCmd OF &lcMenuName PROMPT GetLangText("RESBRW","TXT_BUILDING")+": "+IIF(EMPTY(thisform.cBuilding),GetLangText("RESBRW","TXT_ALL"),thisform.cBuilding) ;
					SKIP FOR goTbrMain.OnSelectionBar("Parent.DisableBuildSearch()") OR TYPE("thisform.aBuildings(1)") == 'L'
				FOR lnBuilding = 1 TO ALEN(thisform.aBuildings,1)
					llSetMark = thisform.MarkBuilding(lnBuilding)
					SET MARK OF BAR lnBuilding OF PopupBuilding TO llSetMark
				NEXT
				thisform.SearchRes(16)
				ACTIVATE POPUP &lcMenuName
			CASE tcRsbSetMarkCmd = "OnlyRooms"
				thisform.lOnlyRooms = NOT thisform.lOnlyRooms
				thisform.lOnlyConf = .F.
				thisform.lOnlyDummies = .F.
				SET MARK OF BAR tnBar OF &lcMenuName TO thisform.lOnlyRooms
				SET MARK OF BAR tnBar+10 OF &lcMenuName TO thisform.lOnlyConf
				SET MARK OF BAR tnBar+20 OF &lcMenuName TO thisform.lOnlyDummies
				thisform.SearchRes(16)
				ACTIVATE POPUP &lcMenuName
			CASE tcRsbSetMarkCmd = "OnlyConf"
				thisform.lOnlyRooms = .F.
				thisform.lOnlyConf = NOT thisform.lOnlyConf
				thisform.lOnlyDummies = .F.
				SET MARK OF BAR tnBar-10 OF &lcMenuName TO thisform.lOnlyRooms
				SET MARK OF BAR tnBar OF &lcMenuName TO thisform.lOnlyConf
				SET MARK OF BAR tnBar+10 OF &lcMenuName TO thisform.lOnlyDummies
				thisform.SearchRes(16)
				ACTIVATE POPUP &lcMenuName
			CASE tcRsbSetMarkCmd = "OnlyDummies"
				thisform.lOnlyRooms = .F.
				thisform.lOnlyConf = .F.
				thisform.lOnlyDummies = NOT thisform.lOnlyDummies
				SET MARK OF BAR tnBar-20 OF &lcMenuName TO thisform.lOnlyRooms
				SET MARK OF BAR tnBar-10 OF &lcMenuName TO thisform.lOnlyConf
				SET MARK OF BAR tnBar OF &lcMenuName TO thisform.lOnlyDummies
				thisform.SearchRes(16)
				ACTIVATE POPUP &lcMenuName
			CASE tcRsbSetMarkCmd = "IncludeCXL"
				thisform.lIncludeCXL = NOT thisform.lIncludeCXL
				SET MARK OF BAR tnBar OF &lcMenuName TO thisform.lIncludeCXL
				thisform.SearchRes(16)
				ACTIVATE POPUP &lcMenuName
			CASE tcRsbSetMarkCmd = "IncludeNS"
				thisform.lIncludeNS = NOT thisform.lIncludeNS
				SET MARK OF BAR tnBar OF &lcMenuName TO thisform.lIncludeNS
				thisform.SearchRes(16)
				ACTIVATE POPUP &lcMenuName
		ENDCASE
	ENDPROC

ENDDEFINE

DEFINE CLASS ctbrreservat AS ctbrbase OF "cit_tbrform.vcx" 
 	*< CLASSDATA: Baseclass="custom" Timestamp="" Scale="Pixels" Uniqueid="" />

	#INCLUDE "..\include\constdefines.h"
	*<DefinedPropArrayMethod>
		*m: onbanquet
		*m: onbanquetenable
		*m: onbanquetvisible
		*m: onbill
		*m: onbillenable
		*m: oncalcprice
		*m: oncalcpriceenable
		*m: oncharges
		*m: onchargesenable
		*m: ondeposite
		*m: ondepositeenable
		*m: onhistory
		*m: onhistoryenable
		*m: oninstruction
		*m: oninstructionenable
		*m: onjustsave
		*m: onjustsaveenable
		*m: onmessage
		*m: onmessageenable
		*m: onrates
		*m: onratesenable
		*m: onshare
		*m: onshareenable
	*</DefinedPropArrayMethod>

	Name = "ctbrreservat"
	
	PROCEDURE Init
		this.AddButtonDefinition(P_NEW)
		this.AddButtonDefinition(P_COPY)
		this.AddButtonDefinition(P_EDIT)
		this.AddButtonDefinition(P_DELETE)
		this.AddButtonDefinition(P_JUST_SAVE)
		this.AddButtonDefinition(P_SAVE,[GetText("BILL","TXT_SAVE_CLOSE")],[saveandexit])
		this.AddButtonDefinition(P_HISTORY)
		this.AddButtonDefinition(P_BILL)
		this.AddButtonDefinition(P_MESSAGES)
		this.AddButtonDefinition(P_INSTRUCTION,[GetText("RESERVAT","TXT_INSTRUCTIONS")],,[GetText("RESERVAT","TT_INSTRUCTIONS")])
		this.AddButtonDefinition(P_CHARGES)
		IF _screen.TG
			this.AddButtonDefinition(P_BANQUET)
		ENDIF
		IF _screen.DP
			this.AddButtonDefinition(P_DEPOSITE)
		ENDIF
		this.AddButtonDefinition(P_RATES,,,[GetText("RESERVAT","TT_INTERVALFORM")])
		this.AddButtonDefinition(P_CALCPRICE)
		IF _screen.oGlobal.oParam.pa_rshare
			this.AddButtonDefinition(P_SHARE)
		ENDIF
		*this.AddButtonDefinition(P_COLUMNS)
		this.AddButtonDefinition(P_CLOSE)
	ENDPROC

	PROCEDURE onbanquet
		thisformset.OnBanquet()
	ENDPROC

	PROCEDURE onbanquetenable
		RETURN UPPER(thisform.cFormLabel) = "RESERVAT" AND paRights(37) AND NOT EOF(thisform.ResGrid.RecordSource)
	ENDPROC

	PROCEDURE onbanquetvisible
		RETURN NOT _screen.oGlobal.lhidebanquetbutton
	ENDPROC

	PROCEDURE onbill
		thisformset.OnBill()
	ENDPROC

	PROCEDURE onbillenable
		RETURN UPPER(thisform.cFormLabel) = "RESERVAT" AND UPPER(thisform.Parent.Mode) <> "HISTORY" AND ;
			paRights(9) AND NOT EOF(thisform.ResGrid.RecordSource)
	ENDPROC

	PROCEDURE oncalcprice
		thisformset.OnCalcPrice()
	ENDPROC

	PROCEDURE oncalcpriceenable
		RETURN UPPER(thisform.cFormLabel) = "RESERVAT" AND NOT EOF(thisform.ResGrid.RecordSource)
	ENDPROC

	PROCEDURE oncharges
		thisformset.OnCharges()
	ENDPROC

	PROCEDURE onchargesenable
		RETURN UPPER(thisform.cFormLabel) = "RESERVAT" AND paRights(36) AND NOT EOF(thisform.ResGrid.RecordSource)
	ENDPROC

	PROCEDURE oncloseenable
		RETURN paRights(34)
	ENDPROC

	PROCEDURE oncopy
		thisformset.OnCopy()
	ENDPROC

	PROCEDURE oncopyenable
		RETURN UPPER(thisform.cFormLabel) = "RESERVAT" AND UPPER(thisform.Parent.Mode) <> "HISTORY" AND ;
			paRights(4) AND thisform.Parent.p_NewButtonEnabled AND thisform.Parent.cStartMode <> "GROUPNEW" AND NOT EOF(thisform.ResGrid.RecordSource)
	ENDPROC

	PROCEDURE ondelete
		thisformset.OnDelete()
	ENDPROC

	PROCEDURE ondeleteenable
		RETURN UPPER(thisform.cFormLabel) = "RESERVAT" AND paRights(6) AND UPPER(thisform.Parent.Mode) <> "HISTORY" AND ;
			NOT EOF(thisform.ResGrid.RecordSource) AND thisform.ResGrid.pLastActiveRow > 1
	ENDPROC

	PROCEDURE ondeposite
		thisformset.OnDeposite()
	ENDPROC

	PROCEDURE ondepositeenable
		RETURN UPPER(thisform.cFormLabel) = "RESERVAT" AND NOT EOF(thisform.ResGrid.RecordSource) AND paRights(38) AND ;
			((NOT EMPTY(reservat.rs_depamt1) AND NOT EMPTY(reservat.rs_depdat1) OR NOT EMPTY(reservat.rs_depamt2) AND NOT EMPTY(reservat.rs_depdat2)) ;
			OR ;
			(reservat.rs_reserid = deposit1.dp_reserid AND deposit1.dp_lineid>0))
	ENDPROC

	PROCEDURE oneditenable
		RETURN UPPER(thisform.cFormLabel) = "RESERVAT" AND UPPER(thisform.Parent.Mode) <> "HISTORY" AND NOT EOF(thisform.ResGrid.RecordSource) AND reservat.rs_status <> "CXL"
	ENDPROC

	PROCEDURE onhistory
		thisformset.OnHistory()
	ENDPROC

	PROCEDURE onhistoryenable
		RETURN UPPER(thisform.cFormLabel) = "RESERVAT" AND paRights(14) AND NOT EOF(thisform.ResGrid.RecordSource)
	ENDPROC

	PROCEDURE oninstruction
		thisformset.OnInstruction()
	ENDPROC

	PROCEDURE oninstructionenable
		RETURN UPPER(thisform.cFormLabel) = "RESERVAT" AND UPPER(thisform.Parent.Mode) <> "HISTORY" AND ;
			paRights(35) AND NOT EOF(thisform.ResGrid.RecordSource)
	ENDPROC

	PROCEDURE onjustsave
		thisformset.OnJustSave()
	ENDPROC

	PROCEDURE onjustsaveenable
		RETURN UPPER(thisform.cFormLabel) = "RESERVAT" AND UPPER(thisform.Parent.Mode) <> "HISTORY" AND ;
			paRights(33) AND NOT EOF(thisform.ResGrid.RecordSource)
	ENDPROC

	PROCEDURE onmessage
		thisformset.OnMessage()
	ENDPROC

	PROCEDURE onmessageenable
		RETURN UPPER(thisform.cFormLabel) = "RESERVAT" AND paRights(11) AND NOT EOF(thisform.ResGrid.RecordSource)
	ENDPROC

	PROCEDURE onnew
		thisformset.OnNew()
	ENDPROC

	PROCEDURE onnewenable
		RETURN UPPER(thisform.cFormLabel) = "RESERVAT" AND UPPER(thisform.Parent.Mode) <> "HISTORY" AND ;
			paRights(3) AND thisform.Parent.p_NewButtonEnabled AND thisform.Parent.cStartMode <> "GROUPNEW"
	ENDPROC

	PROCEDURE onrates
		thisformset.OnRates()
	ENDPROC

	PROCEDURE onratesenable
		RETURN paRights(154) AND (UPPER(thisform.cFormLabel) <> "RESERVAT" OR NOT EOF(thisform.ResGrid.RecordSource))
	ENDPROC

	PROCEDURE onsave
		thisformset.OnSave()
	ENDPROC

	PROCEDURE onsaveenable
		RETURN UPPER(thisform.cFormLabel) = "RESERVAT" AND UPPER(thisform.Parent.Mode) <> "HISTORY" AND ;
			paRights(33) AND NOT EOF(thisform.ResGrid.RecordSource)
	ENDPROC

	PROCEDURE onshare
		thisformset.OnShare()
	ENDPROC

	PROCEDURE onshareenable
		RETURN UPPER(thisform.cFormLabel) = "RESERVAT" AND UPPER(thisform.Parent.Mode) <> "HISTORY" AND NOT EOF(thisform.ResGrid.RecordSource)
	ENDPROC

ENDDEFINE

DEFINE CLASS ctbrresfix AS ctbrbase OF "cit_tbrform.vcx" 
 	*< CLASSDATA: Baseclass="custom" Timestamp="" Scale="Pixels" Uniqueid="" />

	#INCLUDE "..\include\processes.h"
	*<DefinedPropArrayMethod>
		*m: onpost
		*m: onpostenable
		*m: onratepost
		*m: onratepostenable
		*m: onroomfeatures
		*m: onroomfeaturesenable
	*</DefinedPropArrayMethod>

	Name = "ctbrresfix"
	
	PROCEDURE Init
		this.AddButtonDefinition(P_POST)
		this.AddButtonDefinition(P_POST_RATECODE)
		IF _screen.oGlobal.oParam2.pa_rftofix
			this.AddButtonDefinition(P_ROOM_FEATURES)
		ENDIF
		this.AddButtonDefinition(P_EDIT)
		this.AddButtonDefinition(P_DELETE)
		this.AddButtonDefinition(P_COLUMNS)
		this.AddButtonDefinition(P_CLOSE)
	ENDPROC

	PROCEDURE ondeleteenable
		RETURN NOT EMPTY(curResfix.rf_rfid)
	ENDPROC

	PROCEDURE oneditenable
		RETURN NOT EMPTY(curResfix.rf_rfid)
	ENDPROC

	PROCEDURE onpost
		thisformset.OnPost()
	ENDPROC

	PROCEDURE onpostenable
	ENDPROC

	PROCEDURE onratepost
		thisformset.OnRatePost()
	ENDPROC

	PROCEDURE onratepostenable
	ENDPROC

	PROCEDURE onroomfeatures
		thisformset.OnRoomFeatures()
	ENDPROC

	PROCEDURE onroomfeaturesenable
	ENDPROC

ENDDEFINE

DEFINE CLASS ctbrresgroupinfo AS ctbrbase OF "cit_tbrform.vcx" 
 	*< CLASSDATA: Baseclass="custom" Timestamp="" Scale="Pixels" Uniqueid="" />

	#INCLUDE "..\include\constdefines.h"
	Name = "ctbrresgroupinfo"
	
	PROCEDURE Init
		this.AddButtonDefinition(P_PRINT)
		this.AddButtonDefinition(P_CLOSE)
	ENDPROC

ENDDEFINE

DEFINE CLASS ctbrresrate AS ctbrbase OF "cit_tbrform.vcx" 
 	*< CLASSDATA: Baseclass="custom" Timestamp="" Scale="Pixels" Uniqueid="" />

	#INCLUDE "..\include\processes.h"
	*<DefinedPropArrayMethod>
		*m: oncolor
		*m: onresratearti
		*m: onresrateartienable
	*</DefinedPropArrayMethod>

	Name = "ctbrresrate"
	
	PROCEDURE Init
		this.AddButtonDefinition(P_EDIT)
		this.AddButtonDefinition(P_DELETE)
		IF _screen.oGlobal.lbdarticleactive
			this.AddButtonDefinition(P_RESRART)
		ENDIF
		this.AddButtonDefinition(P_SAVE)
		this.AddButtonDefinition(P_COLOR)
		this.AddButtonDefinition(P_COLUMNS)
		this.AddButtonDefinition(P_CLOSE)
	ENDPROC

	PROCEDURE oncolor
		thisformset.OnColorDescription()
	ENDPROC

	PROCEDURE ondeleteenable
		RETURN NOT INLIST(thisformset.cMode, "HISTORY", "WEEKPLANHISTORY") AND curResrate.rr_date >= SysDate() AND UPPER(LEFT(curResrate.rr_status, 2)) = "OR"
	ENDPROC

	PROCEDURE oneditenable
		RETURN NOT INLIST(thisformset.cMode, "HISTORY", "WEEKPLANHISTORY") AND curResrate.rr_date >= SysDate()
	ENDPROC

	PROCEDURE onresratearti
		thisformset.OnResRateArti()
	ENDPROC

	PROCEDURE onresrateartienable
		RETURN paRights(43) AND NOT INLIST(thisformset.cMode, "HISTORY", "WEEKPLANHISTORY") AND curResrate.rr_status <> "X"
	ENDPROC

	PROCEDURE onsaveenable
		RETURN NOT INLIST(thisformset.cMode, "HISTORY", "WEEKPLANHISTORY") AND thisformset.lChanged
	ENDPROC

ENDDEFINE

DEFINE CLASS ctbrroomhistory AS ctbrbase OF "cit_tbrform.vcx" 
 	*< CLASSDATA: Baseclass="custom" Timestamp="" Scale="Pixels" Uniqueid="" />

	#INCLUDE "..\include\processes.h"
	*<DefinedPropArrayMethod>
		*m: onbill
		*m: onbillenable
		*m: onpreview
		*m: onpreviewenable
	*</DefinedPropArrayMethod>

	Name = "ctbrroomhistory"
	
	PROCEDURE Init
		this.AddButtonDefinition(P_PREVIEW,[GetLangText("ADDRESS","TT_SHOW_RESERVATION")])
		this.AddButtonDefinition(P_SEARCH)
		*this.AddButtonDefinition(P_BILL,,[bill-hist],[GetLangText("ADDRESS","TT_BILL_PREVIEW")])
		this.AddButtonDefinition(P_COLUMNS)
		this.AddButtonDefinition(P_CLOSE)
	ENDPROC

	PROCEDURE onbill
		thisformset.OnBill()
	ENDPROC

	PROCEDURE onbillenable
		RETURN NOT EOF(thisformset.frmRoomList.grdList.RecordSource)
	ENDPROC

	PROCEDURE onpreview
		thisformset.OnPreview()
	ENDPROC

	PROCEDURE onpreviewenable
		RETURN NOT EOF(thisformset.frmRoomList.grdList.RecordSource)
	ENDPROC

ENDDEFINE

DEFINE CLASS ctbrroomlist AS ctbrbase OF "cit_tbrform.vcx" 
 	*< CLASSDATA: Baseclass="custom" Timestamp="" Scale="Pixels" Uniqueid="" />

	#INCLUDE "..\include\processes.h"
	*<DefinedPropArrayMethod>
		*m: ondo
	*</DefinedPropArrayMethod>

	Name = "ctbrroomlist"
	
	PROCEDURE Init
		this.AddButtonDefinition(P_EDIT)
		this.AddButtonDefinition(P_DO, [GetText("RESERV2","TXT_AUTO")],,[GetText("GROUP","TT_AUTO")])
		this.AddButtonDefinition(P_SEARCH)
		this.AddButtonDefinition(P_COLUMNS)
		this.AddButtonDefinition(P_CLOSE)
	ENDPROC

	PROCEDURE ondo
		thisformset.OnDo()
	ENDPROC

ENDDEFINE

DEFINE CLASS ctbrroompictures AS ctbrbase OF "cit_tbrform.vcx" 
 	*< CLASSDATA: Baseclass="custom" Timestamp="" Scale="Pixels" Uniqueid="" />

	#INCLUDE "..\include\processes.h"
	Name = "ctbrroompictures"
	
	PROCEDURE Init
		DO CASE
			CASE thisform.nMode = 3
				this.AddButtonDefinition(P_PRINT)
			CASE thisform.nMode = 4
				this.AddButtonDefinition(P_PRINT)
				this.AddButtonDefinition(P_SAVE)
			OTHERWISE
				this.AddButtonDefinition(P_NEW)
				this.AddButtonDefinition(P_EDIT)
				this.AddButtonDefinition(P_DELETE)
				this.AddButtonDefinition(P_PRINT)
				this.AddButtonDefinition(P_SAVE)
		ENDCASE
		this.AddButtonDefinition(P_CLOSE)
	ENDPROC

	PROCEDURE ondeleteenable
		RETURN NOT EOF("curAllPictures") AND (TYPE("thisform.ActiveControl") = "U" OR thisform.ActiveControl = thisform.grdAllPictures)
	ENDPROC

	PROCEDURE oneditenable
		RETURN NOT EOF("curAllPictures") AND (TYPE("thisform.ActiveControl") = "U" OR thisform.ActiveControl = thisform.grdAllPictures)
	ENDPROC

ENDDEFINE

DEFINE CLASS ctbrroomplan AS ctbrbase OF "cit_tbrform.vcx" 
 	*< CLASSDATA: Baseclass="custom" Timestamp="" Scale="Pixels" Uniqueid="" />

	#INCLUDE "..\include\constdefines.h"
	*<DefinedPropArrayMethod>
		*m: onallotreservation
		*m: onallotreservationenable
		*m: onallottchange
		*m: onallottchangeenable
		*m: onallrooms
		*m: onallroomsvisible
		*m: onavailab
		*m: onbill
		*m: onbillenable
		*m: oncaption
		*m: oncheckin
		*m: oncheckinall
		*m: oncheckinallenable
		*m: oncheckinallvisible
		*m: oncheckinenable
		*m: ondayconference
		*m: ondo
		*m: ondrop
		*m: ondropenable
		*m: ondropvisible
		*m: onfindnext
		*m: onfindnextenable
		*m: onfreerooms
		*m: onfreeroomsvisible
		*m: onguests
		*m: onguestsenable
		*m: onguestsvisible
		*m: onhistory
		*m: onhistoryenable
		*m: onmove
		*m: onmoveenable
		*m: onmovevisible
		*m: onpicture
		*m: onratefind
		*m: onratefindenable
		*m: onrates
		*m: onratesenable
	*</DefinedPropArrayMethod>

	luseudpopupmenu = .T.
	Name = "ctbrroomplan"
	
	PROCEDURE Init
		DO CASE
			CASE thisform.cFormLabel = "ROOMPLAN"
				this.AddButtonDefinition(P_NEW)
				this.AddButtonDefinition(P_COPY)
				this.AddButtonDefinition(P_EDIT)
				this.AddButtonDefinition(P_DELETE)
				this.AddButtonDefinition(P_SEARCH)
				this.AddButtonDefinition(P_FIND_NEXT, [GetText("MANAGER","TT_SEARCH_NEXT")], [findnext])
				this.AddButtonDefinition(P_HISTORY)
				this.AddButtonDefinition(P_BILL)
				this.AddButtonDefinition(P_RATES,,,[GetText("RESERVAT","TT_INTERVALFORM")])
				this.AddButtonDefinition(P_CHECKIN)
				this.AddButtonDefinition(P_CHECKINALL)
				this.AddButtonDefinition(P_MOVE)
				this.AddButtonDefinition(P_DROP)
				this.AddButtonDefinition(P_RES_ADDRESS)
				this.AddButtonDefinition(P_PRINT,,,[GetText("WEEKFORM","TT_PRINT")])
				this.AddButtonDefinition(P_PICTURE,[GetText("RESERV2","TB_INFO")],,[STRTRAN(GetText("RESERV2","TB_INFO"),"\<","")])
				this.AddButtonDefinition(P_GROUPFUNC)
				IF _screen.APS
					this.AddButtonDefinition(P_RATE_FIND_RP)
				ENDIF
				this.AddButtonDefinition(P_CLOSE)
				this.IncludeProcess(P_GRP_SPLIT)
				this.IncludeProcess(P_GRP_NAME)
				this.IncludeProcess(P_GRP_COPY)
				this.IncludeProcess(P_GRP_INFO)
				this.IncludeProcess(P_GRP_COLOR)
				IF _screen.oGlobal.oParam2.pa_rentmod
					this.IncludeProcess(P_GRP_RESNAME)
				ENDIF
				this.IncludeProcess(P_GRP_RESCOPY)
				this.IncludeProcess(P_GRP_PAYM)
				this.IncludeProcess(P_GRP_SHOWRESB)
			CASE thisform.cFormLabel = "MPROOMPLAN"
				this.AddButtonDefinition(P_NEW)
				this.AddButtonDefinition(P_COPY)
				this.AddButtonDefinition(P_EDIT)
				this.AddButtonDefinition(P_DELETE)
				this.AddButtonDefinition(P_SEARCH)
				this.AddButtonDefinition(P_FIND_NEXT, [GetText("MANAGER","TT_SEARCH_NEXT")], [findnext])
				this.AddButtonDefinition(P_HISTORY)
				this.AddButtonDefinition(P_BILL)
				this.AddButtonDefinition(P_CHECKIN)
				this.AddButtonDefinition(P_MOVE)
				this.AddButtonDefinition(P_DROP)
				this.AddButtonDefinition(P_RES_ADDRESS)
				this.AddButtonDefinition(P_PRINT,,,[GetText("WEEKFORM","TT_PRINT")])
				this.AddButtonDefinition(P_PICTURE,,,[GetText("CONFWEEK","TT_SHOW_PICTURE")])
				IF _screen.APS
					this.AddButtonDefinition(P_RATE_FIND_RP)
				ENDIF
				this.AddButtonDefinition(P_CLOSE)
			CASE thisform.cFormLabel = "GROOMPLAN"
				this.AddButtonDefinition(P_ALL_ROOMS)
				this.AddButtonDefinition(P_FREE_ROOMS,,,[GetText("ROOMPLAN","TT_FREEROOMS")])
				this.AddButtonDefinition(P_DO, [GetText("RESERV2","TXT_AUTO")],,[GetText("GROUP","TT_AUTO")])
				this.AddButtonDefinition(P_AVAILAB)
				this.AddButtonDefinition(P_NEW)
				this.AddButtonDefinition(P_COPY)
				this.AddButtonDefinition(P_EDIT)
				this.AddButtonDefinition(P_DELETE)
				this.AddButtonDefinition(P_SEARCH)
				this.AddButtonDefinition(P_FIND_NEXT, [GetText("MANAGER","TT_SEARCH_NEXT")], [findnext])
				this.AddButtonDefinition(P_ALLOT_CHANGE)
				this.AddButtonDefinition(P_ALLOT_RESER)
				this.AddButtonDefinition(P_HISTORY)
				this.AddButtonDefinition(P_BILL)
				this.AddButtonDefinition(P_RATES,,,[GetText("RESERVAT","TT_INTERVALFORM")])
				this.AddButtonDefinition(P_CHECKIN)
				this.AddButtonDefinition(P_CHECKINALL)
				this.AddButtonDefinition(P_MOVE)
				this.AddButtonDefinition(P_DROP)
				this.AddButtonDefinition(P_CAPTION_CHANGE, IIF(thisform.lShowOnlyNames, [GetText("WEEKFORM","TXT_CHANGE_STANDARD")], [GetText("WEEKFORM","TXT_CHANGE_CAPTION")]),,[GetText("WEEKFORM","TT_CHANGE_CAPTION")])
				this.AddButtonDefinition(P_RES_ADDRESS)
				this.AddButtonDefinition(P_PRINT,,,[GetText("WEEKFORM","TT_PRINT")])
				this.AddButtonDefinition(P_GROUPFUNC)
				this.AddButtonDefinition(P_CLOSE)
				this.IncludeProcess(P_GRP_SPLIT)
				this.IncludeProcess(P_GRP_NAME)
				this.IncludeProcess(P_GRP_COPY)
				this.IncludeProcess(P_GRP_INFO)
				this.IncludeProcess(P_GRP_COLOR)
				IF _screen.oGlobal.oParam2.pa_rentmod
					this.IncludeProcess(P_GRP_RESNAME)
				ENDIF
				this.IncludeProcess(P_GRP_RESCOPY)
				this.IncludeProcess(P_GRP_PAYM)
				this.IncludeProcess(P_GRP_SHOWRESB)
			CASE thisform.cFormLabel = "CONFPLAN"
				this.AddButtonDefinition(P_NEW)
				this.AddButtonDefinition(P_COPY)
				this.AddButtonDefinition(P_EDIT)
				this.AddButtonDefinition(P_DELETE)
				this.AddButtonDefinition(P_SEARCH)
				this.AddButtonDefinition(P_HISTORY)
				this.AddButtonDefinition(P_BILL)
				this.AddButtonDefinition(P_RATES,,,[GetText("RESERVAT","TT_INTERVALFORM")])
				this.AddButtonDefinition(P_CHECKIN)
				this.AddButtonDefinition(P_MOVE)
				this.AddButtonDefinition(P_DROP)
				this.AddButtonDefinition(P_RES_ADDRESS)
				this.AddButtonDefinition(P_PICTURE,,,[GetText("CONFWEEK","TT_SHOW_PICTURE")])
				this.AddButtonDefinition(P_GUESTS)
				this.AddButtonDefinition(P_DAY_CONF,,,[GetText("CONFPLAN","TT_CALL_CONFDAY")])
				this.AddButtonDefinition(P_CLOSE)
			CASE thisform.cFormLabel = "CONFDPLAN"
				this.AddButtonDefinition(P_NEW)
				this.AddButtonDefinition(P_COPY)
				this.AddButtonDefinition(P_EDIT)
				this.AddButtonDefinition(P_DELETE)
				this.AddButtonDefinition(P_SEARCH)
				this.AddButtonDefinition(P_HISTORY)
				this.AddButtonDefinition(P_BILL)
				this.AddButtonDefinition(P_RATES,,,[GetText("RESERVAT","TT_INTERVALFORM")])
				this.AddButtonDefinition(P_CHECKIN)
				this.AddButtonDefinition(P_MOVE)
				this.AddButtonDefinition(P_DROP)
				this.AddButtonDefinition(P_RES_ADDRESS)
				this.AddButtonDefinition(P_PICTURE,,,[GetText("CONFWEEK","TT_SHOW_PICTURE")])
				this.AddButtonDefinition(P_GUESTS)
				this.AddButtonDefinition(P_CLOSE)
			OTHERWISE
		ENDCASE
	ENDPROC

	PROCEDURE onaddress
		thisform.OnAddressCmd()
	ENDPROC

	PROCEDURE onaddressenable
		RETURN NOT thisform.ForbidAddress()
	ENDPROC

	PROCEDURE onallotreservation
		thisform.OnAllottChangeAddReservation()
	ENDPROC

	PROCEDURE onallotreservationenable
		RETURN NOT thisform.ForbidAllott()
	ENDPROC

	PROCEDURE onallottchange
		thisform.OnAllottChange()
	ENDPROC

	PROCEDURE onallottchangeenable
		RETURN NOT thisform.ForbidAllott()
	ENDPROC

	PROCEDURE onallrooms
		thisform.FilterAllRooms()
	ENDPROC

	PROCEDURE onallroomsvisible
		RETURN thisform.nFilterCondition = 1
	ENDPROC

	PROCEDURE onavailab
		thisform.OnAvailability()
	ENDPROC

	PROCEDURE onbill
		thisform.OnBill()
	ENDPROC

	PROCEDURE onbillenable
		RETURN NOT thisform.ForbidEdit()
	ENDPROC

	PROCEDURE oncaption
		thisform.OnResTextlineCaptionChange()
	ENDPROC

	PROCEDURE oncheckin
		thisform.OnCheckInCmd()
	ENDPROC

	PROCEDURE oncheckinall
		thisform.OnCheckInAllCmd()
	ENDPROC

	PROCEDURE oncheckinallenable
		RETURN NOT thisform.ForbidCheckIn()
	ENDPROC

	PROCEDURE oncheckinallvisible
		RETURN _screen.oGlobal.oParam2.pa_shciall
	ENDPROC

	PROCEDURE oncheckinenable
		RETURN NOT thisform.ForbidCheckIn()
	ENDPROC

	PROCEDURE onclose
		IF ISNULL(thisform.MovingReser)
			thisform.OnClose()
		ELSE
			this.OnDrop()
		ENDIF
	ENDPROC

	PROCEDURE oncloseenable
		DO CASE
			CASE thisform.cFormLabel = "ROOMPLAN"
				RETURN paRights(145)
			CASE thisform.cFormLabel = "MPROOMPLAN"
			CASE thisform.cFormLabel = "GROOMPLAN"
				RETURN paRights(145)
			CASE thisform.cFormLabel = "CONFPLAN"
				RETURN paRights(205)
			CASE thisform.cFormLabel = "CONFDPLAN"
			OTHERWISE
		ENDCASE
	ENDPROC

	PROCEDURE oncopyenable
		RETURN NOT thisform.ForbidEdit()
	ENDPROC

	PROCEDURE ondayconference
		thisform.m_CallConferenceDayForm()
	ENDPROC

	PROCEDURE ondeleteenable
		RETURN NOT thisform.ForbidResCancel()
	ENDPROC

	PROCEDURE ondo
		thisform.OnAuto()
	ENDPROC

	PROCEDURE ondrop
		thisform.OnMove()
	ENDPROC

	PROCEDURE ondropenable
		RETURN NOT thisform.ForbidMove()
	ENDPROC

	PROCEDURE ondropvisible
		RETURN NOT ISNULL(thisform.MovingReser)
	ENDPROC

	PROCEDURE oneditenable
		RETURN NOT thisform.ForbidEdit()
	ENDPROC

	PROCEDURE onfindnext
		thisform.DoFindNext()
	ENDPROC

	PROCEDURE onfindnextenable
		RETURN thisform.CheckSearchRes()
	ENDPROC

	PROCEDURE onfreerooms
		thisform.FilterFreeRooms()
	ENDPROC

	PROCEDURE onfreeroomsvisible
		RETURN thisform.nFilterCondition = 0
	ENDPROC

	PROCEDURE ongroupfuncenable
		RETURN NOT thisform.ForbidGroupFunctions()
	ENDPROC

	PROCEDURE onguests
		thisform.OnGuests()
	ENDPROC

	PROCEDURE onguestsenable
		RETURN NOT thisform.ForbidGuests()
	ENDPROC

	PROCEDURE onguestsvisible
		RETURN thisform.lUseConfEvents
	ENDPROC

	PROCEDURE onhistory
		thisform.OnHistoryCmd()
	ENDPROC

	PROCEDURE onhistoryenable
		RETURN NOT thisform.ForbidResCancel()
	ENDPROC

	PROCEDURE onmove
		thisform.OnMove()
	ENDPROC

	PROCEDURE onmoveenable
		RETURN NOT thisform.ForbidMove()
	ENDPROC

	PROCEDURE onmovevisible
		RETURN ISNULL(thisform.MovingReser)
	ENDPROC

	PROCEDURE onnewenable
		RETURN NOT thisform.ForbidNew()
	ENDPROC

	PROCEDURE onpicture
		thisform.m_showpicture()
	ENDPROC

	PROCEDURE onprint
		thisform.OnFormPrint()
	ENDPROC

	PROCEDURE onratefind
		thisform.OnRateFind()
	ENDPROC

	PROCEDURE onratefindenable
		RETURN NOT thisform.ForbidNew()
	ENDPROC

	PROCEDURE onrates
		thisform.mRatePeriod()
	ENDPROC

	PROCEDURE onratesenable
		RETURN NOT thisform.ForbidRatePer()
	ENDPROC

	PROCEDURE onsearchenable
		RETURN paRights(150)
	ENDPROC

ENDDEFINE

DEFINE CLASS ctbrsrvadrmain AS ctbrbase OF "cit_tbrform.vcx" 
 	*< CLASSDATA: Baseclass="custom" Timestamp="" Scale="Pixels" Uniqueid="" />

	#INCLUDE "..\include\constdefines.h"
	*<DefinedPropArrayMethod>
		*m: onmark
		*m: onmarkenable
		*m: onmarkvisible
	*</DefinedPropArrayMethod>

	Name = "ctbrsrvadrmain"
	
	PROCEDURE Init
		this.AddButtonDefinition(P_EDIT)
		this.AddButtonDefinition(P_SAVE)
		this.AddButtonDefinition(P_UNDO)
		this.AddButtonDefinition(P_SEARCH)
		this.AddButtonDefinition(P_SEARCH_MORE)
		this.AddButtonDefinition(P_TOP)
		this.AddButtonDefinition(P_PREVIOUS)
		this.AddButtonDefinition(P_NEXT)
		this.AddButtonDefinition(P_BOTTOM)
		this.AddButtonDefinition(P_TRANSFER)
		this.AddButtonDefinition(P_MARK)
		this.AddButtonDefinition(P_COLUMNS)
		this.AddButtonDefinition(P_CLOSE)
	ENDPROC

	PROCEDURE onmark
		thisform.OnMark()
	ENDPROC

	PROCEDURE onmarkenable
		RETURN NOT EMPTY(thisform.nadidfortransfer)
	ENDPROC

	PROCEDURE onmarkvisible
		RETURN NOT EMPTY(thisform.nadidfortransfer)
	ENDPROC

	PROCEDURE onsaveenable
		RETURN thisform.Mode = EDIT_MODE
	ENDPROC

	PROCEDURE ontransfer
		thisform.OnTransfer()
	ENDPROC

	PROCEDURE onundoenable
		RETURN thisform.Mode = EDIT_MODE
	ENDPROC

ENDDEFINE

DEFINE CLASS ctbrsrvresbrw AS ctbrbase OF "cit_tbrform.vcx" 
 	*< CLASSDATA: Baseclass="custom" Timestamp="" Scale="Pixels" Uniqueid="" />

	#INCLUDE "..\include\constdefines.h"
	*<DefinedPropArrayMethod>
		*m: onmove
	*</DefinedPropArrayMethod>

	Name = "ctbrsrvresbrw"
	
	PROCEDURE Init
		this.AddButtonDefinition(P_EDIT)
		this.AddButtonDefinition(P_MOVE,,[to-from])
		this.AddButtonDefinition(P_SEARCH)
		this.AddButtonDefinition(P_SEARCH_MORE)
		this.AddButtonDefinition(P_TOP)
		this.AddButtonDefinition(P_PREVIOUS)
		this.AddButtonDefinition(P_NEXT)
		this.AddButtonDefinition(P_BOTTOM)
		this.AddButtonDefinition(P_COLUMNS)
		this.AddButtonDefinition(P_CLOSE)
	ENDPROC

	PROCEDURE onmove
		thisform.OnMove()
	ENDPROC

ENDDEFINE

DEFINE CLASS ctbrstat AS ctbrbase OF "cit_tbrform.vcx" 
 	*< CLASSDATA: Baseclass="custom" Timestamp="" Scale="Pixels" Uniqueid="" />

	#INCLUDE "..\include\processes.h"
	*<DefinedPropArrayMethod>
		*m: onupdate
	*</DefinedPropArrayMethod>

	Name = "ctbrstat"
	
	PROCEDURE Init
		this.AddButtonDefinition(P_UPDATE)
		this.AddButtonDefinition(P_PRINT)
		this.AddButtonDefinition(P_CLOSE)
	ENDPROC

	PROCEDURE onupdate
		thisform.OnUpdateGraph()
	ENDPROC

ENDDEFINE

DEFINE CLASS ctbruserlist AS ctbrbase OF "cit_tbrform.vcx" 
 	*< CLASSDATA: Baseclass="custom" Timestamp="" Scale="Pixels" Uniqueid="" />

	#INCLUDE "..\include\processes.h"
	*<DefinedPropArrayMethod>
		*m: onlogout
		*m: onlogoutall
		*m: onlogoutallenable
		*m: onlogoutenable
		*m: onsendmessageall
		*m: onsendmessageallenable
		*m: onshowmessages
		*m: onshowmessagesenable
	*</DefinedPropArrayMethod>

	Name = "ctbruserlist"
	
	PROCEDURE Init
		this.AddButtonDefinition(P_NEW, [GetText("USERLIST","TXT_SENDMESSAGE_TO_USER")], [mail])
		this.AddButtonDefinition(P_NEW_ALL)
		this.AddButtonDefinition(P_SHOW)
		this.AddButtonDefinition(P_LOGOUT)
		this.AddButtonDefinition(P_LOGOUT_ALL)
		this.AddButtonDefinition(P_COLUMNS)
		this.AddButtonDefinition(P_CLOSE)
	ENDPROC

	PROCEDURE onlogout
		thisformset.OnLogout()
	ENDPROC

	PROCEDURE onlogoutall
		thisformset.OnLogoutAll()
	ENDPROC

	PROCEDURE onlogoutallenable
		RETURN NOT NoUserRights("Maint",6)
	ENDPROC

	PROCEDURE onlogoutenable
		RETURN NOT NoUserRights("Maint",6)
	ENDPROC

	PROCEDURE onnew
		thisformset.OnSendMessage()
	ENDPROC

	PROCEDURE onnewenable
		RETURN NOT NoUserRights("Maint",5)
	ENDPROC

	PROCEDURE onsendmessageall
		thisformset.OnSendMessageAll()
	ENDPROC

	PROCEDURE onsendmessageallenable
		RETURN NOT NoUserRights("Maint",5)
	ENDPROC

	PROCEDURE onshowmessages
		thisformset.OnShowMessages()
	ENDPROC

	PROCEDURE onshowmessagesenable
		RETURN NOT NoUserRights("Maint",8)
	ENDPROC

ENDDEFINE

DEFINE CLASS ctbrvouchers AS ctbrbase OF "cit_tbrform.vcx" 
 	*< CLASSDATA: Baseclass="custom" Timestamp="" Scale="Pixels" Uniqueid="" />

	#INCLUDE "..\include\processes.h"
	*<DefinedPropArrayMethod>
		*m: onbill
		*m: onextvouchers
		*m: onextvouchersvisible
	*</DefinedPropArrayMethod>

	Name = "ctbrvouchers"
	
	PROCEDURE Init
		this.AddButtonDefinition(P_NEW,,,,,.T.)	&& lModalClick
		this.AddButtonDefinition(P_EDIT)
		this.AddButtonDefinition(P_DELETE)
		this.AddButtonDefinition(P_BILL)
		this.AddButtonDefinition(P_PRINT)
		this.AddButtonDefinition(P_SEARCH)
		this.AddButtonDefinition(P_EXT_VOUCHERS)
		this.AddButtonDefinition(P_COLUMNS)
		this.AddButtonDefinition(P_CLOSE)
	ENDPROC

	PROCEDURE onbill
		thisformset.OnBill()
	ENDPROC

	PROCEDURE ondelete
		thisformset.OnDelete()
	ENDPROC

	PROCEDURE onedit
		thisformset.OnEdit()
	ENDPROC

	PROCEDURE onextvouchers
		thisformset.OnExtVouchers()
	ENDPROC

	PROCEDURE onextvouchersvisible
		RETURN _screen.oGlobal.lexternalvouchers
	ENDPROC

	PROCEDURE onnew
		thisformset.OnNew()
	ENDPROC

	PROCEDURE onprint
		thisformset.OnPrint()
	ENDPROC

	PROCEDURE onsearch
		thisformset.OnSearch()
	ENDPROC

ENDDEFINE

DEFINE CLASS ctbrvouchersext AS ctbrbase OF "cit_tbrform.vcx" 
 	*< CLASSDATA: Baseclass="custom" Timestamp="" Scale="Pixels" Uniqueid="" />

	#INCLUDE "..\include\processes.h"
	*<DefinedPropArrayMethod>
		*m: onbill
		*m: oncreate
		*m: onsettings
	*</DefinedPropArrayMethod>

	Name = "ctbrvouchersext"
	
	PROCEDURE Init
		this.AddButtonDefinition(P_CREATE_VOUCHER)
		this.AddButtonDefinition(P_DELETE)
		this.AddButtonDefinition(P_SEARCH)
		this.AddButtonDefinition(P_COLUMNS)
		this.AddButtonDefinition(P_SETTINGS)
		this.AddButtonDefinition(P_CLOSE)
	ENDPROC

	PROCEDURE onbill
		thisform.OnBill()
	ENDPROC

	PROCEDURE oncreate
		thisform.OnCreate()
	ENDPROC

	PROCEDURE ondelete
		thisform.OnDelete()
	ENDPROC

	PROCEDURE onedit
		thisform.OnEdit()
	ENDPROC

	PROCEDURE onprint
		thisform.OnPrint()
	ENDPROC

	PROCEDURE onsearch
		thisform.OnSearch()
	ENDPROC

	PROCEDURE onsettings
		thisform.OnSettings()
	ENDPROC

ENDDEFINE
