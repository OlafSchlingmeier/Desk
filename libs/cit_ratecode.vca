*--------------------------------------------------------------------------------------------------------------------------------------------------------
* (ES) AUTOGENERADO - ¡¡ATENCIÓN!! - ¡¡NO PENSADO PARA EJECUTAR!! USAR SOLAMENTE PARA INTEGRAR CAMBIOS Y ALMACENAR CON HERRAMIENTAS SCM!!
* (EN) AUTOGENERATED - ATTENTION!! - NOT INTENDED FOR EXECUTION!! USE ONLY FOR MERGING CHANGES AND STORING WITH SCM TOOLS!!
*--------------------------------------------------------------------------------------------------------------------------------------------------------
*< FOXBIN2PRG: Version="1.19" SourceFile="cit_ratecode.vcx" /> (Solo para binarios VFP 9 / Only for VFP 9 binaries)
*
*
DEFINE CLASS cratecodemng AS tform OF "main.vcx" 
 	*< CLASSDATA: Baseclass="form" Timestamp="" Scale="Pixels" Uniqueid="" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="lblRateCode" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtRateCode" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chkinactive" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chkCompl" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chkAltDef" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblDesc" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtDesc" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblDescSA" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtDescSA" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chkSaOn" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfNote" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfNote.pagNote.edtNote" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfNote.pagNote.chkCopyNote" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfNote.pagCitadelMobile.edtDescription" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfNote.pagCitadelMobile.chkAllow" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfNote.pagCitadelMobile.chkShowSplits" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfNote.pagCitadelMobile.lblExternalID" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfNote.pagCitadelMobile.txtExternalID" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfNote.pagCitadelMobile.chkShowOnEmailConformation" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfNote.pagCitadelMobile.chkCitWebPrices" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chkAlertByCXL" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtAlertByCXL" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfRateCode" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfRateCode.pagSettings.opgRhythm" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfRateCode.pagSettings.cbopaymethod" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfRateCode.pagSettings.lblMinNgts" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfRateCode.pagSettings.txtMinNgts" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfRateCode.pagSettings.lblmaxnights" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfRateCode.pagSettings.txtmaxnights" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfRateCode.pagSettings.lblBlocked" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfRateCode.pagSettings.chkBlockMon" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfRateCode.pagSettings.chkBlockTue" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfRateCode.pagSettings.chkBlockWed" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfRateCode.pagSettings.chkBlockThu" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfRateCode.pagSettings.chkBlockFri" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfRateCode.pagSettings.lblRoomTyp" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfRateCode.pagSettings.edtRoomTyp" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfRateCode.pagSettings.cmdRoomTyp" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfRateCode.pagSettings.chkAll" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfRateCode.pagSettings.lblFromTo" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfRateCode.pagSettings.dtxtFrom" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfRateCode.pagSettings.dtxtTo" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfRateCode.pagSettings.lblSeason" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfRateCode.pagSettings.txtSeason" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfRateCode.pagSettings.chkBlockSat" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfRateCode.pagSettings.lblColor" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfRateCode.pagSettings.cboColor" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfRateCode.pagSettings.chkBlockSun" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfRateCode.pagSettings.opgPeriod" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfRateCode.pagSettings.lblPeriod" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfRateCode.pagSettings.txtPrcdur" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfRateCode.pagSettings.txtOnDay" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfRateCode.pagSettings.lblGroupCode" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfRateCode.pagSettings.cboGroupCode" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfRateCode.pagSettings.lblForeignCurrency" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfRateCode.pagSettings.lblPayMeth" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfRateCode.pagSettings.cboPayMeth" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfRateCode.pagSettings.lblMarkC" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfRateCode.pagSettings.cboMarkCode" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfRateCode.pagSettings.lblSourceC" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfRateCode.pagSettings.cboSourceCode" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfRateCode.pagSettings.lblRhythm" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfRateCode.pagSettings.lblMinStayGap" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfRateCode.pagSettings.txtMinStayGap" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfRateCode.pagSettings.lblMinStayGapFilled" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfRateCode.pagSettings.txtMinStayGapFilled" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfRateCode.pagSettings.lblArrBlocked" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfRateCode.pagSettings.chkArrBlockMon" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfRateCode.pagSettings.chkArrBlockTue" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfRateCode.pagSettings.chkArrBlockWed" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfRateCode.pagSettings.chkArrBlockThu" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfRateCode.pagSettings.chkArrBlockFri" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfRateCode.pagSettings.chkArrBlockSat" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfRateCode.pagSettings.chkArrBlockSun" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfRateCode.pagSettings.lblDepBlocked" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfRateCode.pagSettings.chkDepBlockMon" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfRateCode.pagSettings.chkDepBlockTue" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfRateCode.pagSettings.chkDepBlockWed" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfRateCode.pagSettings.chkDepBlockThu" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfRateCode.pagSettings.chkDepBlockFri" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfRateCode.pagSettings.chkDepBlockSat" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfRateCode.pagSettings.chkDepBlockSun" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfRateCode.pagRates.txtFixRate" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfRateCode.pagRates.lblMinRate" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfRateCode.pagRates.txtMinRate" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfRateCode.pagRates.lblPlus" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfRateCode.pagRates.txtMinRateByPerson" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfRateCode.pagRates.lblMinRateByPerson" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfRateCode.pagRates.lblStandardRate" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfRateCode.pagRates.grdStdRates" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfRateCode.pagRates.grdStdRates.grcRoomtype.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfRateCode.pagRates.grdStdRates.grcRoomtype.Tbgrid1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfRateCode.pagRates.grdStdRates.grcAmnt1.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfRateCode.pagRates.grdStdRates.grcAmnt1.Tbgrid1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfRateCode.pagRates.grdStdRates.grcAmnt2.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfRateCode.pagRates.grdStdRates.grcAmnt2.Tbgrid1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfRateCode.pagRates.grdStdRates.grcAmnt3.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfRateCode.pagRates.grdStdRates.grcAmnt3.Tbgrid1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfRateCode.pagRates.grdStdRates.grcAmnt4.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfRateCode.pagRates.grdStdRates.grcAmnt4.Tbgrid1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfRateCode.pagRates.grdStdRates.grcAmnt5.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfRateCode.pagRates.grdStdRates.grcAmnt5.Tbgrid1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfRateCode.pagRates.grdStdRates.grcCamnt1.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfRateCode.pagRates.grdStdRates.grcCamnt1.Tbgrid1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfRateCode.pagRates.grdStdRates.grcCamnt2.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfRateCode.pagRates.grdStdRates.grcCamnt2.Tbgrid1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfRateCode.pagRates.grdStdRates.grcCamnt3.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfRateCode.pagRates.grdStdRates.grcCamnt3.Tbgrid1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfRateCode.pagRates.lblSpecRate" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfRateCode.pagRates.chkRateMon" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfRateCode.pagRates.chkRateTue" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfRateCode.pagRates.chkRateWed" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfRateCode.pagRates.chkRateThu" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfRateCode.pagRates.chkRateFri" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfRateCode.pagRates.chkRateSat" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfRateCode.pagRates.chkRateSun" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfRateCode.pagRates.chkNoExtra" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfRateCode.pagRates.lblNotArr" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfRateCode.pagRates.chkArrMon" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfRateCode.pagRates.chkArrTue" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfRateCode.pagRates.chkArrWed" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfRateCode.pagRates.chkArrThu" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfRateCode.pagRates.chkArrFri" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfRateCode.pagRates.chkArrSat" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfRateCode.pagRates.chkArrSun" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfRateCode.pagRates.lblSpecialRate" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfRateCode.pagRates.grdSpcRates" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfRateCode.pagRates.grdSpcRates.grcRoomtype.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfRateCode.pagRates.grdSpcRates.grcRoomtype.Tbgrid1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfRateCode.pagRates.grdSpcRates.grcAmnt1.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfRateCode.pagRates.grdSpcRates.grcAmnt1.Tbgrid1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfRateCode.pagRates.grdSpcRates.grcAmnt2.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfRateCode.pagRates.grdSpcRates.grcAmnt2.Tbgrid1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfRateCode.pagRates.grdSpcRates.grcAmnt3.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfRateCode.pagRates.grdSpcRates.grcAmnt3.Tbgrid1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfRateCode.pagRates.grdSpcRates.grcAmnt4.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfRateCode.pagRates.grdSpcRates.grcAmnt4.Tbgrid1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfRateCode.pagRates.grdSpcRates.grcAmnt5.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfRateCode.pagRates.grdSpcRates.grcAmnt5.Tbgrid1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfRateCode.pagRates.grdSpcRates.grcCamnt1.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfRateCode.pagRates.grdSpcRates.grcCamnt1.Tbgrid1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfRateCode.pagRates.grdSpcRates.grcCamnt2.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfRateCode.pagRates.grdSpcRates.grcCamnt2.Tbgrid1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfRateCode.pagRates.grdSpcRates.grcCamnt3.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfRateCode.pagRates.grdSpcRates.grcCamnt3.Tbgrid1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfRateCode.pagRates.txtwFixRate" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfRateCode.pagRates.lblAdditionalBedSurcharge" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfRateCode.pagRates.txtrc_adperra" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfRateCode.pagRates.txtrc_adperid" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfRateCode.pagRates.lblHRSID" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfRateCode.pagRates.txtHRSIDPrice" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfRateCode.pagRates.lblHRSIDPrice" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfRateCode.pagRates.txtHRSIDSeason" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfRateCode.pagRates.lblHRSIDSeason" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfRateCode.pagRates.lblFixRate" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfRateCode.pagRates.lblwFixRate" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfRateCode.pagSplit.cmdNew" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfRateCode.pagSplit.cmdEdit" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfRateCode.pagSplit.cmdDelete" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfRateCode.pagSplit.cmdHistory" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfRateCode.pagSplit.grdSplit" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfRateCode.pagSplit.grdSplit.COLUMN0.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfRateCode.pagSplit.grdSplit.COLUMN0.Text1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfRateCode.pagSplit.cmdNote" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfRateCode.pagCalendar.lblMonth" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfRateCode.pagCalendar.spnMonth" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfRateCode.pagCalendar.txtMonth" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfRateCode.pagCalendar.grdCalendar" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfRateCode.pagCalendar.lblTimePeriod" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfRateCode.pagCalendar.dtxtFrom" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfRateCode.pagCalendar.lblTo" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfRateCode.pagCalendar.dtxtTo" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfRateCode.pagCalendar.chkBlocked" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfRateCode.pagCalendar.lblMinStay" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfRateCode.pagCalendar.txtMinStay" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfRateCode.pagCalendar.cmdApply" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdOK" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdCancel" UniqueID="" Timestamp="" />

	#INCLUDE "..\include\constdefines.h"
	*<DefinedPropArrayMethod>
		*m: onok
		*m: onroomtypchk
		*m: onroomtypcmd
		*m: onsplitdelete
		*m: onsplitedit
		*m: onsplithistory
		*m: onsplitnew
		*m: onsplitnote
		*m: progressbar
		*m: ratepropset
		*m: rccalendarenable
		*m: rcchkseason
		*m: rcgetcalendar
		*m: rcgetroomtypes
		*m: rclistroomtypes
		*m: rcloaddays
		*m: rcsetcalendardays
		*m: rcsetcalendarmonth
		*m: rcsetroomtypes
		*m: setcontrolsource
		*m: setupdateseasonextraarticles
		*m: structureforlogger
		*m: updateextraandsplitprices
		*m: updateforlogger
		*m: updateseasonccurseasonsevents
		*m: updateseasonextraarticles
		*p: coldrcfromdat
		*p: coldrcratecod
		*p: coldrcroomtyp
		*p: coldrcseason
		*p: cpleasewaitcaption
		*p: lshouldupdateseasonextraarticles
		*p: ncalendarmonth
		*p: ncalendaryear
		*p: nresult
		*p: ocaratearti
		*p: ocaratecode
		*p: ocarateprop
		*p: ocarcyield
		*p: odata
		*p: oparams		&& Object with input - output parameters in properties
		*a: adow[7,0]
	*</DefinedPropArrayMethod>

	AlwaysOnTop = .F.
	Caption = "frmRateCode"
	ControlBox = .T.
	cpleasewaitcaption = 
	DataSession = 2
	DoCreate = .T.
	doini = .T.
	formname = frmRateCode
	Height = 592
	Icon = ..\bitmap\icons\misc25.ico
	KeyPreview = .T.
	lshouldupdateseasonextraarticles = .F.
	Name = "cratecodemng"
	ncalendarmonth = 0
	ncalendaryear = 0
	nmode = 1
	nresult = 0
	ocaratearti = .NULL.
	ocaratecode = .NULL.
	ocarateprop = .NULL.
	ocarcyield = .NULL.
	oparams = .NULL.		&& Object with input - output parameters in properties
	ShowTips = .T.
	Width = 804
	WindowType = 1

	ADD OBJECT 'chkAlertByCXL' AS tcheckbox WITH ;
		Alignment = 0, ;
		Caption = "chkAlertByCXL", ;
		DisabledForeColor = 1,1,1, ;
		Height = 17, ;
		Left = 12, ;
		Name = "chkAlertByCXL", ;
		TabIndex = 12, ;
		Top = 137, ;
		Width = 336, ;
		ZOrderSet = 11
		*< END OBJECT: ClassLib="main.vcx" BaseClass="checkbox" />

	ADD OBJECT 'chkAltDef' AS tcheckbox WITH ;
		Alignment = 0, ;
		Caption = "chkAltDef", ;
		DisabledForeColor = 1,1,1, ;
		Height = 17, ;
		Left = 120, ;
		Name = "chkAltDef", ;
		TabIndex = 5, ;
		Top = 39, ;
		Width = 228, ;
		ZOrderSet = 4
		*< END OBJECT: ClassLib="main.vcx" BaseClass="checkbox" />

	ADD OBJECT 'chkCompl' AS tcheckbox WITH ;
		Alignment = 0, ;
		Caption = "chkCompl", ;
		DisabledForeColor = 1,1,1, ;
		Height = 17, ;
		Left = 12, ;
		Name = "chkCompl", ;
		TabIndex = 4, ;
		Top = 39, ;
		Width = 108, ;
		ZOrderSet = 3
		*< END OBJECT: ClassLib="main.vcx" BaseClass="checkbox" />

	ADD OBJECT 'chkinactive' AS tcheckbox WITH ;
		Alignment = 0, ;
		Caption = "chkinactive", ;
		DisabledForeColor = 1,1,1, ;
		Height = 17, ;
		Left = 264, ;
		Name = "chkinactive", ;
		TabIndex = 3, ;
		Top = 15, ;
		Width = 84, ;
		ZOrderSet = 2
		*< END OBJECT: ClassLib="main.vcx" BaseClass="checkbox" />

	ADD OBJECT 'chkSaOn' AS tcheckbox WITH ;
		Alignment = 0, ;
		Caption = "chkSaOn", ;
		DisabledForeColor = 1,1,1, ;
		Height = 17, ;
		Left = 264, ;
		Name = "chkSaOn", ;
		TabIndex = 10, ;
		Top = 87, ;
		Width = 84, ;
		ZOrderSet = 9
		*< END OBJECT: ClassLib="main.vcx" BaseClass="checkbox" />

	ADD OBJECT 'cmdCancel' AS tcommandbutton WITH ;
		Cancel = .T., ;
		Caption = "cmdCancel", ;
		Left = 408, ;
		Name = "cmdCancel", ;
		TabIndex = 16, ;
		Top = 565, ;
		ZOrderSet = 15
		*< END OBJECT: ClassLib="main.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'cmdOK' AS tcommandbutton WITH ;
		Caption = "cmdOK", ;
		Default = .T., ;
		Left = 312, ;
		Name = "cmdOK", ;
		TabIndex = 15, ;
		Top = 565, ;
		ZOrderSet = 14
		*< END OBJECT: ClassLib="main.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'lblDesc' AS tlabel WITH ;
		Caption = "lblDesc", ;
		Height = 17, ;
		Left = 12, ;
		Name = "lblDesc", ;
		TabIndex = 6, ;
		Top = 63, ;
		Width = 108, ;
		ZOrderSet = 5
		*< END OBJECT: ClassLib="main.vcx" BaseClass="label" />

	ADD OBJECT 'lblDescSA' AS tlabel WITH ;
		Caption = "lblDescSA", ;
		Height = 17, ;
		Left = 12, ;
		Name = "lblDescSA", ;
		TabIndex = 8, ;
		Top = 87, ;
		Width = 108, ;
		ZOrderSet = 7
		*< END OBJECT: ClassLib="main.vcx" BaseClass="label" />

	ADD OBJECT 'lblRateCode' AS tlabel WITH ;
		Caption = "lblRateCode", ;
		Height = 17, ;
		Left = 12, ;
		Name = "lblRateCode", ;
		TabIndex = 1, ;
		Top = 15, ;
		Width = 108, ;
		ZOrderSet = 0
		*< END OBJECT: ClassLib="main.vcx" BaseClass="label" />

	ADD OBJECT 'pgfNote' AS tpageframe WITH ;
		ErasePage = .T., ;
		Height = 137, ;
		Left = 348, ;
		Name = "pgfNote", ;
		PageCount = 2, ;
		TabIndex = 11, ;
		Width = 447, ;
		ZOrderSet = 10, ;
		Page1.Caption = "pagNote", ;
		Page1.Name = "pagNote", ;
		Page2.Caption = "pagCitadelMobile", ;
		Page2.Name = "pagCitadelMobile"
		*< END OBJECT: ClassLib="main.vcx" BaseClass="pageframe" />

	ADD OBJECT 'pgfNote.pagCitadelMobile.chkAllow' AS tcheckbox WITH ;
		Alignment = 0, ;
		AutoSize = .T., ;
		Caption = "chkAllow", ;
		DisabledForeColor = 1,1,1, ;
		Height = 17, ;
		Left = 2, ;
		Name = "chkAllow", ;
		TabIndex = 2, ;
		Top = 64, ;
		Width = 66, ;
		ZOrderSet = 12
		*< END OBJECT: ClassLib="main.vcx" BaseClass="checkbox" />

	ADD OBJECT 'pgfNote.pagCitadelMobile.chkCitWebPrices' AS tcheckbox WITH ;
		Alignment = 0, ;
		AutoSize = .T., ;
		Caption = "cwp", ;
		DisabledForeColor = 1,1,1, ;
		Height = 17, ;
		Left = 238, ;
		Name = "chkCitWebPrices", ;
		TabIndex = 3, ;
		Top = 64, ;
		Width = 40, ;
		ZOrderSet = 12
		*< END OBJECT: ClassLib="main.vcx" BaseClass="checkbox" />

	ADD OBJECT 'pgfNote.pagCitadelMobile.chkShowOnEmailConformation' AS tcheckbox WITH ;
		Alignment = 0, ;
		AutoSize = .T., ;
		Caption = "chkShowOnEmailConformation", ;
		DisabledForeColor = 1,1,1, ;
		Height = 17, ;
		Left = 247, ;
		Name = "chkShowOnEmailConformation", ;
		TabIndex = 7, ;
		Top = 87, ;
		Width = 191, ;
		ZOrderSet = 12
		*< END OBJECT: ClassLib="main.vcx" BaseClass="checkbox" />

	ADD OBJECT 'pgfNote.pagCitadelMobile.chkShowSplits' AS tcheckbox WITH ;
		Alignment = 0, ;
		AutoSize = .T., ;
		Caption = "chkShowSplits", ;
		DisabledForeColor = 1,1,1, ;
		Height = 17, ;
		Left = 282, ;
		Name = "chkShowSplits", ;
		TabIndex = 4, ;
		Top = 64, ;
		Width = 99, ;
		ZOrderSet = 12
		*< END OBJECT: ClassLib="main.vcx" BaseClass="checkbox" />

	ADD OBJECT 'pgfNote.pagCitadelMobile.edtDescription' AS teditbox WITH ;
		DisabledForeColor = 1,1,1, ;
		Height = 64, ;
		Left = 1, ;
		Name = "edtDescription", ;
		TabIndex = 1, ;
		Top = 1, ;
		Width = 440, ;
		ZOrderSet = 11
		*< END OBJECT: ClassLib="main.vcx" BaseClass="editbox" />

	ADD OBJECT 'pgfNote.pagCitadelMobile.lblExternalID' AS tlabel WITH ;
		Caption = "lblExternalID", ;
		Height = 17, ;
		Left = 2, ;
		Name = "lblExternalID", ;
		TabIndex = 5, ;
		Top = 87, ;
		Width = 108, ;
		ZOrderSet = 7
		*< END OBJECT: ClassLib="main.vcx" BaseClass="label" />

	ADD OBJECT 'pgfNote.pagCitadelMobile.txtExternalID' AS ttext WITH ;
		DisabledForeColor = 1,1,1, ;
		Format = "K", ;
		Height = 23, ;
		InputMask = "XXXXXXXXXX", ;
		Left = 110, ;
		Name = "txtExternalID", ;
		TabIndex = 6, ;
		Top = 84, ;
		Width = 132, ;
		ZOrderSet = 8
		*< END OBJECT: ClassLib="main.vcx" BaseClass="textbox" />

	ADD OBJECT 'pgfNote.pagNote.chkCopyNote' AS tcheckbox WITH ;
		Alignment = 0, ;
		AutoSize = .T., ;
		Caption = "chkCopyNote", ;
		DisabledForeColor = 1,1,1, ;
		Height = 17, ;
		Left = 2, ;
		Name = "chkCopyNote", ;
		Top = 64, ;
		Width = 91, ;
		ZOrderSet = 12
		*< END OBJECT: ClassLib="main.vcx" BaseClass="checkbox" />

	ADD OBJECT 'pgfNote.pagNote.edtNote' AS teditbox WITH ;
		DisabledForeColor = 1,1,1, ;
		Height = 64, ;
		Left = 1, ;
		Name = "edtNote", ;
		Top = 1, ;
		Width = 440, ;
		ZOrderSet = 11
		*< END OBJECT: ClassLib="main.vcx" BaseClass="editbox" />

	ADD OBJECT 'pgfRateCode' AS tpageframe WITH ;
		ErasePage = .T., ;
		Height = 406, ;
		Left = 12, ;
		Name = "pgfRateCode", ;
		PageCount = 4, ;
		TabIndex = 14, ;
		Top = 158, ;
		Width = 783, ;
		ZOrderSet = 13, ;
		Page1.Caption = "pagSettings", ;
		Page1.Name = "pagSettings", ;
		Page2.Caption = "pagRates", ;
		Page2.Name = "pagRates", ;
		Page3.Caption = "pagSplit", ;
		Page3.Name = "pagSplit", ;
		Page4.Caption = "pagCalendar", ;
		Page4.Name = "pagCalendar"
		*< END OBJECT: ClassLib="main.vcx" BaseClass="pageframe" />

	ADD OBJECT 'pgfRateCode.pagCalendar.chkBlocked' AS tcheckbox WITH ;
		Alignment = 0, ;
		Caption = "chkBlocked", ;
		DisabledForeColor = 1,1,1, ;
		Height = 17, ;
		Left = 347, ;
		Name = "chkBlocked", ;
		Top = 119, ;
		Value = .F., ;
		Width = 96
		*< END OBJECT: ClassLib="main.vcx" BaseClass="checkbox" />

	ADD OBJECT 'pgfRateCode.pagCalendar.cmdApply' AS tcommandbutton WITH ;
		Caption = "cmdApply", ;
		Left = 683, ;
		Name = "cmdApply", ;
		Top = 116
		*< END OBJECT: ClassLib="main.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'pgfRateCode.pagCalendar.dtxtFrom' AS tdatectrl WITH ;
		Alignment = 3, ;
		DisabledForeColor = 1,1,1, ;
		Left = 107, ;
		Name = "dtxtFrom", ;
		Top = 116, ;
		Value = {}
		*< END OBJECT: ClassLib="main.vcx" BaseClass="textbox" />

	ADD OBJECT 'pgfRateCode.pagCalendar.dtxtTo' AS tdatectrl WITH ;
		Alignment = 3, ;
		DisabledForeColor = 1,1,1, ;
		Left = 215, ;
		Name = "dtxtTo", ;
		Top = 116, ;
		Value = {}
		*< END OBJECT: ClassLib="main.vcx" BaseClass="textbox" />

	ADD OBJECT 'pgfRateCode.pagCalendar.grdCalendar' AS grdbase WITH ;
		AllowCellSelection = .F., ;
		AllowHeaderSizing = .F., ;
		AllowRowSizing = .F., ;
		DeleteMark = .F., ;
		Enabled = .F., ;
		HeaderHeight = 30, ;
		Height = 48, ;
		Left = 11, ;
		lsetgridprop = .F., ;
		Name = "grdCalendar", ;
		p_basecolumncontrol = tbgrid, ;
		ReadOnly = .T., ;
		RecordMark = .F., ;
		resizeheaderfont = .T., ;
		savegridsettings = .F., ;
		ScrollBars = 0, ;
		SplitBar = .F., ;
		Top = 44, ;
		Width = 756
		*< END OBJECT: ClassLib="main.vcx" BaseClass="grid" />

	ADD OBJECT 'pgfRateCode.pagCalendar.lblMinStay' AS tlabel WITH ;
		Caption = "lblMinStay", ;
		Height = 17, ;
		Left = 443, ;
		Name = "lblMinStay", ;
		Top = 119, ;
		Width = 72
		*< END OBJECT: ClassLib="main.vcx" BaseClass="label" />

	ADD OBJECT 'pgfRateCode.pagCalendar.lblMonth' AS tlabel WITH ;
		Caption = "lblMonth", ;
		Height = 17, ;
		Left = 263, ;
		Name = "lblMonth", ;
		Top = 11, ;
		Width = 72
		*< END OBJECT: ClassLib="main.vcx" BaseClass="label" />

	ADD OBJECT 'pgfRateCode.pagCalendar.lblTimePeriod' AS tlabel WITH ;
		Caption = "lblTimePeriod", ;
		Height = 17, ;
		Left = 11, ;
		Name = "lblTimePeriod", ;
		Top = 119, ;
		Width = 96
		*< END OBJECT: ClassLib="main.vcx" BaseClass="label" />

	ADD OBJECT 'pgfRateCode.pagCalendar.lblTo' AS tlabel WITH ;
		AutoSize = .T., ;
		Caption = "-", ;
		Left = 209, ;
		Name = "lblTo", ;
		Top = 119, ;
		Width = 6
		*< END OBJECT: ClassLib="main.vcx" BaseClass="label" />

	ADD OBJECT 'pgfRateCode.pagCalendar.spnMonth' AS tspinner WITH ;
		DisabledForeColor = 1,1,1, ;
		Left = 335, ;
		Name = "spnMonth", ;
		Top = 8, ;
		Width = 60
		*< END OBJECT: ClassLib="main.vcx" BaseClass="spinner" />

	ADD OBJECT 'pgfRateCode.pagCalendar.txtMinStay' AS ttext WITH ;
		Alignment = 3, ;
		DisabledForeColor = 1,1,1, ;
		InputMask = "999", ;
		Left = 515, ;
		Name = "txtMinStay", ;
		Top = 116, ;
		Value = 0, ;
		Width = 50
		*< END OBJECT: ClassLib="main.vcx" BaseClass="textbox" />

	ADD OBJECT 'pgfRateCode.pagCalendar.txtMonth' AS ttext WITH ;
		DisabledForeColor = 0,0,0, ;
		Enabled = .F., ;
		Left = 396, ;
		Name = "txtMonth", ;
		Top = 8
		*< END OBJECT: ClassLib="main.vcx" BaseClass="textbox" />

	ADD OBJECT 'pgfRateCode.pagRates.chkArrFri' AS tcheckbox WITH ;
		Alignment = 0, ;
		AutoSize = .F., ;
		Caption = "chkArrFri", ;
		DisabledForeColor = 1,1,1, ;
		Left = 311, ;
		Name = "chkArrFri", ;
		TabIndex = 32, ;
		Top = 217, ;
		Width = 48, ;
		ZOrderSet = 58
		*< END OBJECT: ClassLib="main.vcx" BaseClass="checkbox" />

	ADD OBJECT 'pgfRateCode.pagRates.chkArrMon' AS tcheckbox WITH ;
		Alignment = 0, ;
		AutoSize = .F., ;
		Caption = "chkArrMon", ;
		DisabledForeColor = 1,1,1, ;
		Left = 119, ;
		Name = "chkArrMon", ;
		TabIndex = 28, ;
		Top = 217, ;
		Width = 48, ;
		ZOrderSet = 54
		*< END OBJECT: ClassLib="main.vcx" BaseClass="checkbox" />

	ADD OBJECT 'pgfRateCode.pagRates.chkArrSat' AS tcheckbox WITH ;
		Alignment = 0, ;
		AutoSize = .F., ;
		Caption = "chkArrSat", ;
		DisabledForeColor = 1,1,1, ;
		Left = 359, ;
		Name = "chkArrSat", ;
		TabIndex = 33, ;
		Top = 217, ;
		Width = 48, ;
		ZOrderSet = 59
		*< END OBJECT: ClassLib="main.vcx" BaseClass="checkbox" />

	ADD OBJECT 'pgfRateCode.pagRates.chkArrSun' AS tcheckbox WITH ;
		Alignment = 0, ;
		AutoSize = .F., ;
		Caption = "chkArrSun", ;
		DisabledForeColor = 1,1,1, ;
		Left = 407, ;
		Name = "chkArrSun", ;
		TabIndex = 34, ;
		Top = 217, ;
		Width = 48, ;
		ZOrderSet = 60
		*< END OBJECT: ClassLib="main.vcx" BaseClass="checkbox" />

	ADD OBJECT 'pgfRateCode.pagRates.chkArrThu' AS tcheckbox WITH ;
		Alignment = 0, ;
		AutoSize = .F., ;
		Caption = "chkArrThu", ;
		DisabledForeColor = 1,1,1, ;
		Left = 263, ;
		Name = "chkArrThu", ;
		TabIndex = 31, ;
		Top = 217, ;
		Width = 48, ;
		ZOrderSet = 57
		*< END OBJECT: ClassLib="main.vcx" BaseClass="checkbox" />

	ADD OBJECT 'pgfRateCode.pagRates.chkArrTue' AS tcheckbox WITH ;
		Alignment = 0, ;
		AutoSize = .F., ;
		Caption = "chkArrTue", ;
		DisabledForeColor = 1,1,1, ;
		Left = 167, ;
		Name = "chkArrTue", ;
		TabIndex = 29, ;
		Top = 217, ;
		Width = 48, ;
		ZOrderSet = 55
		*< END OBJECT: ClassLib="main.vcx" BaseClass="checkbox" />

	ADD OBJECT 'pgfRateCode.pagRates.chkArrWed' AS tcheckbox WITH ;
		Alignment = 0, ;
		AutoSize = .F., ;
		Caption = "chkArrWed", ;
		DisabledForeColor = 1,1,1, ;
		Left = 215, ;
		Name = "chkArrWed", ;
		TabIndex = 30, ;
		Top = 217, ;
		Width = 48, ;
		ZOrderSet = 56
		*< END OBJECT: ClassLib="main.vcx" BaseClass="checkbox" />

	ADD OBJECT 'pgfRateCode.pagRates.chkNoExtra' AS tcheckbox WITH ;
		Alignment = 0, ;
		AutoSize = .T., ;
		Caption = "chkNoExtra", ;
		DisabledForeColor = 1,1,1, ;
		Left = 455, ;
		Name = "chkNoExtra", ;
		TabIndex = 26, ;
		Top = 193, ;
		Width = 80, ;
		ZOrderSet = 52
		*< END OBJECT: ClassLib="main.vcx" BaseClass="checkbox" />

	ADD OBJECT 'pgfRateCode.pagRates.chkRateFri' AS tcheckbox WITH ;
		Alignment = 0, ;
		AutoSize = .F., ;
		Caption = "chkRateFri", ;
		DisabledForeColor = 1,1,1, ;
		Left = 311, ;
		Name = "chkRateFri", ;
		TabIndex = 23, ;
		Top = 193, ;
		Width = 48, ;
		ZOrderSet = 49
		*< END OBJECT: ClassLib="main.vcx" BaseClass="checkbox" />

	ADD OBJECT 'pgfRateCode.pagRates.chkRateMon' AS tcheckbox WITH ;
		Alignment = 0, ;
		AutoSize = .F., ;
		Caption = "chkRateMon", ;
		DisabledForeColor = 1,1,1, ;
		Left = 119, ;
		Name = "chkRateMon", ;
		TabIndex = 19, ;
		Top = 193, ;
		Width = 48, ;
		ZOrderSet = 45
		*< END OBJECT: ClassLib="main.vcx" BaseClass="checkbox" />

	ADD OBJECT 'pgfRateCode.pagRates.chkRateSat' AS tcheckbox WITH ;
		Alignment = 0, ;
		AutoSize = .F., ;
		Caption = "chkRateSat", ;
		DisabledForeColor = 1,1,1, ;
		Left = 359, ;
		Name = "chkRateSat", ;
		TabIndex = 24, ;
		Top = 193, ;
		Width = 48, ;
		ZOrderSet = 50
		*< END OBJECT: ClassLib="main.vcx" BaseClass="checkbox" />

	ADD OBJECT 'pgfRateCode.pagRates.chkRateSun' AS tcheckbox WITH ;
		Alignment = 0, ;
		AutoSize = .F., ;
		Caption = "chkRateSun", ;
		DisabledForeColor = 1,1,1, ;
		Left = 407, ;
		Name = "chkRateSun", ;
		TabIndex = 25, ;
		Top = 193, ;
		Width = 48, ;
		ZOrderSet = 51
		*< END OBJECT: ClassLib="main.vcx" BaseClass="checkbox" />

	ADD OBJECT 'pgfRateCode.pagRates.chkRateThu' AS tcheckbox WITH ;
		Alignment = 0, ;
		AutoSize = .F., ;
		Caption = "chkRateThu", ;
		DisabledForeColor = 1,1,1, ;
		Left = 263, ;
		Name = "chkRateThu", ;
		TabIndex = 22, ;
		Top = 193, ;
		Width = 48, ;
		ZOrderSet = 48
		*< END OBJECT: ClassLib="main.vcx" BaseClass="checkbox" />

	ADD OBJECT 'pgfRateCode.pagRates.chkRateTue' AS tcheckbox WITH ;
		Alignment = 0, ;
		AutoSize = .F., ;
		Caption = "chkRateTue", ;
		DisabledForeColor = 1,1,1, ;
		Left = 167, ;
		Name = "chkRateTue", ;
		TabIndex = 20, ;
		Top = 193, ;
		Width = 48, ;
		ZOrderSet = 46
		*< END OBJECT: ClassLib="main.vcx" BaseClass="checkbox" />

	ADD OBJECT 'pgfRateCode.pagRates.chkRateWed' AS tcheckbox WITH ;
		Alignment = 0, ;
		AutoSize = .F., ;
		Caption = "chkRateWed", ;
		DisabledForeColor = 1,1,1, ;
		Left = 215, ;
		Name = "chkRateWed", ;
		TabIndex = 21, ;
		Top = 193, ;
		Width = 48, ;
		ZOrderSet = 47
		*< END OBJECT: ClassLib="main.vcx" BaseClass="checkbox" />

	ADD OBJECT 'pgfRateCode.pagRates.grdSpcRates' AS tgrid WITH ;
		AllowHeaderSizing = .F., ;
		AllowRowSizing = .F., ;
		ColumnCount = 9, ;
		DeleteMark = .F., ;
		GridLines = 2, ;
		Height = 108, ;
		Left = 11, ;
		Name = "grdSpcRates", ;
		ScrollBars = 2, ;
		TabIndex = 38, ;
		Top = 262, ;
		Width = 756, ;
		Column1.Name = "grcRoomtype", ;
		Column1.ReadOnly = .T., ;
		Column1.Width = 125, ;
		Column2.Name = "grcAmnt1", ;
		Column3.Name = "grcAmnt2", ;
		Column4.Name = "grcAmnt3", ;
		Column5.Name = "grcAmnt4", ;
		Column6.Name = "grcAmnt5", ;
		Column7.Name = "grcCamnt1", ;
		Column8.Name = "grcCamnt2", ;
		Column9.Name = "grcCamnt3"
		*< END OBJECT: ClassLib="main.vcx" BaseClass="grid" />

	ADD OBJECT 'pgfRateCode.pagRates.grdSpcRates.grcAmnt1.Header1' AS header WITH ;
		Alignment = 2, ;
		Caption = "grcAmnt1", ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'pgfRateCode.pagRates.grdSpcRates.grcAmnt1.Tbgrid1' AS tbgrid WITH ;
		Left = 17, ;
		Name = "Tbgrid1", ;
		Top = 23
		*< END OBJECT: ClassLib="main.vcx" BaseClass="textbox" />

	ADD OBJECT 'pgfRateCode.pagRates.grdSpcRates.grcAmnt2.Header1' AS header WITH ;
		Alignment = 2, ;
		Caption = "grcAmnt2", ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'pgfRateCode.pagRates.grdSpcRates.grcAmnt2.Tbgrid1' AS tbgrid WITH ;
		Left = 13, ;
		Name = "Tbgrid1", ;
		Top = 23
		*< END OBJECT: ClassLib="main.vcx" BaseClass="textbox" />

	ADD OBJECT 'pgfRateCode.pagRates.grdSpcRates.grcAmnt3.Header1' AS header WITH ;
		Alignment = 2, ;
		Caption = "grcAmnt3", ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'pgfRateCode.pagRates.grdSpcRates.grcAmnt3.Tbgrid1' AS tbgrid WITH ;
		Left = 21, ;
		Name = "Tbgrid1", ;
		Top = 23
		*< END OBJECT: ClassLib="main.vcx" BaseClass="textbox" />

	ADD OBJECT 'pgfRateCode.pagRates.grdSpcRates.grcAmnt4.Header1' AS header WITH ;
		Alignment = 2, ;
		Caption = "grcAmnt4", ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'pgfRateCode.pagRates.grdSpcRates.grcAmnt4.Tbgrid1' AS tbgrid WITH ;
		Left = 17, ;
		Name = "Tbgrid1", ;
		Top = 23
		*< END OBJECT: ClassLib="main.vcx" BaseClass="textbox" />

	ADD OBJECT 'pgfRateCode.pagRates.grdSpcRates.grcAmnt5.Header1' AS header WITH ;
		Alignment = 2, ;
		Caption = "grcAmnt5", ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'pgfRateCode.pagRates.grdSpcRates.grcAmnt5.Tbgrid1' AS tbgrid WITH ;
		Left = 25, ;
		Name = "Tbgrid1", ;
		Top = 23
		*< END OBJECT: ClassLib="main.vcx" BaseClass="textbox" />

	ADD OBJECT 'pgfRateCode.pagRates.grdSpcRates.grcCamnt1.Header1' AS header WITH ;
		Alignment = 2, ;
		Caption = "grcCamnt1", ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'pgfRateCode.pagRates.grdSpcRates.grcCamnt1.Tbgrid1' AS tbgrid WITH ;
		Left = 45, ;
		Name = "Tbgrid1", ;
		Top = 23
		*< END OBJECT: ClassLib="main.vcx" BaseClass="textbox" />

	ADD OBJECT 'pgfRateCode.pagRates.grdSpcRates.grcCamnt2.Header1' AS header WITH ;
		Alignment = 2, ;
		Caption = "grcCamnt2", ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'pgfRateCode.pagRates.grdSpcRates.grcCamnt2.Tbgrid1' AS tbgrid WITH ;
		Left = 29, ;
		Name = "Tbgrid1", ;
		Top = 23
		*< END OBJECT: ClassLib="main.vcx" BaseClass="textbox" />

	ADD OBJECT 'pgfRateCode.pagRates.grdSpcRates.grcCamnt3.Header1' AS header WITH ;
		Alignment = 2, ;
		Caption = "grcCamnt3", ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'pgfRateCode.pagRates.grdSpcRates.grcCamnt3.Tbgrid1' AS tbgrid WITH ;
		Left = 37, ;
		Name = "Tbgrid1", ;
		Top = 23
		*< END OBJECT: ClassLib="main.vcx" BaseClass="textbox" />

	ADD OBJECT 'pgfRateCode.pagRates.grdSpcRates.grcRoomtype.Header1' AS header WITH ;
		Alignment = 2, ;
		Caption = "grcRoomtype", ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'pgfRateCode.pagRates.grdSpcRates.grcRoomtype.Tbgrid1' AS tbgrid WITH ;
		Left = 11, ;
		Name = "Tbgrid1", ;
		ReadOnly = .T., ;
		Top = 23
		*< END OBJECT: ClassLib="main.vcx" BaseClass="textbox" />

	ADD OBJECT 'pgfRateCode.pagRates.grdStdRates' AS tgrid WITH ;
		AllowHeaderSizing = .F., ;
		AllowRowSizing = .F., ;
		ColumnCount = 9, ;
		DeleteMark = .F., ;
		GridLines = 2, ;
		Height = 108, ;
		Left = 11, ;
		Name = "grdStdRates", ;
		ScrollBars = 2, ;
		TabIndex = 17, ;
		Top = 82, ;
		Width = 756, ;
		Column1.Name = "grcRoomtype", ;
		Column1.ReadOnly = .T., ;
		Column1.Width = 125, ;
		Column2.Name = "grcAmnt1", ;
		Column3.Name = "grcAmnt2", ;
		Column4.Name = "grcAmnt3", ;
		Column5.Name = "grcAmnt4", ;
		Column6.Name = "grcAmnt5", ;
		Column7.Name = "grcCamnt1", ;
		Column8.Name = "grcCamnt2", ;
		Column9.Name = "grcCamnt3"
		*< END OBJECT: ClassLib="main.vcx" BaseClass="grid" />

	ADD OBJECT 'pgfRateCode.pagRates.grdStdRates.grcAmnt1.Header1' AS header WITH ;
		Alignment = 2, ;
		Caption = "grcAmnt1", ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'pgfRateCode.pagRates.grdStdRates.grcAmnt1.Tbgrid1' AS tbgrid WITH ;
		Left = 17, ;
		Name = "Tbgrid1", ;
		Top = 23
		*< END OBJECT: ClassLib="main.vcx" BaseClass="textbox" />

	ADD OBJECT 'pgfRateCode.pagRates.grdStdRates.grcAmnt2.Header1' AS header WITH ;
		Alignment = 2, ;
		Caption = "grcAmnt2", ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'pgfRateCode.pagRates.grdStdRates.grcAmnt2.Tbgrid1' AS tbgrid WITH ;
		Left = 13, ;
		Name = "Tbgrid1", ;
		Top = 23
		*< END OBJECT: ClassLib="main.vcx" BaseClass="textbox" />

	ADD OBJECT 'pgfRateCode.pagRates.grdStdRates.grcAmnt3.Header1' AS header WITH ;
		Alignment = 2, ;
		Caption = "grcAmnt3", ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'pgfRateCode.pagRates.grdStdRates.grcAmnt3.Tbgrid1' AS tbgrid WITH ;
		Left = 21, ;
		Name = "Tbgrid1", ;
		Top = 23
		*< END OBJECT: ClassLib="main.vcx" BaseClass="textbox" />

	ADD OBJECT 'pgfRateCode.pagRates.grdStdRates.grcAmnt4.Header1' AS header WITH ;
		Alignment = 2, ;
		Caption = "grcAmnt4", ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'pgfRateCode.pagRates.grdStdRates.grcAmnt4.Tbgrid1' AS tbgrid WITH ;
		Left = 17, ;
		Name = "Tbgrid1", ;
		Top = 23
		*< END OBJECT: ClassLib="main.vcx" BaseClass="textbox" />

	ADD OBJECT 'pgfRateCode.pagRates.grdStdRates.grcAmnt5.Header1' AS header WITH ;
		Alignment = 2, ;
		Caption = "grcAmnt5", ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'pgfRateCode.pagRates.grdStdRates.grcAmnt5.Tbgrid1' AS tbgrid WITH ;
		Left = 25, ;
		Name = "Tbgrid1", ;
		Top = 23
		*< END OBJECT: ClassLib="main.vcx" BaseClass="textbox" />

	ADD OBJECT 'pgfRateCode.pagRates.grdStdRates.grcCamnt1.Header1' AS header WITH ;
		Alignment = 2, ;
		Caption = "grcCamnt1", ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'pgfRateCode.pagRates.grdStdRates.grcCamnt1.Tbgrid1' AS tbgrid WITH ;
		Left = 45, ;
		Name = "Tbgrid1", ;
		Top = 23
		*< END OBJECT: ClassLib="main.vcx" BaseClass="textbox" />

	ADD OBJECT 'pgfRateCode.pagRates.grdStdRates.grcCamnt2.Header1' AS header WITH ;
		Alignment = 2, ;
		Caption = "grcCamnt2", ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'pgfRateCode.pagRates.grdStdRates.grcCamnt2.Tbgrid1' AS tbgrid WITH ;
		Left = 29, ;
		Name = "Tbgrid1", ;
		Top = 23
		*< END OBJECT: ClassLib="main.vcx" BaseClass="textbox" />

	ADD OBJECT 'pgfRateCode.pagRates.grdStdRates.grcCamnt3.Header1' AS header WITH ;
		Alignment = 2, ;
		Caption = "grcCamnt3", ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'pgfRateCode.pagRates.grdStdRates.grcCamnt3.Tbgrid1' AS tbgrid WITH ;
		Left = 37, ;
		Name = "Tbgrid1", ;
		Top = 23
		*< END OBJECT: ClassLib="main.vcx" BaseClass="textbox" />

	ADD OBJECT 'pgfRateCode.pagRates.grdStdRates.grcRoomtype.Header1' AS header WITH ;
		Alignment = 2, ;
		Caption = "grcRoomtype", ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'pgfRateCode.pagRates.grdStdRates.grcRoomtype.Tbgrid1' AS tbgrid WITH ;
		Left = 11, ;
		Name = "Tbgrid1", ;
		ReadOnly = .T., ;
		Top = 23
		*< END OBJECT: ClassLib="main.vcx" BaseClass="textbox" />

	ADD OBJECT 'pgfRateCode.pagRates.lblAdditionalBedSurcharge' AS tlabel WITH ;
		AutoSize = .T., ;
		Caption = "lblAdditionalBedSurcharge", ;
		Height = 17, ;
		Left = 403, ;
		Name = "lblAdditionalBedSurcharge", ;
		TabIndex = 13, ;
		Top = 61, ;
		Visible = .F., ;
		Width = 148, ;
		ZOrderSet = 39
		*< END OBJECT: ClassLib="main.vcx" BaseClass="label" />

	ADD OBJECT 'pgfRateCode.pagRates.lblFixRate' AS tlabel WITH ;
		Caption = "lblFixRate", ;
		Height = 17, ;
		Left = 11, ;
		Name = "lblFixRate", ;
		TabIndex = 1, ;
		Top = 11, ;
		Width = 96, ;
		ZOrderSet = 37
		*< END OBJECT: ClassLib="main.vcx" BaseClass="label" />

	ADD OBJECT 'pgfRateCode.pagRates.lblHRSID' AS tlabel WITH ;
		AutoSize = .T., ;
		Caption = "lblHRSID", ;
		Height = 17, ;
		Left = 607, ;
		Name = "lblHRSID", ;
		TabIndex = 15, ;
		Top = 61, ;
		Visible = .F., ;
		Width = 53, ;
		ZOrderSet = 43
		*< END OBJECT: ClassLib="main.vcx" BaseClass="label" />

	ADD OBJECT 'pgfRateCode.pagRates.lblHRSIDPrice' AS tlabel WITH ;
		AutoSize = .T., ;
		Caption = "lblHRSIDPrice", ;
		Height = 17, ;
		Left = 179, ;
		Name = "lblHRSIDPrice", ;
		TabIndex = 3, ;
		Top = 11, ;
		Visible = .F., ;
		Width = 81, ;
		ZOrderSet = 43
		*< END OBJECT: ClassLib="main.vcx" BaseClass="label" />

	ADD OBJECT 'pgfRateCode.pagRates.lblHRSIDSeason' AS tlabel WITH ;
		AutoSize = .T., ;
		Caption = "lblHRSIDSeason", ;
		Height = 17, ;
		Left = 357, ;
		Name = "lblHRSIDSeason", ;
		TabIndex = 5, ;
		Top = 11, ;
		Visible = .F., ;
		Width = 96, ;
		ZOrderSet = 43
		*< END OBJECT: ClassLib="main.vcx" BaseClass="label" />

	ADD OBJECT 'pgfRateCode.pagRates.lblMinRate' AS tlabel WITH ;
		Caption = "lblMinRate", ;
		Height = 17, ;
		Left = 11, ;
		Name = "lblMinRate", ;
		TabIndex = 7, ;
		Top = 35, ;
		Width = 96, ;
		ZOrderSet = 39
		*< END OBJECT: ClassLib="main.vcx" BaseClass="label" />

	ADD OBJECT 'pgfRateCode.pagRates.lblMinRateByPerson' AS tlabel WITH ;
		Caption = "lblMinRateByPerson", ;
		Height = 17, ;
		Left = 242, ;
		Name = "lblMinRateByPerson", ;
		TabIndex = 11, ;
		Top = 35, ;
		Width = 333, ;
		ZOrderSet = 43
		*< END OBJECT: ClassLib="main.vcx" BaseClass="label" />

	ADD OBJECT 'pgfRateCode.pagRates.lblNotArr' AS tlabel WITH ;
		Caption = "lblNotArr", ;
		Height = 17, ;
		Left = 11, ;
		Name = "lblNotArr", ;
		TabIndex = 27, ;
		Top = 217, ;
		Width = 108, ;
		ZOrderSet = 53
		*< END OBJECT: ClassLib="main.vcx" BaseClass="label" />

	ADD OBJECT 'pgfRateCode.pagRates.lblPlus' AS tlabel WITH ;
		AutoSize = .T., ;
		Caption = "+", ;
		Left = 170, ;
		Name = "lblPlus", ;
		TabIndex = 9, ;
		Top = 35, ;
		Width = 9, ;
		ZOrderSet = 41
		*< END OBJECT: ClassLib="main.vcx" BaseClass="label" />

	ADD OBJECT 'pgfRateCode.pagRates.lblSpecialRate' AS tlabel WITH ;
		AutoSize = .T., ;
		Caption = "lblSpecialRate", ;
		Left = 11, ;
		Name = "lblSpecialRate", ;
		TabIndex = 35, ;
		Top = 241, ;
		Width = 82, ;
		ZOrderSet = 72
		*< END OBJECT: ClassLib="main.vcx" BaseClass="label" />

	ADD OBJECT 'pgfRateCode.pagRates.lblSpecRate' AS tlabel WITH ;
		Caption = "lblSpecRate", ;
		Height = 17, ;
		Left = 11, ;
		Name = "lblSpecRate", ;
		TabIndex = 18, ;
		Top = 193, ;
		Width = 108, ;
		ZOrderSet = 44
		*< END OBJECT: ClassLib="main.vcx" BaseClass="label" />

	ADD OBJECT 'pgfRateCode.pagRates.lblStandardRate' AS tlabel WITH ;
		AutoSize = .T., ;
		Caption = "lblStandardRate", ;
		Left = 11, ;
		Name = "lblStandardRate", ;
		TabIndex = 12, ;
		Top = 61, ;
		Width = 91, ;
		ZOrderSet = 71
		*< END OBJECT: ClassLib="main.vcx" BaseClass="label" />

	ADD OBJECT 'pgfRateCode.pagRates.lblwFixRate' AS tlabel WITH ;
		Caption = "lblwFixRate", ;
		Height = 17, ;
		Left = 119, ;
		Name = "lblwFixRate", ;
		TabIndex = 36, ;
		Top = 241, ;
		Width = 96, ;
		ZOrderSet = 37
		*< END OBJECT: ClassLib="main.vcx" BaseClass="label" />

	ADD OBJECT 'pgfRateCode.pagRates.txtFixRate' AS ttext WITH ;
		DisabledForeColor = 1,1,1, ;
		Format = "K", ;
		InputMask = "999999.99", ;
		Left = 107, ;
		Name = "txtFixRate", ;
		TabIndex = 2, ;
		Top = 8, ;
		Width = 60, ;
		ZOrderSet = 38
		*< END OBJECT: ClassLib="main.vcx" BaseClass="textbox" />

	ADD OBJECT 'pgfRateCode.pagRates.txtHRSIDPrice' AS ttext WITH ;
		DisabledForeColor = 1,1,1, ;
		Format = "K", ;
		Height = 23, ;
		InputMask = "99999999", ;
		Left = 259, ;
		Name = "txtHRSIDPrice", ;
		TabIndex = 4, ;
		Top = 8, ;
		Visible = .F., ;
		Width = 84, ;
		ZOrderSet = 42
		*< END OBJECT: ClassLib="main.vcx" BaseClass="textbox" />

	ADD OBJECT 'pgfRateCode.pagRates.txtHRSIDSeason' AS ttext WITH ;
		DisabledForeColor = 1,1,1, ;
		Format = "K", ;
		Height = 23, ;
		InputMask = "99999999", ;
		Left = 451, ;
		Name = "txtHRSIDSeason", ;
		TabIndex = 6, ;
		Top = 8, ;
		Visible = .F., ;
		Width = 84, ;
		ZOrderSet = 42
		*< END OBJECT: ClassLib="main.vcx" BaseClass="textbox" />

	ADD OBJECT 'pgfRateCode.pagRates.txtMinRate' AS ttext WITH ;
		DisabledForeColor = 1,1,1, ;
		Format = "K", ;
		InputMask = "999999.99", ;
		Left = 107, ;
		Name = "txtMinRate", ;
		TabIndex = 8, ;
		Top = 32, ;
		Width = 60, ;
		ZOrderSet = 40
		*< END OBJECT: ClassLib="main.vcx" BaseClass="textbox" />

	ADD OBJECT 'pgfRateCode.pagRates.txtMinRateByPerson' AS ttext WITH ;
		DisabledForeColor = 1,1,1, ;
		Format = "K", ;
		InputMask = "999999.99", ;
		Left = 179, ;
		Name = "txtMinRateByPerson", ;
		TabIndex = 10, ;
		Top = 32, ;
		Width = 60, ;
		ZOrderSet = 42
		*< END OBJECT: ClassLib="main.vcx" BaseClass="textbox" />

	ADD OBJECT 'pgfRateCode.pagRates.txtrc_adperid' AS ttext WITH ;
		DisabledForeColor = 1,1,1, ;
		Format = "K", ;
		Height = 23, ;
		InputMask = "99999999", ;
		Left = 683, ;
		Name = "txtrc_adperid", ;
		TabIndex = 16, ;
		Top = 58, ;
		Visible = .F., ;
		Width = 84, ;
		ZOrderSet = 42
		*< END OBJECT: ClassLib="main.vcx" BaseClass="textbox" />

	ADD OBJECT 'pgfRateCode.pagRates.txtrc_adperra' AS ttext WITH ;
		DisabledForeColor = 1,1,1, ;
		Format = "K", ;
		InputMask = "999999.99", ;
		Left = 542, ;
		Name = "txtrc_adperra", ;
		TabIndex = 14, ;
		Top = 58, ;
		Visible = .F., ;
		Width = 60, ;
		ZOrderSet = 40
		*< END OBJECT: ClassLib="main.vcx" BaseClass="textbox" />

	ADD OBJECT 'pgfRateCode.pagRates.txtwFixRate' AS ttext WITH ;
		DisabledForeColor = 1,1,1, ;
		Format = "K", ;
		InputMask = "999999.99", ;
		Left = 215, ;
		Name = "txtwFixRate", ;
		TabIndex = 37, ;
		Top = 238, ;
		Width = 60, ;
		ZOrderSet = 38
		*< END OBJECT: ClassLib="main.vcx" BaseClass="textbox" />

	ADD OBJECT 'pgfRateCode.pagSettings.cboColor' AS tcombobox WITH ;
		BoundColumn = 2, ;
		BoundTo = .T., ;
		ColumnCount = 1, ;
		ColumnWidths = "120", ;
		DisabledForeColor = 1,1,1, ;
		Height = 23, ;
		Left = 260, ;
		Name = "cboColor", ;
		Style = 2, ;
		TabIndex = 11, ;
		Top = 104, ;
		Width = 60, ;
		ZOrderSet = 23
		*< END OBJECT: ClassLib="main.vcx" BaseClass="combobox" />

	ADD OBJECT 'pgfRateCode.pagSettings.cboGroupCode' AS tcombobox WITH ;
		DisabledForeColor = 1,1,1, ;
		Left = 119, ;
		Name = "cboGroupCode", ;
		RowSource = "SELECT pl_charcod, pl_lang3 FROM currcgrp INTO CURSOR tblCitComboRCGroup", ;
		RowSourceType = 3, ;
		TabIndex = 13, ;
		Top = 128, ;
		Width = 60, ;
		ZOrderSet = 30
		*< END OBJECT: ClassLib="main.vcx" BaseClass="combobox" />

	ADD OBJECT 'pgfRateCode.pagSettings.cboMarkCode' AS cbomarket WITH ;
		DisabledForeColor = 1,1,1, ;
		Left = 119, ;
		Name = "cboMarkCode", ;
		TabIndex = 19, ;
		Top = 176, ;
		Width = 60, ;
		ZOrderSet = 34
		*< END OBJECT: ClassLib="cit_ctrl.vcx" BaseClass="combobox" />

	ADD OBJECT 'pgfRateCode.pagSettings.cboPayMeth' AS combopaymeth WITH ;
		DisabledForeColor = 1,1,1, ;
		Left = 119, ;
		lpaynum = .T., ;
		lshowinactive = .T., ;
		Name = "cboPayMeth", ;
		TabIndex = 15, ;
		Top = 152, ;
		Width = 60, ;
		ZOrderSet = 32
		*< END OBJECT: ClassLib="cit_ctrl.vcx" BaseClass="combobox" />

	ADD OBJECT 'pgfRateCode.pagSettings.cbopaymethod' AS jcbopaymethod WITH ;
		DisabledForeColor = 1,1,1, ;
		Left = 260, ;
		Name = "cbopaymethod", ;
		TabIndex = 17, ;
		Top = 152, ;
		Width = 60
		*< END OBJECT: ClassLib="cit_ctrl.vcx" BaseClass="combobox" />

	ADD OBJECT 'pgfRateCode.pagSettings.cboSourceCode' AS cbosource WITH ;
		DisabledForeColor = 1,1,1, ;
		Left = 260, ;
		Name = "cboSourceCode", ;
		TabIndex = 21, ;
		Top = 176, ;
		Width = 60, ;
		ZOrderSet = 36
		*< END OBJECT: ClassLib="cit_ctrl.vcx" BaseClass="combobox" />

	ADD OBJECT 'pgfRateCode.pagSettings.chkAll' AS tcheckbox WITH ;
		Alignment = 0, ;
		Caption = "All", ;
		DisabledForeColor = 1,1,1, ;
		Height = 17, ;
		Left = 323, ;
		Name = "chkAll", ;
		TabIndex = 4, ;
		Top = 59, ;
		Width = 48, ;
		ZOrderSet = 15
		*< END OBJECT: ClassLib="main.vcx" BaseClass="checkbox" />

	ADD OBJECT 'pgfRateCode.pagSettings.chkArrBlockFri' AS tcheckbox WITH ;
		Alignment = 0, ;
		AutoSize = .T., ;
		Caption = "chkArrBlockFri", ;
		DisabledForeColor = 1,1,1, ;
		Left = 329, ;
		Name = "chkArrBlockFri", ;
		TabIndex = 43, ;
		Top = 251, ;
		Value = .F., ;
		Width = 96, ;
		ZOrderSet = 66
		*< END OBJECT: ClassLib="main.vcx" BaseClass="checkbox" />

	ADD OBJECT 'pgfRateCode.pagSettings.chkArrBlockMon' AS tcheckbox WITH ;
		Alignment = 0, ;
		AutoSize = .T., ;
		Caption = "chkArrBlockMon", ;
		DisabledForeColor = 1,1,1, ;
		Left = 137, ;
		Name = "chkArrBlockMon", ;
		TabIndex = 39, ;
		Top = 251, ;
		Value = .F., ;
		Width = 105, ;
		ZOrderSet = 62
		*< END OBJECT: ClassLib="main.vcx" BaseClass="checkbox" />

	ADD OBJECT 'pgfRateCode.pagSettings.chkArrBlockSat' AS tcheckbox WITH ;
		Alignment = 0, ;
		AutoSize = .T., ;
		Caption = "chkArrBlockSat", ;
		DisabledForeColor = 1,1,1, ;
		Left = 377, ;
		Name = "chkArrBlockSat", ;
		TabIndex = 44, ;
		Top = 251, ;
		Value = .F., ;
		Width = 100, ;
		ZOrderSet = 67
		*< END OBJECT: ClassLib="main.vcx" BaseClass="checkbox" />

	ADD OBJECT 'pgfRateCode.pagSettings.chkArrBlockSun' AS tcheckbox WITH ;
		Alignment = 0, ;
		AutoSize = .T., ;
		Caption = "chkArrBlockSun", ;
		DisabledForeColor = 1,1,1, ;
		Left = 425, ;
		Name = "chkArrBlockSun", ;
		TabIndex = 45, ;
		Top = 251, ;
		Value = .F., ;
		Width = 104, ;
		ZOrderSet = 68
		*< END OBJECT: ClassLib="main.vcx" BaseClass="checkbox" />

	ADD OBJECT 'pgfRateCode.pagSettings.chkArrBlockThu' AS tcheckbox WITH ;
		Alignment = 0, ;
		AutoSize = .T., ;
		Caption = "chkArrBlockThu", ;
		DisabledForeColor = 1,1,1, ;
		Left = 281, ;
		Name = "chkArrBlockThu", ;
		TabIndex = 42, ;
		Top = 251, ;
		Value = .F., ;
		Width = 103, ;
		ZOrderSet = 65
		*< END OBJECT: ClassLib="main.vcx" BaseClass="checkbox" />

	ADD OBJECT 'pgfRateCode.pagSettings.chkArrBlockTue' AS tcheckbox WITH ;
		Alignment = 0, ;
		AutoSize = .T., ;
		Caption = "chkArrBlockTue", ;
		DisabledForeColor = 1,1,1, ;
		Left = 185, ;
		Name = "chkArrBlockTue", ;
		TabIndex = 40, ;
		Top = 251, ;
		Value = .F., ;
		Width = 103, ;
		ZOrderSet = 63
		*< END OBJECT: ClassLib="main.vcx" BaseClass="checkbox" />

	ADD OBJECT 'pgfRateCode.pagSettings.chkArrBlockWed' AS tcheckbox WITH ;
		Alignment = 0, ;
		AutoSize = .T., ;
		Caption = "chkArrBlockWed", ;
		DisabledForeColor = 1,1,1, ;
		Left = 233, ;
		Name = "chkArrBlockWed", ;
		TabIndex = 41, ;
		Top = 251, ;
		Value = .F., ;
		Width = 107, ;
		ZOrderSet = 64
		*< END OBJECT: ClassLib="main.vcx" BaseClass="checkbox" />

	ADD OBJECT 'pgfRateCode.pagSettings.chkBlockFri' AS tcheckbox WITH ;
		Alignment = 0, ;
		AutoSize = .T., ;
		Caption = "chkBlockFri", ;
		DisabledForeColor = 1,1,1, ;
		Left = 329, ;
		Name = "chkBlockFri", ;
		TabIndex = 35, ;
		Top = 227, ;
		Value = .F., ;
		Width = 81, ;
		ZOrderSet = 66
		*< END OBJECT: ClassLib="main.vcx" BaseClass="checkbox" />

	ADD OBJECT 'pgfRateCode.pagSettings.chkBlockMon' AS tcheckbox WITH ;
		Alignment = 0, ;
		AutoSize = .T., ;
		Caption = "chkBlockMon", ;
		DisabledForeColor = 1,1,1, ;
		Left = 137, ;
		Name = "chkBlockMon", ;
		TabIndex = 31, ;
		Top = 227, ;
		Value = .F., ;
		Width = 90, ;
		ZOrderSet = 62
		*< END OBJECT: ClassLib="main.vcx" BaseClass="checkbox" />

	ADD OBJECT 'pgfRateCode.pagSettings.chkBlockSat' AS tcheckbox WITH ;
		Alignment = 0, ;
		AutoSize = .T., ;
		Caption = "chkBlockSat", ;
		DisabledForeColor = 1,1,1, ;
		Left = 377, ;
		Name = "chkBlockSat", ;
		TabIndex = 36, ;
		Top = 227, ;
		Value = .F., ;
		Width = 85, ;
		ZOrderSet = 67
		*< END OBJECT: ClassLib="main.vcx" BaseClass="checkbox" />

	ADD OBJECT 'pgfRateCode.pagSettings.chkBlockSun' AS tcheckbox WITH ;
		Alignment = 0, ;
		AutoSize = .T., ;
		Caption = "chkBlockSun", ;
		DisabledForeColor = 1,1,1, ;
		Left = 425, ;
		Name = "chkBlockSun", ;
		TabIndex = 37, ;
		Top = 227, ;
		Value = .F., ;
		Width = 89, ;
		ZOrderSet = 68
		*< END OBJECT: ClassLib="main.vcx" BaseClass="checkbox" />

	ADD OBJECT 'pgfRateCode.pagSettings.chkBlockThu' AS tcheckbox WITH ;
		Alignment = 0, ;
		AutoSize = .T., ;
		Caption = "chkBlockThu", ;
		DisabledForeColor = 1,1,1, ;
		Left = 281, ;
		Name = "chkBlockThu", ;
		TabIndex = 34, ;
		Top = 227, ;
		Value = .F., ;
		Width = 88, ;
		ZOrderSet = 65
		*< END OBJECT: ClassLib="main.vcx" BaseClass="checkbox" />

	ADD OBJECT 'pgfRateCode.pagSettings.chkBlockTue' AS tcheckbox WITH ;
		Alignment = 0, ;
		AutoSize = .T., ;
		Caption = "chkBlockTue", ;
		DisabledForeColor = 1,1,1, ;
		Left = 185, ;
		Name = "chkBlockTue", ;
		TabIndex = 32, ;
		Top = 227, ;
		Value = .F., ;
		Width = 88, ;
		ZOrderSet = 63
		*< END OBJECT: ClassLib="main.vcx" BaseClass="checkbox" />

	ADD OBJECT 'pgfRateCode.pagSettings.chkBlockWed' AS tcheckbox WITH ;
		Alignment = 0, ;
		AutoSize = .T., ;
		Caption = "chkBlockWed", ;
		DisabledForeColor = 1,1,1, ;
		Left = 233, ;
		Name = "chkBlockWed", ;
		TabIndex = 33, ;
		Top = 227, ;
		Value = .F., ;
		Width = 92, ;
		ZOrderSet = 64
		*< END OBJECT: ClassLib="main.vcx" BaseClass="checkbox" />

	ADD OBJECT 'pgfRateCode.pagSettings.chkDepBlockFri' AS tcheckbox WITH ;
		Alignment = 0, ;
		AutoSize = .T., ;
		Caption = "chkDepBlockFri", ;
		DisabledForeColor = 1,1,1, ;
		Left = 329, ;
		Name = "chkDepBlockFri", ;
		TabIndex = 51, ;
		Top = 276, ;
		Value = .F., ;
		Width = 104, ;
		ZOrderSet = 66
		*< END OBJECT: ClassLib="main.vcx" BaseClass="checkbox" />

	ADD OBJECT 'pgfRateCode.pagSettings.chkDepBlockMon' AS tcheckbox WITH ;
		Alignment = 0, ;
		AutoSize = .T., ;
		Caption = "chkDepBlockMon", ;
		DisabledForeColor = 1,1,1, ;
		Left = 137, ;
		Name = "chkDepBlockMon", ;
		TabIndex = 47, ;
		Top = 276, ;
		Value = .F., ;
		Width = 113, ;
		ZOrderSet = 62
		*< END OBJECT: ClassLib="main.vcx" BaseClass="checkbox" />

	ADD OBJECT 'pgfRateCode.pagSettings.chkDepBlockSat' AS tcheckbox WITH ;
		Alignment = 0, ;
		AutoSize = .T., ;
		Caption = "chkDepBlockSat", ;
		DisabledForeColor = 1,1,1, ;
		Left = 377, ;
		Name = "chkDepBlockSat", ;
		TabIndex = 52, ;
		Top = 276, ;
		Value = .F., ;
		Width = 108, ;
		ZOrderSet = 67
		*< END OBJECT: ClassLib="main.vcx" BaseClass="checkbox" />

	ADD OBJECT 'pgfRateCode.pagSettings.chkDepBlockSun' AS tcheckbox WITH ;
		Alignment = 0, ;
		AutoSize = .T., ;
		Caption = "chkDepBlockSun", ;
		DisabledForeColor = 1,1,1, ;
		Left = 425, ;
		Name = "chkDepBlockSun", ;
		TabIndex = 53, ;
		Top = 276, ;
		Value = .F., ;
		Width = 112, ;
		ZOrderSet = 68
		*< END OBJECT: ClassLib="main.vcx" BaseClass="checkbox" />

	ADD OBJECT 'pgfRateCode.pagSettings.chkDepBlockThu' AS tcheckbox WITH ;
		Alignment = 0, ;
		AutoSize = .T., ;
		Caption = "chkDepBlockThu", ;
		DisabledForeColor = 1,1,1, ;
		Left = 281, ;
		Name = "chkDepBlockThu", ;
		TabIndex = 50, ;
		Top = 276, ;
		Value = .F., ;
		Width = 111, ;
		ZOrderSet = 65
		*< END OBJECT: ClassLib="main.vcx" BaseClass="checkbox" />

	ADD OBJECT 'pgfRateCode.pagSettings.chkDepBlockTue' AS tcheckbox WITH ;
		Alignment = 0, ;
		AutoSize = .T., ;
		Caption = "chkDepBlockTue", ;
		DisabledForeColor = 1,1,1, ;
		Left = 185, ;
		Name = "chkDepBlockTue", ;
		TabIndex = 48, ;
		Top = 276, ;
		Value = .F., ;
		Width = 111, ;
		ZOrderSet = 63
		*< END OBJECT: ClassLib="main.vcx" BaseClass="checkbox" />

	ADD OBJECT 'pgfRateCode.pagSettings.chkDepBlockWed' AS tcheckbox WITH ;
		Alignment = 0, ;
		AutoSize = .T., ;
		Caption = "chkDepBlockWed", ;
		DisabledForeColor = 1,1,1, ;
		Left = 233, ;
		Name = "chkDepBlockWed", ;
		TabIndex = 49, ;
		Top = 276, ;
		Value = .F., ;
		Width = 115, ;
		ZOrderSet = 64
		*< END OBJECT: ClassLib="main.vcx" BaseClass="checkbox" />

	ADD OBJECT 'pgfRateCode.pagSettings.cmdRoomTyp' AS tcommandbutton WITH ;
		Caption = "...", ;
		FontBold = .T., ;
		Height = 17, ;
		Left = 321, ;
		Name = "cmdRoomTyp", ;
		TabIndex = 3, ;
		Top = 8, ;
		Width = 17, ;
		ZOrderSet = 14
		*< END OBJECT: ClassLib="main.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'pgfRateCode.pagSettings.dtxtFrom' AS tdatectrl WITH ;
		DisabledForeColor = 1,1,1, ;
		Left = 119, ;
		Name = "dtxtFrom", ;
		TabIndex = 6, ;
		Top = 80, ;
		ZOrderSet = 17
		*< END OBJECT: ClassLib="main.vcx" BaseClass="textbox" />

	ADD OBJECT 'pgfRateCode.pagSettings.dtxtTo' AS tdatectrl WITH ;
		DisabledForeColor = 1,1,1, ;
		Left = 220, ;
		Name = "dtxtTo", ;
		TabIndex = 7, ;
		Top = 80, ;
		ZOrderSet = 18
		*< END OBJECT: ClassLib="main.vcx" BaseClass="textbox" />

	ADD OBJECT 'pgfRateCode.pagSettings.edtRoomTyp' AS teditbox WITH ;
		Format = "K!", ;
		Height = 71, ;
		Left = 119, ;
		Name = "edtRoomTyp", ;
		ReadOnly = .T., ;
		TabIndex = 2, ;
		Top = 8, ;
		Value = test, ;
		Width = 201, ;
		ZOrderSet = 13
		*< END OBJECT: ClassLib="main.vcx" BaseClass="editbox" />

	ADD OBJECT 'pgfRateCode.pagSettings.lblArrBlocked' AS tlabel WITH ;
		AutoSize = .T., ;
		Caption = "lblArrBlocked", ;
		Height = 17, ;
		Left = 11, ;
		Name = "lblArrBlocked", ;
		TabIndex = 38, ;
		Top = 251, ;
		Width = 74, ;
		ZOrderSet = 61
		*< END OBJECT: ClassLib="main.vcx" BaseClass="label" />

	ADD OBJECT 'pgfRateCode.pagSettings.lblBlocked' AS tlabel WITH ;
		AutoSize = .T., ;
		Caption = "lblBlocked", ;
		Height = 17, ;
		Left = 11, ;
		Name = "lblBlocked", ;
		TabIndex = 30, ;
		Top = 227, ;
		Width = 59, ;
		ZOrderSet = 61
		*< END OBJECT: ClassLib="main.vcx" BaseClass="label" />

	ADD OBJECT 'pgfRateCode.pagSettings.lblColor' AS tlabel WITH ;
		Caption = "lblColor", ;
		Height = 17, ;
		Left = 191, ;
		Name = "lblColor", ;
		TabIndex = 10, ;
		Top = 107, ;
		Width = 72, ;
		ZOrderSet = 22
		*< END OBJECT: ClassLib="main.vcx" BaseClass="label" />

	ADD OBJECT 'pgfRateCode.pagSettings.lblDepBlocked' AS tlabel WITH ;
		AutoSize = .T., ;
		Caption = "lblDepBlocked", ;
		Height = 17, ;
		Left = 11, ;
		Name = "lblDepBlocked", ;
		TabIndex = 46, ;
		Top = 276, ;
		Width = 82, ;
		ZOrderSet = 61
		*< END OBJECT: ClassLib="main.vcx" BaseClass="label" />

	ADD OBJECT 'pgfRateCode.pagSettings.lblForeignCurrency' AS tlabel WITH ;
		Caption = "lblPayMeth", ;
		Height = 17, ;
		Left = 11, ;
		Name = "lblForeignCurrency", ;
		TabIndex = 14, ;
		Top = 155, ;
		Width = 108, ;
		ZOrderSet = 31
		*< END OBJECT: ClassLib="main.vcx" BaseClass="label" />

	ADD OBJECT 'pgfRateCode.pagSettings.lblFromTo' AS tlabel WITH ;
		Caption = "lblFromTo", ;
		Height = 17, ;
		Left = 11, ;
		Name = "lblFromTo", ;
		TabIndex = 5, ;
		Top = 83, ;
		Width = 108, ;
		ZOrderSet = 16
		*< END OBJECT: ClassLib="main.vcx" BaseClass="label" />

	ADD OBJECT 'pgfRateCode.pagSettings.lblGroupCode' AS tlabel WITH ;
		Caption = "lblGroupCode", ;
		Height = 17, ;
		Left = 11, ;
		Name = "lblGroupCode", ;
		TabIndex = 12, ;
		Top = 131, ;
		Width = 108, ;
		ZOrderSet = 29
		*< END OBJECT: ClassLib="main.vcx" BaseClass="label" />

	ADD OBJECT 'pgfRateCode.pagSettings.lblMarkC' AS tlabel WITH ;
		Caption = "lblMarkC", ;
		Height = 17, ;
		Left = 11, ;
		Name = "lblMarkC", ;
		TabIndex = 18, ;
		Top = 179, ;
		Width = 108, ;
		ZOrderSet = 33
		*< END OBJECT: ClassLib="main.vcx" BaseClass="label" />

	ADD OBJECT 'pgfRateCode.pagSettings.lblmaxnights' AS tlabel WITH ;
		Caption = "lblmaxnights", ;
		Left = 191, ;
		Name = "lblmaxnights", ;
		TabIndex = 24, ;
		Top = 203, ;
		ZOrderSet = 69
		*< END OBJECT: ClassLib="main.vcx" BaseClass="label" />

	ADD OBJECT 'pgfRateCode.pagSettings.lblMinNgts' AS tlabel WITH ;
		Caption = "lblMinNgts", ;
		Height = 17, ;
		Left = 11, ;
		Name = "lblMinNgts", ;
		TabIndex = 22, ;
		Top = 203, ;
		Width = 108, ;
		ZOrderSet = 69
		*< END OBJECT: ClassLib="main.vcx" BaseClass="label" />

	ADD OBJECT 'pgfRateCode.pagSettings.lblMinStayGap' AS tlabel WITH ;
		AutoSize = .T., ;
		Caption = "lblMinStayGap", ;
		Height = 17, ;
		Left = 329, ;
		Name = "lblMinStayGap", ;
		TabIndex = 26, ;
		Top = 203, ;
		Width = 80, ;
		ZOrderSet = 69
		*< END OBJECT: ClassLib="main.vcx" BaseClass="label" />

	ADD OBJECT 'pgfRateCode.pagSettings.lblMinStayGapFilled' AS tlabel WITH ;
		AutoSize = .T., ;
		Caption = "lblMinStayGapFilled", ;
		Height = 17, ;
		Left = 565, ;
		Name = "lblMinStayGapFilled", ;
		TabIndex = 28, ;
		Top = 203, ;
		Width = 110, ;
		ZOrderSet = 69
		*< END OBJECT: ClassLib="main.vcx" BaseClass="label" />

	ADD OBJECT 'pgfRateCode.pagSettings.lblPayMeth' AS tlabel WITH ;
		Caption = "lblPayMeth", ;
		Height = 17, ;
		Left = 191, ;
		Name = "lblPayMeth", ;
		TabIndex = 16, ;
		Top = 155, ;
		Width = 72, ;
		ZOrderSet = 31
		*< END OBJECT: ClassLib="main.vcx" BaseClass="label" />

	ADD OBJECT 'pgfRateCode.pagSettings.lblPeriod' AS tlabel WITH ;
		AutoSize = .T., ;
		Caption = "lblPeriod", ;
		Left = 383, ;
		Name = "lblPeriod", ;
		TabIndex = 54, ;
		Top = 11, ;
		Width = 51, ;
		ZOrderSet = 26
		*< END OBJECT: ClassLib="main.vcx" BaseClass="label" />

	ADD OBJECT 'pgfRateCode.pagSettings.lblRhythm' AS tlabel WITH ;
		AutoSize = .T., ;
		Caption = "lblRhythm", ;
		Left = 587, ;
		Name = "lblRhythm", ;
		TabIndex = 57, ;
		Top = 11, ;
		ZOrderSet = 95
		*< END OBJECT: ClassLib="main.vcx" BaseClass="label" />

	ADD OBJECT 'pgfRateCode.pagSettings.lblRoomTyp' AS tlabel WITH ;
		Caption = "lblRoomTyp", ;
		Height = 17, ;
		Left = 11, ;
		Name = "lblRoomTyp", ;
		TabIndex = 1, ;
		Top = 11, ;
		Width = 108, ;
		ZOrderSet = 12
		*< END OBJECT: ClassLib="main.vcx" BaseClass="label" />

	ADD OBJECT 'pgfRateCode.pagSettings.lblSeason' AS tlabel WITH ;
		Caption = "lblSeason", ;
		Height = 17, ;
		Left = 11, ;
		Name = "lblSeason", ;
		TabIndex = 8, ;
		Top = 107, ;
		Width = 108, ;
		ZOrderSet = 19
		*< END OBJECT: ClassLib="main.vcx" BaseClass="label" />

	ADD OBJECT 'pgfRateCode.pagSettings.lblSourceC' AS tlabel WITH ;
		Caption = "lblSourceC", ;
		Height = 17, ;
		Left = 191, ;
		Name = "lblSourceC", ;
		TabIndex = 20, ;
		Top = 179, ;
		Width = 72, ;
		ZOrderSet = 35
		*< END OBJECT: ClassLib="main.vcx" BaseClass="label" />

	ADD OBJECT 'pgfRateCode.pagSettings.opgPeriod' AS toptiongroup WITH ;
		ButtonCount = 7, ;
		Height = 144, ;
		Left = 371, ;
		Name = "opgPeriod", ;
		TabIndex = 55, ;
		Top = 20, ;
		Width = 192, ;
		ZOrderSet = 25, ;
		Option1.AutoSize = .T., ;
		Option1.Caption = "optHour", ;
		Option1.Height = 17, ;
		Option1.Left = 5, ;
		Option1.Name = "optHour", ;
		Option1.Top = 10, ;
		Option1.Width = 62, ;
		Option2.AutoSize = .T., ;
		Option2.Caption = "optDayPart", ;
		Option2.Height = 17, ;
		Option2.Left = 5, ;
		Option2.Name = "optDayPart", ;
		Option2.Top = 29, ;
		Option2.Width = 78, ;
		Option3.AutoSize = .T., ;
		Option3.Caption = "optDay", ;
		Option3.Height = 17, ;
		Option3.Left = 5, ;
		Option3.Name = "optDay", ;
		Option3.Top = 48, ;
		Option3.Width = 56, ;
		Option4.AutoSize = .T., ;
		Option4.Caption = "optWeek", ;
		Option4.Height = 17, ;
		Option4.Left = 5, ;
		Option4.Name = "optWeek", ;
		Option4.Top = 67, ;
		Option4.Width = 66, ;
		Option5.AutoSize = .T., ;
		Option5.Caption = "optMonth", ;
		Option5.Height = 17, ;
		Option5.Left = 5, ;
		Option5.Name = "optMonth", ;
		Option5.Top = 86, ;
		Option5.Width = 68, ;
		Option6.AutoSize = .T., ;
		Option6.Caption = "optStay", ;
		Option6.Height = 17, ;
		Option6.Left = 5, ;
		Option6.Name = "optStay", ;
		Option6.Top = 105, ;
		Option6.Width = 58, ;
		Option7.AutoSize = .T., ;
		Option7.Caption = "optStayVariable", ;
		Option7.Height = 17, ;
		Option7.Left = 5, ;
		Option7.Name = "optStayVariable", ;
		Option7.Top = 124, ;
		Option7.Width = 103
		*< END OBJECT: ClassLib="main.vcx" BaseClass="optiongroup" />

	ADD OBJECT 'pgfRateCode.pagSettings.opgRhythm' AS toptiongroup WITH ;
		ButtonCount = 8, ;
		Height = 164, ;
		Left = 575, ;
		Name = "opgRhythm", ;
		TabIndex = 58, ;
		Top = 20, ;
		Width = 192, ;
		ZOrderSet = 94, ;
		Option1.AutoSize = .T., ;
		Option1.Caption = "optDay", ;
		Option1.Height = 17, ;
		Option1.Left = 5, ;
		Option1.Name = "optDay", ;
		Option1.Top = 10, ;
		Option1.Width = 56, ;
		Option2.AutoSize = .T., ;
		Option2.Caption = "optFirstChkIn", ;
		Option2.Height = 17, ;
		Option2.Left = 5, ;
		Option2.Name = "optFirstChkIn", ;
		Option2.Top = 29, ;
		Option2.Width = 91, ;
		Option3.AutoSize = .T., ;
		Option3.Caption = "optStayChkIn", ;
		Option3.Height = 17, ;
		Option3.Left = 5, ;
		Option3.Name = "optStayChkIn", ;
		Option3.Top = 48, ;
		Option3.Width = 90, ;
		Option4.AutoSize = .T., ;
		Option4.Caption = "optStayChkOut", ;
		Option4.Height = 17, ;
		Option4.Left = 5, ;
		Option4.Name = "optStayChkOut", ;
		Option4.Top = 67, ;
		Option4.Width = 99, ;
		Option5.AutoSize = .T., ;
		Option5.Caption = "optWeek", ;
		Option5.Height = 17, ;
		Option5.Left = 5, ;
		Option5.Name = "optWeek", ;
		Option5.Top = 86, ;
		Option5.Width = 66, ;
		Option6.AutoSize = .T., ;
		Option6.Caption = "optMonth", ;
		Option6.Height = 17, ;
		Option6.Left = 5, ;
		Option6.Name = "optMonth", ;
		Option6.Top = 105, ;
		Option6.Width = 68, ;
		Option7.AutoSize = .T., ;
		Option7.Caption = "optDayVar", ;
		Option7.Height = 17, ;
		Option7.Left = 5, ;
		Option7.Name = "optDayVar", ;
		Option7.Top = 124, ;
		Option7.Width = 74, ;
		Option8.AutoSize = .T., ;
		Option8.Caption = "optStayVariable", ;
		Option8.Height = 17, ;
		Option8.Left = 5, ;
		Option8.Name = "optStayVariable", ;
		Option8.Top = 143, ;
		Option8.Width = 103
		*< END OBJECT: ClassLib="main.vcx" BaseClass="optiongroup" />

	ADD OBJECT 'pgfRateCode.pagSettings.txtmaxnights' AS ttext WITH ;
		DisabledForeColor = 1,1,1, ;
		Format = "K", ;
		InputMask = "999", ;
		Left = 260, ;
		Name = "txtmaxnights", ;
		TabIndex = 25, ;
		Top = 200, ;
		Width = 60, ;
		ZOrderSet = 70
		*< END OBJECT: ClassLib="main.vcx" BaseClass="textbox" />

	ADD OBJECT 'pgfRateCode.pagSettings.txtMinNgts' AS ttext WITH ;
		DisabledForeColor = 1,1,1, ;
		Format = "K", ;
		InputMask = "999", ;
		Left = 119, ;
		Name = "txtMinNgts", ;
		TabIndex = 23, ;
		Top = 200, ;
		Width = 60, ;
		ZOrderSet = 70
		*< END OBJECT: ClassLib="main.vcx" BaseClass="textbox" />

	ADD OBJECT 'pgfRateCode.pagSettings.txtMinStayGap' AS ttext WITH ;
		DisabledForeColor = 1,1,1, ;
		Format = "K", ;
		Height = 23, ;
		InputMask = "999", ;
		Left = 533, ;
		Name = "txtMinStayGap", ;
		TabIndex = 27, ;
		Top = 200, ;
		Width = 25, ;
		ZOrderSet = 70
		*< END OBJECT: ClassLib="main.vcx" BaseClass="textbox" />

	ADD OBJECT 'pgfRateCode.pagSettings.txtMinStayGapFilled' AS ttext WITH ;
		DisabledForeColor = 1,1,1, ;
		Format = "K", ;
		Height = 23, ;
		InputMask = "999", ;
		Left = 738, ;
		Name = "txtMinStayGapFilled", ;
		TabIndex = 29, ;
		Top = 200, ;
		Width = 28, ;
		ZOrderSet = 70
		*< END OBJECT: ClassLib="main.vcx" BaseClass="textbox" />

	ADD OBJECT 'pgfRateCode.pagSettings.txtOnDay' AS ttext WITH ;
		DisabledForeColor = 1,1,1, ;
		Format = "K", ;
		Height = 23, ;
		InputMask = "99", ;
		Left = 719, ;
		Name = "txtOnDay", ;
		TabIndex = 59, ;
		Top = 122, ;
		Width = 43, ;
		ZOrderSet = 27
		*< END OBJECT: ClassLib="main.vcx" BaseClass="textbox" />

	ADD OBJECT 'pgfRateCode.pagSettings.txtPrcdur' AS ttext WITH ;
		DisabledForeColor = 1,1,1, ;
		Format = "K", ;
		Left = 503, ;
		Name = "txtPrcdur", ;
		TabIndex = 56, ;
		Top = 140, ;
		Width = 60, ;
		ZOrderSet = 27
		*< END OBJECT: ClassLib="main.vcx" BaseClass="textbox" />

	ADD OBJECT 'pgfRateCode.pagSettings.txtSeason' AS ttext WITH ;
		DisabledForeColor = 1,1,1, ;
		Height = 23, ;
		InputMask = "!", ;
		Left = 119, ;
		Name = "txtSeason", ;
		TabIndex = 9, ;
		Top = 104, ;
		Width = 60, ;
		ZOrderSet = 20
		*< END OBJECT: ClassLib="main.vcx" BaseClass="textbox" />

	ADD OBJECT 'pgfRateCode.pagSplit.cmdDelete' AS tcommandbutton WITH ;
		Caption = "", ;
		Height = 23, ;
		Left = 59, ;
		Name = "cmdDelete", ;
		Picture = ..\bitmap\toolbar\delete.png, ;
		PicturePosition = 14, ;
		TabIndex = 3, ;
		Top = 8, ;
		Width = 23
		*< END OBJECT: ClassLib="main.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'pgfRateCode.pagSplit.cmdEdit' AS tcommandbutton WITH ;
		Caption = "", ;
		Height = 23, ;
		Left = 35, ;
		Name = "cmdEdit", ;
		Picture = ..\bitmap\toolbar\edit.png, ;
		PicturePosition = 14, ;
		TabIndex = 2, ;
		Top = 8, ;
		Width = 23
		*< END OBJECT: ClassLib="main.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'pgfRateCode.pagSplit.cmdHistory' AS tcommandbutton WITH ;
		Caption = "", ;
		Height = 23, ;
		Left = 83, ;
		Name = "cmdHistory", ;
		Picture = ..\bitmap\toolbar\history.png, ;
		PicturePosition = 14, ;
		TabIndex = 4, ;
		Top = 8, ;
		Width = 23
		*< END OBJECT: ClassLib="main.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'pgfRateCode.pagSplit.cmdNew' AS tcommandbutton WITH ;
		Caption = "", ;
		Height = 23, ;
		Left = 11, ;
		Name = "cmdNew", ;
		Picture = ..\bitmap\toolbar\new.png, ;
		PicturePosition = 14, ;
		TabIndex = 1, ;
		Top = 8, ;
		Width = 23
		*< END OBJECT: ClassLib="main.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'pgfRateCode.pagSplit.cmdNote' AS tcommandbutton WITH ;
		Caption = "", ;
		Height = 23, ;
		Left = 107, ;
		Name = "cmdNote", ;
		Picture = ..\bitmap\toolbar\report.png, ;
		PicturePosition = 14, ;
		TabIndex = 5, ;
		Top = 8, ;
		Width = 23
		*< END OBJECT: ClassLib="main.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'pgfRateCode.pagSplit.grdSplit' AS grdratearti WITH ;
		Left = 11, ;
		Name = "grdSplit", ;
		TabIndex = 6, ;
		Top = 32, ;
		COLUMN0.Name = "COLUMN0", ;
		COLUMN0.Visible = .F., ;
		grcAmount.Header1.Name = "Header1", ;
		grcAmount.Name = "grcAmount", ;
		grcAmount.TBGRID1.Name = "TBGRID1", ;
		grcArticle.Header1.Name = "Header1", ;
		grcArticle.Name = "grcArticle", ;
		grcArticle.TBGRID1.Name = "TBGRID1", ;
		grcComment.Header1.Name = "Header1", ;
		grcComment.Name = "grcComment", ;
		grcComment.TBGRID1.Name = "TBGRID1", ;
		grcDescription.Header1.Name = "Header1", ;
		grcDescription.Name = "grcDescription", ;
		grcDescription.TBGRID1.Name = "TBGRID1", ;
		grcMultiply.Header1.Name = "Header1", ;
		grcMultiply.Name = "grcMultiply", ;
		grcMultiply.TBGRID1.Name = "TBGRID1", ;
		grcOnlyOn.Header1.Name = "Header1", ;
		grcOnlyOn.Name = "grcOnlyOn", ;
		grcOnlyOn.TBGRID1.Name = "TBGRID1", ;
		grcPackage.Header1.Name = "Header1", ;
		grcPackage.Name = "grcPackage", ;
		grcPackage.Tbgrid1.Name = "Tbgrid1", ;
		grcSagroup.Header1.Name = "Header1", ;
		grcSagroup.Name = "grcSagroup", ;
		grcSagroup.TBGRID1.Name = "TBGRID1", ;
		grcType.Header1.Name = "Header1", ;
		grcType.Name = "grcType", ;
		grcType.TBGRID1.Name = "TBGRID1", ;
		grcUser1.Header1.Name = "Header1", ;
		grcUser1.Name = "grcUser1", ;
		grcUser1.Tbgrid1.Name = "Tbgrid1", ;
		grcUser1.Tbgrid1.Visible = .T., ;
		grcUser2.Header1.Name = "Header1", ;
		grcUser2.Name = "grcUser2", ;
		grcUser2.Tbgrid1.Name = "Tbgrid1", ;
		grcUser2.Tbgrid1.Visible = .T., ;
		grcUser3.Header1.Name = "Header1", ;
		grcUser3.Name = "grcUser3", ;
		grcUser3.Tbgrid1.Name = "Tbgrid1", ;
		grcUser3.Tbgrid1.Visible = .T., ;
		grcUser4.Header1.Name = "Header1", ;
		grcUser4.Name = "grcUser4", ;
		grcUser4.TBGRID1.Name = "TBGRID1"
		*< END OBJECT: ClassLib="cit_ratecode.vcx" BaseClass="grid" />

	ADD OBJECT 'pgfRateCode.pagSplit.grdSplit.COLUMN0.Header1' AS header WITH ;
		Caption = "Header1", ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'pgfRateCode.pagSplit.grdSplit.COLUMN0.Text1' AS textbox WITH ;
		BackColor = 255,255,255, ;
		BorderStyle = 0, ;
		ForeColor = 0,0,0, ;
		Margin = 0, ;
		Name = "Text1", ;
		Visible = .F.
		*< END OBJECT: BaseClass="textbox" />

	ADD OBJECT 'txtAlertByCXL' AS ttext WITH ;
		DisabledForeColor = 1,1,1, ;
		Format = "K", ;
		Height = 23, ;
		Left = 348, ;
		Name = "txtAlertByCXL", ;
		TabIndex = 13, ;
		Top = 136, ;
		Width = 444, ;
		ZOrderSet = 12
		*< END OBJECT: ClassLib="main.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtDesc' AS ttext WITH ;
		DisabledForeColor = 1,1,1, ;
		Format = "K", ;
		Height = 23, ;
		InputMask = (REPLICATE("X",35)), ;
		Left = 120, ;
		Name = "txtDesc", ;
		TabIndex = 7, ;
		Top = 60, ;
		Width = 216, ;
		ZOrderSet = 6
		*< END OBJECT: ClassLib="main.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtDescSA' AS ttext WITH ;
		DisabledForeColor = 1,1,1, ;
		Format = "K", ;
		Height = 23, ;
		Left = 120, ;
		Name = "txtDescSA", ;
		TabIndex = 9, ;
		Top = 84, ;
		Width = 132, ;
		ZOrderSet = 8
		*< END OBJECT: ClassLib="main.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtRateCode' AS ttext WITH ;
		DisabledForeColor = 1,1,1, ;
		Format = "K!", ;
		Height = 23, ;
		InputMask = (REPLICATE("X",9)), ;
		Left = 120, ;
		Name = "txtRateCode", ;
		TabIndex = 2, ;
		Top = 12, ;
		Width = 132, ;
		ZOrderSet = 1
		*< END OBJECT: ClassLib="main.vcx" BaseClass="textbox" />
	
	PROCEDURE assigncaption
		this.Caption = ChildTitle(GetLangText("MGRFINAN", "TXT_RCWINDOW"))
		this.cmdOK.Caption = GetLangText("COMMON", "TXT_OK")
		IF this.nMode == 5
			this.cmdCancel.Caption = GetLangText("COMMON", "TXT_CLOSE")
			this.cmdCancel.Left = (this.Width - this.cmdCancel.Width) / 2
			this.cmdCancel.l = this.cmdCancel.Left
		ELSE
			this.cmdCancel.Caption = GetLangText("COMMON", "TXT_CANCEL")
		ENDIF
		this.lblRateCode.Caption = GetLangText("MGRFINAN", "TXT_RCCODE")
		this.chkinactive.Caption = GetLangText("AR", "T_INACTIVE")
		this.lblDesc.Caption = GetLangText("MGRFINAN", "TXT_RCLANG")
		this.lblDescSA.Caption = GetLangText("RATECODE", "TXT_SPLIT_ARTICLES_GROUPD_LANG")
		this.chkSaOn.Caption = GetLangText("COMMON", "TXT_ON_OFF")
		this.chkCompl.Caption = GetLangText("MGRFINAN", "TXT_COMPLIMENTORY")
		this.chkAltDef.Caption = GetLangText("MGRFINAN", "TXT_ALLOT_STANDARD")
		this.chkAlertByCXL.Caption = GetLangText("RATECODE", "TXT_ALERT_WHEN_CXL")
		this.pgfNote.pagNote.chkCopyNote.Caption = GetLangText("RATECODE", "TXT_COPY_NOTE_INTO_RESER_NOTE")
		this.pgfNote.pagNote.edtNote.ToolTipText = GetLangText("MGRFINAN","TT_NOTE")
		this.pgfRateCode.pagSettings.Caption = GetLangText("MGRFINAN","TXT_BASIC_SETTING",,.T.)
		this.pgfRateCode.pagSettings.ToolTipText = this.pgfRateCode.pagSettings.Caption + " (" + GetText("COMMON","TXT_CTRL") + "+S)"
		this.pgfRateCode.pagRates.Caption = GetLangText("MNGCWR","TXT_GET_RATES",,.T.)
		this.pgfRateCode.pagRates.ToolTipText = this.pgfRateCode.pagRates.Caption + " (" + GetText("COMMON","TXT_CTRL") + "+P)"
		this.pgfRateCode.pagSplit.Caption = GetLangText("MGRFINAN","TXT_RATEARTI",,.T.)
		this.pgfRateCode.pagSplit.ToolTipText = this.pgfRateCode.pagSplit.Caption + " (" + GetText("COMMON","TXT_CTRL") + "+R)"
		this.pgfRateCode.pagCalendar.Caption = GetLangText("MGRFINAN","TXT_CALENDAR",,.T.)
		this.pgfRateCode.pagCalendar.ToolTipText = this.pgfRateCode.pagCalendar.Caption + " (" + GetText("COMMON","TXT_CTRL") + "+B)"
		this.pgfNote.pagCitadelMobile.edtDescription.ToolTipText = GetLangText("RATECODE", "TXT_DESCRIPTION_FOR_CITADEL_MOBILE")
		this.pgfNote.pagCitadelMobile.chkAllow.Caption = GetLangText("RATECODE", "TXT_ALLOW_FOR_CITADEL_MOBILE")
		this.pgfNote.pagCitadelMobile.chkShowSplits.Caption = GetLangText("RATECODE", "TXT_SHOW_SPLITS_FOR_CIT_MOBILE")
		this.pgfNote.pagCitadelMobile.lblExternalID.Caption = GetLangText("RATECODE", "TXT_EXTERNAL_ID")
		this.pgfNote.pagCitadelMobile.chkShowOnEmailConformation.Caption = GetLangText("RATECODE", "TXT_SHOW_ON_EMAIL_CONFORMATION")
		this.pgfNote.pagCitadelMobile.chkCitWebPrices.ToolTipText = GetLangText("MNGCWR", "TXT_CITWEB_RATES")
		this.pgfNote.pagNote.Caption = GetLangText("MGRFINAN", "TXT_NOTE")
		this.pgfNote.pagCitadelMobile.Caption = "Citadel Mobile"
		
		* Settings page
		this.pgfRateCode.pagSettings.lblRoomTyp.Caption = GetLangText("MGRFINAN", "TXT_RCROOMTYP")
		this.pgfRateCode.pagSettings.edtRoomTyp.ToolTipText = GetLangText("MGRFINAN","TT_RT_CHOOSE")
		this.pgfRateCode.pagSettings.cmdRoomTyp.ToolTipText = this.pgfRateCode.pagSettings.edtRoomTyp.ToolTipText
		this.pgfRateCode.pagSettings.chkAll.Caption = GetLangText("COMMON", "TXT_ALL")
		this.pgfRateCode.pagSettings.lblFromTo.Caption = GetLangText("MGRFINAN", "T_FROMTO")
		this.pgfRateCode.pagSettings.lblSeason.Caption = GetLangText("MGRFINAN", "T_SEASON")
		this.pgfRateCode.pagSettings.lblColor.Caption = GetLangText("MGRRESER", "T_COLOR")
		this.pgfRateCode.pagSettings.lblPeriod.Caption = GetLangText("MGRFINAN", "T_PERIOD")
		this.pgfRateCode.pagSettings.lblRhythm.Caption = GetLangText("MGRFINAN", "T_RHYTM")
		this.pgfRateCode.pagSettings.lblBlocked.Caption = GetLangText("MGRFINAN", "TXT_WEEKLY_BLOCK")
		this.pgfRateCode.pagSettings.lblArrBlocked.Caption = GetLangText("MGRFINAN", "TXT_ARR_WEEKLY_BLOCK")
		this.pgfRateCode.pagSettings.lblDepBlocked.Caption = GetLangText("MGRFINAN", "TXT_DEP_WEEKLY_BLOCK")
		this.pgfRateCode.pagSettings.lblGroupCode.Caption = GetLangText("MGRFINAN", "TXT_RCGCODE")
		this.pgfRateCode.pagSettings.lblPayMeth.Caption = GetLangText("MGRFINAN", "T_PAYNUM")
		this.pgfRateCode.pagSettings.lblForeignCurrency.Caption = GetLangText("MGRFINAN", "TXT_FOREIGN_CURRENCY")
		this.pgfRateCode.pagSettings.lblSourceC.Caption = GetLangText("RESERVAT", "T_SOURCECODE")
		this.pgfRateCode.pagSettings.lblMarkC.Caption = GetLangText("MGRFINAN", "T_MARKET")
		this.pgfRateCode.pagSettings.lblMinNgts.Caption = GetLangText("MGRFINAN", "T_MINSTAY")
		this.pgfRateCode.pagSettings.lblmaxnights.Caption = GetLangText("MGRFINAN", "T_MAXSTAY")
		this.pgfRateCode.pagSettings.opgPeriod.optHour.Caption = GetLangText("MGRFINAN", "TXT_HOUR")
		this.pgfRateCode.pagSettings.opgPeriod.optDayPart.Caption = GetLangText("MGRFINAN", "TXT_DAYPART")
		this.pgfRateCode.pagSettings.opgPeriod.optDay.Caption = GetLangText("MGRFINAN", "TXT_DAY")
		this.pgfRateCode.pagSettings.opgPeriod.optWeek.Caption = GetLangText("MGRFINAN", "TXT_WEEK")
		this.pgfRateCode.pagSettings.opgPeriod.optMonth.Caption = GetLangText("MGRFINAN", "TXT_RHMONTH")
		this.pgfRateCode.pagSettings.opgPeriod.optStay.Caption = GetLangText("MGRFINAN", "TXT_STAY")
		this.pgfRateCode.pagSettings.opgPeriod.optStayVariable.Caption = GetLangText("MGRFINAN", "TXT_STAYVARIABLE")
		this.pgfRateCode.pagSettings.opgRhythm.optDay.Caption = GetLangText("MGRFINAN", "TXT_RHDAY")
		this.pgfRateCode.pagSettings.opgRhythm.optFirstChkIn.Caption = GetLangText("MGRFINAN", "TXT_FIRSTNIGHTATCHECKIN")
		this.pgfRateCode.pagSettings.opgRhythm.optStayChkIn.Caption = GetLangText("MGRFINAN", "TXT_ATCHINSTAY")
		this.pgfRateCode.pagSettings.opgRhythm.optStayChkOut.Caption = GetLangText("MGRFINAN", "TXT_ATCHOUTSTAY")
		this.pgfRateCode.pagSettings.opgRhythm.optWeek.Caption = GetLangText("MGRFINAN", "TXT_RHWEEK")
		this.pgfRateCode.pagSettings.opgRhythm.optMonth.Caption = GetLangText("RATECODE", "TXT_DAY_OF_MONTH")
		this.pgfRateCode.pagSettings.opgRhythm.optDayVar.Caption = GetLangText("MGRFINAN", "TXT_DAYVARIABLE")
		this.pgfRateCode.pagSettings.opgRhythm.optStayVariable.Caption = GetLangText("MGRFINAN", "TXT_STAYVARIABLE")
		this.pgfRateCode.pagSettings.chkBlockSun.Caption = this.aDoW[1]
		this.pgfRateCode.pagSettings.chkBlockMon.Caption = this.aDoW[2]
		this.pgfRateCode.pagSettings.chkBlockTue.Caption = this.aDoW[3]
		this.pgfRateCode.pagSettings.chkBlockWed.Caption = this.aDoW[4]
		this.pgfRateCode.pagSettings.chkBlockThu.Caption = this.aDoW[5]
		this.pgfRateCode.pagSettings.chkBlockFri.Caption = this.aDoW[6]
		this.pgfRateCode.pagSettings.chkBlockSat.Caption = this.aDoW[7]
		this.pgfRateCode.pagSettings.chkArrBlockSun.Caption = this.aDoW[1]
		this.pgfRateCode.pagSettings.chkArrBlockMon.Caption = this.aDoW[2]
		this.pgfRateCode.pagSettings.chkArrBlockTue.Caption = this.aDoW[3]
		this.pgfRateCode.pagSettings.chkArrBlockWed.Caption = this.aDoW[4]
		this.pgfRateCode.pagSettings.chkArrBlockThu.Caption = this.aDoW[5]
		this.pgfRateCode.pagSettings.chkArrBlockFri.Caption = this.aDoW[6]
		this.pgfRateCode.pagSettings.chkArrBlockSat.Caption = this.aDoW[7]
		this.pgfRateCode.pagSettings.chkDepBlockSun.Caption = this.aDoW[1]
		this.pgfRateCode.pagSettings.chkDepBlockMon.Caption = this.aDoW[2]
		this.pgfRateCode.pagSettings.chkDepBlockTue.Caption = this.aDoW[3]
		this.pgfRateCode.pagSettings.chkDepBlockWed.Caption = this.aDoW[4]
		this.pgfRateCode.pagSettings.chkDepBlockThu.Caption = this.aDoW[5]
		this.pgfRateCode.pagSettings.chkDepBlockFri.Caption = this.aDoW[6]
		this.pgfRateCode.pagSettings.chkDepBlockSat.Caption = this.aDoW[7]
		this.pgfRateCode.pagSettings.lblMinStayGap.Caption = GetLangText("MGRFINAN", "TXT_MIN_STAY_GAP")
		this.pgfRateCode.pagSettings.lblMinStayGapFilled.Caption = GetLangText("MGRFINAN", "TXT_MIN_STAY_GAP_FILLED")
		* Rates page
		this.pgfRateCode.pagRates.lblStandardRate.Caption = GetLangText("MGRFINAN", "T_STANDARD")
		this.pgfRateCode.pagRates.lblSpecialRate.Caption = GetLangText("MGRFINAN", "T_SPECIAL")
		this.pgfRateCode.pagRates.lblHRSIDPrice.Caption = "Üb.Pr. HRS ID"
		this.pgfRateCode.pagRates.lblHRSIDSeason.Caption = "Season HRS ID"
		this.pgfRateCode.pagRates.lblSpecRate.Caption = GetLangText("MGRFINAN", "T_SPECIALRATEON")
		this.pgfRateCode.pagRates.lblNotArr.Caption = GetLangText("MGRFINAN", "T_CLOSEDONARRIVAL")
		this.pgfRateCode.pagRates.lblFixRate.Caption = GetLangText("MGRFINAN", "T_BASE")
		this.pgfRateCode.pagRates.lblwFixRate.Caption = GetLangText("MGRFINAN", "T_BASE")
		this.pgfRateCode.pagRates.lblMinRate.Caption = GetLangText("MGRFINAN", "T_MINRATE")
		this.pgfRateCode.pagRates.lblMinRateByPerson.Caption = GetLangText("MGRFINAN", "T_MINRATE_BYPERS")
		this.pgfRateCode.pagRates.lblAdditionalBedSurcharge.Caption = GetLangText("MGRFINAN", "TXT_ADDITIONAL_BED_SURCHARGE")
		this.pgfRateCode.pagRates.lblHRSID.Caption = "Aufb. HRS ID"
		this.pgfRateCode.pagRates.chkNoExtra.Caption = GetLangText("MGRFINAN", "TXT_PUTEXTRA")
		this.pgfRateCode.pagRates.chkRateSun.Caption = this.aDoW[1]
		this.pgfRateCode.pagRates.chkRateMon.Caption = this.aDoW[2]
		this.pgfRateCode.pagRates.chkRateTue.Caption = this.aDoW[3]
		this.pgfRateCode.pagRates.chkRateWed.Caption = this.aDoW[4]
		this.pgfRateCode.pagRates.chkRateThu.Caption = this.aDoW[5]
		this.pgfRateCode.pagRates.chkRateFri.Caption = this.aDoW[6]
		this.pgfRateCode.pagRates.chkRateSat.Caption = this.aDoW[7]
		this.pgfRateCode.pagRates.chkArrSun.Caption = this.aDoW[1]
		this.pgfRateCode.pagRates.chkArrMon.Caption = this.aDoW[2]
		this.pgfRateCode.pagRates.chkArrTue.Caption = this.aDoW[3]
		this.pgfRateCode.pagRates.chkArrWed.Caption = this.aDoW[4]
		this.pgfRateCode.pagRates.chkArrThu.Caption = this.aDoW[5]
		this.pgfRateCode.pagRates.chkArrFri.Caption = this.aDoW[6]
		this.pgfRateCode.pagRates.chkArrSat.Caption = this.aDoW[7]
		
		* Split page
		this.pgfRateCode.pagSplit.cmdNew.Caption = GetText("COMMON","TXT_NEW",,.T.)
		this.pgfRateCode.pagSplit.cmdNew.ToolTipText = this.pgfRateCode.pagSplit.cmdNew.Caption + " (" + GetText("COMMON","TXT_CTRL") + "+N)"
		this.pgfRateCode.pagSplit.cmdEdit.Caption = GetText("COMMON","TXT_EDIT",,.T.)
		this.pgfRateCode.pagSplit.cmdEdit.ToolTipText = this.pgfRateCode.pagSplit.cmdEdit.Caption + " (" + GetText("COMMON","TXT_CTRL") + "+E)"
		this.pgfRateCode.pagSplit.cmdDelete.Caption = GetText("COMMON","TXT_DELETE",,.T.)
		this.pgfRateCode.pagSplit.cmdDelete.ToolTipText = this.pgfRateCode.pagSplit.cmdDelete.Caption + " (" + GetText("COMMON","TXT_CTRL") + "+D)"
		this.pgfRateCode.pagSplit.cmdHistory.Caption = GetText("RESERVAT","TXT_HISTORY",,.T.)
		this.pgfRateCode.pagSplit.cmdHistory.ToolTipText = this.pgfRateCode.pagSplit.cmdHistory.Caption + " (" + GetText("COMMON","TXT_CTRL") + "+Y)"
		this.pgfRateCode.pagSplit.cmdNote.Caption = GetLangText("RESERVAT","T_NOTE")
		this.pgfRateCode.pagSplit.cmdNote.ToolTipText = GetLangText("RESERVAT","TT_RSNOTE")
		
		* Calendar page
		this.pgfRateCode.pagCalendar.lblMonth.Caption = GetLangText("MGRFINAN","TXT_MONTH")
		this.pgfRateCode.pagCalendar.lblTimePeriod.Caption = GetLangText("MGRFINAN","TXT_TIME_PERIOD")
		this.pgfRateCode.pagCalendar.chkBlocked.Caption = GetLangText("MGRFINAN", "TXT_BLOCKED")
		this.pgfRateCode.pagCalendar.lblMinStay.Caption = GetLangText("MGRFINAN", "T_MINSTAY")
		this.pgfRateCode.pagCalendar.cmdApply.Caption = GetLangText("BILL", "T_APPLY")
	ENDPROC

	PROCEDURE Init
		LPARAMETERS lp_nMode, lp_nSetId, lp_oParams
		LOCAL i, l_nRecNo, l_oRatecode, l_cRcOldId, l_nOldSetId
		
		DODEFAULT()
		this.nMode = lp_nMode
		IF PCOUNT() > 2
			this.oParams = lp_oParams
		ENDIF
		l_nOldSetId = 0
		
		this.ocaratecode = CREATEOBJECT("caratecode")
		this.ocaratecode.Alias = "cadratecode"
		this.ocaratearti = CREATEOBJECT("caratearti")
		this.ocaratearti.Alias = "cadratearti"
		this.ocarateprop = CREATEOBJECT("carateprop")
		this.ocarateprop.Alias = "cadrateprop"
		this.ocarcyield = CREATEOBJECT("carcyield")
		this.ocarcyield.Alias = "cadrcyield"
		
		DO CASE
			CASE this.nMode = 1		&& EDIT_MODE
				this.ocaratecode.cFilterClause = "rc_rcsetid = " + sqlcnv(lp_nSetId,.T.)
				this.ocaratecode.lCreateIndexes = .T.
				this.ocaratecode.CursorFill()
				SELECT cadratecode
				LOCATE FOR rc_rcsetid = lp_nSetId
				l_nOldSetId = rc_rcsetid
				l_cRcOldId = UPPER(rc_ratecod + rc_roomtyp) + DTOS(rc_fromdat) + rc_season
				this.cOldRcRateCod = rc_ratecod
				this.cOldRcFromDat = rc_fromdat
				this.cOldRcSeason  = rc_season
				this.AddProperty("OldCompl", rc_complim)
				SCATTER NAME this.oData MEMO
				IF EMPTY(this.oData.rc_rcsetid)
					this.oData.rc_rcsetid = -99
				ENDIF
				this.oData.rc_updated = g_sysdate
			CASE this.nMode = 2		&& NEW_MODE
				l_cRcOldId = ""
				this.ocaratecode.cFilterClause = "0=1"
				this.ocaratecode.lCreateIndexes = .T.
				this.ocaratecode.CursorFill()
				SELECT cadratecode
				SCATTER NAME this.oData MEMO BLANK
				this.oData.rc_period = 1
				this.oData.rc_rhytm = 1
				this.oData.rc_rcsetid = -99
				this.oData.rc_updated = g_sysdate
				this.cOldRcRateCod = ""
				this.cOldRcFromDat = {}
				this.cOldRcSeason  = ""
			CASE this.nMode = 3		&& COPY_MODE
				this.ocaratecode.cFilterClause = "rc_rcsetid = " + sqlcnv(lp_nSetId,.T.)
				this.ocaratecode.lCreateIndexes = .T.
				this.ocaratecode.CursorFill()
				SELECT cadratecode
				LOCATE FOR rc_rcsetid = lp_nSetId
				SCATTER NAME this.oData MEMO
				this.oData.rc_rcid = 0
				this.oData.rc_ratecod = ""
				this.oData.rc_rcsetid = -99
				this.oData.rc_updated = g_sysdate
				l_cRcOldId = UPPER(rc_ratecod + rc_roomtyp) + DTOS(rc_fromdat) + rc_season
				this.cOldRcRateCod = ""
				this.cOldRcFromDat = {}
				this.cOldRcSeason  = ""
			CASE this.nMode = 5		&& READONLY_MODE
				this.ocaratecode.cFilterClause = "rc_rcsetid = " + sqlcnv(lp_nSetId,.T.)
				this.ocaratecode.lCreateIndexes = .T.
				this.ocaratecode.CursorFill()
				SELECT cadratecode
				LOCATE FOR rc_rcsetid = lp_nSetId
				l_nOldSetId = rc_rcsetid
				l_cRcOldId = UPPER(rc_ratecod + rc_roomtyp) + DTOS(rc_fromdat) + rc_season
				SCATTER NAME this.oData MEMO
				this.SetAll("Enabled", .F., "tText")
				this.SetAll("Enabled", .F., "tCheckbox")
				this.SetAll("Enabled", .F., "tEditbox")
				this.pgfRateCode.pagSettings.SetAll("Enabled", .F., "tText")
				this.pgfRateCode.pagSettings.SetAll("Enabled", .F., "tCheckbox")
				this.pgfRateCode.pagSettings.SetAll("Enabled", .F., "tDatectrl")
				this.pgfRateCode.pagSettings.SetAll("Enabled", .F., "tCommandbutton")
				this.pgfRateCode.pagSettings.SetAll("Enabled", .F., "tOptiongroup")
				FOR i = 1 TO this.pgfRateCode.pagSettings.ControlCount
					IF INLIST(UPPER(LEFT(this.pgfRateCode.pagSettings.Controls(i).Name,3)), "CBO")
						this.pgfRateCode.pagSettings.Controls(i).Enabled = .F.
					ENDIF
				ENDFOR
				this.pgfRateCode.pagRates.SetAll("Enabled", .F., "tText")
				this.pgfRateCode.pagRates.SetAll("Enabled", .F., "tCheckbox")
				this.pgfRateCode.pagRates.grdStdRates.ReadOnly = .T.
				this.pgfRateCode.pagRates.grdSpcRates.ReadOnly = .T.
				this.pgfRateCode.pagSplit.SetAll("Enabled", .F., "tCommandbutton")
				this.pgfRateCode.PagSplit.grdSplit.ReadOnly = .T.
				this.pgfRateCode.pagCalendar.SetAll("Enabled", .F., "tText")
				this.pgfRateCode.pagCalendar.SetAll("Enabled", .F., "tCheckbox")
				this.pgfRateCode.pagCalendar.SetAll("Enabled", .F., "tDatectrl")
				this.pgfRateCode.pagCalendar.SetAll("Enabled", .F., "tCommandbutton")
				this.cmdOK.Visible = .F.
			OTHERWISE
				this.Release()
				RETURN .F.
		ENDCASE
		
		sqlcursor("SELECT rc_key AS oldrc, CAST('' AS Character(23)) AS newrc FROM ratecode WHERE rc_rcsetid = " + sqlcnv(l_nOldSetId,.T.),"curratecode",,,,,,.T.)
		
		IF this.nMode <> 2 && not NEW_MODE
			SELECT cadratecode
			l_nRecNo = RECNO()
			SCAN FOR SEEK(rc_roomtyp, "tblRoomTypeMulSel", "rt_roomtyp")
				SCATTER FIELDS LIKE rc_*amnt?, rc_rcid, rc_citvwrl, rc_citcwcr, rc_citcwcp NAME l_oRatecode
				SELECT tblRoomTypeMulSel
				GATHER NAME l_oRatecode
				REPLACE rt_mark WITH .T.
				SELECT cadratecode
			ENDSCAN
			GOTO l_nRecNo
		
			sqlcursor("SELECT *, CAST(NVL(ar_lang" + g_Langnum + ",'') AS Character(35)) AS c_lang FROM ratearti LEFT JOIN article ON ra_artinum = ar_artinum WHERE ra_ratecod = " + sqlcnv(l_cRcOldId,.T.),"curratearti",,,,,,.T.)
			sqlcursor("SELECT * FROM rateprop WHERE rd_ratecod = " + sqlcnv(l_cRcOldId,.T.),"currateprop",,,,,,.T.)
		
			this.ocarateprop.cFilterClause = "rd_ratecod = " + sqlcnv(l_cRcOldId,.T.)
			this.ocarateprop.CursorFill()
		
			this.ocarcyield.cFilterClause = "yr_ratecod = " + sqlcnv(l_cRcOldId,.T.)
			this.ocarcyield.CursorFill()
		
			IF this.nMode = 3 && COPY_MODE
				BLANK FIELDS ra_raid ALL IN curRatearti
				BLANK FIELDS rd_rcpid ALL IN currateprop && Remove old IDs for new records, to prevent dupilcates
			ENDIF
		ELSE
			sqlcursor("SELECT *, CAST(NVL(ar_lang" + g_Langnum + ",'') AS Character(35)) AS c_lang FROM ratearti LEFT JOIN article ON ra_artinum = ar_artinum WHERE 0=1","curratearti",,,,,,.T.)
		ENDIF
		SELECT curRatearti
		INDEX ON STR(ra_artityp,1)+STR(ra_artinum,4) TAG tag1
		GOTO TOP
		IF this.nMode <> 5
			this.pgfRateCode.pagSplit.cmdEdit.Enabled = NOT EOF()
			this.pgfRateCode.pagSplit.cmdDelete.Enabled = NOT EOF()
			this.pgfRateCode.pagSplit.cmdHistory.Enabled = NOT EOF()
			this.pgfRateCode.pagSplit.cmdNote.Enabled = NOT EOF()
		ENDIF
		
		this.cpleasewaitcaption = GetLangText("COMMON", "T_PLEASEWAIT")
		
		this.AssignCaption()
		this.SetControlSource()
		
		GO TOP IN tblRoomTypeMulSel
		
		
		RETURN .T.
	ENDPROC

	PROCEDURE KeyPress
		LPARAMETERS nKeyCode, nShiftAltCtrl
		
		DO CASE
			CASE nShiftAltCtrl = 2 AND nKeyCode = 19	&& Ctrl+S - Activate Settings page
				this.pgfRateCode.ActivePage = 1
			CASE nShiftAltCtrl = 2 AND nKeyCode = 16	&& Ctrl+P - Activate Rates page
				this.pgfRateCode.ActivePage = 2
			CASE nShiftAltCtrl = 2 AND nKeyCode = 18	&& Ctrl+R - Activate Split page
				this.pgfRateCode.ActivePage = 3
			CASE nShiftAltCtrl = 2 AND nKeyCode = 2		&& Ctrl+B - Activate Calendar page
				this.pgfRateCode.ActivePage = 4
			CASE nShiftAltCtrl = 2 AND nKeyCode = 20 AND this.pgfRateCode.ActivePage = 1 AND this.pgfRateCode.pagSettings.cmdRoomTyp.Enabled	&& Ctrl+T - Choose Roomtype
				this.OnRoomTypCmd()
			CASE nShiftAltCtrl = 2 AND nKeyCode = 14 AND this.pgfRateCode.ActivePage = 3	&& Ctrl+N - New split article
				this.OnSplitNew()
			CASE nShiftAltCtrl = 2 AND nKeyCode = 5 AND this.pgfRateCode.ActivePage = 3		&& Ctrl+E - Edit split article
				this.OnSplitEdit()
			CASE nShiftAltCtrl = 2 AND nKeyCode = 4 AND this.pgfRateCode.ActivePage = 3		&& Ctrl+D - Delete split article
				this.OnSplitDelete()
			CASE nShiftAltCtrl = 2 AND nKeyCode = 25 AND this.pgfRateCode.ActivePage = 3	&& Ctrl+Y - History of split article
				this.OnSplitHistory()
			CASE nShiftAltCtrl = 2 AND nKeyCode = 15 AND this.pgfRateCode.ActivePage = 3	&& Ctrl+O - Note of split article
				this.OnSplitNote()
		ENDCASE
	ENDPROC

	PROCEDURE Load
		LOCAL i, l_curRatecode, l_curRoomtype, l_cLang
		
		DODEFAULT()
		openfiledirect(.F., "param")
		openfiledirect(.F., "id")
		openfiledirect(.F., "picklist")
		openfiledirect(.F., "roomtype")
		
		openfiledirect(.F., "article")
		IF USED("article")
			SET ORDER TO tag1 IN article
		ENDIF
		openfiledirect(.F., "citcolor")
		openfiledirect(.F., "paymetho")
		openfiledirect(.F., "yioffer")
		
		IF NOT odbc()
			CURSORSETPROP("Buffering", 5, 0)
		ENDIF
		openfiledirect(.F., "ratearti")
		IF USED("ratearti")
			SET ORDER TO tag1 IN ratearti
		ENDIF
		openfiledirect(.F., "ratecode")
		IF USED("ratecode")
			SET ORDER TO tag1 IN ratecode
		ENDIF
		openfiledirect(.F., "rateprop")
		openfiledirect(.F., "resrate")
		openfiledirect(.F., "reservat")
		openfiledirect(.F., "resyield")
		openfiledirect(.F., "ressplit")
		openfiledirect(.F., "rcyield")
		
		l_curRatecode = sqlcursor("SELECT * FROM ratecode WHERE 0=1")
		l_curRoomtype = sqlcursor("SELECT * FROM roomtype WHERE 0=1",,,,,,,.T.)
		INSERT INTO &l_curRoomtype FROM ARRAY _screen.oGlobal.ogData.aRoomtypeCur
		INSERT INTO &l_curRoomtype (rt_roomtyp) VALUES ('*')
		
		l_cLang = "rt_lang" + g_langnum
		SELECT rt_roomtyp, &l_cLang AS rt_lang, CAST(.NULL. AS L) AS rt_mark, ;
				rc_amnt1, rc_amnt2, rc_amnt3, rc_amnt4, rc_amnt5, rc_camnt1, rc_camnt2, rc_camnt3, ;
				rc_wamnt1, rc_wamnt2, rc_wamnt3, rc_wamnt4, rc_wamnt5, rc_wcamnt1, rc_wcamnt2, rc_wcamnt3, rc_rcid, rc_citvwrl, rc_citcwcr, rc_citcwcp ;
				FROM &l_curRoomtype ;
				LEFT JOIN &l_curRatecode ON 0=1 ;
				INTO CURSOR tblRoomTypeMulSel READWRITE
		BLANK FIELDS LIKE rc_* ALL
		INDEX ON rt_roomtyp TAG rt_roomtyp
		DClose(l_curRatecode)
		DClose(l_curRoomtype)
		
		sqlcursor("SELECT pl_charcod, pl_lang3 FROM picklist WHERE pl_label = 'RCODEGROUP' ORDER BY pl_charcod","currcgrp",,,,,,.T.)
		SELECT currcgrp
		APPEND BLANK
		
		sqlcursor("SELECT *, CAST('' AS Character(35)) AS c_lang FROM ratearti WHERE 0=1","curratearti",,,,,,.T.)
		sqlcursor("SELECT * FROM rateprop WHERE 0=1","currateprop",,,,,,.T.)
		this.RcLoadDays()
		
		FOR i = 1 TO 7
			this.aDoW[i] = LEFT(MyCDoW(i),3)
		NEXT
		
		SELECT 0
	ENDPROC

	PROCEDURE onfirststart
		IF NOT this.lOnFirstActivate
			this.lOnFirstActivate = .T.
			TRY
				* Column0 is automaticly added when form created from class
				this.pgfRateCode.pagRates.grdStdRates.Column0.Visible = .F.
				this.pgfRateCode.pagRates.grdSpcRates.Column0.Visible = .F.
				this.pgfRateCode.pagSplit.grdSplit.Column0.Visible = .F.
			CATCH
			ENDTRY
		
			IF NOT _screen.SA
				STORE .F. TO	this.lblDescSA.Visible, ;
								this.txtDescSA.Visible, ;
								this.chkSaOn.Visible, ;
								this.pgfRateCode.pagSplit.grdSplit.grcSagroup.Visible
			ENDIF
			IF NOT _screen.APS
				STORE .F. TO	this.pgfRateCode.pagRates.lblMinRate.Visible, ;
								this.pgfRateCode.pagRates.txtMinRate.Visible, ;
								this.pgfRateCode.pagRates.lblPlus.Visible, ;
								this.pgfRateCode.pagRates.txtMinRateByPerson.Visible, ;
								this.pgfRateCode.pagRates.lblMinRateByPerson.Visible
			ENDIF
		
			IF _screen.oGlobal.lAgency
				STORE .T. TO	this.pgfRateCode.pagRates.lblHRSID.Visible, ;
								this.pgfRateCode.pagRates.txtrc_adperid.Visible, ;
								this.pgfRateCode.pagRates.lblAdditionalBedSurcharge.Visible, ;
								this.pgfRateCode.pagRates.txtrc_adperra.Visible, ;
								this.pgfRateCode.pagRates.lblHRSIDPrice.Visible, ;
								this.pgfRateCode.pagRates.txtHRSIDPrice.Visible, ;
								this.pgfRateCode.pagRates.lblHRSIDSeason.Visible, ;
								this.pgfRateCode.pagRates.txtHRSIDSeason.Visible
								
			ENDIF
		
			IF _Screen.Height < 600
				this.WindowState = 2
				this.Resize(_screen.Width - 8, _screen.Height - 27)
			ENDIF
		
			********************************************************************************
			* Bugfix. I don't know why, but pageframe was invisible, without next 2 lines! *
			this.pgfNote.PageCount = 3
			this.pgfNote.PageCount = 2
			********************************************************************************
		
		ENDIF
	ENDPROC

	PROCEDURE onok
		LOCAL i, lnRecNo, lnRCArticles, loDataRa, loDataRd, loLoggerRc, loLoggerRa, lcFilter, lcOldPartRC, lcNewPartRC, lcSql, lcField, lcRateCode, llUpdateSplits, lcAction
		
		IF EMPTY(this.oData.rc_ratecod)
			Alert(GetLangText("MGRFINAN", "TXT_RCNO"))
			this.txtRateCode.SetFocus()
			RETURN .F.
		ENDIF
		IF EMPTY(EVALUATE([this.oData.rc_lang] + g_Langnum))
			Alert(GetLangText("MGRFINAN", "TXT_RCNO"))
			this.txtDesc.SetFocus()
			RETURN .F.
		ENDIF
		IF EMPTY(this.oData.rc_fromdat)
			Alert(GetLangText("MGRFINAN", "TXT_RCNO"))
			this.pgfRateCode.pagSettings.dtxtFrom.SetFocus()
			RETURN .F.
		ENDIF
		IF EMPTY(this.oData.rc_todat)
			Alert(GetLangText("MGRFINAN", "TXT_RCNO"))
			this.pgfRateCode.pagSettings.dtxtTo.SetFocus()
			RETURN .F.
		ENDIF
		IF EMPTY(this.pgfRateCode.pagSettings.edtRoomTyp.Value)
			Alert(GetLangText("MGRFINAN", "TXT_RCNO"))
			this.pgfRateCode.pagSettings.edtRoomTyp.SetFocus()
			RETURN .F.
		ENDIF
		IF NOT this.RcChkSeason(this.oData.rc_season, this.oData.rc_fromdat, this.oData.rc_todat)
			Alert(GetLangText("MGRFINAN", "TXT_RCNO"))
			this.pgfRateCode.pagSettings.txtSeason.SetFocus()
			RETURN .F.
		ENDIF
		IF this.oData.rc_period = 7
			IF this.oData.rc_prcdur < 2
				Alert(GetLangText("MGRFINAN", "TXT_RCNO"))
				this.pgfRateCode.pagSettings.txtPrcdur.SetFocus()
				RETURN .F.
			ENDIF
			IF this.oData.rc_minstay < this.oData.rc_prcdur
				Alert(GetLangText("MGRFINAN", "TXT_RCNO"))
				this.pgfRateCode.pagSettings.txtMinNgts.SetFocus()
				RETURN .F.
			ENDIF
		ENDIF
		CALCULATE CNT() TO lnRCArticles IN curRatearti
		IF lnRCArticles = 0
			Alert(GetLangText("MGRFINAN", "TXT_RCNO"))
			this.pgfRateCode.pagSplit.grdSplit.SetFocus()
			RETURN .F.
		ENDIF
		IF NOT this.pgfRateCode.pagSettings.chkAll.Value AND NOT DLocate("tblRoomTypeMulSel", "NVL(rt_mark,.F.)")
			Alert(GetLangText("MGRFINAN", "TXT_RCNO"))
			this.pgfRateCode.pagSettings.edtRoomTyp.SetFocus()
			RETURN .F.
		ENDIF
		
		SELECT curRatecode
		IF this.pgfRateCode.pagSettings.chkAll.Value
			LOCATE
			IF EOF()
				APPEND BLANK
			ENDIF
			REPLACE newrc WITH PADR(PADR(this.oData.rc_ratecod,10)+PADR("*",4)+DTOS(this.oData.rc_fromdat)+this.oData.rc_season,23)
		ELSE
			* At first try to match old and new rckey by room type.
			SCAN FOR DLocate("tblRoomTypeMulSel", "NVL(rt_mark,.F.) AND rt_roomtyp = " + SqlCnv(SUBSTR(oldrc,11,4)))
				REPLACE newrc WITH PADR(PADR(this.oData.rc_ratecod,10)+PADR(tblRoomTypeMulSel.rt_roomtyp,4)+DTOS(this.oData.rc_fromdat)+this.oData.rc_season,23)
			ENDSCAN
			* For other old rate codes rckey would be just changed.
			SELECT tblRoomTypeMulSel
			SCAN FOR NVL(rt_mark,.F.) AND NOT DLocate("curRatecode", "SUBSTR(newrc,11,4) = " + SqlCnv(PADR(rt_roomtyp,4)))
				IF NOT DLocate("curRatecode", "EMPTY(newrc)")
					APPEND BLANK IN curRatecode
				ENDIF
				REPLACE newrc WITH PADR(PADR(this.oData.rc_ratecod,10)+PADR(tblRoomTypeMulSel.rt_roomtyp,4)+DTOS(this.oData.rc_fromdat)+this.oData.rc_season,23) IN curRatecode
			ENDSCAN
		ENDIF
		
		* Check for duplicates in database
		SELECT curRatecode
		LOCATE FOR newrc # oldrc AND NOT EMPTY(newrc) AND newrc = dlookup("ratecode","rc_key = " + sqlcnv(curRatecode.newrc,.T.),"rc_key")
		IF FOUND()
			* Restore cursor curRatecode
			DELETE FOR EMPTY(oldrc)
			BLANK FIELDS newrc ALL
			Alert(StrFmt(GetLangText("MGRFINAN", "TXT_RCUNIQUE"), TRIM(this.oData.rc_ratecod), TRIM(SUBSTR(oldrc,11,4)), DTOC(this.oData.rc_fromdat)))
			this.txtRateCode.SetFocus()
			RETURN .F.
		ENDIF
		
		* Get records from childs tables into cursor adapter
		SELECT curRatecode
		lcFilter = ""
		SCAN FOR NOT EMPTY(oldrc)
			lcFilter = lcFilter + IIF(EMPTY(lcFilter),"",",") + sqlcnv(oldrc,.T.)
		ENDSCAN
		
		* When ratecode name and from date changed check if there reservations for that ratecode.
		IF this.nMode = 1
			TEXT TO lcSql TEXTMERGE NOSHOW PRETEXT 15
			SELECT DISTINCT rs_rsid, rr_ratecod 
				FROM reservat 
				INNER JOIN resrate ON rs_reserid = rr_reserid 
				WHERE <<IIF(odbc(), "rs_depdate >= " + sqlcnv(SysDate(),.T.), "DTOS(rs_depdate)+rs_roomnum >= " + sqlcnv(DTOS(SysDate()),.T.))>> AND 
					rs_status NOT IN ('OUT','CXL','NS ','LST') AND rr_date > rs_ratedat AND rr_ratecod IN (<<lcFilter>>)
			ENDTEXT
			sqlcursor(lcSql,"curReservat")
			IF RECCOUNT("curReservat") > 0 AND (this.cOldRcRateCod <> PADR(this.oData.rc_ratecod,10) OR this.cOldRcFromDat <> this.oData.rc_fromdat)
				* Restore cursor curRatecode
				DELETE FOR EMPTY(oldrc) IN curRatecode
				BLANK FIELDS newrc ALL IN curRatecode
				Alert(GetLangText("MGRFINAN", "TXT_RCNAME_CHANGE_NOTALLOWED"))
				this.txtRateCode.SetFocus()
				RETURN .F.
			ENDIF
		ENDIF
		
		this.ProgressBar(.T.)
		
		SELECT curRatearti
		SET RELATION TO
		REPLACE ra_raid WITH NextID("RATEARTI") FOR ra_raid = 0 IN curRatearti
		
		this.Ratepropset("BLOCK_DOW1", {}, this.pgfRateCode.pagSettings.chkBlockMon.Value)
		this.Ratepropset("BLOCK_DOW2", {}, this.pgfRateCode.pagSettings.chkBlockTue.Value)
		this.Ratepropset("BLOCK_DOW3", {}, this.pgfRateCode.pagSettings.chkBlockWed.Value)
		this.Ratepropset("BLOCK_DOW4", {}, this.pgfRateCode.pagSettings.chkBlockThu.Value)
		this.Ratepropset("BLOCK_DOW5", {}, this.pgfRateCode.pagSettings.chkBlockFri.Value)
		this.Ratepropset("BLOCK_DOW6", {}, this.pgfRateCode.pagSettings.chkBlockSat.Value)
		this.Ratepropset("BLOCK_DOW7", {}, this.pgfRateCode.pagSettings.chkBlockSun.Value)
		
		this.Ratepropset("BLOCK_ARR_DOW1", {}, this.pgfRateCode.pagSettings.chkArrBlockMon.Value)
		this.Ratepropset("BLOCK_ARR_DOW2", {}, this.pgfRateCode.pagSettings.chkArrBlockTue.Value)
		this.Ratepropset("BLOCK_ARR_DOW3", {}, this.pgfRateCode.pagSettings.chkArrBlockWed.Value)
		this.Ratepropset("BLOCK_ARR_DOW4", {}, this.pgfRateCode.pagSettings.chkArrBlockThu.Value)
		this.Ratepropset("BLOCK_ARR_DOW5", {}, this.pgfRateCode.pagSettings.chkArrBlockFri.Value)
		this.Ratepropset("BLOCK_ARR_DOW6", {}, this.pgfRateCode.pagSettings.chkArrBlockSat.Value)
		this.Ratepropset("BLOCK_ARR_DOW7", {}, this.pgfRateCode.pagSettings.chkArrBlockSun.Value)
		
		this.Ratepropset("BLOCK_DEP_DOW1", {}, this.pgfRateCode.pagSettings.chkDepBlockMon.Value)
		this.Ratepropset("BLOCK_DEP_DOW2", {}, this.pgfRateCode.pagSettings.chkDepBlockTue.Value)
		this.Ratepropset("BLOCK_DEP_DOW3", {}, this.pgfRateCode.pagSettings.chkDepBlockWed.Value)
		this.Ratepropset("BLOCK_DEP_DOW4", {}, this.pgfRateCode.pagSettings.chkDepBlockThu.Value)
		this.Ratepropset("BLOCK_DEP_DOW5", {}, this.pgfRateCode.pagSettings.chkDepBlockFri.Value)
		this.Ratepropset("BLOCK_DEP_DOW6", {}, this.pgfRateCode.pagSettings.chkDepBlockSat.Value)
		this.Ratepropset("BLOCK_DEP_DOW7", {}, this.pgfRateCode.pagSettings.chkDepBlockSun.Value)
		
		this.Ratepropset("MIN_STAY_GAP", {}, this.pgfRateCode.pagSettings.txtMinStayGap.Value)
		this.Ratepropset("MIN_STAY_GAP_FI", {}, this.pgfRateCode.pagSettings.txtMinStayGapFilled.Value)
		this.Ratepropset("HRS_NI_PRICE_ID", {}, this.pgfRateCode.pagRates.txtHRSIDPrice.Value)
		this.Ratepropset("HRS_SEASON_ID", {}, this.pgfRateCode.pagRates.txtHRSIDSeason.Value)
		
		DELETE FOR EMPTY(rd_valuen) AND EMPTY(rd_valuel) AND EMPTY(rd_valuec) IN curRateprop
		this.oData.rc_weekend = IIF(this.pgfRateCode.pagRates.chkRateMon.Value, "1", " ") + ;
				IIF(this.pgfRateCode.pagRates.chkRateTue.Value, "1", " ") + IIF(this.pgfRateCode.pagRates.chkRateWed.Value, "1", " ") + ;
				IIF(this.pgfRateCode.pagRates.chkRateThu.Value, "1", " ") + IIF(this.pgfRateCode.pagRates.chkRateFri.Value, "1", " ") + ;
				IIF(this.pgfRateCode.pagRates.chkRateSat.Value, "1", " ") + IIF(this.pgfRateCode.pagRates.chkRateSun.Value, "1", " ")
		this.oData.rc_closarr = IIF(this.pgfRateCode.pagRates.chkArrMon.Value, "1", " ") + ;
				IIF(this.pgfRateCode.pagRates.chkArrTue.Value, "1", " ") + IIF(this.pgfRateCode.pagRates.chkArrWed.Value, "1", " ") + ;
				IIF(this.pgfRateCode.pagRates.chkArrThu.Value, "1", " ") + IIF(this.pgfRateCode.pagRates.chkArrFri.Value, "1", " ") + ;
				IIF(this.pgfRateCode.pagRates.chkArrSat.Value, "1", " ") + IIF(this.pgfRateCode.pagRates.chkArrSun.Value, "1", " ")
		IF this.oData.rc_rcsetid < 0
			this.oData.rc_rcsetid = NextId("RATESET")
		ENDIF
		IF thisform.oData.rc_alltdef
			SqlUpdate("ratecode",,"rc_alltdef = (0=1)")
		ENDIF
		*UNLOCK IN ratecode
		*FNDoEvents()
		
		* ratearti
		this.ocaratearti.cFilterClause = IIF(EMPTY(lcFilter), "0=1", "ra_ratecod IN ("+lcFilter+")")
		this.ocaratearti.cOrderBy = "ra_ratecod, ra_artityp, ra_artinum"
		this.ocaratearti.CursorFill()
		
		* rateprop
		this.ocarateprop.cFilterClause = IIF(EMPTY(lcFilter), "0=1", "rd_ratecod IN ("+lcFilter+")")
		this.ocarateprop.cOrderBy = "rd_ratecod"
		this.ocarateprop.CursorFill()
		
		* rcyield
		this.ocarcyield.cFilterClause = IIF(EMPTY(lcFilter), "0=1", "yr_ratecod IN ("+lcFilter+")")
		this.ocarcyield.cOrderBy = "yr_ratecod"
		this.ocarcyield.CursorFill()
		
		loLoggerRc = this.StructureForLogger()
		IF this.nMode = 1	&& EDIT_MODE
			this.UpdateForLogger(loLoggerRc.cAlias)
			loLoggerRc.SetOldVal()
		ENDIF
		
		loLoggerRa = CREATEOBJECT("ProcLogger")
		loLoggerRa.cTable = "ratearti"
		loLoggerRa.cKeyExp = "ra_ratecod+STR(ra_raid,10)"
		
		SELECT curRatecode
		SCAN
			IF EMPTY(newrc)
				DELETE FOR rc_ratecod+rc_roomtyp+DTOS(rc_fromdat)+rc_season = curRatecode.oldrc IN cadratecode
				loLoggerRa.SetNewVal(,.T.)
				SELECT cadRatearti
				SCAN FOR ra_ratecod = curRatecode.oldrc
					loLoggerRa.SetOldVal("cadRatearti")
					loLoggerRa.Save()
					IF NOT llUpdateSplits AND USED("curReservat")
						llUpdateSplits = DLocate("curReservat", "rr_ratecod = " + SqlCnv(ra_ratecod))
					ENDIF
					DELETE IN cadRatearti
				ENDSCAN
				DELETE FOR rd_ratecod = curRatecode.oldrc IN cadrateprop
				DELETE FOR yr_ratecod = curRatecode.oldrc IN cadrcyield
			ELSE
				this.oData.rc_key = newrc
				this.oData.rc_roomtyp = SUBSTR(newrc,11,4)
				=SEEK(this.oData.rc_roomtyp, "tblRoomTypeMulSel", "rt_roomtyp")
				this.oData.rc_citvwrl = tblRoomTypeMulSel.rc_citvwrl
				this.oData.rc_citcwcr = tblRoomTypeMulSel.rc_citcwcr
				this.oData.rc_citcwcp = tblRoomTypeMulSel.rc_citcwcp
				FOR i = 1 TO 5
					lcField = "rc_amnt" + TRANSFORM(i)
					this.oData.&lcField = tblRoomTypeMulSel.&lcField
					lcField = "rc_wamnt" + TRANSFORM(i)
					this.oData.&lcField = tblRoomTypeMulSel.&lcField
					IF i < 4
						lcField = "rc_camnt" + TRANSFORM(i)
						this.oData.&lcField = tblRoomTypeMulSel.&lcField
						lcField = "rc_wcamnt" + TRANSFORM(i)
						this.oData.&lcField = tblRoomTypeMulSel.&lcField
					ENDIF
				NEXT
				REPLACE ra_ratecod WITH curRatecode.newrc ALL IN curRatearti
				REPLACE rd_ratecod WITH curRatecode.newrc ALL IN curRateprop
				DO CASE
					CASE EMPTY(oldrc) && New ratecode for some roomtype
						INSERT INTO cadratecode FROM NAME this.oData
						REPLACE rc_rcid WITH 0 IN cadratecode
						SELECT curRatearti
						loLoggerRa.SetOldVal("cadRatearti",.T.)
						SCAN ALL
							SCATTER NAME loDataRa MEMO
							INSERT INTO cadratearti FROM NAME loDataRa
							loLoggerRa.SetNewVal()
							loLoggerRa.Save()
						ENDSCAN
						SELECT cadrateprop
						APPEND FROM DBF("curRateprop")
						REPLACE rd_rcpid WITH 0
					CASE dlocate("cadratecode","rc_key = " + sqlcnv(curRatecode.oldrc))
						SELECT cadratecode
						GATHER NAME this.oData FIELDS EXCEPT rc_rcid MEMO
						lnRecNo = RECNO()
						SCAN FOR rc_ratecod+rc_roomtyp+DTOS(rc_fromdat)+rc_season = curRatecode.newrc AND RECNO() <> lnRecNo
							DELETE
						ENDSCAN
						GO lnRecNo
		
						* Check ratearti child records for this ratecode
						SELECT curRatearti
						SCAN ALL
							SCATTER MEMO NAME loDataRa
							SELECT cadratearti
							DO CASE
								CASE dlocate("cadratearti","ra_ratecod = " + sqlcnv(curRatecode.newrc) + " AND ra_raid = " + sqlcnv(loDataRa.ra_raid))
									loLoggerRa.SetOldVal("cadRatearti")
								CASE dlocate("cadratearti","ra_ratecod = " + sqlcnv(curRatecode.oldrc) + " AND ra_raid = " + sqlcnv(loDataRa.ra_raid))
									* found record with old rc_key
									loLoggerRa.SetOldVal("cadRatearti")
								OTHERWISE
									APPEND BLANK
									loLoggerRa.SetOldVal("cadRatearti",.T.)
							ENDCASE
							GATHER NAME loDataRa MEMO
							loLoggerRa.SetNewVal()
							loLoggerRa.Save()
							IF NOT llUpdateSplits AND USED("curReservat")
								llUpdateSplits = DLocate("curReservat", "rr_ratecod = " + SqlCnv(ra_ratecod))
							ENDIF
						ENDSCAN
						* Now delete records, that are no more used
						SELECT cadratearti
						loLoggerRa.SetNewVal(,.T.)
						SCAN FOR ra_ratecod = curRatecode.newrc
							IF NOT dlocate("curRatearti","ra_ratecod = " + sqlcnv(curRatecode.newrc) + " AND ra_raid = " + sqlcnv(cadratearti.ra_raid))
								loLoggerRa.SetOldVal("cadRatearti")
								loLoggerRa.Save()
								IF NOT llUpdateSplits AND USED("curReservat")
									llUpdateSplits = DLocate("curReservat", "rr_ratecod = " + SqlCnv(ra_ratecod))
								ENDIF
								DELETE
							ENDIF
						ENDSCAN
		
						* Check rateprop child records for this ratecode
						SELECT curRateprop
						SCAN ALL
							SCATTER FIELDS EXCEPT rd_rcpid MEMO NAME loDataRd
							SELECT cadrateprop
							IF NOT dlocate("cadrateprop","rd_ratecod+rd_rcpname+DTOS(rd_valdate) = " + sqlcnv(curRatecode.newrc+PADR(loDataRd.rd_rcpname,15)+DTOS(loDataRd.rd_valdate)))
								IF dlocate("cadrateprop","rd_ratecod+rd_rcpname+DTOS(rd_valdate) = " + sqlcnv(curRatecode.oldrc+PADR(loDataRd.rd_rcpname,15)+DTOS(loDataRd.rd_valdate)))
									* found record with old rc_key
								ELSE
									APPEND BLANK
								ENDIF
							ENDIF
							GATHER NAME loDataRd MEMO
						ENDSCAN
						* Now delete records, that are no more used
						SELECT cadrateprop
						SCAN FOR rd_ratecod = curRatecode.newrc
							IF NOT dlocate("curRateprop","rd_ratecod+rd_rcpname+DTOS(rd_valdate) = " + sqlcnv(cadrateprop.rd_ratecod+PADR(cadrateprop.rd_rcpname,15)+DTOS(cadrateprop.rd_valdate)))
								DELETE
							ENDIF
						ENDSCAN
		
						* Check rcyield child records, when rc_key is changed
						SELECT cadrcyield
						SCAN FOR yr_ratecod = curRatecode.oldrc
							IF yr_ratecod <> curRatecode.newrc
								REPLACE yr_ratecod WITH curRatecode.newrc
							ENDIF
						ENDSCAN
					OTHERWISE
				ENDCASE
				SELECT cadrateprop
				SCAN FOR rd_rcpid = 0
					REPLACE rd_rcpid WITH NextId("RATEPROP")
				ENDSCAN
			ENDIF
		ENDSCAN
		
		SELECT cadratecode
		SCAN FOR EMPTY(rc_rcid)
			REPLACE rc_rcid WITH nextid("RTCODEID")
		ENDSCAN
		
		this.UpdateForLogger(loLoggerRc.cAlias)
		loLoggerRc.SetNewVal()
		loLoggerRc.Save(,@lcAction)
		llUpdateSplits = llUpdateSplits OR lcAction = "U"
		
		this.ocaratecode.DoTableUpdate(.T.,.T.)
		this.ocaratearti.DoTableUpdate(.T.,.T.)
		this.ocarateprop.DoTableUpdate(.T.,.T.)
		this.ocarcyield.DoTableUpdate(.T.,.T.)
		EndTransaction()
		
		IF this.nMode = 1 AND DLocate("curRatecode", "newrc # oldrc AND NOT (EMPTY(oldrc) OR EMPTY(newrc))")
			* Use common ratecode set data from first ratecode in set
			SELECT cadratecode
			GO TOP
		
			WAIT WINDOW NOWAIT GetLangText("COMMON", "T_PLEASEWAIT") + " (" + GetLangText("MGRFINAN", "TXT_RESERVAT") + ")"
		
			* Update rs_ratecod
			SELECT curRatecode
			SCAN FOR newrc # oldrc AND NOT (EMPTY(oldrc) OR EMPTY(newrc))
				lcOldPartRC = LEFT(oldrc,10)
				lcNewPartRC = LEFT(newrc,10)
		
				* But only, if rc_ratecod changed.
				IF lcOldPartRC<>lcNewPartRC
					TEXT TO lcSql TEXTMERGE NOSHOW PRETEXT 15
					SELECT DISTINCT rs_reserid, rs_ratecod 
						FROM resrate 
						INNER JOIN reservat ON rr_reserid = rs_reserid 
						WHERE rr_date = __MAX__(<<sqlcnv(SysDate(),.T.)>>,rs_arrdate) 
						AND rr_date BETWEEN __MAX__(rs_ratedat+1,<<sqlcnv(cadratecode.rc_fromdat,.T.)>>) AND <<sqlcnv(cadratecode.rc_todat-1,.T.)>> 
						AND rr_ratecod = <<sqlcnv(curRatecode.oldrc,.T.)>>
					ENDTEXT
					sqlcursor(lcSql,"curReservat")
					SELECT curReservat
					SCAN ALL
						lcRateCode = IIF(INLIST(LEFT(rs_ratecod,1),"!","*"),LEFT(rs_ratecod,1),"") + cadratecode.rc_ratecod
						sqlupdate("reservat","rs_reserid = " + sqlcnv(rs_reserid,.T.),"rs_ratecod = " + sqlcnv(lcRateCode,.T.))
					ENDSCAN
				ENDIF
			ENDSCAN
		
			* Update ratecode index unique key, but only for future, not yet posted charges!
			* This is done, to have RateCodePost function posting charges.
			* When rc_roomtyp changed from "*" into real roomtype (checkbox pgfRateCode.pagSettings.chkAll.Value = .T.), 
			* use first ratecode roomtype in set as new roomtype.
		
			WAIT WINDOW NOWAIT GetLangText("COMMON", "T_PLEASEWAIT") + " (" + GetLangText("MGRFINAN", "TXT_RESRATE") + ")"
		
			SELECT curRatecode
			SCAN FOR newrc # oldrc AND NOT (EMPTY(oldrc) OR EMPTY(newrc))
				TEXT TO lcSql TEXTMERGE NOSHOW PRETEXT 15
				SELECT ry_ryid 
					FROM resyield 
					INNER JOIN yioffer ON ry_yoid = yo_yoid 
					INNER JOIN reservat ON yo_rsid = rs_rsid 
					WHERE ry_date > rs_ratedat AND ry_ratecod = <<sqlcnv(curRatecode.oldrc,.T.)>> 
				ENDTEXT
				sqlcursor(lcSql,"curResyield")
				SELECT curResyield
				SCAN ALL
					sqlupdate("resyield","ry_ryid = " + sqlcnv(ry_ryid,.T.),"ry_ratecod = " + sqlcnv(curRatecode.newrc,.T.))
				ENDSCAN
				
				TEXT TO lcSql TEXTMERGE NOSHOW PRETEXT 15
				SELECT rr_rrid 
					FROM resrate 
					INNER JOIN reservat ON rs_reserid = rr_reserid 
					WHERE rr_date > rs_ratedat AND rr_ratecod = <<sqlcnv(curRatecode.oldrc,.T.)>> 
				ENDTEXT
				sqlcursor(lcSql,"curResrate")
				SELECT curResrate
				SCAN ALL
					sqlupdate("resrate","rr_rrid = " + sqlcnv(rr_rrid,.T.),"rr_ratecod = " + sqlcnv(curRatecode.newrc,.T.))
				ENDSCAN
		
				TEXT TO lcSql TEXTMERGE NOSHOW PRETEXT 15
				SELECT rl_rsid, rl_date, rl_raid, rl_rfid, rl_bqid
					FROM ressplit 
					INNER JOIN reservat ON rs_rsid = rl_rsid 
					WHERE rl_date > rs_ratedat AND rl_ratecod = <<sqlcnv(curRatecode.oldrc,.T.)>> 
				ENDTEXT
				sqlcursor(lcSql,"curRessplit")
				SELECT curRessplit
				SCAN ALL
					sqlupdate("ressplit",;
						"rl_rsid = " + sqlcnv(rl_rsid,.T.) + " AND rl_date = " + sqlcnv(rl_date,.T.) + " AND rl_raid = " + sqlcnv(rl_raid,.T.) + ;
						" AND rl_rfid = " + sqlcnv(rl_rfid,.T.) + " AND rl_bqid = " + sqlcnv(rl_bqid,.T.) ;
						,;
						"rl_ratecod = " + sqlcnv(curRatecode.newrc,.T.))
				ENDSCAN
			ENDSCAN
		
			IF NOT odbc()
				DoTableUpdate(.T., .T., "reservat")
				DoTableUpdate(.T., .T., "resrate")
				DoTableUpdate(.T., .T., "resyield")
				DoTableUpdate(.T., .T., "ressplit")
			ENDIF
			EndTransaction()
			WAIT CLEAR
		ENDIF
		
		IF llUpdateSplits
			this.UpdateExtraAndSplitPrices()
		ENDIF
		
		this.UpdateSeasonExtraArticles(this.oData.rc_ratecod)
		this.UpdateSeasoncCurSeasonsEvents()
		
		this.ProgressBar(.F.)
		
		this.nResult = 0&&RECNO("cadratecode")
		this.Release()
	ENDPROC

	PROCEDURE onroomtypchk
		LOCAL l_nArea, l_lAllRc, l_cFilter
		
		l_nArea = SELECT()
		l_lAllRc = this.pgfRateCode.pagSettings.chkAll.Value
		l_cFilter = IIF(l_lAllRc, "rt_roomtyp = '*'", "NVL(rt_mark,.F.)")
		SELECT tblRoomTypeMulSel
		SET FILTER TO
		REPLACE rt_mark WITH l_lAllRc FOR rt_roomtyp = '*'
		SET FILTER TO &l_cFilter
		this.pgfRateCode.pagSettings.edtRoomTyp.Value = this.RcSetRoomTypes()
		this.pgfRateCode.pagSettings.cmdRoomTyp.Enabled = (this.nMode <> 5) AND NOT l_lAllRc
		SELECT (l_nArea)
		this.pgfRateCode.pagRates.grdStdRates.Refresh()
		this.pgfRateCode.pagRates.grdSpcRates.Refresh()
	ENDPROC

	PROCEDURE onroomtypcmd
		LOCAL l_nArea, l_nRet
		LOCAL ARRAY l_aDefs(3, 4)
		l_nArea = SELECT()
		l_aDefs(1, 1) = "Get_rt_roomtyp(rt_roomtyp)"
		l_aDefs(1, 2) = 70
		l_aDefs(1, 3) = ""
		l_aDefs(1, 4) = "TXT"
		l_aDefs(1, 6) = .T.
		l_aDefs(2, 1) = "ALLTRIM(rt_lang)"
		l_aDefs(2, 2) = 150
		l_aDefs(2, 3) = ""
		l_aDefs(2, 4) = "TXT"
		l_aDefs(2, 6) = .T.
		IF thisform.oData.rc_citucwr
			DIMENSION l_aDefs(6, 4)
			l_aDefs(3, 1) = "rc_citcwcr"
			l_aDefs(3, 2) = 50
			l_aDefs(3, 3) = "Kor "
			l_aDefs(3, 4) = "TXT"
			l_aDefs(4, 1) = "rc_citcwcp"
			l_aDefs(4, 2) = 50
			l_aDefs(4, 3) = "Kor %"
			l_aDefs(4, 4) = "TXT"
			l_aDefs(5, 1) = "rc_citvwrl"
			l_aDefs(5, 2) = 50
			l_aDefs(5, 3) = "CW VRT"
			l_aDefs(5, 4) = "TXT"
			l_aDefs(6, 1) = "rt_mark"
			l_aDefs(6, 2) = 25
			l_aDefs(6, 3) = ""
			l_aDefs(6, 4) = "CHK"
		ELSE
			l_aDefs(3, 1) = "rt_mark"
			l_aDefs(3, 2) = 25
			l_aDefs(3, 3) = ""
			l_aDefs(3, 4) = "CHK"
		ENDIF
		this.RcGetRoomTypes()
		SET FILTER TO rt_roomtyp <> '*' IN tblRoomTypeMulSel
		GO TOP IN tblRoomTypeMulSel
		SELECT 0
		DO FORM forms\brwmulsel WITH "tblRoomTypeMulSel", l_aDefs TO l_nRet
		SET FILTER TO NVL(rt_mark,.F.) IN tblRoomTypeMulSel
		IF NOT EMPTY(l_nRet)
			this.pgfRateCode.pagSettings.edtRoomTyp.Value = this.RcSetRoomTypes()
		ENDIF
		SELECT(l_nArea)
	ENDPROC

	PROCEDURE onsplitdelete
		IF NOT this.pgfRateCode.pagSplit.cmdDelete.Enabled
			RETURN
		ENDIF
		
		SELECT curRatearti
		IF YesNo(GetLangText("MGRFINAN", "TA_DELETE") + CHR(13) + ;
				ALLTRIM(STR(ra_artinum)) + " " + ;
				ALLTRIM(c_lang))
			DELETE
		ENDIF
		
		GOTO TOP
		this.pgfRateCode.pagSplit.cmdEdit.Enabled = NOT EOF()
		this.pgfRateCode.pagSplit.cmdDelete.Enabled = NOT EOF()
		this.pgfRateCode.pagSplit.cmdHistory.Enabled = NOT EOF()
		this.pgfRateCode.pagSplit.cmdNote.Enabled = NOT EOF()
		
		this.pgfRateCode.pagSplit.grdSplit.Refresh()
		this.pgfRateCode.pagSplit.grdSplit.SetFocus()
		GOTO TOP
		this.pgfRateCode.pagSplit.grdSplit.DoScroll(3)
		this.pgfRateCode.pagSplit.grdSplit.DoScroll(2)
	ENDPROC

	PROCEDURE onsplitedit
		LOCAL l_oDataRA
		IF NOT this.pgfRateCode.pagSplit.cmdEdit.Enabled
			RETURN
		ENDIF
		DO FORM "forms\SelRateArtiForm" WITH EDIT_MODE, thisform.oData TO l_oDataRA
		SELECT curRatearti
		IF NOT ISNULL(l_oDataRA)
			GATHER NAME l_oDataRA MEMO
			this.SetUpdateSeasonExtraArticles()
		ENDIF
		GOTO RECNO()
		this.pgfRateCode.pagSplit.grdSplit.SetFocus()
	ENDPROC

	PROCEDURE onsplithistory
		LOCAL lcCaption, lcChanges
		
		IF NOT this.pgfRateCode.pagSplit.cmdHistory.Enabled
			RETURN
		ENDIF
		
		SELECT curRatearti
		
		IF EMPTY(ra_artinum)
			RETURN .F.
		ENDIF
		
		lcCaption = TRANSFORM(ra_artinum) + " " + ALLTRIM(c_lang)
		lcChanges = GetLoggerChanges('RATEARTI', 'ra_ratecod+STR(ra_raid,10)', STUFF(ra_ratecod,11,4,tblRoomTypeMulSel.rt_roomtyp)+STR(ra_raid,10))
		
		DO FORM Forms\RsHistor WITH lcChanges, lcCaption
	ENDPROC

	PROCEDURE onsplitnew
		LOCAL l_oDataRA
		IF NOT this.pgfRateCode.pagSplit.cmdNew.Enabled
			RETURN
		ENDIF
		DO FORM "forms\SelRateArtiForm" WITH NEW_MODE, thisform.oData TO l_oDataRA
		SELECT curRatearti
		IF NOT ISNULL(l_oDataRA)
			APPEND BLANK
			GATHER NAME l_oDataRA MEMO
			this.SetUpdateSeasonExtraArticles()
		ENDIF
		this.pgfRateCode.pagSplit.cmdEdit.Enabled = NOT EOF()
		this.pgfRateCode.pagSplit.cmdDelete.Enabled = NOT EOF()
		this.pgfRateCode.pagSplit.cmdHistory.Enabled = NOT EOF()
		this.pgfRateCode.pagSplit.cmdNote.Enabled = NOT EOF()
		this.Refresh()
		GOTO RECNO()
		this.pgfRateCode.pagSplit.grdSplit.SetFocus()
	ENDPROC

	PROCEDURE onsplitnote
		LOCAL lcCaption, lcChanges, lcPlainText, lcPrintText
		PRIVATE pcNote
		
		IF NOT this.pgfRateCode.pagSplit.CmdNote.Enabled
			RETURN
		ENDIF
		
		SELECT curRatearti
		
		IF EMPTY(ra_artinum)
			RETURN .F.
		ENDIF
		
		IF EMPTY(curRatearti.ra_note) AND curRatearti.ar_notecpy
			pcNote = curRatearti.ar_notef
		ELSE
			pcNote = curRatearti.ra_notef
		ENDIF
		
		lcCaption = GetLangText("CHKOUT2", "TXT_NOTE") + " " + GetLangText("MGRPLIST", "TXT_PERC_FOR") + " " + TRANSFORM(curRatearti.ra_artinum) + " " + ALLTRIM(curRatearti.c_lang)
		
		IF _screen.oGlobal.larticlenotewithformating
			DO FORM Forms\NoteFormFormat WITH pcNote, lcCaption TO pcNote
		ELSE
			DO FORM Forms\NoteForm WITH pcNote, lcCaption TO pcNote
		ENDIF
		
		IF NOT ISNULL(pcNote)
			lcPlainText = FNRemoveHTMLTag(pcNote)
			IF EMPTY(lcPlainText)
				lcPlainText = ""
				pcNote = ""
				lcPrintText = ""
			ELSE
				lcPrintText = FNReplaceHTMLTag(pcNote)
			ENDIF
			REPLACE ra_notef WITH pcNote, ra_note WITH lcPlainText, ra_notep WITH lcPrintText IN curRatearti
		ENDIF
		
		RETURN .T.
	ENDPROC

	PROCEDURE progressbar
		LPARAMETERS lp_lShow
		IF lp_lShow
			WAIT WINDOW this.cPleaseWaitCaption NOWAIT
		ELSE
			WAIT CLEAR
		ENDIF
		*this.oimgprogressbar.Visible = lp_lShow
		*FNDoEvents()
		
		RETURN .T.
	ENDPROC

	PROCEDURE ratepropset
		LPARAMETERS tcProperty, tdDate, tvValue
		LOCAL lcField, lcType
		
		lcType = VARTYPE(tvValue)
		DO CASE
			CASE lcType = "N"
				lcField = "rd_valuen"
			CASE lcType = "L"
				lcField = "rd_valuel"
			CASE lcType = "D"
				lcField = "rd_valdate"
			CASE lcType = "C"
				lcField = "rd_valuec"
			OTHERWISE
				RETURN
		ENDCASE
		
		DO CASE
			CASE DLocate("curRateprop", "rd_rcpname = " + SqlCnv(tcProperty) + " AND rd_valdate = " + SqlCnv(tdDate))
				REPLACE &lcField WITH tvValue IN curRateprop
			CASE NOT EMPTY(tvValue)
				INSERT INTO curRateprop (rd_rcpname, rd_valtype, rd_valdate, &lcField) ;
					VALUES (tcProperty, lcType, tdDate, tvValue)
			OTHERWISE
		ENDCASE
	ENDPROC

	PROCEDURE rccalendarenable
		LOCAL l_lEnabled
		
		IF this.nMode <> 5
			l_lEnabled = NOT EMPTY(this.pgfRateCode.pagSettings.dtxtFrom.Value) AND NOT EMPTY(this.pgfRateCode.pagSettings.dtxtTo.Value)
			WITH this.pgfRateCode.pagCalendar
				.dtxtFrom.Enabled = l_lEnabled
				.dtxtTo.Enabled = l_lEnabled
				.chkBlocked.Enabled = l_lEnabled
				.txtMinStay.Enabled = l_lEnabled
				.cmdApply.Enabled = l_lEnabled AND NOT EMPTY(.dtxtFrom.Value) AND NOT EMPTY(.dtxtTo.Value)
			ENDWITH
		ENDIF
		
		RETURN .T.
	ENDPROC

	PROCEDURE rcchkseason
		LPARAMETERS pcSeason, pdBegin, pdEnd
		IF EMPTY(pcSeason)
			RETURN .T.
		ELSE
			RETURN .NOT. EMPTY(Dlookup("season", "se_date >= " + ;
					SqlCnv(pdBegin,.T.) + " AND se_date < " + SqlCnv(pdEnd,.T.) + ;
					" AND se_season = "+ SqlCnv(pcSeason,.T.), "se_season"))
		ENDIF
	ENDPROC

	PROCEDURE rcgetcalendar
		LOCAL i, l_nLastDay, l_dDate, l_cValue
		
		GO TOP IN tblRateCodeDays
		BLANK FIELDS LIKE c_day* IN tblRateCodeDays
		l_nLastDay = LastDay(DATE(this.nCalendarYear, this.nCalendarMonth, 1))
		FOR i = 1 TO l_nLastDay
			l_dDate = DATE(this.nCalendarYear, this.nCalendarMonth, i)
			this.pgfRateCode.pagCalendar.grdCalendar.Columns(i).Header1.Caption = PADR(MyCDoW(l_dDate), 2) + CRLF + TRANSFORM(i)
			IF DLookUp("curRateprop", "rd_rcpname = [BLOCK_DATE     ] AND rd_valdate = " + SqlCnv(l_dDate), "rd_valuel")
				l_cValue = "X"
			ELSE
				l_cValue = ""
			ENDIF
			IF DLocate("curRateprop", "rd_rcpname = [MIN_STAY_DATE  ] AND rd_valdate = " + SqlCnv(l_dDate)) AND NOT EMPTY(curRateprop.rd_valuen)
				l_cValue = l_cValue + "N" + ALLTRIM(STR(curRateprop.rd_valuen, 3))
			ENDIF
			IF NOT EMPTY(l_cValue)
				REPLACE ("c_day"+TRANSFORM(i)) WITH l_cValue IN tblRateCodeDays
			ENDIF
		NEXT
		SKIP IN tblRateCodeDays
		this.pgfRateCode.pagCalendar.grdCalendar.Refresh()
	ENDPROC

	PROCEDURE rcgetroomtypes
		LOCAL l_nArea, l_curRatecode
		
		l_nArea = SELECT()
		
		TEXT TO l_cSql TEXTMERGE NOSHOW PRETEXT 2+8
		SELECT rc_roomtyp FROM ratecode
				WHERE rc_ratecod = <<SqlCnv(PADR(this.oData.rc_ratecod,10),.T.)>> AND rc_fromdat = <<SqlCnv(this.oData.rc_fromdat,.T.)>> AND
				rc_season = <<SqlCnv(PADR(this.oData.rc_season,1),.T.)>> AND rc_rcsetid <> <<SqlCnv(this.oData.rc_rcsetid,.T.)>>
		ENDTEXT
		l_curRatecode = SqlCursor(l_cSql)
		REPLACE rt_mark WITH NVL(rt_mark,.F.) ALL IN tblRoomTypeMulSel
		SCAN FOR SEEK(rc_roomtyp, "tblRoomTypeMulSel", "rt_roomtyp")
			REPLACE rt_mark WITH .NULL. IN tblRoomTypeMulSel
		ENDSCAN
		DClose(l_curRatecode)
		
		SELECT(l_nArea)
	ENDPROC

	PROCEDURE rclistroomtypes
	ENDPROC

	PROCEDURE rcloaddays
		LOCAL i, lcFields
		
		lcFields = ""
		FOR i = 1 TO 31
			lcFields = lcFields + IIF(EMPTY(lcFields), "", ", ") + "c_day" + TRANSFORM(i) + " C(7)"
		NEXT
		CREATE CURSOR tblRateCodeDays (&lcFields)
		APPEND BLANK
	ENDPROC

	PROCEDURE rcsetcalendardays
		LPARAMETERS tdFrom, tdTo, tlBlock, tnMinStay
		LOCAL ldDate
		
		ldDate = tdFrom
		DO WHILE ldDate <= tdTo
			this.Ratepropset("BLOCK_DATE", ldDate, tlBlock)
			this.Ratepropset("MIN_STAY_DATE", ldDate, tnMinStay)
			ldDate = ldDate + 1
		ENDDO
	ENDPROC

	PROCEDURE rcsetcalendarmonth
		LOCAL i, l_nDays
		
		WITH this.pgfRateCode.pagCalendar
			IF this.nCalendarMonth <> .spnMonth.Value
				DO CASE
					CASE .spnMonth.Value > 12
						.spnMonth.Value = 1
						this.nCalendarYear = this.nCalendarYear + 1
					CASE .spnMonth.Value < 1
						.spnMonth.Value = 12
						this.nCalendarYear = this.nCalendarYear - 1
				ENDCASE
				this.nCalendarMonth = .spnMonth.Value
				.txtMonth.Value = MyCMonth(this.nCalendarMonth) + " " + TRANSFORM(this.nCalendarYear)
		
				l_nDays = LastDay(DATE(this.nCalendarYear, this.nCalendarMonth, 27))
				FOR i = 1 TO l_nDays
					.grdCalendar.Columns(i).Visible = .T.
					.grdCalendar.Columns(i).Width = FLOOR(.grdCalendar.Width / l_nDays) - .grdCalendar.GridLineWidth
					.grdCalendar.Columns(i).cw = ROUND(.grdCalendar.Columns(i).Width / .grdCalendar.Width * .grdCalendar.w, 0)
				ENDFOR
				FOR i = l_nDays+1 TO 31
					.grdCalendar.Columns(i).Visible = .F.
				ENDFOR
				this.RcCalendarEnable()
				this.RcGetCalendar()
			ENDIF
		ENDWITH
	ENDPROC

	PROCEDURE rcsetroomtypes
		LOCAL l_nArea, l_cRoomTypes, l_lMatch
		
		IF this.pgfRateCode.pagSettings.chkAll.Value
			l_cRoomTypes = "*"
		ELSE
			l_nArea = SELECT()
		
			l_cRoomTypes = ""
			SELECT tblRoomTypeMulSel
			SCAN FOR NVL(rt_mark,.F.)
				l_cRoomTypes = l_cRoomTypes + IIF(EMPTY(l_cRoomTypes), "", ", ") + Get_rt_roomtyp(rt_roomtyp)
			ENDSCAN
		
			SELECT(l_nArea)
		ENDIF
		
		RETURN l_cRoomTypes
	ENDPROC

	PROCEDURE setcontrolsource
		LOCAL lcSql
		
		this.pgfNote.pagNote.edtNote.ControlSource = [thisform.oData.rc_note]
		this.txtRateCode.ControlSource = [thisform.oData.rc_ratecod]
		this.txtDesc.ControlSource = [thisform.oData.rc_Lang] + g_Langnum
		this.txtDescSA.ControlSource = [thisform.oData.rc_salang] + g_Langnum
		this.chkSaOn.ControlSource = [thisform.oData.rc_sagroup]
		this.chkInactive.ControlSource = [thisform.oData.rc_inactiv]
		this.chkCompl.ControlSource = [thisform.oData.rc_complim]
		this.chkAltDef.ControlSource = [thisform.oData.rc_alltdef]
		this.chkAlertByCXL.ControlSource = [thisform.oData.rc_cxlmsg]
		this.txtAlertByCXL.ControlSource = [thisform.oData.rc_cxltxt]
		this.pgfNote.pagNote.chkCopyNote.ControlSource = [thisform.oData.rc_notecp]
		this.pgfNote.pagCitadelMobile.edtDescription.ControlSource = [thisform.oData.rc_citmob] + g_Langnum
		this.pgfNote.pagCitadelMobile.chkAllow.ControlSource = [thisform.oData.rc_citmobi]
		this.pgfNote.pagCitadelMobile.chkCitWebPrices.ControlSource = [thisform.oData.rc_citucwr]
		this.pgfNote.pagCitadelMobile.chkShowSplits.ControlSource = [thisform.oData.rc_citmoss]
		this.pgfNote.pagCitadelMobile.txtExternalID.ControlSource = [thisform.oData.rc_citexid]
		this.pgfNote.pagCitadelMobile.chkShowOnEmailConformation.ControlSource = [thisform.oData.rc_citmsre]
		
		* Settings page
		this.pgfRateCode.pagSettings.dtxtFrom.ControlSource = [thisform.oData.rc_fromdat]
		this.pgfRateCode.pagSettings.dtxtTo.ControlSource = [thisform.oData.rc_todat]
		this.pgfRateCode.pagSettings.txtSeason.ControlSource = [thisform.oData.rc_season]
		this.pgfRateCode.pagSettings.txtMinNgts.ControlSource = [thisform.oData.rc_minstay]
		this.pgfRateCode.pagSettings.txtmaxnights.ControlSource = [thisform.oData.rc_maxstay]
		this.pgfRateCode.pagSettings.cboGroupCode.ControlSource = [thisform.oData.rc_group]
		this.pgfRateCode.pagSettings.cboPayMethod.ControlSource = [thisform.oData.rc_paymeth]
		this.pgfRateCode.pagSettings.cboPayMeth.ControlSource = [thisform.oData.rc_paynum]
		this.pgfRateCode.pagSettings.cboMarkCode.ControlSource = [thisform.oData.rc_market]
		this.pgfRateCode.pagSettings.cboSourceCode.ControlSource = [thisform.oData.rc_source]
		
		TEXT TO lcSql TEXTMERGE NOSHOW PRETEXT 2+8
		SELECT ct_lang<<g_langnum>> AS ct_lang, ct_colorid, ct_color 
			FROM citcolor 
			WHERE ct_label = 'RATECODE' 
			ORDER BY 1
		ENDTEXT
		SqlCursor(lcSql,"curColor",,,,,,.T.)
		SELECT curcolor
		APPEND BLANK
		
		this.pgfRateCode.pagSettings.cboColor.RowSourceType = 6
		this.pgfRateCode.pagSettings.cboColor.RowSource = "curcolor.ct_lang, ct_colorid"
		this.pgfRateCode.pagSettings.cboColor.ControlSource = [thisform.oData.rc_colorid]
		IF NOT EMPTY(this.oData.rc_colorid) AND DLocate("curcolor", "ct_colorid = " + SqlCnv(this.oData.rc_colorid))
			this.pgfRateCode.pagSettings.cboColor.InteractiveChange()
		ENDIF
		this.pgfRateCode.pagSettings.opgPeriod.ControlSource = [thisform.oData.rc_period]
		this.pgfRateCode.pagSettings.opgRhythm.ControlSource = [thisform.oData.rc_rhytm]
		this.pgfRateCode.pagSettings.txtPrcdur.ControlSource = [thisform.oData.rc_prcdur]
		this.pgfRateCode.pagSettings.txtOnDay.ControlSource = [thisform.oData.rc_moposon]
		IF this.nMode <> 5 && READONLY_MODE
			this.pgfRateCode.pagSettings.opgPeriod.InteractiveChange()
		ENDIF
		
		this.pgfRateCode.pagSettings.chkBlockMon.Value = DLookUp("curRateprop", "rd_rcpname = [BLOCK_DOW1     ]", "rd_valuel")
		this.pgfRateCode.pagSettings.chkBlockTue.Value = DLookUp("curRateprop", "rd_rcpname = [BLOCK_DOW2     ]", "rd_valuel")
		this.pgfRateCode.pagSettings.chkBlockWed.Value = DLookUp("curRateprop", "rd_rcpname = [BLOCK_DOW3     ]", "rd_valuel")
		this.pgfRateCode.pagSettings.chkBlockThu.Value = DLookUp("curRateprop", "rd_rcpname = [BLOCK_DOW4     ]", "rd_valuel")
		this.pgfRateCode.pagSettings.chkBlockFri.Value = DLookUp("curRateprop", "rd_rcpname = [BLOCK_DOW5     ]", "rd_valuel")
		this.pgfRateCode.pagSettings.chkBlockSat.Value = DLookUp("curRateprop", "rd_rcpname = [BLOCK_DOW6     ]", "rd_valuel")
		this.pgfRateCode.pagSettings.chkBlockSun.Value = DLookUp("curRateprop", "rd_rcpname = [BLOCK_DOW7     ]", "rd_valuel")
		
		this.pgfRateCode.pagSettings.chkArrBlockMon.Value = DLookUp("curRateprop", "rd_rcpname = [BLOCK_ARR_DOW1 ]", "rd_valuel")
		this.pgfRateCode.pagSettings.chkArrBlockTue.Value = DLookUp("curRateprop", "rd_rcpname = [BLOCK_ARR_DOW2 ]", "rd_valuel")
		this.pgfRateCode.pagSettings.chkArrBlockWed.Value = DLookUp("curRateprop", "rd_rcpname = [BLOCK_ARR_DOW3 ]", "rd_valuel")
		this.pgfRateCode.pagSettings.chkArrBlockThu.Value = DLookUp("curRateprop", "rd_rcpname = [BLOCK_ARR_DOW4 ]", "rd_valuel")
		this.pgfRateCode.pagSettings.chkArrBlockFri.Value = DLookUp("curRateprop", "rd_rcpname = [BLOCK_ARR_DOW5 ]", "rd_valuel")
		this.pgfRateCode.pagSettings.chkArrBlockSat.Value = DLookUp("curRateprop", "rd_rcpname = [BLOCK_ARR_DOW6 ]", "rd_valuel")
		this.pgfRateCode.pagSettings.chkArrBlockSun.Value = DLookUp("curRateprop", "rd_rcpname = [BLOCK_ARR_DOW7 ]", "rd_valuel")
		
		this.pgfRateCode.pagSettings.chkDepBlockMon.Value = DLookUp("curRateprop", "rd_rcpname = [BLOCK_DEP_DOW1 ]", "rd_valuel")
		this.pgfRateCode.pagSettings.chkDepBlockTue.Value = DLookUp("curRateprop", "rd_rcpname = [BLOCK_DEP_DOW2 ]", "rd_valuel")
		this.pgfRateCode.pagSettings.chkDepBlockWed.Value = DLookUp("curRateprop", "rd_rcpname = [BLOCK_DEP_DOW3 ]", "rd_valuel")
		this.pgfRateCode.pagSettings.chkDepBlockThu.Value = DLookUp("curRateprop", "rd_rcpname = [BLOCK_DEP_DOW4 ]", "rd_valuel")
		this.pgfRateCode.pagSettings.chkDepBlockFri.Value = DLookUp("curRateprop", "rd_rcpname = [BLOCK_DEP_DOW5 ]", "rd_valuel")
		this.pgfRateCode.pagSettings.chkDepBlockSat.Value = DLookUp("curRateprop", "rd_rcpname = [BLOCK_DEP_DOW6 ]", "rd_valuel")
		this.pgfRateCode.pagSettings.chkDepBlockSun.Value = DLookUp("curRateprop", "rd_rcpname = [BLOCK_DEP_DOW7 ]", "rd_valuel")
		
		this.pgfRateCode.pagSettings.txtMinStayGap.Value = DLookUp("curRateprop", "rd_rcpname = [MIN_STAY_GAP   ]", "rd_valuen")
		this.pgfRateCode.pagSettings.txtMinStayGapFilled.Value = DLookUp("curRateprop", "rd_rcpname = [MIN_STAY_GAP_FI]", "rd_valuen")
		
		* Rates page
		this.pgfRateCode.pagRates.txtFixRate.ControlSource = [thisform.oData.rc_base]
		this.pgfRateCode.pagRates.txtwFixRate.ControlSource = [thisform.oData.rc_wbase]
		this.pgfRateCode.pagRates.txtHRSIDPrice.Value = DLookUp("curRateprop", "rd_rcpname = [HRS_NI_PRICE_ID]", "rd_valuen")
		this.pgfRateCode.pagRates.txtHRSIDSeason.Value = DLookUp("curRateprop", "rd_rcpname = [HRS_SEASON_ID]", "rd_valuen")
		this.pgfRateCode.pagRates.txtMinRate.ControlSource = [thisform.oData.rc_minrate]
		this.pgfRateCode.pagRates.txtMinRateByPerson.ControlSource = [thisform.oData.rc_mratepr]
		this.pgfRateCode.pagRates.txtrc_adperra.ControlSource = [thisform.oData.rc_adperra]
		this.pgfRateCode.pagRates.txtrc_adperid.ControlSource = [thisform.oData.rc_adperid]
		this.pgfRateCode.pagRates.chkNoExtra.ControlSource = [thisform.oData.rc_noextr]
		this.pgfRateCode.pagRates.chkRateMon.Value = SUBSTR(this.oData.rc_weekend, 1, 1) = "1"
		this.pgfRateCode.pagRates.chkRateTue.Value = SUBSTR(this.oData.rc_weekend, 2, 1) = "1"
		this.pgfRateCode.pagRates.chkRateWed.Value = SUBSTR(this.oData.rc_weekend, 3, 1) = "1"
		this.pgfRateCode.pagRates.chkRateThu.Value = SUBSTR(this.oData.rc_weekend, 4, 1) = "1"
		this.pgfRateCode.pagRates.chkRateFri.Value = SUBSTR(this.oData.rc_weekend, 5, 1) = "1"
		this.pgfRateCode.pagRates.chkRateSat.Value = SUBSTR(this.oData.rc_weekend, 6, 1) = "1"
		this.pgfRateCode.pagRates.chkRateSun.Value = SUBSTR(this.oData.rc_weekend, 7, 1) = "1"
		this.pgfRateCode.pagRates.chkArrMon.Value = SUBSTR(this.oData.rc_closarr, 1, 1) = "1"
		this.pgfRateCode.pagRates.chkArrTue.Value = SUBSTR(this.oData.rc_closarr, 2, 1) = "1"
		this.pgfRateCode.pagRates.chkArrWed.Value = SUBSTR(this.oData.rc_closarr, 3, 1) = "1"
		this.pgfRateCode.pagRates.chkArrThu.Value = SUBSTR(this.oData.rc_closarr, 4, 1) = "1"
		this.pgfRateCode.pagRates.chkArrFri.Value = SUBSTR(this.oData.rc_closarr, 5, 1) = "1"
		this.pgfRateCode.pagRates.chkArrSat.Value = SUBSTR(this.oData.rc_closarr, 6, 1) = "1"
		this.pgfRateCode.pagRates.chkArrSun.Value = SUBSTR(this.oData.rc_closarr, 7, 1) = "1"
		this.RcGetRoomTypes()
		this.pgfRateCode.pagSettings.chkAll.Value = (this.oData.rc_roomtyp = "*")
		this.cOldRcRoomTyp = this.pgfRateCode.pagSettings.edtRoomTyp.Value
		
		* Split page
		this.pgfRateCode.pagSplit.grdSplit.SetGrid("curRatearti")
		
		* Calendar page
		this.pgfRateCode.pagCalendar.dtxtFrom.Value = MIN(MAX(SysDate(), thisform.oData.rc_fromdat), thisform.oData.rc_todat)
		this.pgfRateCode.pagCalendar.dtxtTo.Value = MIN(MAX(SysDate(), thisform.oData.rc_fromdat), thisform.oData.rc_todat)
		this.nCalendarYear = YEAR(SysDate())
		this.pgfRateCode.pagCalendar.spnMonth.Value = MONTH(SysDate())
		this.RcSetCalendarMonth()
	ENDPROC

	PROCEDURE setupdateseasonextraarticles
		* Used together with this.lShouldUpdateSeasonExtraArticles property.
		* When this.lShouldUpdateSeasonExtraArticles is set to .T., copy price of common extra article for sc_season = "A" to other seasons
		* for selected ratecode.
		
		IF NOT _screen.oGlobal.lAgency
			RETURN .T.
		ENDIF
		
		IF this.oData.rc_season <> ' '
			RETURN .T.
		ENDIF
		
		IF this.lShouldUpdateSeasonExtraArticles
			RETURN .T.
		ENDIF
		
		this.lShouldUpdateSeasonExtraArticles = .T.
		
		RETURN .T.
	ENDPROC

	PROCEDURE structureforlogger
		LOCAL loLoggerRc
		
		loLoggerRc = CREATEOBJECT("ProcLogger")
		loLoggerRc.cTable = "ratecode"
		loLoggerRc.cKeyExp = "rc_rcsetid"
		loLoggerRc.cAlias = SYS(2015)
		
		SELECT * FROM cadratecode WHERE 0=1 INTO CURSOR (loLoggerRc.cAlias) READWRITE
		ALTER TABLE (loLoggerRc.cAlias) DROP rc_key
		ALTER TABLE (loLoggerRc.cAlias) DROP rc_rcid
		ALTER TABLE (loLoggerRc.cAlias) ALTER rc_roomtyp C(254)
		ALTER TABLE (loLoggerRc.cAlias) ALTER rc_amnt1 C(254)
		ALTER TABLE (loLoggerRc.cAlias) ALTER rc_amnt2 C(254)
		ALTER TABLE (loLoggerRc.cAlias) ALTER rc_amnt3 C(254)
		ALTER TABLE (loLoggerRc.cAlias) ALTER rc_amnt4 C(254)
		ALTER TABLE (loLoggerRc.cAlias) ALTER rc_amnt5 C(254)
		ALTER TABLE (loLoggerRc.cAlias) ALTER rc_camnt1 C(254)
		ALTER TABLE (loLoggerRc.cAlias) ALTER rc_camnt2 C(254)
		ALTER TABLE (loLoggerRc.cAlias) ALTER rc_camnt3 C(254)
		ALTER TABLE (loLoggerRc.cAlias) ALTER rc_wamnt1 C(254)
		ALTER TABLE (loLoggerRc.cAlias) ALTER rc_wamnt2 C(254)
		ALTER TABLE (loLoggerRc.cAlias) ALTER rc_wamnt3 C(254)
		ALTER TABLE (loLoggerRc.cAlias) ALTER rc_wamnt4 C(254)
		ALTER TABLE (loLoggerRc.cAlias) ALTER rc_wamnt5 C(254)
		ALTER TABLE (loLoggerRc.cAlias) ALTER rc_wcamnt1 C(254)
		ALTER TABLE (loLoggerRc.cAlias) ALTER rc_wcamnt2 C(254)
		ALTER TABLE (loLoggerRc.cAlias) ALTER rc_wcamnt3 C(254)
		APPEND BLANK
		
		RETURN loLoggerRc
	ENDPROC

	PROCEDURE Unload
		IF TYPE("this.oParams.nNewRateSetID")="N"
			this.oParams.nNewRateSetID = this.oData.rc_rcsetid
		ENDIF
		this.oParams = .NULL.
		RETURN this.oData.rc_rcsetid
	ENDPROC

	PROCEDURE updateextraandsplitprices
		* Mark reservations, for which must recalculate price
		
		IF this.nMode <> 1 && NOT EDIT MODE
			RETURN .T.
		ENDIF
		
		rrupdateextraandsplitprices(this.oData.rc_rcsetid)
		
		RETURN .T.
	ENDPROC

	PROCEDURE updateforlogger
		LPARAMETERS tcurLogger
		LOCAL i, loDataRc, lcField, llSet
		
		SELECT cadratecode
		SCAN FOR rc_rcsetid = this.oData.rc_rcsetid
			IF NOT llSet
				SCATTER MEMO NAME loDataRc
			ENDIF
			loDataRc.rc_roomtyp = IIF(llSet, loDataRc.rc_roomtyp + ";", "") + IIF(rc_roomtyp = "*   ", "*", Get_rt_roomtyp(rc_roomtyp))
			FOR i = 1 TO 5
				lcField = "rc_amnt" + TRANSFORM(i)
				loDataRc.&lcField = IIF(llSet, loDataRc.&lcField + ";", "") + TRANSFORM(&lcField)
				lcField = "rc_wamnt" + TRANSFORM(i)
				loDataRc.&lcField = IIF(llSet, loDataRc.&lcField + ";", "") + TRANSFORM(&lcField)
				IF i < 4
					lcField = "rc_camnt" + TRANSFORM(i)
					loDataRc.&lcField = IIF(llSet, loDataRc.&lcField + ";", "") + TRANSFORM(&lcField)
					lcField = "rc_wcamnt" + TRANSFORM(i)
					loDataRc.&lcField = IIF(llSet, loDataRc.&lcField + ";", "") + TRANSFORM(&lcField)
				ENDIF
			NEXT
			llSet = .T.
		ENDSCAN
		IF VARTYPE(loDataRc) = "O"
			SELECT &tcurLogger
			GATHER NAME loDataRc
		ENDIF
	ENDPROC

	PROCEDURE updateseasonccurseasonsevents
		* In agency mode for global prices for some room change Aufbettungsabschlag in all seasons
		IF _screen.oGlobal.lAgency AND this.oData.rc_season == ' '
			LOCAL l_lSomethingUpdated
			l_lSomethingUpdated = .F.
			IF NOT EMPTY(this.oData.rc_adperra)
				SELECT ratecode
				SCAN FOR rc_ratecod = this.oData.rc_ratecod AND rc_season <> ' '
					IF rc_adperra <> this.oData.rc_adperra
						IF NOT l_lSomethingUpdated
							l_lSomethingUpdated = .T.
						ENDIF
						REPLACE rc_adperra WITH this.oData.rc_adperra
					ENDIF
				ENDSCAN
				IF l_lSomethingUpdated 
					DoTableUpdate(.T., .T., "ratecode")
				ENDIF
			ENDIF
		ENDIF
	ENDPROC

	PROCEDURE updateseasonextraarticles
		LPARAMETERS lp_cRateCode
		
		LOCAL l_nSelect
		
		IF NOT this.lShouldUpdateSeasonExtraArticles
			RETURN .T.
		ENDIF
		
		* Runs only in agency mode!
		
		l_nSelect = SELECT()
		
		SELECT rc_ratecod, rc_fromdat, rc_season ;
			FROM room ;
			INNER JOIN ratecode ON rm_rmname = rc_ratecod ;
			WHERE rc_ratecod = lp_cRateCode AND rm_user8 <> '   ' AND NOT rm_inactiv AND rc_season <> ' ' ;
			ORDER BY rc_ratecod, rc_season ;
			INTO CURSOR cse
		
		SELECT rc_ratecod, CAST(rm_user8 AS Integer) AS catid, ratearti.* ;
			FROM room ;
			INNER JOIN ratecode ON rm_rmname = rc_ratecod ;
			INNER JOIN ratearti ON rc_ratecod+rc_roomtyp+DTOS(rc_fromdat)+rc_season = ra_ratecod+STR(ra_raid,10) ;
			WHERE rc_ratecod = lp_cRateCode AND rm_user8 <> '   ' AND NOT rm_inactiv AND rc_season = ' ' AND ra_user1 = 'Ja' AND ra_user3 <> '    ' AND ra_artityp = 3 ;
			INTO CURSOR cra
		
		SCAN ALL
			SCATTER NAME l_oData
			SELECT cse
			SCAN FOR rc_ratecod == cra.rc_ratecod
				l_cNewRC = LEFT(cra.ra_ratecod,14)+DTOS(cse.rc_fromdat)+cse.rc_season
				SELECT ratearti
				l_cFor = "ra_artinum = " + TRANSFORM(l_oData.ra_artinum) + " AND ra_ratecod == '" + l_cNewRC + "'"
				LOCATE FOR &l_cFor
				l_oData.ra_user3 = ""
				IF FOUND()
					GATHER NAME l_oData FIELDS EXCEPT ra_ratecod, ra_raid
				ELSE
					l_oData.ra_ratecod = l_cNewRC
					l_oData.ra_raid = NextId("RATEARTI")
					INSERT INTO ratearti FROM NAME l_oData
				ENDIF
			ENDSCAN
		ENDSCAN
		
		dclose("cse")
		dclose("cra")
		
		DoTableUpdate(.T., .T., "ratearti")
		
		SELECT (l_nSelect)
		
		RETURN .T.
	ENDPROC

	PROCEDURE cmdCancel.Click
		thisform.nResult = 0
		thisform.Release()
	ENDPROC

	PROCEDURE cmdOK.Click
		thisform.OnOk()
	ENDPROC

	PROCEDURE pgfNote.pagCitadelMobile.edtDescription.KeyPress
		LPARAMETERS nKeyCode, nShiftAltCtrl
		
		IF nKeyCode = 145 AND nShiftAltCtrl = 2
			LOCAL lcControlSource
			lcControlSource = this.ControlSource
			&lcControlSource = this.Value
			DO FORM "forms\DescForm" WITH "rc_citmob", GetText("MYLISTS","TXT_PRWINDOW"), thisform.oData,,, "tEditbox"
			NODEFAULT
		ENDIF
	ENDPROC

	PROCEDURE pgfRateCode.pagCalendar.Activate
		this.Refresh()
	ENDPROC

	PROCEDURE pgfRateCode.pagCalendar.cmdApply.Click
		IF this.Parent.dtxtTo.Value <= thisform.pgfRateCode.pagSettings.dtxtTo.Value AND ;
				this.Parent.dtxtFrom.Value >= thisform.pgfRateCode.pagSettings.dtxtFrom.Value
			thisform.RcSetCalendarDays(this.Parent.dtxtFrom.Value, ;
					this.Parent.dtxtTo.Value, this.Parent.chkBlocked.Value, ;
					this.Parent.txtMinStay.Value)
			thisform.RcGetCalendar()
			this.Parent.grdCalendar.Refresh()
			SKIP IN tblRateCodeDays
		ENDIF
	ENDPROC

	PROCEDURE pgfRateCode.pagCalendar.dtxtFrom.Valid
		IF EMPTY(this.Value) OR this.Value < thisform.pgfRateCode.pagSettings.dtxtFrom.Value
			RETURN .F.
		ENDIF
		thisform.RcCalendarEnable()
	ENDPROC

	PROCEDURE pgfRateCode.pagCalendar.dtxtTo.Valid
		IF NOT this.lDatePickerActive AND (EMPTY(this.Value) OR (this.Value < this.Parent.dtxtFrom.Value))
			RETURN .F.
		ENDIF
		thisform.RcCalendarEnable()
	ENDPROC

	PROCEDURE pgfRateCode.pagCalendar.Init
		LOCAL i
		
		SELECT tblRateCodeDays
		WITH this
			.grdCalendar.ColumnCount = 31
			.grdCalendar.RecordSource = "tblRateCodeDays"
			FOR i = 1 TO 31
				.grdCalendar.Columns(i).Header1.WordWrap = .T.
				.grdCalendar.Columns(i).Header1.Alignment = 2
				.grdCalendar.Columns(i).Movable = .F.
				.grdCalendar.Columns(i).Alignment = 2
			NEXT
		ENDWITH
	ENDPROC

	PROCEDURE pgfRateCode.pagCalendar.spnMonth.InteractiveChange
		thisform.RcSetCalendarMonth()
	ENDPROC

	PROCEDURE pgfRateCode.pagCalendar.spnMonth.Valid
		thisform.RcSetCalendarMonth()
	ENDPROC

	PROCEDURE pgfRateCode.pagCalendar.txtMonth.Init
		DODEFAULT()
		* before grdCalendar.Init()
		SELECT 0
	ENDPROC

	PROCEDURE pgfRateCode.pagRates.Activate
		GO TOP IN tblRoomTypeMulSel
		this.Refresh()
	ENDPROC

	PROCEDURE pgfRateCode.pagRates.Init
		LOCAL l_nChildCats
		
		l_nChildCats = LstCount(_screen.oGlobal.oparam.pa_childs)
		
		SELECT tblRoomTypeMulSel
		WITH this.grdStdRates
			.grcRoomtype.Header1.Caption = GetLangText("MGRFINAN", "TXT_RCROOMTYP")
			.grcAmnt1.Header1.Caption = "1 " + GetRaMulti(1)
			.grcAmnt2.Header1.Caption = "2 " + GetRaMulti(1)
			.grcAmnt3.Header1.Caption = "3 " + GetRaMulti(1)
			.grcAmnt4.Header1.Caption = "4 " + GetRaMulti(1)
			.grcAmnt5.Header1.Caption = "5 " + GetRaMulti(1)
			.grcCamnt1.Header1.Caption = GetRaMulti(3)
			.grcCamnt2.Header1.Caption = GetRaMulti(5)
			.grcCamnt3.Header1.Caption = GetRaMulti(6)
			.grcCamnt1.Visible = (l_nChildCats > 0)
			.grcCamnt2.Visible = (l_nChildCats > 1)
			.grcCamnt3.Visible = (l_nChildCats > 2)
			.RecordSource = "tblRoomTypeMulSel"
			.grcRoomtype.ControlSource = "EVL(Get_rt_roomtyp(rt_roomtyp),'*')"+IIF(_screen.oGlobal.lspecialfiscalprintermode,"+ ' ('+TRANSFORM(rc_rcid)+')'","")
			.grcAmnt1.ControlSource = "rc_amnt1"
			.grcAmnt2.ControlSource = "rc_amnt2"
			.grcAmnt3.ControlSource = "rc_amnt3"
			.grcAmnt4.ControlSource = "rc_amnt4"
			.grcAmnt5.ControlSource = "rc_amnt5"
			.grcCamnt1.ControlSource = "rc_camnt1"
			.grcCamnt2.ControlSource = "rc_camnt2"
			.grcCamnt3.ControlSource = "rc_camnt3"
			.SetAll("Movable", .F.)
		ENDWITH
		
		WITH this.grdSpcRates
			.grcRoomtype.Header1.Caption = GetLangText("MGRFINAN", "TXT_RCROOMTYP")
			.grcAmnt1.Header1.Caption = "1 " + GetRaMulti(1)
			.grcAmnt2.Header1.Caption = "2 " + GetRaMulti(1)
			.grcAmnt3.Header1.Caption = "3 " + GetRaMulti(1)
			.grcAmnt4.Header1.Caption = "4 " + GetRaMulti(1)
			.grcAmnt5.Header1.Caption = "5 " + GetRaMulti(1)
			.grcCamnt1.Header1.Caption = GetRaMulti(3)
			.grcCamnt2.Header1.Caption = GetRaMulti(5)
			.grcCamnt3.Header1.Caption = GetRaMulti(6)
			.grcCamnt1.Visible = (l_nChildCats > 0)
			.grcCamnt2.Visible = (l_nChildCats > 1)
			.grcCamnt3.Visible = (l_nChildCats > 2)
			.RecordSource = "tblRoomTypeMulSel"
			.grcRoomtype.ControlSource = "EVL(Get_rt_roomtyp(rt_roomtyp),'*')"
			.grcAmnt1.ControlSource = "rc_wamnt1"
			.grcAmnt2.ControlSource = "rc_wamnt2"
			.grcAmnt3.ControlSource = "rc_wamnt3"
			.grcAmnt4.ControlSource = "rc_wamnt4"
			.grcAmnt5.ControlSource = "rc_wamnt5"
			.grcCamnt1.ControlSource = "rc_wcamnt1"
			.grcCamnt2.ControlSource = "rc_wcamnt2"
			.grcCamnt3.ControlSource = "rc_wcamnt3"
			.SetAll("Movable", .F.)
		ENDWITH
		
	ENDPROC

	PROCEDURE pgfRateCode.pagSettings.Activate
		this.Refresh()
	ENDPROC

	PROCEDURE pgfRateCode.pagSettings.cboColor.InteractiveChange
		this.BackColor = IIF(EMPTY(curcolor.ct_colorid), this.Parent.BackColor, curcolor.ct_color)
		this.ForeColor = this.BackColor
		this.SelectedBackColor = this.BackColor
		this.SelectedForeColor = this.BackColor
	ENDPROC

	PROCEDURE pgfRateCode.pagSettings.cboColor.Valid
		thisform.oData.rc_colorid = INT(this.Value)
	ENDPROC

	PROCEDURE pgfRateCode.pagSettings.chkAll.InteractiveChange
		thisform.OnRoomTypChk()
		*thisform.oData.rc_rcsetid = -99
	ENDPROC

	PROCEDURE pgfRateCode.pagSettings.chkAll.ProgrammaticChange
		thisform.OnRoomTypChk()
	ENDPROC

	PROCEDURE pgfRateCode.pagSettings.cmdRoomTyp.Click
		thisform.OnRoomTypCmd()
	ENDPROC

	PROCEDURE pgfRateCode.pagSettings.dtxtTo.Valid
		IF NOT this.lDatePickerActive AND NOT EMPTY(this.Value) AND this.Value < thisform.pgfRateCode.pagSettings.dtxtFrom.Value
			RETURN .F.
		ENDIF
	ENDPROC

	PROCEDURE pgfRateCode.pagSettings.opgPeriod.InteractiveChange
		DO CASE
			CASE INLIST(this.Value, 1, 2)
				this.Parent.opgRhythm.optDay.Enabled = .T.
				this.Parent.opgRhythm.optFirstChkIn.Enabled = .F.
				this.Parent.opgRhythm.optWeek.Enabled = .F.
				this.Parent.opgRhythm.optMonth.Enabled = .F.
				this.Parent.opgRhythm.optDayVar.Enabled = .F.
				this.Parent.opgRhythm.optStayVariable.Enabled = .F.
				this.Parent.txtPrcdur.Enabled = .F.
				this.Parent.txtOnDay.Enabled = .F.
				this.Parent.opgRhythm.optStayChkIn.Caption = GetLangText("MGRFINAN", "TXT_ATCHINSTAY")
				this.Parent.opgRhythm.optStayChkOut.Caption = GetLangText("MGRFINAN", "TXT_ATCHOUTSTAY")
				IF NOT INLIST(this.Parent.opgRhythm.Value, 1, 3, 4)
					this.Parent.opgRhythm.Value = 1
				ENDIF
			CASE this.Value = 3
				this.Parent.opgRhythm.optDay.Enabled = .T.
				this.Parent.opgRhythm.optFirstChkIn.Enabled = .T.
				this.Parent.opgRhythm.optWeek.Enabled = .F.
				this.Parent.opgRhythm.optMonth.Enabled = .F.
				this.Parent.opgRhythm.optDayVar.Enabled = .F.
				this.Parent.opgRhythm.optStayVariable.Enabled = .F.
				this.Parent.txtPrcdur.Enabled = .F.
				this.Parent.txtOnDay.Enabled = .F.
				this.Parent.opgRhythm.optStayChkIn.Caption = GetLangText("MGRFINAN", "TXT_ATCHINSTAY")
				this.Parent.opgRhythm.optStayChkOut.Caption = GetLangText("MGRFINAN", "TXT_ATCHOUTSTAY")
				IF NOT INLIST(this.Parent.opgRhythm.Value, 1, 2, 3, 4)
					this.Parent.opgRhythm.Value = 1
				ENDIF
			CASE this.Value = 4
				this.Parent.opgRhythm.optDay.Enabled = .F.
				this.Parent.opgRhythm.optFirstChkIn.Enabled = .F.
				this.Parent.opgRhythm.optWeek.Enabled = .T.
				this.Parent.opgRhythm.optMonth.Enabled = .F.
				this.Parent.opgRhythm.optDayVar.Enabled = .F.
				this.Parent.opgRhythm.optStayVariable.Enabled = .F.
				this.Parent.txtPrcdur.Enabled = .F.
				this.Parent.txtOnDay.Enabled = .F.
				this.Parent.opgRhythm.optStayChkIn.Caption = GetLangText("MGRFINAN", "TXT_ATCHINSTAY")
				this.Parent.opgRhythm.optStayChkOut.Caption = GetLangText("MGRFINAN", "TXT_ATCHOUTSTAY")
				IF NOT INLIST(this.Parent.opgRhythm.Value, 3, 4, 5)
					this.Parent.opgRhythm.Value = 5
				ENDIF
			CASE this.Value = 5
				this.Parent.opgRhythm.optDay.Enabled = .F.
				this.Parent.opgRhythm.optFirstChkIn.Enabled = .F.
				this.Parent.opgRhythm.optWeek.Enabled = .F.
				this.Parent.opgRhythm.optMonth.Enabled = .T.
				this.Parent.opgRhythm.optDayVar.Enabled = .F.
				this.Parent.opgRhythm.optStayVariable.Enabled = .F.
				this.Parent.txtPrcdur.Enabled = .F.
				this.Parent.opgRhythm.optStayChkIn.Caption = GetLangText("RESERV2", "TH_ARRDATE")
				this.Parent.opgRhythm.optStayChkOut.Caption = GetLangText("RESERV2", "TH_DEPDATE")
				IF NOT INLIST(this.Parent.opgRhythm.Value, 3, 4, 6)
					this.Parent.opgRhythm.Value = 6
				ENDIF
				this.Parent.txtOnDay.Enabled = (this.Parent.opgRhythm.Value = 6)
			CASE this.Value = 6
				this.Parent.opgRhythm.optDay.Enabled = .F.
				this.Parent.opgRhythm.optFirstChkIn.Enabled = .F.
				this.Parent.opgRhythm.optWeek.Enabled = .F.
				this.Parent.opgRhythm.optMonth.Enabled = .F.
				this.Parent.opgRhythm.optDayVar.Enabled = .T.
				this.Parent.opgRhythm.optStayVariable.Enabled = .F.
				this.Parent.txtPrcdur.Enabled = .F.
				this.Parent.txtOnDay.Enabled = .F.
				this.Parent.opgRhythm.optStayChkIn.Caption = GetLangText("MGRFINAN", "TXT_ATCHINSTAY")
				this.Parent.opgRhythm.optStayChkOut.Caption = GetLangText("MGRFINAN", "TXT_ATCHOUTSTAY")
				IF NOT INLIST(this.Parent.opgRhythm.Value, 3, 4, 7)
					this.Parent.opgRhythm.Value = 3
				ENDIF
			CASE this.Value = 7
				this.Parent.opgRhythm.optDay.Enabled = .F.
				this.Parent.opgRhythm.optFirstChkIn.Enabled = .F.
				this.Parent.opgRhythm.optWeek.Enabled = .F.
				this.Parent.opgRhythm.optMonth.Enabled = .F.
				this.Parent.opgRhythm.optDayVar.Enabled = .F.
				this.Parent.opgRhythm.optStayVariable.Enabled = .T.
				this.Parent.txtOnDay.Enabled = .F.
				this.Parent.txtPrcdur.Enabled = .T.
				this.Parent.opgRhythm.optStayChkIn.Caption = GetLangText("MGRFINAN", "TXT_ATCHINSTAY")
				this.Parent.opgRhythm.optStayChkOut.Caption = GetLangText("MGRFINAN", "TXT_ATCHOUTSTAY")
				IF NOT INLIST(this.Parent.opgRhythm.Value, 3, 4, 8)
					this.Parent.opgRhythm.Value = 8
				ENDIF
		ENDCASE
	ENDPROC

	PROCEDURE pgfRateCode.pagSettings.opgRhythm.InteractiveChange
		this.Parent.txtOnDay.Enabled = (this.Value = 6)
	ENDPROC

	PROCEDURE pgfRateCode.pagSettings.txtOnDay.Valid
		IF BETWEEN(this.Value,0,31)
			RETURN .T.
		ELSE
			RETURN .F.
		ENDIF
	ENDPROC

	PROCEDURE pgfRateCode.pagSettings.txtSeason.Valid
		RETURN thisform.RcChkSeason(thisform.oData.rc_season, thisform.oData.rc_fromdat, thisform.oData.rc_todat)
		
	ENDPROC

	PROCEDURE pgfRateCode.pagSplit.Activate
		this.Refresh()
	ENDPROC

	PROCEDURE pgfRateCode.pagSplit.cmdDelete.Click
		thisform.OnSplitDelete()
	ENDPROC

	PROCEDURE pgfRateCode.pagSplit.cmdEdit.Click
		thisform.OnSplitEdit()
	ENDPROC

	PROCEDURE pgfRateCode.pagSplit.cmdHistory.Click
		thisform.OnSplitHistory()
	ENDPROC

	PROCEDURE pgfRateCode.pagSplit.cmdNew.Click
		thisform.OnSplitNew()
	ENDPROC

	PROCEDURE pgfRateCode.pagSplit.cmdNote.Click
		thisform.OnSplitNote()
	ENDPROC

	PROCEDURE pgfRateCode.pagSplit.grdSplit.DblClick
		thisform.OnSplitEdit()
	ENDPROC

	PROCEDURE pgfRateCode.pagSplit.grdSplit.defineudpopupmenu
		DIMENSION this.aPopupMenu[5]
		this.aPopupMenu[1] = this.Parent.cmdNew
		this.aPopupMenu[2] = this.Parent.cmdEdit
		this.aPopupMenu[3] = this.Parent.cmdDelete
		this.aPopupMenu[4] = this.Parent.cmdHistory
		this.aPopupMenu[5] = this.Parent.cmdNote
	ENDPROC

	PROCEDURE txtDesc.KeyPress
		LPARAMETERS nKeyCode, nShiftAltCtrl
		LOCAL l_cMacro
		IF (nKeyCode = 24) AND (nShiftAltCtrl = 0)
			l_cMacro = "thisform.oData.rc_lang" + g_Langnum
			&l_cMacro = this.Value
			DO FORM "forms\DescForm" WITH "rc_lang", thisform.Caption, thisform.oData
		ENDIF
	ENDPROC

	PROCEDURE txtDescSA.KeyPress
		LPARAMETERS nKeyCode, nShiftAltCtrl
		LOCAL l_cMacro
		IF (nKeyCode = 24) AND (nShiftAltCtrl = 0)
			l_cMacro = "thisform.oData.rc_salang" + g_Langnum
			&l_cMacro = this.Value
			DO FORM "forms\DescForm" WITH "rc_salang", thisform.Caption, thisform.oData
		ENDIF
	ENDPROC

ENDDEFINE

DEFINE CLASS grdratearti AS tgrid OF "main.vcx" 
 	*< CLASSDATA: Baseclass="grid" Timestamp="" Scale="Pixels" Uniqueid="" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="grcArticle.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grcArticle.Tbgrid1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grcDescription.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grcDescription.Tbgrid1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grcAmount.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grcAmount.Tbgrid1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grcMultiply.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grcMultiply.Tbgrid1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grcType.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grcType.Tbgrid1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grcOnlyOn.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grcOnlyOn.Tbgrid1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grcSagroup.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grcSagroup.Tbgrid1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grcComment.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grcComment.Tbgrid1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grcUser1.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grcUser1.Tbgrid1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grcUser2.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grcUser2.Tbgrid1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grcUser3.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grcUser3.Tbgrid1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grcUser4.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grcUser4.Tbgrid1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grcPackage.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grcPackage.Tbgrid1" UniqueID="" Timestamp="" />

	*<DefinedPropArrayMethod>
		*m: getsortkey
		*m: onheadermousedown
		*m: onheaderrightclick
		*m: setgrid
	*</DefinedPropArrayMethod>

	AllowCellSelection = .F.
	AllowHeaderSizing = .F.
	AllowRowSizing = .F.
	ColumnCount = 13
	DeleteMark = .F.
	GridLines = 2
	Height = 312
	luseudpopupmenu = .T.
	Name = "grdratearti"
	ReadOnly = .T.
	ScrollBars = 2
	Width = 756
	Column1.Name = "grcArticle"
	Column1.ReadOnly = .T.
	Column1.Width = 44
	Column10.Name = "grcUser2"
	Column10.ReadOnly = .T.
	Column10.Width = 45
	Column11.Name = "grcUser3"
	Column11.ReadOnly = .T.
	Column11.Width = 45
	Column12.Name = "grcUser4"
	Column12.ReadOnly = .T.
	Column13.ColumnOrder = 7
	Column13.Name = "grcPackage"
	Column13.ReadOnly = .T.
	Column2.Name = "grcDescription"
	Column2.ReadOnly = .T.
	Column2.Width = 120
	Column3.Alignment = 1
	Column3.Name = "grcAmount"
	Column3.ReadOnly = .T.
	Column3.Width = 69
	Column4.Alignment = 2
	Column4.Name = "grcMultiply"
	Column4.ReadOnly = .T.
	Column5.Alignment = 2
	Column5.Name = "grcType"
	Column5.ReadOnly = .T.
	Column5.Width = 70
	Column6.Alignment = 2
	Column6.Name = "grcOnlyOn"
	Column6.ReadOnly = .T.
	Column7.Alignment = 2
	Column7.ColumnOrder = 13
	Column7.Name = "grcSagroup"
	Column7.ReadOnly = .T.
	Column7.Width = 70
	Column8.Name = "grcComment"
	Column8.ReadOnly = .T.
	Column8.Width = 15
	Column9.Name = "grcUser1"
	Column9.ReadOnly = .T.
	Column9.Width = 45

	ADD OBJECT 'grcAmount.Header1' AS header WITH ;
		Alignment = 2, ;
		Caption = "grcAmount", ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'grcAmount.Tbgrid1' AS tbgrid WITH ;
		Alignment = 1, ;
		Left = 27, ;
		Name = "Tbgrid1", ;
		Top = 23
		*< END OBJECT: ClassLib="main.vcx" BaseClass="textbox" />

	ADD OBJECT 'grcArticle.Header1' AS header WITH ;
		Alignment = 2, ;
		Caption = "grcArticle", ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'grcArticle.Tbgrid1' AS tbgrid WITH ;
		Left = 23, ;
		Name = "Tbgrid1", ;
		Top = 23
		*< END OBJECT: ClassLib="main.vcx" BaseClass="textbox" />

	ADD OBJECT 'grcComment.Header1' AS header WITH ;
		Alignment = 2, ;
		Caption = "grcComment", ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'grcComment.Tbgrid1' AS tbgrid WITH ;
		Left = 27, ;
		Name = "Tbgrid1", ;
		Top = 23
		*< END OBJECT: ClassLib="main.vcx" BaseClass="textbox" />

	ADD OBJECT 'grcDescription.Header1' AS header WITH ;
		Alignment = 2, ;
		Caption = "grcDescription", ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'grcDescription.Tbgrid1' AS tbgrid WITH ;
		Left = 19, ;
		Name = "Tbgrid1", ;
		Top = 23
		*< END OBJECT: ClassLib="main.vcx" BaseClass="textbox" />

	ADD OBJECT 'grcMultiply.Header1' AS header WITH ;
		Alignment = 2, ;
		Caption = "grcMultiply", ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'grcMultiply.Tbgrid1' AS tbgrid WITH ;
		Alignment = 2, ;
		Left = 35, ;
		Name = "Tbgrid1", ;
		Top = 35
		*< END OBJECT: ClassLib="main.vcx" BaseClass="textbox" />

	ADD OBJECT 'grcOnlyOn.Header1' AS header WITH ;
		Alignment = 2, ;
		Caption = "grcOnlyOn", ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'grcOnlyOn.Tbgrid1' AS tbgrid WITH ;
		Alignment = 2, ;
		Left = 27, ;
		Name = "Tbgrid1", ;
		Top = 23
		*< END OBJECT: ClassLib="main.vcx" BaseClass="textbox" />

	ADD OBJECT 'grcPackage.Header1' AS header WITH ;
		Alignment = 2, ;
		Caption = "grcPackage", ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'grcPackage.Tbgrid1' AS tbgrid WITH ;
		Left = 20, ;
		Name = "Tbgrid1", ;
		Top = 23
		*< END OBJECT: ClassLib="main.vcx" BaseClass="textbox" />

	ADD OBJECT 'grcSagroup.Header1' AS header WITH ;
		Alignment = 2, ;
		Caption = "grcSagroup", ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'grcSagroup.Tbgrid1' AS tbgrid WITH ;
		Alignment = 2, ;
		Left = 35, ;
		Name = "Tbgrid1", ;
		Top = 23
		*< END OBJECT: ClassLib="main.vcx" BaseClass="textbox" />

	ADD OBJECT 'grcType.Header1' AS header WITH ;
		Alignment = 2, ;
		Caption = "grcType", ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'grcType.Tbgrid1' AS tbgrid WITH ;
		Alignment = 2, ;
		Left = 19, ;
		Name = "Tbgrid1", ;
		Top = 23
		*< END OBJECT: ClassLib="main.vcx" BaseClass="textbox" />

	ADD OBJECT 'grcUser1.Header1' AS header WITH ;
		Alignment = 2, ;
		Caption = "grcUser1", ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'grcUser1.Tbgrid1' AS tbgrid WITH ;
		Left = 35, ;
		Name = "Tbgrid1", ;
		Top = 23
		*< END OBJECT: ClassLib="main.vcx" BaseClass="textbox" />

	ADD OBJECT 'grcUser2.Header1' AS header WITH ;
		Alignment = 2, ;
		Caption = "grcUser2", ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'grcUser2.Tbgrid1' AS tbgrid WITH ;
		Left = 31, ;
		Name = "Tbgrid1", ;
		Top = 35
		*< END OBJECT: ClassLib="main.vcx" BaseClass="textbox" />

	ADD OBJECT 'grcUser3.Header1' AS header WITH ;
		Caption = "grcUser3", ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'grcUser3.Tbgrid1' AS tbgrid WITH ;
		Left = 44, ;
		Name = "Tbgrid1", ;
		ReadOnly = .T., ;
		Top = 35
		*< END OBJECT: ClassLib="main.vcx" BaseClass="textbox" />

	ADD OBJECT 'grcUser4.Header1' AS header WITH ;
		Caption = "grcUser4", ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'grcUser4.Tbgrid1' AS tbgrid WITH ;
		Left = 31, ;
		Name = "Tbgrid1", ;
		Top = 35
		*< END OBJECT: ClassLib="main.vcx" BaseClass="textbox" />
	
	PROCEDURE Destroy
		* Delete temp sort index file
		IF NOT EMPTY(this.RecordSource) AND USED(this.RecordSource)
			SELECT (this.RecordSource)
			SET INDEX TO
			= filedelete(this.jindexfile)
		ENDIF
		
		DODEFAULT()
	ENDPROC

	PROCEDURE getsortkey
		LPARAMETERS toColumn, tcKey, tcDirection
		* Manage sorting key expression before generating index file.
		RETURN IIF(TYPE(tcKey) = "C", "PADR(" + tcKey + ",100)", tcKey)
	ENDPROC

	PROCEDURE Init
		LOCAL l_oColumn AS Column
		
		DODEFAULT()
		
		this.grcArticle.Header1.Caption = GetLangText("MGRFINAN", "TH_ARTICLE")
		this.grcDescription.Header1.Caption = GetLangText("MGRFINAN", "TH_DESCRIPT")
		this.grcAmount.Header1.Caption = GetLangText("MGRFINAN", "TH_AMOUNT")
		this.grcMultiply.Header1.Caption = GetLangText("MGRFINAN", "TXT_MULTIPLICATOR")
		this.grcType.Header1.Caption = GetLangText("MGRFINAN", "TXT_TYPE")
		this.grcOnlyOn.Header1.Caption = GetLangText("MGRFINAN", "T_ONLYON")
		this.grcPackage.Header1.Caption = GetLangText("MGRFINAN","TH_PACKAGE")
		this.grcSagroup.Header1.Caption = GetLangText("RATECODE", "TXT_GROUP_SPLIT_GRID_HDR")
		this.grcComment.Header1.Caption = LEFT(GetLangText("RESERVAT", "T_NOTE"),1) + "."
		this.grcUser1.Header1.Caption = ALLTRIM(_screen.oGlobal.oparam2.pa_rauser1)
		this.grcUser2.Header1.Caption = ALLTRIM(_screen.oGlobal.oparam2.pa_rauser2)
		this.grcUser3.Header1.Caption = ALLTRIM(_screen.oGlobal.oparam2.pa_rauser3)
		this.grcUser4.Header1.Caption = ALLTRIM(_screen.oGlobal.oparam2.pa_rauser4)
		
		this.AddProperty("JIndexFile",filetemp())
		
		FOR EACH l_oColumn IN this.Columns
			l_oColumn.Header1.AddProperty("jsort",.F.)
			l_oColumn.AddProperty("csortorder","")
			l_oColumn.AddProperty("lForceSortAllowed",.T.)
		ENDFOR
	ENDPROC

	PROCEDURE MouseUp
		LPARAMETERS nButton, nShift, nXCoord, nYCoord
		LOCAL lnButtonNo, loGrid, loButton
		
		IF nButton = 2 AND TYPE("this.aPopupMenu[1]") = "O"
			loGrid = this
			DEFINE POPUP PopupMenu SHORTCUT RELATIVE FROM MROW(_screen.Name), MCOL(_screen.Name) IN SCREEN
			FOR lnButtonNo = 1 TO ALEN(this.aPopupMenu)
				loButton = this.aPopupMenu[lnButtonNo]
				IF loButton.Visible
					DEFINE BAR lnButtonNo OF PopupMenu PROMPT loButton.Caption PICTURE loButton.Picture SKIP FOR NOT loButton.Enabled
					ON SELECTION BAR lnButtonNo OF PopupMenu loGrid.aPopupMenu[BAR()].Click()
				ENDIF
			NEXT
			ACTIVATE POPUP PopupMenu
		ENDIF
	ENDPROC

	PROCEDURE onheadermousedown
		LPARAMETERS lp_oHeader AS Header, pnbutton, pnshift, pnxcoord, pnycoord
		
		IF (GetScreenCursor() = gnarrowpointer) OR lp_oHeader.Parent.lForceSortAllowed
			lp_oHeader.jsort = .T.
		ELSE
			lp_oHeader.jsort = .F.
		ENDIF
		
		RETURN .T.
	ENDPROC

	PROCEDURE onheaderrightclick
		LPARAMETERS lp_oHeader AS Header
		LOCAL ckey, lcDirection, nRecno, cmsg, l_lSuccess, l_oErr
		IF !lp_oHeader.jsort
			RETURN
		ENDIF
		ckey = UPPER(EVL(lp_oHeader.parent.csortorder,lp_oHeader.parent.controlsource))
		IF EMPTY(ckey) OR "THIS" $ ckey OR [IIF(LI_HIDE] $ ckey
			* Dont sort when empty, or when controlsorce is method
			RETURN
		ENDIF
		l_oErr = .NULL.
		l_lSuccess = .T.
		nRecno = RECNO()
		lcDirection = SortPopup(0)
		WITH lp_oHeader.Parent.Parent
			DO CASE
				CASE lcDirection = "ASCENDING"
					ckey = .GetSortKey(lp_oHeader.Parent, ckey, lcDirection)
					cmsg = _VFP.StatusBar
					SET MESSAGE TO "Sorting" + '...'
					TRY
						INDEX ON &cKey &lcDirection TAG GridSort OF (.JIndexFile)
					CATCH TO l_oErr
					ENDTRY
					IF TYPE("l_oErr.ErrorNo") = "N" AND l_oErr.ErrorNo = 110
						* Existing compound CDX file was not opened. Create an other.
						l_lSuccess = .F.
					ENDIF
					IF NOT l_lSuccess
						SET INDEX TO
						FileDelete(.JIndexFile)
						INDEX ON &cKey &lcDirection TAG GridSort OF (.JIndexFile)
					ENDIF
					.Refreshsortcursor()
					.refresh()
					SET MESSAGE TO cmsg
				CASE lcDirection = "DESCENDING"
					ckey = .GetSortKey(lp_oHeader.Parent, ckey, lcDirection)
					cmsg = _VFP.StatusBar
					SET MESSAGE TO"Sorting" + '...'
					TRY
						INDEX ON &cKey &lcDirection TAG GridSort OF (.JIndexFile)
					CATCH TO l_oErr
					ENDTRY
					IF TYPE("l_oErr.ErrorNo") = "N" AND l_oErr.ErrorNo = 110
						* Existing compound CDX file was not opened. Create an other.
						l_lSuccess = .F.
					ENDIF
					IF NOT l_lSuccess
						SET INDEX TO
						FileDelete(.JIndexFile)
						INDEX ON &cKey &lcDirection TAG GridSort OF (.JIndexFile)
					ENDIF
					.Refreshsortcursor()
					.refresh()
					SET MESSAGE TO cmsg
			ENDCASE
		ENDWITH
		GO nRecno
		
		RETURN .T.
	ENDPROC

	PROCEDURE setgrid
		LPARAMETERS tcRecordSource
		
		SELECT &tcRecordSource
		this.RecordSource = tcRecordSource
		this.grcArticle.ControlSource = "ra_artinum"
		this.grcDescription.ControlSource = "c_lang"
		this.grcAmount.ControlSource = "ALLTRIM(IIF(ra_ratepct <> 0, TRANSFORM(ra_ratepct, '9999.99%'), "+IIF(TYPE("ra_units")="N","TRANSFORM(ra_units)+'x'+","")+"ALLTRIM(TRANSFORM(ROUND(ra_amnt, _screen.oGlobal.oparam.pa_currdec), RIGHT(gcCurrcyDisp, 12)))))"
		this.grcMultiply.ControlSource = "GetRaMulti(ra_multipl,.T.)"
		this.grcType.ControlSource = "GetRaType(ra_artityp,.T.)"
		this.grcOnlyOn.ControlSource = "ra_onlyon"
		this.grcPackage.ControlSource = [IIF(ra_Package, '] + GetLangText("AR", "T_YES") + [','] + GetLangText("AR", "T_NO") + [')]
		this.grcSagroup.ControlSource = [IIF(ra_sagroup, '] + GetLangText("AR", "T_YES") + [','] + GetLangText("AR", "T_NO") + [')]
		this.grcComment.ControlSource = [IIF(NOT EMPTY(ra_note), '] + LEFT(GetLangText("AR", "T_YES"),1) + [','] + LEFT(GetLangText("AR", "T_NO"),1) + [')]
		this.grcUser1.ControlSource = "ra_user1"
		this.grcUser2.ControlSource = "ra_user2"
		this.grcUser3.ControlSource = "ra_user3"
		this.grcUser4.ControlSource = "ra_user4"
		IF _screen.oGlobal.oparam2.pa_rauset1 = "T"
			this.grcUser1.Format = "R"
			this.grcUser1.InputMask = "99:99 - 99:99"
			this.grcUser1.csortorder = [PADL(ra_onlyon,3,'0')+ra_user1]
		ENDIF
		IF _screen.oGlobal.oparam2.pa_rauset2 = "T"
			this.grcUser2.Format = "R"
			this.grcUser2.InputMask = "99:99 - 99:99"
			this.grcUser2.csortorder = [PADL(ra_onlyon,3,'0')+ra_user2]
		ENDIF
		IF _screen.oGlobal.oparam2.pa_rauset3 = "T"
			this.grcUser3.Format = "R"
			this.grcUser3.InputMask = "99:99 - 99:99"
			this.grcUser3.csortorder = [PADL(ra_onlyon,3,'0')+ra_user3]
		ENDIF
		IF _screen.oGlobal.oparam2.pa_rauset4 = "T"
			this.grcUser4.Format = "R"
			this.grcUser4.InputMask = "99:99 - 99:99"
			this.grcUser4.csortorder = [PADL(ra_onlyon,3,'0')+ra_user4]
		ENDIF
		this.grcUser1.Visible = NOT EMPTY(_screen.oGlobal.oparam2.pa_rauser1)
		this.grcUser2.Visible = NOT EMPTY(_screen.oGlobal.oparam2.pa_rauser2)
		this.grcUser3.Visible = NOT EMPTY(_screen.oGlobal.oparam2.pa_rauser3)
		this.grcUser4.Visible = NOT EMPTY(_screen.oGlobal.oparam2.pa_rauser4)
		this.SetAll("Movable", .F.)
		
		RETURN .T.
	ENDPROC

	PROCEDURE grcArticle.Header1.MouseDown
		LPARAMETERS pnbutton, pnshift, pnxcoord, pnycoord
		
		this.Parent.Parent.OnHeaderMouseDown(this, pnbutton, pnshift, pnxcoord, pnycoord)
	ENDPROC

	PROCEDURE grcArticle.Header1.RightClick
		this.Parent.Parent.OnHeaderRightClick(this)
	ENDPROC

	PROCEDURE grcComment.Header1.MouseDown
		LPARAMETERS pnbutton, pnshift, pnxcoord, pnycoord
		
		this.Parent.Parent.OnHeaderMouseDown(this, pnbutton, pnshift, pnxcoord, pnycoord)
	ENDPROC

	PROCEDURE grcComment.Header1.RightClick
		this.Parent.Parent.OnHeaderRightClick(this)
	ENDPROC

	PROCEDURE grcDescription.Header1.MouseDown
		LPARAMETERS pnbutton, pnshift, pnxcoord, pnycoord
		
		this.Parent.Parent.OnHeaderMouseDown(this, pnbutton, pnshift, pnxcoord, pnycoord)
	ENDPROC

	PROCEDURE grcDescription.Header1.RightClick
		this.Parent.Parent.OnHeaderRightClick(this)
	ENDPROC

	PROCEDURE grcOnlyOn.Header1.MouseDown
		LPARAMETERS pnbutton, pnshift, pnxcoord, pnycoord
		
		this.Parent.Parent.OnHeaderMouseDown(this, pnbutton, pnshift, pnxcoord, pnycoord)
	ENDPROC

	PROCEDURE grcOnlyOn.Header1.RightClick
		this.Parent.Parent.OnHeaderRightClick(this)
	ENDPROC

	PROCEDURE grcUser1.Header1.MouseDown
		LPARAMETERS pnbutton, pnshift, pnxcoord, pnycoord
		
		this.Parent.Parent.OnHeaderMouseDown(this, pnbutton, pnshift, pnxcoord, pnycoord)
	ENDPROC

	PROCEDURE grcUser1.Header1.RightClick
		this.Parent.Parent.OnHeaderRightClick(this)
	ENDPROC

	PROCEDURE grcUser2.Header1.MouseDown
		LPARAMETERS pnbutton, pnshift, pnxcoord, pnycoord
		
		this.Parent.Parent.OnHeaderMouseDown(this, pnbutton, pnshift, pnxcoord, pnycoord)
	ENDPROC

	PROCEDURE grcUser2.Header1.RightClick
		this.Parent.Parent.OnHeaderRightClick(this)
	ENDPROC

	PROCEDURE grcUser3.Header1.MouseDown
		LPARAMETERS pnbutton, pnshift, pnxcoord, pnycoord
		
		this.Parent.Parent.OnHeaderMouseDown(this, pnbutton, pnshift, pnxcoord, pnycoord)
	ENDPROC

	PROCEDURE grcUser3.Header1.RightClick
		this.Parent.Parent.OnHeaderRightClick(this)
	ENDPROC

ENDDEFINE
