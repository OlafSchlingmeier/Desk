*--------------------------------------------------------------------------------------------------------------------------------------------------------
* (ES) AUTOGENERADO - ¡¡ATENCIÓN!! - ¡¡NO PENSADO PARA EJECUTAR!! USAR SOLAMENTE PARA INTEGRAR CAMBIOS Y ALMACENAR CON HERRAMIENTAS SCM!!
* (EN) AUTOGENERATED - ATTENTION!! - NOT INTENDED FOR EXECUTION!! USE ONLY FOR MERGING CHANGES AND STORING WITH SCM TOOLS!!
*--------------------------------------------------------------------------------------------------------------------------------------------------------
*< FOXBIN2PRG: Version="1.19" SourceFile="cit_base.vcx" /> (Solo para binarios VFP 9 / Only for VFP 9 binaries)
*
*
DEFINE CLASS citcombo AS combobox 
 	*< CLASSDATA: Baseclass="combobox" Timestamp="" Scale="Pixels" Uniqueid="" />

	*<DefinedPropArrayMethod>
		*p: fixedfontsize		&& Keeps FontSize even if form or control is resized.
		*p: fontsizeorig		&& Original FontSize. Resize event will take this property as a reference.
		*p: heightorig		&& Original Height. Resize event will take this property as a reference.
		*p: leftorig		&& Original Left. Resize event will take this property as a reference.
		*p: resizeposition
		*p: toporig		&& Original Top. Resize event will take this property as a reference.
		*p: widthorig		&& Original Width. Resize event will take this property as a reference.
	*</DefinedPropArrayMethod>

	fixedfontsize = .F.		&& Keeps FontSize even if form or control is resized.
	fontsizeorig = 9		&& Original FontSize. Resize event will take this property as a reference.
	Height = 24
	heightorig = 24		&& Original Height. Resize event will take this property as a reference.
	leftorig = 0		&& Original Left. Resize event will take this property as a reference.
	Name = "citcombo"
	toporig = 0		&& Original Top. Resize event will take this property as a reference.
	Width = 100
	widthorig = 100		&& Original Width. Resize event will take this property as a reference.
	
	PROCEDURE Init
		this.HeightOrig = this.Height
		this.WidthOrig = this.Width
		this.TopOrig = this.Top
		this.LeftOrig = this.Left
	ENDPROC

	PROCEDURE KeyPress
		LPARAMETERS nKeyCode, nShiftAltCtrl
		IF nKeyCode = 12 AND nShiftAltCtrl = 2
			KEYBOARD '{ALT+DNARROW}'
			NODEFAULT
		ENDIF
		
	ENDPROC

ENDDEFINE

DEFINE CLASS citcommandbutton AS commandbutton 
 	*< CLASSDATA: Baseclass="commandbutton" Timestamp="" Scale="Pixels" Uniqueid="" />

	*<DefinedPropArrayMethod>
		*p: fixedfontsize		&& Keeps FontSize even if form or control is resized.
		*p: fontsizeorig		&& Original FontSize. Resize event will take this property as a reference.
		*p: heightorig		&& Original Height. Resize event will take this property as a reference.
		*p: leftorig		&& Original Left. Resize event will take this property as a reference.
		*p: toporig		&& Original Top. Resize event will take this property as a reference.
		*p: widthorig		&& Original Width. Resize event will take this property as a reference.
	*</DefinedPropArrayMethod>

	Caption = "Command1"
	fixedfontsize = .F.		&& Keeps FontSize even if form or control is resized.
	fontsizeorig = 9		&& Original FontSize. Resize event will take this property as a reference.
	Height = 27
	heightorig = 27		&& Original Height. Resize event will take this property as a reference.
	leftorig = 0		&& Original Left. Resize event will take this property as a reference.
	Name = "citcommandbutton"
	toporig = 0		&& Original Top. Resize event will take this property as a reference.
	Width = 84
	widthorig = 84		&& Original Width. Resize event will take this property as a reference.
	
	PROCEDURE Init
		this.HeightOrig = this.Height
		this.WidthOrig = this.Width
		this.TopOrig = this.Top
		this.LeftOrig = this.Left
		this.FontSizeOrig = this.FontSize
	ENDPROC

ENDDEFINE

DEFINE CLASS citcontainer AS container 
 	*< CLASSDATA: Baseclass="container" Timestamp="" Scale="Pixels" Uniqueid="" />

	*<DefinedPropArrayMethod>
		*p: heightorig		&& Original Height. Resize event will take this property as a reference.
		*p: leftorig		&& Original Left. Resize event will take this property as a reference.
		*p: toporig		&& Original Top. Resize event will take this property as a reference.
		*p: widthorig		&& Original Width. Resize event will take this property as a reference.
	*</DefinedPropArrayMethod>

	heightorig = 75		&& Original Height. Resize event will take this property as a reference.
	leftorig = 0		&& Original Left. Resize event will take this property as a reference.
	Name = "citcontainer"
	toporig = 0		&& Original Top. Resize event will take this property as a reference.
	widthorig = 75		&& Original Width. Resize event will take this property as a reference.
	
	PROCEDURE Init
		this.HeightOrig = this.Height
		this.WidthOrig = this.Width
		this.TopOrig = this.Top
		this.LeftOrig = this.Left
	ENDPROC

ENDDEFINE

DEFINE CLASS citdragdropshape AS citshape OF "cit_base.vcx" 
 	*< CLASSDATA: Baseclass="shape" Timestamp="" Scale="Pixels" Uniqueid="" />

	*<DefinedPropArrayMethod>
		*p: dragdropparent		&& Control that should be moved on Drop event.
	*</DefinedPropArrayMethod>

	BackStyle = 0
	BorderStyle = 0
	Name = "citdragdropshape"
	OLEDragMode = 1
	OLEDragPicture = ..\bitmaps\table.bmp
	OLEDropMode = 2
	
	PROCEDURE Click
		this.DragDropParent.SetFocus()
	ENDPROC

	PROCEDURE DblClick
		this.DragDropParent.DblClick()
	ENDPROC

	PROCEDURE Init
		LPARAMETERS poDragDropParent
		IF PCOUNT() == 0
		     this.Visible = .F. && Don't wrap any control.
		ENDIF
		* Wrap the parent control.
		this.DragDropParent = poDragDropParent
		this.Top = 0
		this.Left = 0
		this.Width = poDragDropParent.Width
		this.Height = poDragDropParent.Height
		CitShape::Init()
	ENDPROC

	PROCEDURE RightClick
		this.DragDropParent.RightClick()
	ENDPROC

ENDDEFINE

DEFINE CLASS citeditbox AS editbox 
 	*< CLASSDATA: Baseclass="editbox" Timestamp="" Scale="Pixels" Uniqueid="" />

	*<DefinedPropArrayMethod>
		*p: fixedfontsize		&& Keeps FontSize even if form or control is resized.
		*p: fontsizeorig		&& Original FontSize. Resize event will take this property as a reference.
		*p: heightorig		&& Original Height. Resize event will take this property as a reference.
		*p: leftorig		&& Original Left. Resize event will take this property as a reference.
		*p: resizeposition
		*p: toporig		&& Original Top. Resize event will take this property as a reference.
		*p: widthorig		&& Original Width. Resize event will take this property as a reference.
	*</DefinedPropArrayMethod>

	fixedfontsize = .F.		&& Keeps FontSize even if form or control is resized.
	fontsizeorig = 9		&& Original FontSize. Resize event will take this property as a reference.
	Height = 53
	heightorig = 53		&& Original Height. Resize event will take this property as a reference.
	leftorig = 0		&& Original Left. Resize event will take this property as a reference.
	Name = "citeditbox"
	toporig = 0		&& Original Top. Resize event will take this property as a reference.
	Width = 100
	widthorig = 100		&& Original Width. Resize event will take this property as a reference.
	
	PROCEDURE Init
		this.HeightOrig = this.Height
		this.WidthOrig = this.Width
		this.TopOrig = this.Top
		this.LeftOrig = this.Left
	ENDPROC

ENDDEFINE

DEFINE CLASS citform AS form 
 	*< CLASSDATA: Baseclass="form" Timestamp="" Scale="Pixels" Uniqueid="" />

	*<DefinedPropArrayMethod>
		*m: resizeall		&& Resizes all form controls.
		*p: fixedfontsize		&& Keeps FontSize even if form or control is resized.
		*p: fixedlayoutratio		&& Keeps ratio between Height and Width of the controls during Resize event.
		*p: fontsizeorig		&& Original FontSize. Resize event will take this property as a reference.
		*p: heightorig		&& Original Height. Resize event will take this property as a reference.
		*p: leftorig		&& Original Left. Resize event will take this property as a reference.
		*p: resizeposition		&& If form should be on fixed place on the top level form, this property should be True. Then Resize event will position the form on the appropriate place. (Left and Top properties will be set according to LeftOrig and TopOrig)
		*p: toporig		&& Original Top. Resize event will take this property as a reference.
		*p: widthorig		&& Original Width. Resize event will take this property as a reference.
	*</DefinedPropArrayMethod>

	Caption = "Form"
	DoCreate = .T.
	fixedfontsize = .F.		&& Keeps FontSize even if form or control is resized.
	fixedlayoutratio = .T.		&& Keeps ratio between Height and Width of the controls during Resize event.
	fontsizeorig = 9		&& Original FontSize. Resize event will take this property as a reference.
	heightorig = 250		&& Original Height. Resize event will take this property as a reference.
	leftorig = 0		&& Original Left. Resize event will take this property as a reference.
	Name = "citform"
	resizeposition = .F.		&& If form should be on fixed place on the top level form, this property should be True. Then Resize event will position the form on the appropriate place. (Left and Top properties will be set according to LeftOrig and TopOrig)
	toporig = 0		&& Original Top. Resize event will take this property as a reference.
	widthorig = 375		&& Original Width. Resize event will take this property as a reference.
	
	PROCEDURE Init
		LPARAMETERS pnHeightResizeRatio, pnWidthResizeRatio
		IF PCOUNT() == 2
		     this.Resize(pnHeightResizeRatio, pnWidthResizeRatio)
		ENDIF
	ENDPROC

	PROCEDURE Load
		this.HeightOrig = this.Height
		this.WidthOrig = this.Width
		this.TopOrig = this.Top
		this.LeftOrig = this.Left
		this.FontSizeOrig = this.FontSize
	ENDPROC

	PROCEDURE Resize
		LPARAMETERS pnHeightRatio, pnWidthRatio
		IF PCOUNT() == 0
		     pnHeightRatio = this.Height / this.HeightOrig
		     pnWidthRatio = this.Width / this.WidthOrig
		ENDIF
		IF this.FixedLayoutRatio
		     IF pnHeightRatio > pnWidthRatio
		          pnHeightRatio = pnWidthRatio
		     ELSE
		          pnWidthRatio = pnHeightRatio
		     ENDIF
		ENDIF
		IF PCOUNT() == 0
		     this.ResizeAll(pnHeightRatio, pnWidthRatio)
		ELSE
		     this.ResizeAll(pnHeightRatio, pnWidthRatio, this)
		ENDIF
	ENDPROC

	PROCEDURE resizeall		&& Resizes all form controls.
		* This metod evolved from ResizeControl.prg
		LPARAMETERS pnHeightRatio, pnWidthRatio, poControl
		IF PCOUNT() > 2
		     IF TYPE("poControl.HeightOrig") = "N" ;
		               AND TYPE("poControl.WidthOrig") = "N"
		          poControl.Height = poControl.HeightOrig * pnHeightRatio
		          poControl.Width = poControl.WidthOrig * pnWidthRatio
		     ENDIF
		ELSE
		     poControl = this
		ENDIF
		IF TYPE("poControl.ResizePosition") <> "L" ;
		          OR poControl.ResizePosition
		     poControl.Top = poControl.TopOrig * pnHeightRatio
		     poControl.Left = poControl.LeftOrig * pnWidthRatio
		ENDIF
		IF INLIST(poControl.BaseClass, "Form", "Container")
		     LOCAL nCount
		     FOR nCount = 1 TO poControl.ControlCount
		        this.ResizeAll(pnHeightRatio, pnWidthRatio, ;
		                poControl.Controls(nCount))
		     ENDFOR
		ENDIF
		IF NOT this.FixedFontSize ;
		          AND TYPE("poControl.FixedFontSize") = "L" ;
		          AND NOT poControl.FixedFontSize
		     poControl.FontSize = MAX(FLOOR(poControl.FontSizeOrig * pnHeightRatio), 4)
		ENDIF
	ENDPROC

ENDDEFINE

DEFINE CLASS citimage AS image 
 	*< CLASSDATA: Baseclass="image" Timestamp="" Scale="Pixels" Uniqueid="" />

	*<DefinedPropArrayMethod>
		*p: heightorig		&& Original Height. Resize event will take this property as a reference.
		*p: leftorig		&& Original Left. Resize event will take this property as a reference.
		*p: toporig		&& Original Top. Resize event will take this property as a reference.
		*p: widthorig		&& Original Width. Resize event will take this property as a reference.
	*</DefinedPropArrayMethod>

	Height = 100
	heightorig = 100		&& Original Height. Resize event will take this property as a reference.
	leftorig = 0		&& Original Left. Resize event will take this property as a reference.
	Name = "citimage"
	toporig = 0		&& Original Top. Resize event will take this property as a reference.
	Width = 100
	widthorig = 100		&& Original Width. Resize event will take this property as a reference.
	
	PROCEDURE Init
		this.HeightOrig = this.Height
		this.WidthOrig = this.Width
		this.TopOrig = this.Top
		this.LeftOrig = this.Left
	ENDPROC

ENDDEFINE

DEFINE CLASS citlabel AS label 
 	*< CLASSDATA: Baseclass="label" Timestamp="" Scale="Pixels" Uniqueid="" />

	*<DefinedPropArrayMethod>
		*p: fixedfontsize		&& Keeps FontSize even if form or control is resized.
		*p: fontsizeorig		&& Original FontSize. Resize event will take this property as a reference.
		*p: heightorig		&& Original Height. Resize event will take this property as a reference.
		*p: leftorig		&& Original Left. Resize event will take this property as a reference.
		*p: resizeposition
		*p: toporig		&& Original Top. Resize event will take this property as a reference.
		*p: widthorig		&& Original Width. Resize event will take this property as a reference.
	*</DefinedPropArrayMethod>

	Caption = "Label1"
	fixedfontsize = .F.		&& Keeps FontSize even if form or control is resized.
	fontsizeorig = 9		&& Original FontSize. Resize event will take this property as a reference.
	Height = 17
	heightorig = 17		&& Original Height. Resize event will take this property as a reference.
	leftorig = 0		&& Original Left. Resize event will take this property as a reference.
	Name = "citlabel"
	toporig = 0		&& Original Top. Resize event will take this property as a reference.
	Width = 40
	widthorig = 40		&& Original Width. Resize event will take this property as a reference.
	
	PROCEDURE Init
		this.HeightOrig = this.Height
		this.WidthOrig = this.Width
		this.TopOrig = this.Top
		this.LeftOrig = this.Left
		this.FontSizeOrig = this.FontSize
	ENDPROC

ENDDEFINE

DEFINE CLASS citline AS line 
 	*< CLASSDATA: Baseclass="line" Timestamp="" Scale="Pixels" Uniqueid="" />

	*<DefinedPropArrayMethod>
		*p: fixedfontsize		&& Keeps FontSize even if form or control is resized.
		*p: fontsizeorig		&& Original FontSize. Resize event will take this property as a reference.
		*p: heightorig		&& Original Height. Resize event will take this property as a reference.
		*p: leftorig		&& Original Left. Resize event will take this property as a reference.
		*p: resizeposition
		*p: toporig		&& Original Top. Resize event will take this property as a reference.
		*p: widthorig		&& Original Width. Resize event will take this property as a reference.
	*</DefinedPropArrayMethod>

	fixedfontsize = .T.		&& Keeps FontSize even if form or control is resized.
	fontsizeorig = 0		&& Original FontSize. Resize event will take this property as a reference.
	Height = 17
	leftorig = 0		&& Original Left. Resize event will take this property as a reference.
	Name = "citline"
	toporig = 0		&& Original Top. Resize event will take this property as a reference.
	Width = 100
	
	PROCEDURE Init
		this.HeightOrig = this.Height
		this.WidthOrig = this.Width
		this.TopOrig = this.Top
		this.LeftOrig = this.Left
	ENDPROC

ENDDEFINE

DEFINE CLASS citshape AS shape 
 	*< CLASSDATA: Baseclass="shape" Timestamp="" Scale="Pixels" Uniqueid="" />

	*<DefinedPropArrayMethod>
		*p: heightorig		&& Original Height. Resize event will take this property as a reference.
		*p: leftorig		&& Original Left. Resize event will take this property as a reference.
		*p: toporig		&& Original Top. Resize event will take this property as a reference.
		*p: widthorig		&& Original Width. Resize event will take this property as a reference.
	*</DefinedPropArrayMethod>

	Height = 17
	heightorig = 17		&& Original Height. Resize event will take this property as a reference.
	leftorig = 0		&& Original Left. Resize event will take this property as a reference.
	Name = "citshape"
	toporig = 17		&& Original Top. Resize event will take this property as a reference.
	Width = 100
	widthorig = 100		&& Original Width. Resize event will take this property as a reference.
	
	PROCEDURE Init
		this.HeightOrig = this.Height
		this.WidthOrig = this.Width
		this.TopOrig = this.Top
		this.LeftOrig = this.Left
	ENDPROC

ENDDEFINE

DEFINE CLASS cmd AS commandbutton 
 	*< CLASSDATA: Baseclass="commandbutton" Timestamp="" Scale="Pixels" Uniqueid="" />

	Caption = "Command1"
	Height = 27
	Name = "cmd"
	Width = 84

ENDDEFINE

DEFINE CLASS grd AS grid 
 	*< CLASSDATA: Baseclass="grid" Timestamp="" Scale="Pixels" Uniqueid="" />

	Height = 200
	Name = "grd"
	Width = 320

ENDDEFINE

DEFINE CLASS txt AS textbox 
 	*< CLASSDATA: Baseclass="textbox" Timestamp="" Scale="Pixels" Uniqueid="" />

	*<DefinedPropArrayMethod>
		*p: fixedfontsize		&& Keeps FontSize even if form or control is resized.
		*p: fontsizeorig		&& Original FontSize. Resize event will take this property as a reference.
		*p: heightorig		&& Original Height. Resize event will take this property as a reference.
		*p: leftorig		&& Original Left. Resize event will take this property as a reference.
		*p: resizeposition
		*p: toporig		&& Original Top. Resize event will take this property as a reference.
		*p: widthorig		&& Original Width. Resize event will take this property as a reference.
	*</DefinedPropArrayMethod>

	fixedfontsize = .F.		&& Keeps FontSize even if form or control is resized.
	fontsizeorig = 9		&& Original FontSize. Resize event will take this property as a reference.
	Height = 23
	heightorig = 23		&& Original Height. Resize event will take this property as a reference.
	Name = "txt"
	Width = 100
	widthorig = 100		&& Original Width. Resize event will take this property as a reference.
	
	PROCEDURE Init
		this.HeightOrig = this.Height
		this.WidthOrig = this.Width
		this.TopOrig = this.Top
		this.LeftOrig = this.Left
	ENDPROC

ENDDEFINE
